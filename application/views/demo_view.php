<div id="wrapperApplication" class="container-fluid"></div>
<!-- template section starts -->
<script type="text/x-kendo-template" id="layout">
	<div id="menu"></div>			
	<div id="content" class="row-fluid container"></div>
</script>
<script type="text/x-kendo-template" id="blank-tmpl">
</script>
<script type="text/x-kendo-template" id="menu-tmpl">
	<div class="menu-hidden sidebar-hidden-phone menu-left hidden-print">
		<div class="navbar main navbar-fixed-top" id="main-menu">
			<ul class="topnav">
				<li><a href="#" data-bind="click: checkRole"><img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/banhji-logo.png" style="height: 40px;"></a></li>
			</ul>
			<form class="navbar-form pull-left">
				<div class="btn-group">
				  	<a class="btn btn-inverse dropdown-toggle" data-toggle="dropdown" href="#">
				    	<i class="icon-th"></i>
				    	<!-- <span class="caret"></span> -->
				  	</a>
				  	<!-- <ul class="dropdown-menu">
				    	<li data-bind="click: searchContact"><a href="#"><i class="icon-user"></i> Contact</a></li>
				    	<li data-bind="click: searchTransaction"><a href="#"><i class="icon-random"></i> Transaction</a></li>
				    	<li data-bind="click: searchItem"><a href="#"><i class="icon-th-list"></i> Item</a></li>
				  	</ul> -->
				</div>
			  	<input type="text" class="span2 search-query" placeholder="Search" id="search-placeholder" 
			  			data-bind="value: searchText" 
			  			style="background-color: #555555; color: #ffffff; border-color: #333333; height: 22px;">
			  	<button type="submit" class="btn btn-inverse" data-bind="click: search"><i class="icon-search"></i></button>
			</form>
			<ul class="topnav" id="secondary-menu">
			</ul> 
			<ul class="topnav pull-right">
				<li role="presentation" class="dropdown">
			  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"> <i class="icon-th-list"></i> <span class="caret"></span></a>
		  			<ul class="dropdown-menu ul-multiTaskList" data-template="multiTaskList-row-template" data-bind="source: multiTaskList">  				  				
		  			</ul>
			  	</li>
				<li role="presentation" class="dropdown">
			  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">[<span data-bind="text: getUsername"></span>] <span class="caret"></span></a>
		  			<ul class="dropdown-menu">  				  				
		  				<li><a href="#" data-bind="click: lang.changeToKh">ភាសាខ្មែរ</a></li>
    					<li><a href="#" data-bind="click: lang.changeToEn">English</a></li>
						<li class="divider"></li>	
						<li><a href="#/manage" data-bind="click: logout"><i class="icon-power-off"></i> Logout</a></li> 				
		  			</ul>
			  	</li>				
			</ul>
		</div>
	</div>
</script>
<script id="multiTaskList-row-template" type="text/x-kendo-template">	
    <li>
    	<a href="\#/#=url#">
    		#=name#
    		<span title="Remove" class="multiTaskList glyphicons remove_2 pull-right" data-bind="click: removeLink">
    			<i></i>
    		</span>
    	</a>

    </li>	
</script>
<script type="text/x-kendo-template" id="index">
	<div class="row-fluid">
		<div class="span6">
			<div class="row">
				<div class="span12" style="padding-left: 0; margin-left: 0; margin-top: 0;">
					<ul id="module-image">
						<li style="text-align:center;">
							<a href="#/customers">
								<img title="Customers Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/customers.jpg" alt="Customer">
							</a>
							<h style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.customers" style="margin-top: 5px; display: inline-block;"></h5></span>
						</li>
						<li style="text-align:center;">
							<a href="#/vendors">
								<img title="Supplier Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/supplier.jpg" alt="Vendor">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.suppliers" style="margin-top: 5px; display: inline-block;"></h5></span>
						</li>
						<li style="text-align:center;">
							<a href="#/inventories">
								<img title="Products/Sercies Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/inventory.jpg" alt="Inventory">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.products_services" style="margin-top: 5px; display: inline-block;"></h5></span>
						</li>
						<li style="text-align:center;">
							<a href="#/documents">
								<img title="Attached Documents" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/attach_file.jpg" alt="Attachment">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.documents" style="margin-top: 5px; display: inline-block;"></h5></span>
						</li>
					</ul>
					<ul id="module-image">						
						<li style="text-align:center;">
							<a href="#/accounting">
								<img title="Accounting Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/accounting.jpg" alt="Customer">							
								<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.accounting" style="margin-top: 5px; display: inline-block;" style="margin-top: 5px; display: inline-block;"></h5></span>
							</a>
						</li>
						<li style="text-align:center;">
							<a href="#/reports">
								<img title="Reports Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/report.jpg" alt="Reports">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.reports" style="margin-top: 5px; display: inline-block;"></h5></span>
						</li>
						<li style="text-align:center;">
							<a href="#/tax">
								<img title="Tax Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/tax.jpg" alt="Tax">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.tax" style="margin-top: 5px; display: inline-block;" style="margin-top: 5px; display: inline-block;"></h5></span>
						</li>
						<li style="text-align:center;">
							<a href="<?php echo base_url(); ?>admin">
								<img title="Admin Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/setting.jpg" alt="Admin">
								<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><h5 data-bind="text: lang.lang.settings" style="margin-top: 5px; display: inline-block;" style="margin-top: 5px; display: inline-block;"></h5></span>
							</a>
						</li>											
					</ul>
				</div>
			</div>
			<div class="row" style="margin-top: 5px;">
				<div class="span12" style="width: 100%; padding: 0 5px;">
					<div class="home-chart" style="width: 95%; padding: 0 15px;">
						
						<div data-role="chart"
							 data-auto-bind="false"
			                 data-legend="{ position: 'top' }"
			                 data-series-defaults="{ type: 'column' }"
			                 data-tooltip='{
			                    visible: true,
			                    format: "{0}%",
			                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
			                 }'                 
			                 data-series="[
			                                 { field: 'cash_in', name: 'Cash In', categoryField:'month', color: '#203864', overlay:{ gradient: 'none'}  },
			                                 { field: 'cash_out', name: 'Cash Out', categoryField:'month', color: '#A6C9E3' , overlay:{ gradient: 'none'} }
			                             ]"	                             
			                 data-bind="source: graphDS"
			                 style="height: 240px;" ></div>
			           
					</div>
				</div>
			</div>
			<br>
			<br>
		</div>		
		
		<div class="span6" style="margin-bottom: 15px;">
			<div class="row">
				<div class="span12" style="background: #fff;">
					<!-- Add New Board -->
					<div class="board-add" style="padding: 15px 0;">
						<div class="span4" style="padding-right: 0;">
							<h2 style="color: #6399D5; font-size: 20px;" data-bind="text: lang.lang.welcome"></h2>
							<p style="font-size: 12px;">
								<span data-bind="text: lang.lang.to_get_you_started_with_banhji"></span> <a target="_blank" href="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/guide/welcome_guide.pdf">[Welcome Guide]</a>.
							</p>
						</div>
						<div class="span8" style="padding-right: 0; padding-left: 0;">
							<div class="span12" style="padding-right: 0; padding-left: 0;">
								<div class="span3">
									<a href="#/customer" class="center">
										<img  title="Add Customer" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/customers.ico" />
									</a>
								</div>
								<div class="span3">
									<a href="#/vendor" class="center">
										<img  title="Add Supplier" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/suppliers.ico" />
									</a>
								</div>
								<div class="span3">
									<a href="#/item" class="center">
										<img  title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
									</a>
								</div>
								<div class="span3">
									<a href="#/item_service" class="center">
										<img  title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
									</a>
								</div>
							</div>
						</div>
					</div><!--End Add New Board -->

				</div>
				
				<div class="board-chart">
					<div class="span12">
						<h4 data-bind="text: companyName"></h4>
						<h2 style="color: #113051; margin-bottom: 11px; display: inline-block; width: 100%;" data-bind="text: lang.lang.financial_snapshot"></h2>
						<span style="color: #000000;"><span data-bind="text: lang.lang.as_of"></span>:&nbsp;<span id="today-date" data-bind="text: today"></span></span><br/>
					</div>
				</div>

				<div class="board-chart">
					<div class="span12">
						<div class="span6">
							<p><span data-bind="text: lang.lang.performance"></span></p>
							<a href="#/statement_profit_loss">
								<table class="performance">
									<tr>
										<td><span data-bind="text: lang.lang.income"></span></td>
										<td></td>
										<td align="right"><span data-bind="text: income"></span></td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.expense"></span></td>
										<td></td>
										<td align="right"><span data-bind="text: expense"></span></td>
									</tr>
									<tr>
										<td><b><span data-bind="text: lang.lang.net_income"></span></b></td>
										<td></td>
										<td align="right"><b data-bind="text: net_income"></b></td>
									</tr>
								</table>
							</a>     
						</div>
						<div class="span6">
							<p><span data-bind="text: lang.lang.position"></span></p>
							<a href="#/statement_financial_position">
								<table class="position" style="width: 100%;">
									<tr>
										<td><span data-bind="text: lang.lang.asset"></span></td>
										<td></td>
										<td align="right"><span data-bind="text: asset"></span></td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.liabilities"></span></td>
										<td></td>
										<td align="right"><span data-bind="text: liability"></span></td>
									</tr>
									<tr>
										<td><b><span data-bind="text: lang.lang.equity"></span></b></td>
										<td></td>
										<td align="right"><b data-bind="text: equity"></b></td>
									</tr>
								</table>
							</a>
						</div>
					</div>
					
					<div class="span12">
						<div class="span6">
							<a href="#/customer_balance_summary">
								<div class="widget-body alert-info welcome-nopadding" >
									<p><span data-bind="text: lang.lang.receivable"></span></p>
							
									<div align="center" class="text-large strong" data-bind="text: ar"></div>
								
									<table width="100%" >
										<tr align="center">
											<td>										
												<span data-bind="text: ar_open"></span>
												<br>
												<span><span data-bind="text: lang.lang.open"></span></span>
											</td>
											<td>
												<span data-bind="text: ar_customer"></span>
												<br>
												<span><span data-bind="text: lang.lang.customers"></span></span>
											</td>
											<td>
												<span data-bind="text: ar_overdue"></span>
												<br>
												<span><span data-bind="text: lang.lang.overdue"></span></span>
											</td>
										</tr>
									</table>
								</div>
							</a>
						</div>
						<div class="span6">
							
							<a href="#/suppliers_balance_summary">
								<div class="widget-body  alert-info welcome-nopadding" style="width: 100%;">
									<p><span data-bind="text: lang.lang.payables"></span></p>
							
									<div align="center" class="text-large strong" data-bind="text: ap"></div>
								
									<table width="100%">
										<tr align="center">
											<td>										
												<span data-bind="text: ap_open"></span>
												<br>
												<span><span data-bind="text: lang.lang.open"></span></span>
											</td>
											<td>
												<span data-bind="text: ap_vendor"></span>
												<br>
												<span><span data-bind="text: lang.lang.suppliers"></span></span>
											</td>
											<td>
												<span data-bind="text: ap_overdue"></span>
												<br>
												<span><span data-bind="text: lang.lang.overdue"></span></span>
											</td>
										</tr>
									</table>
								</div>
							</div>
						</a>
					</div>					
				</div>	

			</div>
		</div>
	</div>

	<div class="row-fluid">
		<div style="margin-top: 10px; margin-left: 0;" align="center">
			<p>&copy; <?php echo date('Y'); ?><span data-bind="text: lang.lang.all_rights_reserved"></span></p>
		</div>	
	</div>		
</script>


<script id="searchAdvanced" type="text/x-kendo-template">
    <div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"><i></i></span>						
					</div>
			        
			        <h2>SEARCH</h2>
				    
				    <br>	
				    
				    <!-- Result -->
				    <span class="results"><span data-format="n0" data-bind="text: found"></span> result found <i class="icon-circle-arrow-down"></i></span>
					
					<div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-contact-template"
		                 data-bind="source: contactDS"></div>
		            <div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-transaction-template"
		                 data-bind="source: transactionDS"></div>
		            <div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-item-template"
		                 data-bind="source: itemDS"></div>
		            <div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-account-template"
		                 data-bind="source: accountDS"></div>					
					<!-- End Result -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="searchAdvanced-contact-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedContact">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/contact.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=surname# #=name#</h5>							
							<span>#=abbr# #=number#</span>							
							<br>
							<span>#=company#</span>
							<br>
							<span>#=contact_type#</span>
														
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>
<script id="searchAdvanced-transaction-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedTransaction">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/transaction.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=number#</h5>
							<span>#=amount#</span>
							<br>
							<span>#=issued_date#</span>					
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>
<script id="searchAdvanced-item-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedItem">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/item.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=name#</h5>
							<span>#=number#</span>
							<br>
							<span>#=on_hand#</span>					
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>
<script id="searchAdvanced-account-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedAccount">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/journal.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=name#</h5>
							<span>#=number#</span>				
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>




<!-- ***************************
*	Accounting Section        *
**************************** -->
<script id="accountingDashboard" type="text/x-kendo-template" >
	<div class="row-fluid">
		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2 data-bind="text: lang.lang.accounting"></h2>
			        	<p>
			        		<span data-bind="text: lang.lang.acc_in_this_module"></span>
			        	</p>

			        	<p style="width: 100%; float: left; margin-top: 8px; margin-bottom: 15px;">
				        	<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 32px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" href="#/accounting_recurring">
									<span class="badge fix badge-primary" style="color: #fff;  position: absolute; top: -13px; background: #203864; right: 5px; width: 25px; height: 25px; font-size: 15px; line-height: 25px;">0</span>
									Recurring												
								</a>
							</span>

							<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a href="" target="_blank" style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 39px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" >
									This Module's Guide												
								</a>
							</span>
						</p>

						<div class="cover-block" style="box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        	<div class="supplier-icon">
							    <div class="span4">
							       	<a href="#/txn_item" class="center">
							       		<img title="Add Txn Item"  src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/add_txn_item.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/account" class="center">
							       		<img title="Add New Account" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/journal.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/segment" class="center">
							       		<img title="Add New Segment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/segment.ico" />
							       	</a>
							    </div>
							</div>
						</div>
			        </td>
			 	</tr>
			</table>
			<div class="cover-block">
				<table class="table table-borderless table-condensed table-vertical-center costom-imag">
					<tr>	
						<td class="center" style="vertical-align: top;">
							<a href="#/journal">
								<img title="Add Account" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/journal.png" width="110" height="200" />
								<span data-bind="text: lang.lang.journal" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>					
						<td class="center" style="vertical-align: top;">
							<a href="#/cash_transaction">
								<img title="Add Cash Transaction" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_transaction.png" width="110" height="200" />
								<span data-bind="text: lang.lang.cash_transaction" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>
						<td class="center" style="vertical-align: top;">
							<a href="#/cash_advance">
								<img title="Add Cash Advance" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_advance.png" width="110" height="200" />
								<span data-bind="text: lang.lang.cash_advance" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>		
					</tr>
					<tr>
						<td class="center" style="vertical-align: top;">						
							<a href="#/expense">
								<img title="Add Expense" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/expense.png" width="110" height="200" />
								<span data-bind="text: lang.lang.expense" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>
						<td class="center">						
							<a href="#/currency_rate">
								<img title="Add Exchange Rate Record" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/currency_record.png" width="110" height="200" />
								<span data-bind="text: lang.lang.ex_rate_record" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>
						<td class="center" style="vertical-align: top;">
							<a href="#/segment">
								<img title="Add Segment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/segment.png" width="110" height="200" />
								<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;" data-bind="text: lang.lang.segment"></span>
							</a>
						</td>			
					</tr>								
				</table>
			</div>

		</div>

		<!-- Right Side -->
		<div class="span8 dash-accounting">
			<div class="row">
				<div class="span6 accounting-right">
					<div class="financial-report" style="padding-bottom: 0;">
						<p><span data-bind="text: lang.lang.financial_report_standard"></span> <b>Cambodia International Financial Reporting Standards for SMEs (CIFRS for SMEs)</b>
						</p>
						<a style="margin: 0 0 15px;" class="btn-download" href="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/guide/IFRS+for+SME_Khmer.pdf" target="_blank"><span data-bind="text: lang.lang.take_this_standard"></span></a>
						<a style="margin: 0px 0 15px; float: right;" class="btn-download" href="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/guide/IFRS+for+SMEs_Standard_2015.pdf" target="_blank">Download Standards</a>
						<p><span data-bind="text: lang.lang.reporting_currency"></span> <b data-bind="text: reportCurrency"></b></p>
						<p><span data-bind="text: lang.lang.fiscal_year"></span> <b data-bind="text: fiscalDate"></b></p>
					</div>
					<div class="account-stement">
						<a href="#/statement_profit_loss">
							<table class="performance">
								<tr>									
									<td style="padding-left: 0;"><span data-bind="text: lang.lang.income"></span></td>
									<td></td>
									<td align="right"><span data-bind="text: income"></span></td>
								</tr>
								<tr> 									
									<td style="padding-left: 0;"><span data-bind="text: lang.lang.expense"></span></td>
									<td></td>
									<td align="right"><span data-bind="text: expense"></span></td>
								</tr>
								<tr>
									<td style="padding-left: 0;"><b><span data-bind="text: lang.lang.net_income"></span></b></td>
									<td></td>
									<td align="right"><b data-bind="text: net_income"></b></td>
								</tr>
							</table>
						</a> 
							
						<a href="#/statement_financial_position">
							<table class="position">
								<tr>

									<td style="padding-left: 0;"><span data-bind="text: lang.lang.asset"></span></td>
									<td></td>
									<td align="right"><span data-bind="text: asset"></span></td>
								</tr>
								<tr>
									<td style="padding-left: 0;"><span data-bind="text: lang.lang.liabilities"></span></td>
									<td></td>
									<td align="right"><span data-bind="text: liability"></span></td>
								</tr>
								<tr>
									<td style="padding-left: 0;"><b><span data-bind="text: lang.lang.equity"></span></b></td>
									<td></td>
									<td align="right"><b data-bind="text: equity"></b></td>
								</tr>
							</table>
						</a>
					</div>
				</div>
				<div class="span6 accounting-management">

					<div class="span12 capital-box" style="width: 100%; background: #203864; color: #fff">
						<span data-bind="text: txnRecorded"></span>
						<p class="month" style="width: 70%; text-align: center; margin: 0 auto;" data-bind="text: lang.lang.transactions_recorded"></p>
					</div>
					<!-- <div class="span6 capital-box">
						<span>10</span>
						<p class="month">Unsettled accrual transactions</p>
					</div> -->
					<div class="span12" style="padding: 0;">
						<div class="span6 capital-box" style="background: #0077c5;">
							<span data-bind="text: currentRatio"></span> <span>x</span>
							<p class="month" data-bind="text: lang.lang.current_ratio"></p>
						</div>
						<div class="span6 capital-box" style="background: #21abf6; color: #fff;">
							<span data-bind="text: quickRatio"></span> <span>x</span>
							<p class="month" style="color: #fff;" data-bind="text: lang.lang.quick_ratio"></p>
						</div>
					</div>
					<table width="100%">
						<tr>
							<td>
								<span data-bind="text: lang.lang.return_on_capital_employed"></span>
							</td>
							<td align="right">
								<span data-bind="text: roce"></span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.gross_profit_margin"></span>
							</td>
							<td align="right">
								<span data-bind="text: grossProfitMargin"></span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.profit_margin"></span>
							</td>
							<td align="right">
								<span data-bind="text: profitMargin"></span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.return_on_asset"></span>
							</td>
							<td align="right">
								<span data-bind="text: returnOnAsset"></span> <span>x</span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.account_receivable_collection_period"></span>
							</td>
							<td align="right">
								<span data-bind="text: arCollectionPeriod"></span> <span>days</span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.payable_payment_period"></span>
							</td>
							<td align="right">
								<span data-bind="text: apPaymentPeriod"></span> <span>days</span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.inventory_turnover"></span>
							</td>
							<td align="right">
								<span data-bind="text: inventoryTurnOver"></span> <span>days</span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.cash_conversion_cycle"></span>
							</td>
							<td align="right">
								<span data-bind="text: ccc"></span> <span>days</span>
							</td>
						</tr>
						<tr>
							<td>
								<span data-bind="text: lang.lang.working_capital_to_sale_ratio"></span>
							</td>
							<td align="right">
								<span data-bind="text: wcSale"></span>
							</td>
						</tr>							
					</table>

					
				</div>
			</div>

		

		</div>		

	</div>
</script>
<script id="accountingCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll" style="height: 98px;">							
						<form autocomplete="off" class="form-inline">

							<div class="widget-search separator bottom row" style="padding-bottom: 0; ">
								<div class="span10" style="padding-right: 0;">
									<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
									<div class="overflow-hidden">
										<input type="search" placeholder="Account ..." data-bind="value: searchText, events:{change: enterSearch}">
									</div>
								</div>
								<div class="span2" style="padding: 0; width: 12%">
									<ul class="topnav" style="padding: 0 !important; background: #e8e8e8; height: 34px;">										
									  	<li role='presentation' class='dropdown' style="list-style: none; padding: 0 0 0 3px;">
									  		<a class='dropdown-toggle glyphicons cogwheel' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> </a>
								  			<ul class='dropdown-menu' style="width: 190px !important; border-radius: 0; left: -159px !important; top: 34px !important; margin-left: 4px;">
								  				<li><a><span data-bind="click: showActive">Show Active Account</span></a></li>  	
								  				<li><a><span data-bind="click: showInactive">Show Inactive Account</span></a></li>
								  				  				 		
								  			</ul>
									  	</li>	  	  	
									  	
									</ul>
								</div>
							</div>	

							<div class="select2-container" style="width: 100%; margin-bottom: 10px;">								
								<input data-role="dropdownlist"
					                   data-option-label="Account Type..."
					                   data-template="account-type-list-tmpl"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: account_type_id,
					                              source: accountTypeDS"
					                   style="width: 100%" />									
							</div>

						</form>					
					</div>
					
					<span class="results"><span data-bind="text: dataSource.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid"
						 data-auto-bind="false" 
						 data-bind="source: dataSource"						 
						 data-row-template="accountingCenter-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">
							    	<input type="text" name="" data-bind="value: obj.name" disabled="disabled" style="border: none; width: 69%; font-size: 20px; font-weight: 600; margin-top: -11px; margin-left: 11px; background: #fff;">
							        <!-- Tabs -->
							        <ul class="pull-right">
							            <li class="glyphicons circle_info active"><span data-toggle="tab" data-target="#tab1-2"><i></i></span>
							            </li>
							            <li class="glyphicons paperclip"><span data-toggle="tab" data-target="#tab2-2"><i></i></span>
							            </li>							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Info Tab content -->
							            <div id="tab1-2" class="tab-pane active box-generic">
							            	<div class="accounCetner-textedit">
												<table width="100%">
													<tr>
														<td width="40%"><span data-bind="text: lang.lang.account_number"></span>:</td>
														<td width="60%">
															<span class="strong" data-bind="text: obj.number"></span>
														</td>
													</tr>
													<tr>
														<td><span data-bind="text: lang.lang.account_title"></span>:</td>
														<td>
															<span class="strong" data-bind="text: obj.name"></span>
														</td>
													</tr>
													<tr>
														<td><span data-bind="text: lang.lang.sub_account"></span>:</td>
														<td>
															<span data-bind="text: subName"></span>
														</td>
													</tr>
													<tr>
														<td><span data-bind="text: lang.lang.account_type"></span>:</td>
														<td>
															<span data-bind="text: typeName"></span>
														</td>
													</tr>								
													<tr>
														<td><span data-bind="text: lang.lang.description"></span>:</td>
														<td>
															<span data-bind="text: obj.description"></span>
														</td>
													</tr>
													<tr>
														<td><span data-bind="text: lang.lang.taxable"></span>:</td>
														<td>										
															<input type="checkbox" id="chbTaxable" class="k-checkbox" data-bind="checked: obj.is_taxable">
					          								<label class="k-checkbox-label" for="chbTaxable"></label>
														</td>
													</tr>
												</table>

												<span class="btn btn-primary btn-icon glyphicons edit pull-right" data-bind="click: goEdit"><i></i><span data-bind="text: lang.lang.edit"></span></span>
											</div>
							            </div>
							            <!-- // Transactions Tab content END -->

							            <!-- Attach Tab content -->
								        <div id="tab2-2" class="tab-pane">							            	
								            <p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
								            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

								            <table class="table table-bordered">
										        <thead>
										            <tr>			                
										                <th><span data-bind="text: lang.lang.file_name"></span></th>
										                <th><span data-bind="text: lang.lang.description"></span></th>
										                <th><span data-bind="text: lang.lang.date"></span></th>
										                <th style="width: 13%;"></th>                			                
										            </tr> 
										        </thead>
										        <tbody data-role="listview" 
										        		data-template="attachment-list-tmpl" 
										        		data-auto-bind="false"
										        		data-bind="source: attachmentDS"></tbody>			        
										    </table>

										    <span class="btn btn-icon btn-success glyphicons ok_2" data-bind="click: uploadFile" style="color: #fff; padding: 5px 38px; text-align: left; width: 98px !important; display: inline-block; margin-top: 10px;"><i></i> <span data-bind="text: lang.lang.save"></span></span>

								        </div>
								        <!-- // Attach Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6 account-center" style="margin-bottom: 10px;">
							<div class="row-fluid" >
								<div class="span12" style="margin-bottom: 10px;">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadTransaction" style=" width: 425px; height:114px; background: #203864; margin-left:0;">
										<span class="glyphicons coins"><i></i></span>										
										<span class="txt">
											<span data-bind="text: lang.lang.balance_as_of_today"></span>
											<span data-bind="text: balance"></span>
										</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" style="background: #0077c5">
										<span class="glyphicons adjust_alt"><i></i></span>
										<span class="txt">
											<span data-bind="text: nature"></span>
											<span data-bind="text: lang.lang.nature_balance"></span>
										</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" style="background: #21abf6" data-bind="click: loadTransaction">
										<span class="glyphicons random"><i></i></span>										
										<span class="txt">
											<span data-bind="text: totalTxn"></span>
											<span data-bind="text: lang.lang.transaction"></span>
										</span>										
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input data-role="datepicker"
							   class="sdate"
							   data-format="dd-MM-yyyy"
					           data-bind="value: sdate,
					           			  max: edate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      min: sdate"
					           placeholder="To ..." >

					  	<button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th data-bind="text: lang.lang.date"></th>
								<th data-bind="text: lang.lang.type"></th>							
								<th data-bind="text: lang.lang.reference_no"></th>
								<th data-bind="text: lang.lang.description"></th>
								<th data-bind="text: lang.lang.dr"></th>
								<th data-bind="text: lang.lang.cr"></th>
								<th></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="accountingCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="accountingCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>
        	#if(dr==0 && cr==0){#
        		#=type#
        	#}else{#
	        	<a href="\#/#=type.toLowerCase()#/#=transaction_id#"><i></i> #=type#</a>
			#}#
        </td>
        <td>
        	#if(dr==0 && cr==0){#
        		#=number#
        	#}else{#
	        	<a href="\#/#=type.toLowerCase()#/#=transaction_id#"><i></i> #=number#</a>
			#}#
        </td>
        <td>#=description#</td>
    	<td class="right">    		
    		#=kendo.toString(dr, locale=="km-KH"?"c0":"c", locale)#    		
    	</td>
    	<td class="right">
    		#=kendo.toString(cr, locale=="km-KH"?"c0":"c", locale)#
    	</td>    	
    	<td align="center">
			#if(type==="Commercial_Invoice" || type==="Vat_Invoice" || type==="Invoice"){#
				<a href="\#/invoice/#=id#"><i></i> Pay</a>				   	
        	#}#
		</td>     	
    </tr>
</script>
<script id="accountingCenter-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				#if(sub_of_id==0){#
					<span class="strong" >#=number#</span>
					-
					<span class="strong" >#=name#</span>
				#}else{#
					#if(banhji.accountingCenter.checkIsSub(sub_of_id)){#
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
						<span>#=number#</span>
						-
						<span >#=name#</span>
					#}else{#
						&nbsp;&nbsp;
						<span>#=number#</span>
						-
						<span >#=name#</span>
					#}#
				#}#				
			</div>
		</td>
	</tr>
</script>
<script id="account" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content">

			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

				    <h2 data-bind="text: lang.lang.account"></h2>				    		   

				    <br>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlType"><span data-bind="text: lang.lang.account_type"></span><span style="color:red">*</span></label>
								<input id="ddlType" name="ddlType" 
									   data-role="dropdownlist"					                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.account_type_id,
					                              source: accountTypeDS,
					                              events:{change:typeChanges}"
					                   data-option-label="Select Type..."
					                   required data-required-msg="required" style="width: 100%;" />
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span5" style="padding: 0 5px 0 15px;width: 46%;">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtNumber"><span data-bind="text: lang.lang.account_code"></span><span style="color:red">*</span></label>
								<input id="txtNumber" name="txtNumber" 
										class="k-textbox"
										data-bind="value: obj.number,
													events:{change: checkExistingNumber}"										
										required data-required-msg="required" style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
						<div class="span1" style="padding-left: 0;width: 25px;float: left;">
							<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 26px 0 0 0 ;"><i></i></a>
						</div>
				    </div>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtName"><span data-bind="text: lang.lang.account_name"></span><span style="color:red">*</span></label>
								<input id="txtName" name="txtName" 
										class="k-textbox"
										data-bind="value: obj.name"										
										required data-required-msg="required" style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtNonLocalName"><span data-bind="text: lang.lang.non_local_name"></span></label>
								<input id="txtNonLocalName" name="txtNonLocalName" 
										class="k-textbox"
										data-bind="value: obj.name_2"
										style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
				    </div>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlSubOf"><span data-bind="text: lang.lang.sub_account"></span></label>
								<input id="ddlSubOf" name="ddlSubOf" 
									   data-role="dropdownlist"
									   data-template="account-list-tmpl"					                   
					                   data-value-primitive="true"
					                   data-auto-bind="false"
					                   data-cascade-from="ddlType"
									   data-cascade-from-field="account_type_id"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.sub_of_id,
					                              source: subAccountDS"
					                   data-option-label="Select Sub Account..."
					                   style="width: 100%;" />
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span><span style="color:red">*</span></label>
								<input id="ddlStatus" name="ddlStatus" 
									   data-role="dropdownlist"									   				                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.status,
					                              source: statusList"
					                   data-option-label="Select Status..."
					                   required data-required-msg="required" style="width: 100%;" />
							</div>
							<!-- // Group END -->
						</div>
				    </div>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label><input type="checkbox" data-bind="checked: obj.is_taxable" /> <span data-bind="text: lang.lang.taxable"></span></label>			
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
								<input id="txtDescription" name="txtDescription" 
										class="k-textbox"
										data-bind="value: obj.description" 
										style="height: 50px; width: 100%;">
							</div>
							<!-- // Group END -->
						</div>				    	
				    </div>

				    <br>

				    <div class="row well" data-bind="visible: showBank">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtBankName"><span data-bind="text: lang.lang.bank_name"></span></label>
								<input id="txtBankName" name="txtBankName" 
										class="k-textbox"
										data-bind="value: obj.bank_name"
										style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtBankAccountNumber"><span data-bind="text: lang.lang.bank_account_no"></span></label>
								<input id="txtBankAccountNumber" name="txtBankAccountNumber" 
										class="k-textbox"
										data-bind="value: obj.bank_account_number"
										style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
						
				    </div>

				    <br>

				    <!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="visible: obj.isNew" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, invisible: obj.isNew" style="width: 80px;"><i></i> Delete</span>
							</div>
						</div>
					</div>
					<!-- // Form actions END -->						
			    	
				</div>							
			</div>
		</div>
	</div>
</script>

<script id="journal" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">				
						
				    <span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

				    <h2 span data-bind="text: lang.lang.journal_entry"></h2>				        				        				        	
				   
				    <br>				    

					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 150px;">				
								<table class="table table-borderless table-condensed cart_total" style="margin-bottom: 0;">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 84%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.type"></span></td>
										<td>
											<input id="ddlType" name="ddlType"
												   data-role="dropdownlist"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.journal_type,
								                              source: types"							                   
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" 
								                   style="width: 100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.currency"></span></td>
										<td>
											<input id="cbbCurrency" name="cbbCurrency"
												   data-role="combobox"				                
								                   data-value-primitive="true"
								                   data-template="currency-list-tmpl"
								                   data-text-field="code"
								                   data-value-field="locale"
								                   data-bind="value: obj.locale, 
								                   			source: currencyDS, 
								                   			events: {change : setRate}"
								                   placeholder="Select currency..." 
								                   required data-required-msg="required" style="width: 100%" />										
										</td>
									</tr>									
								</table>
							</div>
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" >

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							            <li class="span1 glyphicons pencil active"><a href="#tab1-3" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab2-3" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons history"><a href="#tab3-3" data-toggle="tab"><i></i></a>
							            </li>								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							        <!-- Memo Tab content -->
							        <div class="tab-pane active" id="tab1-3">
							        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
							        		data-bind="value: obj.memo2" style="width:100%;" 
							        		placeholder="Please enter transaction purpose here ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab2-3">
							         	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th data-bind="text: lang.lang.file_name"></th>
									                <th data-bind="text: lang.lang.description"></th>
									                <th data-bind="text: lang.lang.date"></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recurring Tab content -->
							        <div class="tab-pane" id="tab3-3">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>
				                <th style="width: 30%;"><span data-bind="text: lang.lang.account"></span></th>
				                <th data-bind="text: lang.lang.description"></th>
				                <th data-bind="visible: showRef" style="width: 7%;"><span data-bind="text: lang.lang.reference"></span></th>
				                <th data-bind="visible: showName" style="width: 15%;"><span data-bind="text: lang.lang.name"></span></th>
				                <th data-bind="visible: showJob" style="width: 7%;"><span data-bind="text: lang.lang.job"></span></th>
				                <th data-bind="visible: showSegment" style="width: 15%;"><span data-bind="text: lang.lang.segment"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.dr_"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.cr_"></span></th>			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview"
				        		data-template="journal-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span6 hidden-print">
							
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0; ">
									<li>
										<input type="checkbox" data-bind="checked: showRef" /> <span data-bind="text: lang.lang.reference"></span>
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showName" /> <span data-bind="text: lang.lang.name"></span>
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showJob" /> <span data-bind="text: lang.lang.job"></span>
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showSegment" /> <span data-bind="text: lang.lang.segment"></span>
									</li>								
								</ul>
							</div>

							<a href="#/account" class="btn btn-default"><span data-bind="text: lang.lang.add_account"></span></a>						
							
						</div>
						<!-- Column END -->
					</div>

					<div class="row">
						<!-- Column -->
						<div class="span12">
							<div class="box-generic" style="margin-bottom: 0; margin-top: 15px;">						
								<div class="row-fluid row-merge">
									<div class="span6">
										<div class="center">
											<h5 class="strong muted text-uppercase"><span data-bind="text: lang.lang.total_dr"></span></h5>
											<span class="text-large strong text-primary" data-bind="text: dr"></span>
										</div>
									</div>
									<div class="span6">
										<div class="center muted">
											<h5 class="strong muted text-uppercase"><span data-bind="text: lang.lang.total_cr"></span></h5>
											<span class="text-large strong" data-bind="text: cr"></span>
										</div>
									</div>
								</div>
							</div>
						</div>
						<!-- // Column END -->
					</div>
		           
		            <br>
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="journal-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.journal.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="cbbAccounts" name="cbbAccounts" 
				   data-role="combobox"
                   data-header-template="account-header-tmpl"                 
                   data-template="account-list-tmpl"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS,
				   			  events:{ change: accountChanges }"
                   data-placeholder="Add Account.."                                     
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>					
		<td data-bind="visible: showName">
			<input data-role="combobox" id="ddlName"                  
                   data-value-primitive="true"
                   data-template="contact-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: contactDS"
                   data-placeholder="Add Name.."                    
                   style="width: 100%" />
		</td>
		<td data-bind="visible: showJob">
			<input id="ddlJob" name="ddlJob"
				   data-role="dropdownlist"
				   data-header-template="job-header-tmpl"
				   data-template="job-list-tmpl"
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: job_id,
                              source: jobDS"
                   data-option-label="Add Job.."
                   style="width: 80px;" />	
		</td>		
		<td data-bind="visible: showSegment">
			<select data-role="multiselect" id="ddlSegment"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%; " /></select>					
		</td>
		<td class="right">
			<input id="ntbDr" name="ntbDr" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-bind="value: dr, events: {change : checkDr}" 
					required data-required-msg="required" style="width: 100%; text-align: right;" /> 						
		</td>
		<td class="right">
			<input id="ntbCr" name="ntbCr" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-bind="value: cr, events: {change : checkCr}" 
					required data-required-msg="required" style="width: 100%; text-align: right;" />										
		</td>		
    </tr>   
</script>
<script id="cashTransaction" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right"
							data-bind="click: cancel"><i></i></span>

			        <h2 span data-bind="text: lang.lang.c_transaction"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 150px;">				
								<table class="table table-borderless table-condensed cart_total" style="margin-bottom: 0;">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.type"></span></td>
										<td>
											<input id="ddlType" name="ddlType"
												   data-role="dropdownlist"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.type,
								                              source: types,
								                              events:{ change: typeChanges }"							                   
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" 
								                   style="width: 100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.currency"></span></td>
										<td>
											<input id="ddlCurrency" name="ddlCurrency"							            	 
					              				data-role="dropdownlist"
					              				data-template="currency-list-tmpl"
					              				data-value-primitive="true"
							            		data-text-field="code"
				           						data-value-field="locale"			           						 
							            		data-bind="source: currencyDS, 
							            					value: obj.locale,
							            					events:{change:setRate}"
							            		data-option-label="(--- Select ---)"						            		
							            		required data-required-msg="required" style="width: 100%;" />											
										</td>
									</tr>															
								</table>
							</div>
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							            <li class="span1 glyphicons pencil active"><a href="#tab1-3" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab2-3" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons history"><a href="#tab3-3" data-toggle="tab"><i></i></a>
							            </li>
							             <!-- <li class="span1 glyphicons show_liness"><a href="#tab3-4" data-toggle="tab"><i></i></a> -->
							            </li>								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							        <!-- Memo Tab content -->
							        <div class="tab-pane active" id="tab1-3">
							        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
							        		data-bind="value: obj.memo2" style="width:100%;" 
							        		placeholder="Please enter transaction purpose here ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab2-3">

							        	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							       
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th data-bind="text: lang.lang.file_name"></th>
									                <th data-bind="text: lang.lang.description"></th>
									                <th data-bind="text: lang.lang.date"></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab3-3">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->

							        <div class="tab-pane saleSummaryCustomer" id="tab3-4">
							        	<table class="table table-borderless table-condensed">
								            <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
								            </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
							        </div>							        

							    </div>
							</div>

					    </div>
					</div>

					<h4 data-bind="text: fromToTop"></h4>				
					<table class="table table-borderless table-condensed cart_total">						
						<tr>
							<td style="width: 10%"><span data-bind="text: lang.lang.account"></span></td>
							<td style="width: 40%">
								<input id="cbbAccount" name="cbbAccount"
									   data-role="combobox"
					                   data-header-template="account-header-tmpl"                 
					                   data-template="account-list-tmpl"
					                   data-value-primitive="true"
					                   data-text-field="name"					                   
					                   data-value-field="id"
					                   data-bind="value: obj.account_id,
					                              source: accountDS"
					                   data-placeholder="Add Account.."					                                      
					                   required data-required-msg="required" style="width: 100%" />
							</td>
							<td style="width: 10%"><span data-bind="text: lang.lang.segments"></span></td>
							<td style="width: 40%">
								<select data-role="multiselect"
									   data-value-primitive="true"
									   data-header-template="segment-header-tmpl"							   
									   data-item-template="segment-list-tmpl"				    
									   data-value-field="id" 
									   data-text-field="code"
									   data-bind="value: obj.segments, 
									   			source: segmentItemDS,
									   			events:{ change: transactionSegmentChanges }"
									   data-placeholder="Add Segment.."				   
									   style="width: 100%" /></select>
							</td>							
						</tr>									
					</table>				

					<h4 data-bind="text: fromToBottom"></h4>
					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.account"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.method"></span></th>
				                <th data-bind="text: lang.lang.description"></th>
				                <th data-bind="visible: showRef" style="width: 7%;"><span data-bind="text: lang.lang.reference"></span></th>
				                <th data-bind="visible: showName" style="width: 15%;"><span data-bind="text: lang.lang.name"></span></th>
				                <th data-bind="visible: showSegment" style="width: 15%;"><span data-bind="text: lang.lang.segment"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="cashTransaction-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span6 hidden-print">
							
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" data-bind="checked: showRef" /> <span data-bind="text: lang.lang.reference"></span>
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showName" /> <span data-bind="text: lang.lang.name"></span>
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showSegment" /> <span data-bind="text: lang.lang.segment"></span>
									</li>								
								</ul>
							</div>						
							
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span6">
							<table class="table table-borderless table-condensed cart_total">
								<tbody>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total"></span>:</td>
										<td class="right strong"><span data-bind="text: total"></span></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>
		           
		            <br>
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashTransaction-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.cashTransaction.lineDS.indexOf(data)+1#			
		</td>	
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"
                   data-header-template="account-header-tmpl"                 
                   data-template="account-list-tmpl"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."
                   required data-required-msg="required" style="width: 100%" />	
		</td>
		<td>
			<input id="ddlPaymentMethod" name="ddlPaymentMethod"
				   data-role="dropdownlist"                   
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: payment_method_id,
                              source: paymentMethodDS"
                   data-option-label="Select method.."
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>					
		<td data-bind="visible: showName">
			<input data-role="combobox" id="showName"                  
                   data-value-primitive="true"
                   data-template="contact-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: contactDS"
                   data-placeholder="Add Name.."                    
                   style="width: 100%" />
		</td>		
		<td data-bind="visible: showSegment">
			<select data-role="multiselect" id="showSegment"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>			
    </tr>   
</script>
<script id="cashAdvance" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

		        <h2 span data-bind="text: lang.lang.cash_advance"></h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 150px;">				
							<table class="table table-borderless table-condensed cart_total" >									
								<tr>
									<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
									<td>
										<input id="txtNumber" name="txtNumber" class="k-textbox" 
												data-bind="value: obj.number,
															disabled: obj.is_recurring,
															events:{change:checkExistingNumber}" 
												required data-required-msg="required" 
												placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
										<div style="padding-left: 0; width: 25px; float: left;">
											<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
										</div>
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.date"></span></td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd HH:mm:ss"
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>								
								<tr>
									<td><span data-bind="text: lang.lang.currency"></span></td>
									<td>
										<input id="cbbCurrency" name="cbbCurrency"
											   data-role="combobox"				                
							                   data-value-primitive="true"
							                   data-template="currency-list-tmpl"
							                   data-text-field="code"
							                   data-value-field="locale"
							                   data-bind="value: obj.locale, 
							                   			source: currencyDS, 
							                   			events: {change : setRate}"
							                   placeholder="Add currency..." 
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.employee"></span></td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"
											   data-auto-bind="false"
											   data-header-template="employee-header-tmpl"                  
							                   data-value-primitive="true"
							                   data-template="contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																							
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: { backgroundColor: amtDueColor}">
								<div align="left"><span data-bind="text: lang.lang.total_amount"></span></div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>

						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic-noborder" style="min-height: 55px;padding-bottom: 15px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons pencil"><a href="#tab2-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i></a>
						            </li>
						            <!-- <li class="span1 glyphicons show_liness"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							        </li> -->								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						        <!-- Option Tab content -->
						        <div class="tab-pane active" id="tab1-4">
						        	
						        	<table class="table table-borderless table-condensed cart_total">
										<tr>										
											<td><span data-bind="text: lang.lang.expected_date"></span></td>
											<td>
												<input id="txtExpectedDate" name="txtExpectedDate" 
														data-role="datepicker"
														data-format="dd-MM-yyyy"
														data-parse-formats="yyyy-MM-dd" 
														data-bind="value: obj.due_date" 
														required data-required-msg="required"
														style="width:100%;" />
											</td>
										</tr>
										<tr>										
											<td><span data-bind="text: lang.lang.method"></span></td>
											<td>
												<input id="ddlPaymentMethod" name="ddlPaymentMethod"
													   data-role="dropdownlist"								                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-header-template="cash-payment-method-header-tmpl"
									                   data-value-field="id"
									                   data-bind="value: obj.payment_method_id,
									                              source: paymentMethodDS"							                   
									                   data-option-label="(--- Select ---)"
									                   required data-required-msg="required" 
									                   style="width: 100%;" />
									        </td>
										</tr>
										<tr>									
											<td><span data-bind="text: lang.lang.cash_account"></span></td>
											<td>
												<input id="cbbAccount" name="cbbAccount"
													   data-role="combobox"                   
									                   data-value-primitive="true"
									                   data-header-template="account-header-tmpl"                  
									                   data-template="account-list-tmpl"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                              source: cashAccountDS"
									                   data-placeholder="Select Account.."					                                      
									                   required data-required-msg="required" style="width: 100%" />									            
											</td>
										</tr>
										<tr>										
											<td><span data-bind="text: lang.lang.segment"></span></td>
											<td>
												<select data-role="multiselect"
													   data-value-primitive="true"
													   data-header-template="segment-header-tmpl"							   
													   data-item-template="segment-list-tmpl"				    
													   data-value-field="id" 
													   data-text-field="code"
													   data-bind="value: obj.segments, 
													   			source: segmentItemDS,
													   			events:{ change: transactionSegmentChanges }"
													   data-placeholder="Add Segment.."				   
													   style="width: 100%" /></select>									            
											</td>
										</tr>
									</table>

						        </div>
						        <!-- // Option Tab content END -->

						        <!-- Memo Tab content -->
						        <div class="tab-pane" id="tab2-4">
						        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
						        		data-bind="value: obj.memo2" style="width:100%;" 
						        		placeholder="Please enter transaction purpose here ..."></textarea>
						        </div>
						        <!-- // Memo Tab content END -->

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab3-4">
						         	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							       
						            <input id="files" name="files"
					                   type="file"
					                   data-role="upload"
					                   data-show-file-list="false"
					                   data-bind="events: { 
			                   				select: onSelect
					                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th data-bind="text: lang.lang.file_name"></th>
								                <th data-bind="text: lang.lang.description"></th>
								                <th data-bind="text: lang.lang.date"></th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->						        

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab4-4">							            	
						            
						            <table style="width: 100%" class="table borderless">
						            	<tr align="right">
						            		<td style="border-top: 0;">
						            			<span data-bind="text: lang.lang.name"></span>
						            		</td>
						            		<td style="border-top: 0;">
						            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

						            			<span data-bind="text: lang.lang.start"></span>

								                <input data-role="datepicker"
														data-format="dd-MM-yyyy"
														data-parse-formats="yyyy-MM-dd"
														data-bind="value: obj.start_date"
														style="width: 40%; " />
						            		</td>
						            	</tr>
						            	<tr align="right">
						            		<td style="border-top: 0;">
							            		<span data-bind="text: lang.lang.every"></span>
							            	</td>
						            		<td style="border-top: 0;">
							            		<input data-role="numerictextbox"
								                   data-format="n0"
								                   data-min="0"								                   
								                   data-bind="value: obj.interval"
								                   style="width: 45%; " />

							            		<input data-role="dropdownlist"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.frequency,
									                              source: frequencyList,
									                              events: { change: frequencyChanges }"
									                   style="width: 45%;" />
							            	</td>
						            	</tr>
							            <tr align="right">
							            	<td style="border-top: 0;">
							            		<span data-bind="text: lang.lang.on"></span>
							            	</td>							            	
							            	<td style="border-top: 0;">

							            		<input data-role="dropdownlist"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.month,
									                   			  visible: showMonth,
									                              source: monthList"										                   
									                   style="width: 45%;" />

							            		<input data-role="dropdownlist"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.month_option,
									                   			  visible: showMonthOption,
									                              source: monthOptionList,
									                              events: { change: monthOptionChanges }"										                   
									                   style="width: 45%;" />

							            		<input data-role="dropdownlist"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.week,
									                   			  visible: showWeek,
									                              source: weekDayList"										                  
									                   style="width: 45%;" />										            
									        
							            		<input data-role="dropdownlist"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.day,
									                   			  visible: showDay,
									                              source: dayList"										                   
									                   style="width: 45%;" />

							            	</td>
							            </tr>
						            </table>

							        <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->

						        <div class="tab-pane saleSummaryCustomer" id="tab4-5">
							        	<table class="table table-borderless table-condensed">
								            <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
								            </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
							    </div>									        

						    </div>
						</div>

				    </div>
				</div>

				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>		                
			                <th style="width: 20%;"><span data-bind="text: lang.lang.account"></span></th>
			                <th data-bind="text: lang.lang.description"></th>
			                <th data-bind="visible: showRef" style="width: 7%;"><span data-bind="text: lang.lang.reference"></span></th>
			                <th data-bind="visible: showSegment" style="width: 15%;"><span data-bind="text: lang.lang.segment"></span></th>
			                <th style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>			                			  
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="cashAdvance-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span6 hidden-print">
						
						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" data-bind="checked: showRef" /> <span data-bind="text: lang.lang.reference"></span>
								</li>
								<li>
									<input type="checkbox" data-bind="checked: showSegment" /> <span data-bind="text: lang.lang.segment"></span>
								</li>								
							</ul>
						</div>				
						
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span6">
						<table class="table table-borderless table-condensed cart_total">
							<tbody>								
								<tr>
									<td class="right"><span data-bind="text: lang.lang.total"></span></td>
									<td class="right strong"><span data-bind="text: total"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashAdvance-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"                   
                   data-value-primitive="true"
                   data-header-template="account-header-tmpl"                  
                   data-template="account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: advAccountDS"
                   data-placeholder="Add Account.."
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>			
		<td data-bind="visible: showSegment">
			<select data-role="multiselect" id="ddlSegment"
				   data-value-primitive="true"
				   data-item-template="segment-list-tmpl"
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."
				   style="width: 100%" /></select>
		</td>
		<td class="right">
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>			
    </tr>   
</script>
<script id="expense" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right"
							data-bind="click: cancel"><i></i></span>

		        <h2 span data-bind="text: lang.lang.c_expense"></h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 190px;">				
							<table class="table table-borderless table-condensed cart_total" >									
								<tr>
									<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
									<td>
										<input id="txtNumber" name="txtNumber" class="k-textbox" 
												data-bind="value: obj.number,
															disabled: obj.is_recurring,
															events:{change:checkExistingNumber}" 
												required data-required-msg="required" 
												placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
										<div style="padding-left: 0; width: 25px; float: left;">
											<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
										</div>
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.date"></span></td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd HH:mm:ss"
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.currency"></span></td>
									<td>
										<input id="cbbCurrency" name="cbbCurrency"
											   data-role="combobox"										                    
							                   data-value-primitive="true"
							                   data-template="currency-list-tmpl"
							                   data-text-field="code"
							                   data-value-field="locale"
							                   data-bind="value: obj.locale,
							                              source: currencyDS,
							                              events:{ change: setRate }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>								
								<tr>
									<td><span data-bind="text: lang.lang.employee"></span></td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"                   
							                   data-value-primitive="true"
							                   data-header-template="employee-header-tmpl"
							                   data-template="contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																							
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.c_amount_paid"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>
						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic-noborder">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						            <li class="span1 glyphicons cogwheels active"><a href="#tab1-3" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab2-3" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons history"><a href="#tab3-3" data-toggle="tab"><i></i></a>
						            </li>
						            <!-- <li class="span1 glyphicons show_liness"><a href="#tab3-4" data-toggle="tab"><i></i></a></li> -->
						            							            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						        <!-- Option Tab content -->
						        <div class="tab-pane active" id="tab1-3" >
						        	<table class="table table-borderless table-condensed cart_total">
						        		<tr>
							        		<td colspan="2">
							        			<table>
						            				<tr>
						            					<td>
									            			<input type="radio" value="Direct_Expense" class="k-radio"
									            					name="payOption" id="payOption1"
									            					data-bind="checked: obj.type, 
									            								events:{ change: typeChanges }"> 
									            			<label class="k-radio-label" for="payOption1"><span data-bind="text: lang.lang.c_direct_expense"></span></label>
									            		</td>
									            		<td>
												            <input type="radio" value="Reimbursement" class="k-radio"
												            		name="payOption" id="payOption2"
												            		data-bind="checked: obj.type, 
												            					events:{ change: typeChanges }"> 
												            <label class="k-radio-label" for="payOption2"><span data-bind="text: lang.lang.c_reimbursement"></span></label>
										            	</td>
										            	<td>
												            <input type="radio" value="Advance_Settlement" class="k-radio"
												            		name="payOption" id="payOption3"
												            		data-bind="checked: obj.type, 
												            					events:{ change: typeChanges }"> 
												            <label class="k-radio-label" for="payOption3"><span data-bind="text: lang.lang.c_advance_settlement"></span></label>
										            	</td>
										            </tr>
									            </table>
							        		</td>
						        		</tr>
							        	<tr>
							        		<td><span data-bind="text: lang.lang.cash_account"></span></td>
							        		<td>
							        			<input id="cbbAccount" name="cbbAccount"
													   data-role="combobox"
									                   data-header-template="account-header-tmpl"                 
									                   data-template="account-list-tmpl"
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                              source: cashAccountDS"
									                   data-placeholder="Select Account.."					                                      
									                   required data-required-msg="required" style="width: 100%" />
							        		</td>
							        	</tr>
							        	<tr data-bind="visible: showCashAdvance">
							        		<td><span data-bind="text: lang.lang.cash_advance"></span></td>
							        		<td>
							        			<input data-role="dropdownlist"
							        				   data-template="reference-list-tmpl"                   
									                   data-value-primitive="true"
									                   data-auto-bind="false"
									                   data-text-field="number"
									                   data-value-field="id"
									                   data-bind="value: obj.reference_id,
									                              source: referenceDS,
									                              events: { change: referenceChanges }"
									                   data-option-label="Select Cash Advance.." style="width: 100%" />	
							        		</td>
							        	</tr>
							        	<tr>
											<td><span data-bind="text: lang.lang.segment"></span></td>
											<td>
												<select data-role="multiselect"
													   data-value-primitive="true"
													   data-header-template="segment-header-tmpl"							   
													   data-item-template="segment-list-tmpl"				    
													   data-value-field="id" 
													   data-text-field="code"
													   data-bind="value: obj.segments, 
													   			source: segmentItemDS,
													   			events:{ change: transactionSegmentChanges }"
													   data-placeholder="Add Segment.."				   
													   style="width: 100%" /></select>
											</td>
										</tr>
										<tr>
											<td><span data-bind="text: lang.lang.job"></span></td>
											<td>
												<input id="ddlJob" name="ddlJob"
													   data-role="dropdownlist"
													   data-header-template="job-header-tmpl"
													   data-template="job-list-tmpl"
									                   data-value-primitive="true"		   
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.job_id, 
									                   			source: jobDS"
									                   data-option-label="Select job..." 
									                   style="width: 100%" />										
											</td>
										</tr>
						        	</table>
						        </div>
						        <!-- // Option Tab content END -->						       

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab2-3">

						        	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>					       
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered" style="margin-bottom: 0;">
								        <thead>
								            <tr>			                
								                <th data-bind="text: lang.lang.file_name"></th>
								                <th data-bind="text: lang.lang.description"></th>
								                <th data-bind="text: lang.lang.date"></th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab3-3">							            	
						            
						            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>								     
						            
						        </div>
						        <!-- // Recuring Tab content END -->								        

						        <div class="tab-pane saleSummaryCustomer" id="tab3-4">
									<table class="table table-borderless table-condensed">
								        <thead>
								            <tr>
								                <th>NUMBER</th>
								                <th>ACCOUNT</th>                		                
								                <th class="right">DEBITS (Dr)</th>
								                <th class="right">CREDITS (Cr)</th>		                
								            </tr>
								        </thead> 
								        <tbody>
								        	<tr>
								        		<td>1</td>
								        		<td>2</td>
								        		<td class="right">3</td>
								        		<td class="right">4</td>
								        	</tr>
								        	<tr>
								        		<td>1</td>
								        		<td>2</td>
								        		<td class="right">3</td>
								        		<td class="right">4</td>
								        	</tr>
								        </tbody>			        
								    </table>
								</div>


						    </div>
						</div>

				    </div>
				</div>							
				
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
			                <th style="width: 20%;"><span data-bind="text: lang.lang.account"></span></th>
			                <th data-bind="text: lang.lang.description"></th>
			                <th style="width: 15%;"><span data-bind="text: lang.lang.supplier"></span></th>
			                <th style="width: 8%;"><span data-bind="text: lang.lang.inv_"></span></th>
			                <th style="width: 13%;"><span data-bind="text: lang.lang.date"></span></th>			                			  
			                <th data-bind="visible: showJob" style="width: 10%;">JOB</th>
			                <th data-bind="visible: showSegment" style="width: 10%;"><span data-bind="text: lang.lang.segment"></span></th>	
			                <th style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>
			                <th style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>			                			  
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="expense-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span4 hidden-print">
						
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" id="chbJob" class="k-checkbox" data-bind="checked: showJob" />												
									<label class="k-checkbox-label" for="chbJob"><span data-bind="text: lang.lang.job"></span></label>
								</li>
								<li>
									<input type="checkbox" id="chbSegment" class="k-checkbox" data-bind="checked: showSegment" />												
									<label class="k-checkbox-label" for="chbSegment"><span data-bind="text: lang.lang.segment"></span></label>
								</li>								
							</ul>
						</div>

						<br><br>
						<div class="well">			
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo ..."></textarea>
						</div>
					</div>
					<!-- Column END -->

					<div class="span4">
						<table class="table table-condensed table-striped table-white" data-bind="visible: showCashAdvance">
							<tbody>								
								<tr>
									<td class="right"><span data-bind="text: lang.lang.total_cash_advanced"></span></td>
									<td class="right strong"><span data-format="n" data-bind="text: obj.deposit"></span></td>
								</tr>
								<tr>
									<td class="right"><span data-bind="text: lang.lang.amount_received"></span></td>
									<td class="right strong">
										<input data-role="numerictextbox" 
												data-format="n"
												data-min="0"
												data-spinners="false"
												data-bind="value: obj.received,
															events:{change: changes}"
												style="width: 100%; text-align: right;" />
									</td>
								</tr>
								<tr>
									<td class="right"><span data-bind="text: lang.lang.remaining"></span></td>
									<td class="right strong"><span data-format="n" data-bind="text: obj.remaining"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					
					<!-- Column -->
					<div class="span4">
						<table class="table table-condensed table-striped table-white">
							<tbody>
								<tr>
									<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
									<td class="right strong" width="40%"><span data-bind="text: obj.sub_total"></span></td>
								</tr>								
								<tr>
									<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
									<td class="right strong"><span data-bind="text: obj.tax"></span></td>
								</tr>																
								<tr>
									<td class="right"><h4 span data-bind="text: lang.lang.total"></h4></td>
									<td class="right strong"><h4 data-bind="text: total"></h4></td>
								</tr>																
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="expense-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.expense.lineDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="cbbAccounts" name="cbbAccounts-#:uid#"
				   data-role="combobox"
                   data-header-template="account-header-tmpl"                 
                   data-template="account-list-tmpl"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."                                     
                   required data-required-msg="required" style="width: 100%" />	
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="ddlVendor" name="ddlVendor"
				   data-role="combobox"
                   data-header-template="vendor-header-tmpl"                  
                   data-template="contact-list-tmpl"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: supplierDS,
                              events:{change: checkExistingInvoice}"
                   data-placeholder="Add Supplier.." style="width: 100%" />	
		</td>
		<td>
			<input id="txtReferenceNo" name="txtReferenceNo"
					type="text" class="k-textbox" 
					data-bind="value: reference_no,
                               events:{change: checkExistingInvoice}"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>
		<td>
			<input id="issuedDate" name="issuedDate" 
					data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: reference_date" 
					required data-required-msg="required"
					style="width:100%;" />
		</td>
		<td data-bind="visible: showJob">
			<input id="ddlJob" name="ddlJob"
				   data-role="combobox"
				   data-header-template="job-header-tmpl"                   
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: job_id,
                              source: jobDS"
                   data-placeholder="Add Job.."
                   style="width: 80px;" />	
		</td>							
		<td data-bind="visible: showSegment">
			<select id="cbbSegment" name="cbbSegment"
				   data-role="multiselect"
				   data-item-template="segment-list-tmpl"
				   data-value-primitive="true"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segments.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>
		<td>
			<input id="ccbTaxItem"
					data-role="combobox"
					data-header-template="tax-header-tmpl"
                   	data-text-field="name"                   
                   	data-value-field="id"                   	
                   	data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   	data-placeholder="Add Tax.." style="width: 100%" />			
		</td>			
    </tr>   
</script>

<script id="currencyRate" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
					<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

					<h2 span data-bind="text: lang.lang.exchange_rate"></h2>			    		   

				    <br>

					<!-- Collapsible Widget -->			
					<div class="widget" style="border: 0; margin-bottom: 0;">
					    <div class="widget-body">

					    	<div class="row-fluid">
						    	<div class="span6 alert alert-primary"><span data-bind="text: lang.lang.company_currency"></span> <span data-bind="text: baseCode"></span> </div>
						    	<div class="span6 alert alert-primary"><span data-bind="text: lang.lang.reporting_currency"></span> <span data-bind="text: reportCode"></span> </div>
					    	</div>

							<br>					
							
							<button class="btn btn-inverse hidden-print" data-bind="click: openWindow"><i class="icon-plus icon-white"></i> <span data-bind="text: lang.lang.add_new_rate"></span></button>
							
							<!-- Item List -->
							<table style="margin-top: 15px;" class="table table-bordered table-primary table-striped table-vertical-center">
						        <thead>
						            <tr>
						                <th style="width: 15%;"><span data-bind="text: lang.lang.date"></span></th>
						                <th style="width: 6%;"><span data-bind="text: lang.lang.code"></span></th>
						                <th style="width: 25%"><span data-bind="text: lang.lang.country"></span></th>
						                <th style="width: 15%;"><span data-bind="text: lang.lang.rate"></span></th>
						                <th style="width: 15%;"><span data-bind="text: lang.lang.source"></span></th>
						                <th style="width: 15%;"><span data-bind="text: lang.lang.method"></span></th>
						                <th style="width: 10%;"></th>			                
						            </tr> 
						        </thead>
						        <tbody data-role="listview"
						        		data-template="currencyRate-template"
						        		data-bind="source: dataSource"></tbody>			        
						    </table>
							
				            <div data-role="pager"
					            data-bind="source: dataSource"></div>
						   

						    <!-- Window -->
						    <div data-role="window"
					                 data-title="Exchange Rate"		                 
					                 data-width="350"
					                 data-height="250"
					                 data-actions="{}"
					                 data-position="{top: '30%', left: '37%'}"
					                 data-bind="visible: windowVisible">
						    	
						    	<table class="table table-borderless table-condensed cart_total" >
									<tr>
										<td>										
									    	<input data-role="dropdownlist"
								                   data-option-label="Select Currency"
								                   data-value-primitive="true"
								                   data-text-field="code"
								                   data-value-field="id"
								                   data-template="currency-list-tmpl"
								                   data-bind="value: obj.currency_id,
								                              source: currencyAllDS"
								                   style="width: 100%" />
							            </td>
					            	</tr>
					            	<tr>
										<td>
							                <input id="date" name="date" 
							            		data-role="datepicker"			            		
					        					data-bind="value: obj.date" CASH ADVANCE
					        					data-format="dd-MM-yyyy"
					        					data-parse-formats="yyyy-MM-dd" 
					        					placeholder="dd-MM-yyyy" 
					        					required data-required-msg="required"
					        					style="width: 100%" />
					        			</td>
					            	</tr>
					            	<tr>
										<td>
					        				<input type="number" class="k-textbox" 		                   
							                   data-bind="value: obj.rate"
							                   placeholder="Rate(per 1 unit of base currency) ..."
							                   style="width: 100%" />
							            </td>
					            	</tr>
				                </table>

				                <p>
				                	<span data-bind="text: lang.lang.note_the_exchange_rate_here"></span>
				                </p>			               
					            
					            <div align="center">
									<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i><span data-bind="text: lang.lang.save"></span></span>
									<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i><span data-bind="text: lang.lang.close"></span></span>
								</div>

							</div>
						  					

						</div> <!-- End Widget-Body List -->
					</div>
					<!-- // Collapsible Widget END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="currencyRate-template" type="text/x-kendo-tmpl">		
	<tr>			
		<td>#=kendo.toString(new Date(date), "dd-MM-yyyy")#</td>		
		<td>#=banhji.currencyRate.getCode(currency_id)#</td>
		<td>#=banhji.currencyRate.getCountry(currency_id)#</td>
		<td align="right">#=rate#</td>					
		<td>#=source#</td>
		<td>#=method#</td>				
		<td style="text-align: center;">			
			<span data-bind="click: edit" style="cursor: pointer;"><i class="icon-edit"></i> <span data-bind="text: lang.lang.edit"></span></span>	
		</td>		
    </tr>   
</script>
<script id="tax" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960" style="overflow: hidden;">					
			<div id="example" class="k-content">
				
		    	<span class="glyphicons no-js remove_2 pull-right" 
						onclick="javascript: window.history.back()"><i></i></span>

		        <h2 span data-bind="text: lang.lang.tax"></h2>

			    <div class="row">
			        <div class="span6">
			        	<p>
				        	<span data-bind="text: lang.lang.these_are_the_tax_items_required_by_your_countries"></span>
				        </p>
			        </div>
			        <div class="span6">
			         	<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i>&nbsp&nbsp <span data-bind="text: lang.lang.add_tax_type"></span></button>
						
			        </div>		        				        				        	
			    </div>			   

			    <br>

			    <!-- Tax Type Window -->
			    <div data-role="window"
		                 data-title="Tax Type"		                 
		                 data-width="350"
		                 data-height="290"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '35%'}"
		                 data-bind="visible: windowVisible">
		    		<table>
						<tr style="border-bottom: 8px #fff solid;">
							<td width="50%"><span data-bind="text: lang.lang.tax_system"></span></td>
							<td width="50%">
								<input data-role="dropdownlist"				            			               			   		                   
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.tax_system,
				                              source: typeList"
				                   style="width: 100%;" />
							</td>
						</tr>
						<tr style="border-bottom: 8px #fff solid;">
							<td><span data-bind="text: lang.lang.tax_registration_no"></span></td>
							<td>
								<input class="k-textbox" placeholder="type number ..." data-bind="value: obj.number" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px #fff solid;">
							<td><span data-bind="text: lang.lang.agency"></span></td>
							<td>
								<input class="k-textbox" placeholder="type agency ..." data-bind="value: obj.agency" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px #fff solid;">
							<td><span data-bind="text: lang.lang.name"></span></td>
							<td>
								<input class="k-textbox" placeholder="type name ..." data-bind="value: obj.name" style="width: 100%;">
							</td>
						</tr >
						<tr style="border-bottom: 8px #fff solid;">
							<td><span data-bind="text: lang.lang.last_end_date"></span></td>
							<td>
								<input data-role="datepicker"
									data-format="dd-MM-yyyy"
									data-parse-formats="yyyy-MM-dd" 
									data-bind="value: obj.end_date"
									style="width: 100%;" />
							</td>
						</tr>
						<tr>
							<td><span data-bind="text: lang.lang.last_submission_date"></span></td>
							<td>
								<input data-role="datepicker"
									data-format="dd-MM-yyyy"
									data-parse-formats="yyyy-MM-dd" 
									data-bind="value: obj.submission_date"
									style="width: 100%;" />
						</td>
						</tr>
					</table>

					<br>
					<div style="text-align: center;">
						<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i>Save</span>
						<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i><span data-bind="text: lang.lang.close"></span></span> 
					</div> 
				</div>
						
                <div class="row">
	                <div class="span12 table-tax">	                					
		            	<table class="table table-condensed">
		            		<thead style="background-color: #1E4E78; color: #fff; font-weight: bold">
		            			<tr>
		            				<th style="padding-left: 8px !important; width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>
		            				<th data-bind="text: lang.lang.name"></th>
		            				<th data-bind="text: lang.lang.system"></th>
		            				<th data-bind="text: lang.lang.agency"></th>
		            				<th style="text-align: center;"><span data-bind="text: lang.lang.end_date"></span></th>
		            				<th style="text-align: center;"><span data-bind="text: lang.lang.submission_date"></span></th>
		            				<th></th>
		            			</tr>
		            		</thead>
		            		<tbody data-role="listview"			            			
					                data-template="tax-type-template"
					                data-bind="source: dataSource"></tbody>
		            	</table>
	            	</div>

	            <!-- Item Window -->
	            <div data-role="window"
		                 data-title="Tax Item"		                 
		                 data-width="285"
		                 data-height="220"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '37%'}"
		                 data-bind="visible: windowItemVisible">

            		<table>
						<tr style="border-bottom: 8px solid #fff;">
							<td width="34%"><span data-bind="text: lang.lang.item_name"></span></td>
							<td>
								<input class="k-textbox" placeholder="type name ..." data-bind="value: item.name" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px solid #fff;">
							<td width="34%"><span data-bind="text: lang.lang.description"></span></td>
							<td>
								<input class="k-textbox" placeholder="type description ..." data-bind="value: item.description" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px solid #fff;">
							<td><span data-bind="text: lang.lang.item_rate"></span></td>
							<td>
								<input data-role="numerictextbox"
				                   data-format="p"
				                   data-min="0"
				                   data-max="0.99"
				                   data-step="0.1"                   
				                   data-bind="value: item.rate"
				                   style="width: 100%;">
							</td>
						</tr>
						<tr>
							<td><span data-bind="text: lang.lang.account"></span></td>
							<td>
								<input data-role="dropdownlist" id="ddlAccount"
					                   data-option-label="Select Account..."
					                   data-header-template="account-header-tmpl"
					                   data-template="account-list-tmpl"
					                   data-value-primitive="true"					                   
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: item.account_id,
					                              source: accountDS"
					                   style="width: 100%" />
							</td>
						</tr>
						
					</table>

					<br>
					<div style="text-align: center;">
						<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: saveItem"><i></i><span data-bind="text: lang.lang.save"></span></span>
						<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindowItem"><i></i><span data-bind="text: lang.lang.close"></span></span>
					</div>  
				</div>

				<h3 data-bind="text: taxName" style="margin-left: 20px;"></h3>

				<div class="row">
	            	<div class="span12" style="padding-left: 30px;">		                	
					    <table class="table table-bordered table-white" style="width: 98%;">
		            		<thead>
		            			<tr>
		            				<th style="width:15%"><span data-bind="text: lang.lang.name"></span></th>
		            				<th style="width: 45%;"><span data-bind="text: lang.lang.description"></span></th>
		            				<th data-bind="text: lang.lang.rate"></th>
		            				<th data-bind="text: lang.lang.account"></th>		            					            		
		            				<th></th>
		            			</tr>
		            		</thead>
		            		<tbody data-role="listview"			            				
					                data-template="tax-item-template"
					                data-auto-bind="false"
					                data-bind="source: itemDS"></tbody>
		            	</table>
	            	</div>
            	</div>
			</div>							
			</div>
		</div>
	</div>
</script>
<script id="tax-type-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>#=number#</td>
    	<td>#=name#</td>
    	<td>#=tax_system#</td>
    	<td>#=agency#</td>
    	<td>#=kendo.toString(new Date(end_date), "dd-MM-yyyy")#</td>
    	<td align="center">#=kendo.toString(new Date(submission_date), "dd-MM-yyyy")#</td>
    	<td align="center">
    		<span data-bind="click: edit"><i class="icon-edit"></i> <span data-bind="text: lang.lang.edit"></span></span>
    		|
    		<span data-bind="click: view"><i class="icon-view"></i> <span data-bind="text: lang.lang.view_item"></span></span>
    		|
    		<span data-bind="click: addItem"><i class="icon-plus icon-white"></i> <span data-bind="text: lang.lang.add_tax_item"></span>
    	</td>
   	</tr>
</script>
<script id="tax-item-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>#=name#</td>
    	<td>#=description#</td>
    	<td>#=rate#</td>
    	<td>#=account[0].name#</td>     	 		
   		<td>
    		<span data-bind="click: editItem"><i class="icon-edit"></i> <span data-bind="text: lang.lang.edit"></span></span>
    	</td>
   	</tr>
</script>

<script id="accountingReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>PERIOD-END CLOSING REPORTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td width="50%">
								<h3><a href="#/journal_report">Journal Entry Report</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/general_ledger">General Ledger</a></h3>								
							</td>						
						</tr>
						<tr>
							<td width="50%">
								<p>
									Lists all accounting transactions within a period of time into debits and credits and displays them chronologically.

								</p>
								
							</td>
							<td width="50%">
								<p>
									Groups all accounting transactions by each account in your chart of accounts within a period of time into debits, credits, and balances. 

								</p>
							</td>
							
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/trial_balance">Trial Balance</a></h3>
							</td>
							<!-- <td width="50%">
								<h3><a href="#/transaction_list_date">Transaction List by Date</a></h3>
							</td> -->
						</tr>
						<tr>
							<td width="50%">
								<p>
									Summarizes each account balance on your chart of accounts in the format of debit and credit within a period of time
								</p>
							</td>
							<!-- <td width="50%">
								<p>
									This is similar with journal entry; however, it does not include debit and credit. In addition, it includes not financial transactions, such as sale order or purchase order.

								</p>
							</td> -->
						</tr>

						<!-- <tr>
							<td width="50%">
								<h3><a href="#/recent_transactions_list">Recent Transactions List</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/">Period-End Closing Checklist</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Lists all transaction recorded or edited within the last five days.
								</p>
							</td>
							<td width="50%">
								
							</td>
						</tr>

						<tr>
							<td width="50%">
							</td>
							<td width="50%">
								
							</td>
						</tr>
						<tr>
							<td width="50%">
							</td>
							<td>
								
							</td>
						</tr> -->

					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>FINANCIAL STATEMENTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td >
								<h3><a href="#/statement_profit_loss">Statement of Profit or Loss</a></h3>
							</td>
							<td >
								<h3><a href="#/statement_financial_position">Statement of Financial Position</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Provides the progress of your company’s financial performance, summarized in a record of income generated and expenses incurred over a given period.

								</p>
								
							</td>
							<td >
								<p>
									Provides the snapshot of your company’s financial position on value and ownership. It is the relationship of the company’s assets, liabilities and equities as of a specific date.

								</p>
							</td>
							
						</tr>
						<!-- <tr>
							<td >
								<h3><a href="#/statement_profit_loss_comparison">Statement of Profit or Loss Comparison</a></h3>
							</td>
							<td >
								<h3><a href="#/statement_financial_position_comparison">Statement of Financial Position Comparison</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Shows a year-over-year comparison of your financial performance.
								</p>
							</td>
							<td >
								<p>
									Shows a year-over-year comparison of your financial position.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/statement_cash_flow">Statement of Cash Flow</a></h3>
							</td>
							<td >
								<h3><a href="#/statement_changes_equity">Statement of Changes in Equity</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Shows cash generated by your company operating activities, cash spent on investing in your company assets long term asset, and cash in or out from your own share or financial institutions.

								</p>
							</td>
							<td >
								<p>
									Shows the movement of your paid-up capital, dividends, the effects of changes in accounting policies and corrections of errors recognized in the period, and the profit or loss for a reporting period

								</p>
							</td>
						</tr> -->

					</table>
				</div>
			</div>

			<!-- <div class="row-fluid sale-report">
				<h2>CASH POSITION</h2>
				<p>
					The following reports provide summary and detailed reports on employee related transactions.  
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Cash Position Report</a></h3>
							</td>
							<td >
								<h3><a href="#/">Cash Payment Report</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price.  


								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.


								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/">Cash Receipt Report</a></h3>
							</td>
							<td >
								<h3><a href="#/">Reconciliation Report</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for each inventory within a period of time.


								</p>
							</td>
							<td >
								<p>
									List of all cash related reconciliation reports.
								</p>
							</td>
						</tr>
					</table>					
				</div>
			</div> -->

			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 49%; padding-right: 8px !important;">
								<h3><a href="#/chart_of_account">Chart of Account </a></h3>
							</td>
							<!-- <td >
								<h3><a href="#/audit_trial_report">Audit Trial Report</a></h3>								
							</td>	 -->					
						</tr>
						<tr>
							<td style="width: 49%; padding-right: 8px !important;">
								<p>
									Lists of all accounts with name, type, and balance.

								</p>
								
							</td>
							<!-- <td >
								<h3><a href="#/recurring_journal_list">Recurring Journal List</a></h3>							
							</td> -->
							
						</tr>
						<!-- <tr>
							<td>
								<h3><a href="#/">Realized Exchange Gains & Losses</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/">Unrealized Exchange Gains & Losses</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									This detailed report lists foreign transactions that are closed (referred to as realized gains and losses) and totals the gains and losses due to changes in exchange rates.


								</p>
								
							</td>
							<td >
								<p>
									This summary report lists your foreign accounts and calculates the potential gain or loss for each account.


								</p>
							</td>							
						</tr> -->
						
					</table>
				</div>
			</div>

		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart" style="overflow: hidden;">
				<div class="statement">
					<div class="account-stement">
						<h2 style="color: #496cad; font-size: 20px;">Statement of Profit or Loss</h2>
						<table class="performance" style="width:100%; background: #fff; color: #000; padding: 0; margin-bottom: 20px;">
							<tr>
								<td style="padding-left: 0;">Income</td>
								<td></td>
								<td align="right"><span data-bind="text: income"></span></td>
							</tr>
							<tr>
								<td style="padding-left: 0;">Expense</td>
								<td></td>
								<td align="right"><span data-bind="text: expense"></span></td>
							</tr>
							<tr>
								<td style="padding-left: 0;"><b>Net Income</b></td>
								<td></td>
								<td align="right"><b data-bind="text: net_income"></b></td>
							</tr>
						</table>

						<h2 style="color: #496cad; font-size: 20px;">Statement of Financial Position</h2>
						<table class="position" style="width:100%; background: #fff; color: #000; padding: 0;">
							<tr>
								<td style="padding-left: 0;">Assets</td>
								<td></td>
								<td align="right"><span data-bind="text: asset"></span></td>
							</tr>
							<tr>
								<td style="padding-left: 0;">Liabilities</td>
								<td></td>
								<td align="right"><span data-bind="text: liability"></span></td>
							</tr>
							<tr>
								<td style="padding-left: 0;"><b>Equity</b></td>
								<td></td>
								<td align="right"><b data-bind="text: equity"></b></td>
							</tr>
						</table>
						
					</div>
				</div>
			</div>
			
		</div>
	</div>
</script>
<script id="journalReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>

					<!-- Search Taps -->
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">

											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
																		
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="loadImport" style="display:none;text-align: center;top:30px;position: absolute;width: 82%; height: 99.5%;background: rgba(142, 159, 167, 0.8);z-index: 9999;">
						<i class="fa fa-circle-o-notch fa-spin" style="font-size: 50px;color: #fff;position: absolute; top: 35%;left: 45%"></i>
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>JOURNAL ENTRY REPORTS</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid journal_block">
							<div class="span4" style="width: 16.66666667%;">
								<p>No. of Txn</p>
								<span data-format="n" data-bind="text: dataSource.total"></span>
							</div>
							<div class="span4" style="width: 41.66666667%;">
								<p>Total Dr. Balance</p>
								<span data-bind="text: dr"></span>
							</div>
							<div class="span4" style="width: 41.66666667%;">
								<p>Total Cr. Balance</p>
								<span data-bind="text: cr"></span>
							</div>
						</div>

						<table class="table table-borderless table-condensed">
				            <thead>
					            <tr>
					                <th>TYPE</th>
					                <th>DATE</th>
					                <th>TXN#</th>
					                <th>DESCRIPTION</th>
					                <th>ACCOUNT</th>                		                
					                <th class="right">DEBITS (Dr)</th>
					                <th class="right">CREDITS (Cr)</th>
					            </tr>
				            </thead> 
					        <tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="journalReport-template"			        		
					        		data-bind="source: dataSource"></tbody>			        
					    </table>
					</div>
		            <div data-role="pager"
		            	data-auto-bind="false" 
		            	data-bind="source: dataSource"></div>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="journalReport-template" type="text/x-kendo-tmpl">
	#var sumDr =0, sumCr = 0;#
	#for(var i=0; i<line.length; i++){#
		#sumDr += line[i].dr / rate;#
		#sumCr += line[i].cr / rate;#
		<tr>
			<td style="color: black;">
				#if(i==0){#
					<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=type#</a>
				#}#
			</td>		
			<td style="color: black;">
				#if(i==0){#
					#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#
				#}#
			</td>
			<td style="color: black;">
				#if(i==0){#
					<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>
				#}#
			</td>		
			<td style="color: black;">
				#=line[i].description#
			</td>
			<td style="color: black;">
				#=line[i].account#
			</td>			
			<td class="right" style="color: black;">
				#if(line[i].dr>0){#
					#=kendo.toString(line[i].dr / rate, "c2", banhji.locale)#
				#}#
			</td>
			<td class="right" style="color: black;">
				#if(line[i].cr>0){#
					#=kendo.toString(line[i].cr / rate, "c2", banhji.locale)#
				#}#
			</td>
	    </tr>    
    #}# 
    <tr>
    	<td style="color: black;">Total:</td>
    	<td></td>    	
    	<td></td>
    	<td></td>
    	<td></td>    	
    	<td class="right strong" style="border-top-color: black; color: black;">
    		#=kendo.toString(sumDr, "c2", banhji.locale)#
    	</td>
    	<td class="right strong" style="border-top-color: black; color: black;">
    		#=kendo.toString(sumCr, "c2", banhji.locale)#
    	</td>	
    </tr>  
</script>
<script id="journalReportBySegment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>

					<!-- Search Taps -->
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">

											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
																		
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="loadImport" style="display:none;text-align: center;top:30px;position: absolute;width: 82%; height: 99.5%;background: rgba(142, 159, 167, 0.8);z-index: 9999;">
						<i class="fa fa-circle-o-notch fa-spin" style="font-size: 50px;color: #fff;position: absolute; top: 35%;left: 45%"></i>
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>JOURNAL ENTRY REPORTS WITH SEGMENT</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid journal_block">
							<div class="span4" style="width: 16.66666667%;">
								<p>No. of Txn</p>
								<span data-format="n" data-bind="text: dataSource.total"></span>
							</div>
							<div class="span4" style="width: 41.66666667%;">
								<p>Total Dr. Balance</p>
								<span data-bind="text: dr"></span>
							</div>
							<div class="span4" style="width: 41.66666667%;">
								<p>Total Cr. Balance</p>
								<span data-bind="text: cr"></span>
							</div>
						</div>

						<table class="table table-borderless table-condensed">
				            <thead>
					            <tr>
					                <th>TYPE</th>
					                <th>DATE</th>
					                <th>TXN#</th>
					                <th>DESCRIPTION</th>
					                <th>SEGMENT</th>
					                <th>ACCOUNT</th>                		                
					                <th class="right">DEBITS (Dr)</th>
					                <th class="right">CREDITS (Cr)</th>		                
					            </tr>
				            </thead> 
					        <tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="journalReportBySegment-template"			        		
					        		data-bind="source: dataSource"></tbody>			        
					    </table>
					</div>
		            <div data-role="pager"
		            	data-auto-bind="false" 
		            	data-bind="source: dataSource"></div>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="journalReportBySegment-template" type="text/x-kendo-tmpl">
	#var sumDr =0, sumCr = 0;#
	#for(var i=0; i<line.length; i++){#
		#sumDr += line[i].dr / rate;#
		#sumCr += line[i].cr / rate;#
		<tr>
			<td style="color: black;">
				#if(i==0){#
					<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=type#</a>
				#}#
			</td>		
			<td style="color: black;">
				#if(i==0){#
					#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#
				#}#
			</td>
			<td style="color: black;">
				#if(i==0){#
					<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>
				#}#
			</td>		
			<td style="color: black;">
				#=line[i].description#
			</td>
			<td style="color: black;">
				#for(var j=0; j<line[i].segments.length; j++){#
					#if(j>0){#
						:
					#}#
					#=line[i].segments[j].code# #=line[i].segments[j].name#					
				#}#
			</td>
			<td style="color: black;">
				#=line[i].account#
			</td>			
			<td class="right" style="color: black;">
				#if(line[i].dr>0){#
					#=kendo.toString(line[i].dr / rate, "c2", banhji.locale)#
				#}#
			</td>
			<td class="right" style="color: black;">
				#if(line[i].cr>0){#
					#=kendo.toString(line[i].cr / rate, "c2", banhji.locale)#
				#}#
			</td> 			
	    </tr>    
    #}# 
    <tr>
    	<td style="color: black;">Total:</td>
    	<td></td>    	
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>    	
    	<td class="right strong" style="border-top-color: black; color: black;">
    		#=kendo.toString(sumDr, "c2", banhji.locale)#
    	</td>
    	<td class="right strong" style="border-top-color: black; color: black;">
    		#=kendo.toString(sumCr, "c2", banhji.locale)#
    	</td>  	
    </tr>  
</script>
<script id="generalLedger" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>										
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

										<!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

							        	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 0 !important; width: 96%;">
									            		<span data-bind="text: lang.lang.account"></span>
														<input id="ddlAccount" name="ddlAccount" 
																data-role="dropdownlist"
									              				data-header-template="account-header-tmpl"
									              				data-template="account-list-tmpl"
									              				data-value-primitive="true"
																data-text-field="name" 
									              				data-value-field="id"
									              				data-bind="value: obj.account_id,
									              							source: accountDS"
									              				data-option-label="Select Account..."
									              				required data-required-msg="required" 
									              				style="width: 100%" />
													</td>
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
												<tr>
													<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.segment"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="segment-header-tmpl"
															   data-item-template="segment-list-tmpl"
															   data-value-field="id"
															   data-text-field="code"
															   data-bind="value: obj.segments, 
															   			source: segmentItemDS,
															   			events:{ change: segmentChanges }"
															   data-placeholder="Select Segments.."
															   style="width: 100%" /></select>
													</td>
													<td></td>
												</tr>
											</table>
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-3">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>

								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
			    	<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2 span data-bind="text: lang.lang.general_ledger"></h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<table class="table table-borderless table-condensed">
							<thead>
								<tr>
									<th><span data-bind="text: lang.lang.type"></span></th>
									<th style="width: 10%;"><span data-bind="text: lang.lang.date"></span></th>
									<th style="width: 15%;"><span data-bind="text: lang.lang.reference_no"></span></th>
									<th><span data-bind="text: lang.lang.description"></span></th>
									<th class="right"><span data-bind="text: lang.lang.amount"></span></th>
									<th class="right"><span data-bind="text: lang.lang.balance"></span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="generalLedger-template"			        		
					        		data-bind="source: dataSource"></tbody>
					       	<tfoot>
					       		<tr style="font-weight: bold; font-size: large;">
					       			<td colspan="4">TOTAL</td>
					       			<td align="right" data-bind="text: totalAmount"></td>
					       			<td align="right" data-bind="text: totalBalance"></td>
					       		</tr>
					       	</tfoot>
						</table>				  
					</div>
				</div>
			</div>						
		</div>
	</div>
</script>
<script id="generalLedger-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="font-weight: bold;">#: number # #: name #</td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td class="right strong" style="color: black;">
    		#=kendo.toString(balance_forward, "c", banhji.locale)#
    	</td>
	</tr>
	#var balance = balance_forward;#
	#for(var i=0; i<line.length; i++){#
	#balance += line[i].amount;#
	<tr>
		<td style="color: black;">
			&nbsp;&nbsp; #=line[i].type#
		</td>		
		<td style="color: black;">
			#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#
		</td>
		<td style="color: black;">
			<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a>
		</td>		
		<td style="color: black;">
			#=line[i].memo#
		</td>
		<td class="right" style="color: black;">
			#=kendo.toString(line[i].amount, "c", banhji.locale)#
		</td>
		<td class="right" style="color: black;">
			#=kendo.toString(balance, "c", banhji.locale)#
		</td> 			
    </tr>    
    #}# 
    <tr>
    	<td style="font-weight: bold; color: black;">Total #: number # #: name #</td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(balance, "c", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="6">&nbsp;</td>
    </tr>  
</script>
<script id="transactionListDate" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>								        
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		<span data-bind="text: lang.lang.print_as_pdf"></span>
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		<span data-bind="text: lang.lang.export_to_excel"></span>
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>TRANSACTION LIST BY DATE</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>TXN #</th>
							<th>TXN Description</th>							
							<th>Name</th>
							<th><i class="icon-paper-clip"></i></th>
						</tr>
						<tr>
							<td>10100 Cash & Cash Equivalent</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td><i class="icon-paper-clip"></i></td>				
						</tr>
						<tr>					
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>												
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>					
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						
						<tr>
							<th colspan="3">Total</th>
							<th colspan="3">(600.00)</th>
						</tr>
					</table>
				</div>
			</div>						
		</div>
	</div>
</script>
<script id="recentTransactionsList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab" style="overflow: hidden;">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons filter" href="#tab-1" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<div class="row-fluid">								        		
								            	<div class="span3" style="padding-bottom: 20px;">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Grouped By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->
								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->
						
					</div>
			    	
					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>RECENT TRANSACTION LIST</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Ordered By</th>
							<th>Last Recored Date</th>
							<th>Status</th>
							<th>TXN #</th>
							<th>TXN Description</th>							
							<th>Name</th>
							<th>Amount</th>
							<th><i class="icon-paper-clip"></i></th>
						</tr>
						<tr>
							<td>10100 Cash </td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>					
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td> 
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>												
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>					
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>				
						</tr>
						
						<tr>
							<th colspan="5">Total</th>
							<th colspan="4">(600.00)</th>
						</tr>
					</table>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="trialBalance" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryCustomer">

			    	<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        <!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
					
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>TRIAL BALANCE</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid journal_block1">
							<div class="span2">
								<p>
									Account
								</p>
								<span data-bind="text: dataSource.total"></span>
							</div>
							<div class="span5">
								<p>
									Total Dr. Balance
								</p>
								<span data-bind="text: dr"></span>
							</div>
							<div class="span5">
								<p>
									Total Cr. Balance
								</p>
								<span data-bind="text: cr"></span>
							</div>
						</div>

						<table class="table table-borderless table-condensed">
							<thead>
					            <tr>
					                <th>CODE</th>
					                <th>NAME</th>
					                <th>TYPE</th>
					                <th class="right">DEBIT</th>
					                <th class="right">CREDIT</th>
					            </tr>
					        </thead>
					        <tbody data-template="trialBalance-template"
					        		data-auto-bind="false" 
					        		data-bind="source: dataSource"></tbody>
					        <tfoot data-template="trialBalance-footer-template" 
					        		data-bind="source: this"></tfoot>
						</table>
					</div>				  
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="trialBalance-template" type="text/x-kendo-tmpl">	
	<tr>
		<td style="color: black;">
			#=number#
		</td>		
		<td style="color: black;">
			#=name#
		</td>
		<td style="color: black;">
			#=type#
		</td>						
		<td class="right" style="color: black;">
			#if(dr!==0){#
				#=kendo.toString(dr, "c", banhji.locale)#
			#}#
		</td>
		<td class="right" style="color: black;">
			#if(cr!==0){#
				#=kendo.toString(cr, "c", banhji.locale)#
			#}#
		</td>		
    </tr>    
</script>
<script id="trialBalance-footer-template" type="text/x-kendo-template">
    <tr class="bg-total">
        <td>TOTAL:</td>        
        <td></td>
        <td></td>        
        <td class="right">
            #: totalDr() #
        </td>
        <td class="right">
            #: totalCr() #
        </td>
    </tr>
</script>
<script id="chartOfAccount" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">						
				<div id="example" class="k-content saleSummaryCustomer">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					<br>					

					<div class="block-title" style="overflow: initial;">
						<h2>Chart of Account</h2>
					</div>

					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center">NUMBER</th>
				                <th class="center">NAME</th>
				                <th class="center">TYPE</th>			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview"
				        		data-auto-bind="false"
				        		data-template="chartOfAccount-template"			        		
				        		data-bind="source: dataSource"></tbody> 
				    </table>
		            <div data-role="pager"
		            	data-auto-bind="false" 
		            	data-bind="source: dataSource"></div>	

		            
				</div>
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification" style="display: none;"></div>
					<div class="row">
						<div class="span12" align="right">
							<span class="btn btn-icon btn-primary glyphicons download" data-bind="click: ExportExcel" style="width: 150px;"><i></i> <span >Export Excel</span></span>
									
						</div>
					</div>
				</div>
			</div>						
		</div>
	</div>
</script>
<script id="chartOfAccount-template" type="text/x-kendo-tmpl">	
	<tr>
		<td style="color: black;">
			#=number#
		</td>		
		<td style="color: black;">
			#=name#
		</td>
		<td style="color: black;">
			#=account_type_name#
		</td>				
    </tr>    
</script>
<script id="statementProfitLoss" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryCustomer">

					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

										<!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

							        	<!-- PRINT / EXPORT -->
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.print"></span></span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		<span data-bind="text: lang.lang.print_as_pdf"></span>
								        	</span-->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		<span data-bind="text: lang.lang.export_to_excel"></span>
								        	</span>
							        	</div>

								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Statement of Profit or Loss</h2>
							<p data-bind="text: displayDate"></p>
						</div>
				    
						<table class="table table-borderless table-condensed" style="width: 70%; margin:0 auto;">
							<tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="statementProfitLoss-template"			        		
					        		data-bind="source: dataSource"></tbody>
						</table>

						<br><br>
					</div>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementProfitLoss-template" type="text/x-kendo-tmpl">
	#if(id>0){#
		<tr>
			<td colspan="3" style="font-weight: bold; color: black;">#: type #</td>
		</tr>
		#var total = 0;#
		#for(var i=0; i<line.length; i++){#
		#total += line[i].amount;#
		<tr>
			<td style="color: black;">
				&nbsp;&nbsp; #=line[i].number# - #=line[i].name#
			</td>
			<td class="right" style="color: black;">
				#=kendo.toString(line[i].amount, "c", banhji.locale)#
			</td>
			<td style="width:15%;" ></td> 			
	    </tr>    
	    #}# 
	    <tr>
	    	<td style="font-weight: bold; color: black;">Total #: type #</td>
	    	<td></td>	    	
	    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
	    		#=kendo.toString(total, "c", banhji.locale)#
	    	</td>
	    </tr>	    
	#}else{#
		<tr>
			<td colspan="2" style="font-weight: bold; color: black;">#: name #</td>
			<td class="right" style="font-weight: bold; color: black;">#: kendo.toString(amount, "c", banhji.locale) #</td>
		</tr>
	#}# 
</script>
<script id="statementProfitLossBySegment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryCustomer">

					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>										
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

										<!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

							        	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 0 !important; width: 96%;">
									            		<span data-bind="text: lang.lang.account"></span>
														<input id="ddlAccount" name="ddlAccount" 
																data-role="dropdownlist"
									              				data-header-template="account-header-tmpl"
									              				data-template="account-list-tmpl"
									              				data-value-primitive="true"
																data-text-field="name" 
									              				data-value-field="id"
									              				data-bind="value: obj.account_id,
									              							source: accountDS"
									              				data-option-label="Select Account..."
									              				required data-required-msg="required" 
									              				style="width: 100%" />
													</td>
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
												<tr>
													<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.segment"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="segment-header-tmpl"
															   data-item-template="segment-list-tmpl"
															   data-value-field="id"
															   data-text-field="code"
															   data-bind="value: obj.segments, 
															   			source: segmentItemDS,
															   			events:{ change: segmentChanges }"
															   data-placeholder="Select Segments.."
															   style="width: 100%" /></select>
													</td>
													<td></td>
												</tr>
											</table>
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-3">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>

								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					
					<div id="invFormContent" class="hello">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Statement of Profit or Loss by Segment</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div id="myTable">
						    <div class="wrapper">
						        <table>
						            <tr>
						                <th class="largerFont">Account Name</th>						                
						                <td class="last-td pos">Amount</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						                <td>Segment</td>
						            </tr>
						            <tr>
						                <th>TODAY</th>						                
						                <td class="last-td">80</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>20-Jan-2014</th>						                
						                <td class="last-td">95</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>19-Jan-2014</th>						                
						                <td class="last-td">60</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>18-Jan-2014</th>						                
						                <td class="last-td">49</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>17-Jan-2014</th>						                
						                <td class="last-td">91</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>16-Jan-2014</th>						                
						                <td class="last-td">70</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>15-Jan-2014</th>						                
						                <td class="last-td">21</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						            <tr>
						                <th>14-Jan-2014</th>						                
						                <td class="last-td">21</td>
						                <td >1</td>
						                <td >2</td>
						                <td >3</td>
						                <td >4</td>
						                <td >5</td>
						                <td >6</td>
						                <td >7</td>
						                <td >8</td>
						                <td >9</td>
						                <td >10</td>
						                <td >11</td>
						                <td >12</td>
						                <td >13</td>
						                <td >14</td>
						                <td >15</td>
						                <td >16</td>
						                <td >17</td>
						                <td >18</td>
						                <td >19</td>
						                <td >20</td>
						                <td >21</td>
						                <td >22</td>
						                <td >23</td>
						                <td >24</td>
						                <td >25</td>
						                <td >26</td>
						                <td >27</td>
						                <td >28</td>
						                <td >29</td>
						                <td >30</td>
						                <td >31</td>
						                <td >32</td>
						                <td >33</td>
						                <td >34</td>
						                <td >35</td>
						                <td >36</td>
						                <td >37</td>
						                <td >38</td>
						                <td >39</td>
						                <td >40</td>
						                <td >41</td>
						            </tr>
						        </table>
						    </div>
						</div>
						
					</div>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<!-- <script id="statementProfitLossBySegment-template" type="text/x-kendo-tmpl">
	#if(id>0){#
		<tr>
			<td colspan="3" style="font-weight: bold; color: black;">#: type #</td>
		</tr>
		#var total = 0;#
		#for(var i=0; i<line.length; i++){#
		#total += line[i].amount;#
		<tr>
			<td style="color: black;">
				&nbsp;&nbsp; #=line[i].number# - #=line[i].name#
			</td>
			<td class="right" style="color: black;">
				#=kendo.toString(line[i].amount, "c", banhji.locale)#
			</td>
			<td style="width:15%;" ></td> 			
	    </tr>    
	    #}# 
	    <tr>
	    	<td style="font-weight: bold; color: black;">Total #: type #</td>
	    	<td></td>	    	
	    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
	    		#=kendo.toString(total, "c", banhji.locale)#
	    	</td>
	    </tr>	    
	#}else{#
		<tr>
			<td colspan="2" style="font-weight: bold; color: black;">#: name #</td>
			<td class="right" style="font-weight: bold; color: black;">#: kendo.toString(amount, "c", banhji.locale) #</td>
		</tr>
		<tr>
			<td></td>
			<td></td>
		</tr>
	#}# 
</script> -->
<script id="statementFinancialPosition" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryCustomer">
					
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>

					<br>
					<br>

					<div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->						       

								       
								    </div>
								</div>
							</div>
						</div>
					
					</div>
					<div id="invFormContent" class="row">

						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Statement of Financial Position</h2>
							<p data-bind="text: displayDate"></p>
						</div>
				    	
						<table class="table table-borderless table-condensed" style="width: 70%; margin: 0 auto;">
							<thead>
								<tr>
									<th style="background: none; color: #333;">ASSETS</th>
									<th style="background: none;" width="15%"></th>
									<th style="background: none;" width="15%"></th>
								</tr>
							</thead>
							<tbody data-role="listview" 
								data-template="statementFinancialPosition-template"
								data-auto-bind="false"
								data-bind="source: dataSource"></tbody>
							<tfoot>
								<tr>
									<td style="font-weight: bold; font-size: large; background: #1E4E78; color: #fff;">TOTAL ASSETS</td>
									<td style="background: #1E4E78;" width="15%"></td>
									<td width="15%" style="font-weight: bold; font-size: large; color: #fff; background: #1E4E78;" align="right">
										<span data-bind="text: totalAsset"></span>
									</td>
								</tr>
							</tfoot>
						</table>

						<br>

						<table class="table table-borderless table-condensed" style="width: 70%; margin: 0 auto;">
							<thead>
								<tr>
									<th style="background: none; color: #333;">LIABILITIES</th>
									<th style="background: none;" width="15%"></th>
									<th style="background: none;" width="15%"></th>
								</tr>
							</thead>
							<tbody data-role="listview"
								data-template="statementFinancialPosition-template"
								data-auto-bind="false"
								data-bind="source: liabilityDS"></tbody>
							<tfoot>
								<tr>
									<td style="font-weight: bold; font-size: large;">TOTAL LIABILITIES</td>
									<td width="15%"></td>
									<td width="15%" style="font-weight: bold; font-size: large;" align="right">
										<span data-bind="text: totalLiability"></span>
									</td>
								</tr>
							</tfoot>
						</table>

						<br>

						<table class="table table-borderless table-condensed" style="width: 70%; margin: 0 auto;">
							<thead>
								<tr>
									<th style="background: none; color: #333;">EQUITY</th>
									<th style="background: none;" width="15%"></th>
									<th style="background: none;" width="15%"></th>
								</tr>
							</thead>
							<tbody data-role="listview"
								data-template="statementFinancialPosition-template"
								data-auto-bind="false"
								data-bind="source: equityDS"></tbody>
							<tfoot>
								<tr>
									<td style="font-weight: bold; font-size: large;">TOTAL EQUITY</td>
									<td width="15%"></td>
									<td width="15%" style="font-weight: bold; font-size: large;" align="right">
										<span data-bind="text: totalEquity"></span>
									</td>
								</tr>
							</tfoot>
						</table>

						<br>

						<table class="table table-borderless table-condensed" style="width: 70%; margin: 0 auto;">
							<thead>
								<tr>
									<th style="font-weight: bold; font-size: large;">TOTAL LIABILITY & EQUITY</th>
									<th width="15%" data-format="n" data-bind="text: totalLiabilityEquity" style="font-weight: bold; font-size: large;" align="right"></th>
								</tr>
							</thead>
						</table>

			        </div>	
			    </div>	        
			</div>							
		</div>
	</div>
</script>
<script id="statementFinancialPosition-template" type="text/x-kendo-template">
    <tr>
        <td style="font-weight: bold; font-style: italic;">
            #: name #
        </td> 
        <td></td>
        <td ></td>    
    </tr>
    #var total = 0;#
	#for(var i=0; i<typeLine.length; i++){#
	    <tr>
	        <td style="font-weight: bold;">
	            &nbsp;&nbsp; #:typeLine[i].type#
	        </td> 
	        <td></td>
	        <td ></td>    
	    </tr>    
	    #var totalType = 0;#
		#for(var j=0; j<typeLine[i].line.length; j++){#
			#total += typeLine[i].line[j].amount;#
			#totalType += typeLine[i].line[j].amount;#
		    <tr>
		        <td>
		        	&nbsp;&nbsp;&nbsp;&nbsp; #: typeLine[i].line[j].number # #: typeLine[i].line[j].name #
		        </td>
		        <td align="right">
		            &nbsp;&nbsp;&nbsp;&nbsp; #: kendo.toString(typeLine[i].line[j].amount, "c", banhji.locale) #
		        </td>
		        <td ></td>
		    </tr>
		#}#
		<tr>
	        <td style="font-weight: bold;">
	            &nbsp;&nbsp; Total #:typeLine[i].type#
	        </td>
	        <td style="font-weight: bold; border-top: 1px solid black !important;" align="right">
	            #=kendo.toString(totalType, "c", banhji.locale)#
	        </td>
	        <td ></td>
	    </tr>
	    <tr>
	    	<td colspan="3">&nbsp;</td>
	    </tr>
	#}#
	<tr>
        <td style="font-weight: bold; font-style: italic;">
            Total #: name #
        </td>
        <td></td>
        <td style="font-weight: bold; border-top: 1px solid black !important;" align="right">
            #=kendo.toString(total, "c", banhji.locale)#
        </td>
    </tr>
</script>
<script id="statementProfitLossComparison" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Profit or Loss Comparison</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">2016</th>
							<th class="pull-right">2015</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td class="right">KHR</td>
							<td class="right">KHR</td>
						</tr>
						<tr>
							<td>Revenue</td>
							<td>10</td>
							<td class="right">680,000</td>
							<td class="right">525,000</td>
						</tr>
						<tr>
							<td>Cost</td>
							<td></td>
							<td class="right">(400,000)</td>
							<td class="right">(300,000)</td>
						</tr>
						<tr>
							<td class="bold">Gross Profit</td>
							<td></td>
							<td class="right bold-border">280,000</td>
							<td class="right bold-border">225,000</td>
						</tr>
						<tr>
							<td>Distribution costs</td>
							<td></td>
							<td class="right">(8,580)</td>
							<td class="right">(5,830)</td>
						</tr>
						<tr>
							<td>Administrative Expense</td>
							<td></td>
							<td class="right">(50,000)</td>
							<td class="right">(40,000)</td>
						</tr>
						<tr>
							<td>Finance Costs</td>
							<td><a href="">1</a></td>
							<td class="right">(22,300)</td>
							<td class="right">(19,700)</td>
						</tr>
						<tr>
							<td>Share of profit of associate</td>
							<td><a href="">1</a></td>
							<td class="right">42,100</td>
							<td class="right">38,560</td>
						</tr>
						<tr>
							<td class="bold">Profit before Tax</td>
							<td><a href="">1</a></td>
							<td class="right bold-border">241,220</td>
							<td class="right bold-border">198,030</td>
						</tr>
						<tr>
							<td>Income tax expense</td>
							<td><a href="">1</a></td>
							<td class="right">(60,305)</td>
							<td class="right">(47,508)</td>
						</tr>
						<tr>
							<td class="bold">Profit for the year from continuing operations</td>
							<td></td>
							<td class="right bold-border">180,915</td>
							<td class="right bold-border">150,522</td>
						</tr>
						<tr>
							<td>Loss for the year discoutinued operations</td>
							<td><a href="">1</a></td>
							<td class="right">(24,780)</td>
							<td class="right">(2,000)</td>
						</tr>
						<tr>
							<td class="bold">Profit for the year</td>
							<td></td>
							<td class="right bold-border border-bottom">156,135</td>
							<td class="right bold-border border-bottom">148,522</td>
						</tr>
					</table>

		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementFinancialPositionComparison" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Financial Position Comparison</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    	
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">2015</th>
							<th class="right">2016</th>
						</tr>
						<tr>
							<td class="bold">ASSET</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Non-Current Asset</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Properties, Plants, & Equipment</td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">138,923,361</td>
							<td class="right bold-border border-bottom">138,923,361</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Freehold Land</td>
							<td><a href="">1</a></td>
							<td class="right">123,670,644</td>
							<td class="right">123,670,644</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Building & Structure</td>
							<td><a href="">1</a></td>
							<td class="right">9,848,345</td>
							<td class="right">9,848,345</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Electrical Systems, Machineries and Improvement</td>
							<td><a href="">1</a></td>
							<td class="right">838,559</td>
							<td class="right">838,559</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Automobiles & Vehicles</td>
							<td><a href="">1</a></td>
							<td class="right">123,670,644</td>
							<td class="right">123,670,644</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Furniture, Fixtures & Fittings</td>
							<td><a href="">1</a></td>
							<td class="right">663,429</td>
							<td class="right">663,429</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Computer and Related Equipment</td>
							<td><a href="">1</a></td>
							<td class="right">286,688</td>
							<td class="right">286,688</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Equipments, Electricles Device & Tools</td>
							<td><a href="">1</a></td>
							<td class="right">779,835</td>
							<td class="right">779,835</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Heavy Machinaries</td>
							<td><a href="">1</a></td>
							<td class="right">341505</td>
							<td class="right">341505</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Completed Investment Properties</td>
							<td><a href="">1</a></td>
							<td class="right">3,701,848</td>
							<td class="right">3,701,848</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">I​nvestment Properties under-construction</td>
							<td><a href="">1</a></td>
							<td class="right">10,087,257</td>
							<td class="right">10,087,257</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Subsidiaries</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Non-Current Asset</i></td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">152,712,466</td>
							<td class="right bold-border border-bottom">152,712,466</td>
						</tr>
						<tr>
							<td class="bold">Current Assets</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Inventory</td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">389,142,635</td>
							<td class="right bold-border border-bottom">389,142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Raw Material</td>
							<td><a href="">1</a></td>
							<td class="right">175,561,951</td>
							<td class="right">175,561,951</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Working-in-progress</td>
							<td><a href="">1</a></td>
							<td class="right">80,575,454</td>
							<td class="right">80,575,454</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Finished goods</td>
							<td><a href="">1</a></td>
							<td class="right">205,523,139</td>
							<td class="right">205,523,139</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Operating Equipment</td>
							<td><a href="">1</a></td>
							<td class="right">142,635</td>
							<td class="right">142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Trade Receivables</td>
							<td><a href="">1</a></td>
							<td class="right">142,635</td>
							<td class="right">142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Properties Sale Receivable</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Installment Payment Scheme</td>
							<<td><a href="">1</a></td>
							<td class="right">205,523,139</td>
							<td class="right">205,523,139</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Mortgage Payment Scheme</td>
							<td><a href="">1</a></td>
							<td class="right">9,003,967</td>
							<td class="right">9,003,967</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">AR from Related Parties</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Other receivables</td>
							<td><a href="">1</a></td>
							<td class="right">34,859</td>
							<td class="right">34,859</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Interest Receivable</td>
							<td><a href="">1</a></td>
							<td class="right">138,835</td>
							<td class="right">138,835</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Prepayment & Deposit</td>
							<td><a href="">1</a></td>
							<td class="right">3,741,185</td>
							<td class="right">3,741,185</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Cash and Cash Equivalent</td>
							<td><a href="">1</a></td>
							<td class="right">7,359,195</td>
							<td class="right">7,359,195</td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Current Assets</i></td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">419,215,778</td>
							<td class="right bold-border border-bottom">419,215,778</td>
						</tr>
						<tr>
							<td class="bold">TOTAL ASSETS</td>
							<td></td>
							<td class="right bold under-bottom">571,928,244</td>
							<td class="right bold under-bottom">571,928,244</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">EQUITY & LIABILITIES</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Shareholders Equity</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Share Capital</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Retained Earning</td>
							<td></td>
							<td ></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Shareholders Equity</i></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Non-Current Liabilities</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest Bearing Loans and Borrowing</td>
							<td><a href="">10</a></td>
							<td class="right">36,445,536</td>
							<td class="right">36,445,536</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Long term Loan based on Customer Portfolio</td>
							<td><a href="">10</a></td>
							<td class="right">60,334,222</td>
							<td class="right">60,334,222</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Long term loan from Related Parties</td>
							<td><a href="">11</a></td>
							<td class="right">9,429,028</td>
							<td class="right">9,429,028</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Land Purchase Payable</td>
							<td><a href="">12</a></td>
							<td class="right">150,595,772</td>
							<td class="right">150,595,772</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Deposit for Sale of Properties inventory</td>
							<td><a href="">13</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Installment Payment Scheme</td>
							<td><a href=""></a></td>
							<td class="right">95,979,147</td>
							<td class="right">95,979,147</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Mortgage Payment Scheme</td>
							<td><a href=""></a></td>
							<td class="right">76,736,253</td>
							<td class="right">76,736,253</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Other Deposit</td>
							<td><a href=""></a></td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Non-Current Liabilities</i></td>
							<td><a href=""></a></td>
							<td class="right bold">429,519,958</td>
							<td class="right bold">429,519,958</td>
						</tr>
						<tr>
							<td>Current Liabilities</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Trade Payable</td>
							<td><a href="">14</a></td>
							<td class="right">5,720,691</td>
							<td class="right">5,720,691</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Short term Bank Borrowing (OD)</td>
							<td><a href="">9</a></td>
							<td class="right">7,645,991</td>
							<td class="right">7,645,991</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Current Customer Deposit & Prepayment</td>
							<td><a href="">13</a></td>
							<td class="right">11,837,636</td>
							<td class="right">11,837,636</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Accrued Expenses (including bonus)</td>
							<td><a href="">15</a></td>
							<td class="right">280,607</td>
							<td class="right">280,607</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Salary Payable</td>
							<td><a href="">16</a></td>
							<td class="right">1,074,153</td>
							<td class="right">1,074,153</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest Payable</td>
							<td><a href=""></a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">General Provision</td>
							<td><a href=""></a></td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Current Tax Payable</td>
							<td><a href=""></a></td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Current Liabilities</i></td>
							<td><a href=""></a></td>
							<td class="right bold-border border-bottom">126,558,805</td>
							<td class="right bold-border border-bottom">126,558,805</td>
						</tr>
						<tr>
							<td class="bold">Total Liabilities</td>
							<td><a href=""></a></td>
							<td class="right bold border-bottom">556,078,762</td>
							<td class="right bold border-bottom">556,078,762</td>
						</tr>
						<tr>
							<td class="bold fontBig">Total Liabilities</td>
							<td><a href=""></a></td>
							<td class="right bold under-bottom">556,078,762</td>
							<td class="right bold under-bottom">556,078,762</td>
						</tr>
					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementCashFlow" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Cash Flow</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">12/31/2016</th>
						</tr>
						<tr>
							<td class="bold fontBig">OPERATING ACTIVITIES</td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td>Profit before tax</td>
							<td class="right"></td>
							<td class="right">46,471</td>
						</tr>
						<tr>
							<td class="bold">Adjustment to reconcile profit before tax to net cash flows</td>
							<td></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Depreciation of property, plant, and equipment</td>
							<td></td>
							<td class="right">36,049</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Amortization and impairment of intangible assets</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Allowance/ (Reversal of allowance)</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Gain from bargain purchase</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Gain on disposal of property, plant and equipment</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Gain on disposal of investment properties</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Finance Costs</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest income</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="bold">Operating profit before working capital changes</td>
							<td></td>
							<td class="right bold-border border-bottom">82,520</td>
						</tr>
						<tr>
							<td class="bold">Changes in working capital</td>
							<td></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (Increase) in receivables</td>
							<td></td>
							<td class="center">(17,573)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (Increase) in prepayment and accrued income</td>
							<td></td>
							<td class="center">(7,095)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (increase) in development properties for sale</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (Increase) in inventory</td>
							<td></td>
							<td class="right">(16,176)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">(Decrease)/ Increase in trade, other payables and accruals</td>
							<td></td>
							<td class="center">186,183</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Movement in customer deposits</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="bold">Cash generated from/ (used in) operations</td>
							<td></td>
							<td class="right bold">145,338</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Income tax paid</td>
							<td></td>
							<td class="right bold">1,370</td>
						</tr>
						<tr>
							<td class="bold bold-border border-bottom">Net cash generated from/ (used in) operating activities</td>
							<td class="bold-border border-bottom"></td>
							<td class="right bold-border border-bottom">226,488</td>
						</tr>
						<tr>
							<td class="bold fontBig">INVESTING ACTIVITIES</td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Capital injection</td>
							<td></td>
							<td class="center">472,472</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Purchase of property, plant and equipment</td>
							<td></td>
							<td class="center">(217,210)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from disposal of investment property</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from disposal of property, plant, and equipment</td>
							<td></td>
							<td class="center">18,777</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Property_Land</td>
							<td></td>
							<td class="center">(55,000)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Property_Building</td>
							<td></td>
							<td class="center">(2,000)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in subsidiaries</td>
							<td></td>
							<td class="center">(203,000)</td>
						</tr>
						<tr>
							<td class="bold bold-border border-bottom">Net cash generated from/ (used in) operating activities</td>
							<td class="bold-border border-bottom"></td>
							<td class="right bold-border border-bottom">14,038</td>
						</tr>
						<tr>
							<td class="bold fontBig">FINANCING ACTIVITIES</td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from borrowing</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Repayment of borrowing</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from issue of share capital</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Dividends paid to share holders</td>
							<td></td>
							<td class="center">(331,061)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest received</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest paid</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="bold-border">Net cash generated from/ (used in)financing activities</td>
							<td class="right bold-border"></td>
							<td class="right bold-border">(331,061)</td>
						</tr>
						<tr>
							<td class="bold-border">Net increase in cash and cash equivalents</td>
							<td class="right bold-border"></td>
							<td class="right bold-border">(90,534)</td>
						</tr>
						<tr>
							<td class="bold">Cash and cash equivalents at the beginning of the period</td>
							<td class="right"></td>
							<td class="right">690,892</td>
						</tr>
						<tr>
							<td class="bold-border border-bottom">Cash and cash equivalents at 31 December 2016</td>
							<td class="right bold-border border-bottom"></td>
							<td class="right bold-border border-bottom">600,358</td>
						</tr>
						<tr>
							<td class=""></td>
							<td class="right"></td>
							<td class="right">600,358</td>
						</tr>

					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementChangesEquity" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement Changes Equity</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th class="center">Share Retained</th>
							<th class="center">Capital Earning</th>
							<th class="center">Total</th>
						</tr>
						<tr>
							<td></td>
							<td class="center bold">USD</td>
							<td class="center bold">USD</td>
							<td class="center bold">USD</td>
						</tr>
						<tr>
							<td>Balance as at 01 January 2015</td>
							<td class="right">1,000,000</td>
							<td class="right">84,202</td>
							<td class="right">1,084,202</td>
						</tr>
						<tr>
							<td>Capital injection</td>
							<td class="right">1,000,000</td>
							<td class="right">-</td>
							<td class="right">1,000,000</td>
						</tr>
						<tr>
							<td>Net profit during the year of 2015</td>
							<td class="right bigBorderbottom">-</td>
							<td class="right bigBorderbottom">80,481</td>
							<td class="right bigBorderbottom">80,481</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Balance as at 31 December 2015</td>
							<td class="right bold bigBordertop under-bottom">2,000,000</td>
							<td class="right bold bigBordertop under-bottom">164,683</td>
							<td class="right bold bigBordertop under-bottom">2,164,683</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Balance as at 01 January 2016</td>
							<td class="right">2,000,000</td>
							<td class="right">164,683</td>
							<td class="right">2,164,683</td>
						</tr>
						<tr>
							<td>Capital injection</td>
							<td class="right">-</td>
							<td class="right"></td>
							<td class="right">0</td>
						</tr>
						<tr>
							<td>Realized profit inter-company sale</td>
							<td class="right"></td>
							<td class="right">0</td>
							<td class="right"></td>
						</tr>
						<tr>
							<td>Net profit during the year of 2016</td>
							<td class="right bigBorderbottom">-</td>
							<td class="right bigBorderbottom">-327,700</td>
							<td class="right bigBorderbottom">-327,700</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Balance as at 31 December 2016</td>
							<td class="right bold bigBordertop under-bottom">2,000,000</td>
							<td class="right bold bigBordertop under-bottom">-163,017</td>
							<td class="right bold bigBordertop under-bottom">1,836,983</td>
						</tr>
					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="recurringJournalList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">				
						
				    <span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>								        
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>


					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Recurring Journal List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<br>			   
				   
					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 1%;">No.</th>
				                <th style="width: 30%">NAME</th>
				                <th class="center" style="width: 10%">TYPE</th>
				                <th class="center">START DATE</th>
				                <th class="center">FREQUENCY</th>
				                <th></th>			                			                
				            </tr> 
				        </thead>
				        <tbody></tbody>			        
				    </table>											

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="auditTrialReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>								        
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Audit Trial Report</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>N Edit</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>N Delete</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>N Adjustment</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Account</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Date</th>
							<th>Type</th>
							<th>Last modified by</th>
							<th>Modified by</th>
							<th>Name</th>							
							<th>Description</th>
							<th>Account</th>
							<th>Dr</th>
							<th>Cr</th>
							<th>Status</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>


<script id="accountingSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2 data-bind="text: lang.lang.general_accounting_setting"></h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <!-- <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.financial_report"></span></span></a>
	            </li> -->
	           <!--  <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong">Chart of Accounts Condition</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Segments Setting</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Transaction Item </span></a>
	            </li>
	            <li><a href="#tab5-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Tax Setting </span></a>
	            </li>	 -->
	            <li class="active"><a href="#tab1-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.prefix_setting"></span> </span></a>
	            </li>	                        
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- Tab Branch content -->
	            <!-- <div class="tab-pane active" id="tab1-1">
	            	<p>The selected Financial Reporting Standard</p>
	            	<div class="tab1-aacountsetting">
	            		<p>
	            			BanhJi does not guarantee the full compliance with above selected financial reporting 
	            			standards. We only provide the recommended format of the financial statements of selected standard.
	            		</p>
	            		<a href="" class="btn-change">Change</a>
	            	</div>
	            	<p class="noted">
	            		<b>Noted:</b>
	            		BanhJi does not guarantee the full compliance with above selected financial reporting 
	            		standards. We only provide the recommended format of the financial statements of selected standard. 
	            	</p>	            
	            </div> -->
	            <!-- // Tab Branch content END -->

	            <!-- Tab Contact Type content -->
	            <!-- <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-method-template"
				                data-template="customerSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div> -->
	            <!-- // Tab Contact Type content END -->

	            <!-- Tab Block content -->
	           <!--  <div class="tab-pane" id="tab2-1">
            		<div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="term ..." data-bind="value: paymentTerm">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th>Term</th>
	            				<th>%</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-term-template"
				                data-template="customerSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div> -->
	            <!-- // Tab Block content END -->

	            <!-- Tab Block content -->
	            <div class="tab-pane active" id="tab1-1">
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center" data-bind="text: lang.lang.type"></th>
	            				<th class="center" data-bind="text: lang.lang.abbr"></th>
	            				<th style="text-align: left;padding-left: 5px;" data-bind="text: lang.lang.name"></th>
	            				<th class="center"><span data-bind="text: lang.lang.action"></span></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="accountSetting-prefix-template"
				                 data-bind="source: prefixDS">				            
	            		</tbody>
	            	</table>

	            </div>
	            <!-- // Tab Block content END -->

	        </div>
	    </div>

	</div>
</script>
<script id="accountSetting-prefix-template" type="text/x-kendo-template">
	<tr>
		<td > #=type#  </a></td>
		<td style="text-align: center; padding-left: 10px!important;"> 
			#= abbr# 
		</td>
		<td class="center" style="text-align: left;">
			<a style="text-align: left;padding-left: 5px;" href="\\#/add_accountingprefix/#= id # ">#= name# </a>
		</td>
		<td class="center">
			<a class="btn-action glyphicons pencil btn-success" href="\\#/add_accountingprefix/#= id # "><i></i></a>
		</td>
	</tr>
</script>
<script id="accountingRecurring" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

				    <h2>Accounting Recurring</h2>

				    <br>
					                           					
	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
			                <th>TYPE</th>
			                <th>RECURRING NAME</th>			                
			                <th>START DATE</th>
			                <th class="center">FREQUENCY</th>
			                <th></th>
	            		</thead>
	            		<tbody data-role="listview" 
				        		data-template="accountingRecurring-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
			             data-role="pager" 
			             data-auto-bind="false"
			             data-bind="source: dataSource"></div>

	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="accountingRecurring-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#=type#</td>
		<td>#=recurring_name#</td>
		<td>#=kendo.toString(new Date(start_date), "dd-MM-yyyy")#</td>
		<td class="center">#=frequency#</td>
		<td class="center">
			<a class="btn btn-warning" data-bind="click: edit"><i></i> Edit</a>
			<a class="btn btn-success" data-bind="click: use"><i></i> Use</a>
		</td>		
    </tr>   
</script>
<script id="addAccountingprefix" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>
			        <h2 style="padding:0 15px;"">Transaction Prefix</h2>
				    <br>

				    <span class="row-fluid">

				    	<span class="span6">
				    		<p>At the begining of every fiscal year, all the reference numbers will start at 1. 
				    			If you donot start using BanhJi at the beginning of your fiscal year, 
				    			please use Starting Number to determine you next number for each transaction reference. 
				    			This is important for your transaction reference number.</p>
				    	</span>

				    	<span class="span6">
				    		<table class="table table-borderless">	
						    	<thead>
							    	<tr>
							    		<th width="40%">Name</th>
							    		<th>Abbr</th>
							    	</tr>
						    	</thead>
						    	<tbody>
							    	<tr>
							    		<td><span data-bind="text: obj.type"></span></td>
							    		<td>
							    			<input type="text" placeholder="Abbr" class="k-textbox k-invalid span4" data-bind="value: obj.abbr" style="width: 100px;" >
							    		</td>
							    	</tr>
						    	</tbody>
							</table>
				    	</span>

				    </span>

					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>
						<div class="row">
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;float:right; margin-right: 15px;"><i></i> Save Close</span>	
						</div>
					</div>
					<!-- // Form actions END -->	
				</div>							
			</div>
		</div>
	</div>
</script>

<script id="accountingSetting-contact-type-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			#if(is_system=="0"){#
	   			<div class="edit-buttons">       
			        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
			   	</div>
		   	#}#
   		</td>
   	</tr>
</script>
<script id="accountingSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="accountingSetting-payment-method-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="accountingSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="accountingSetting-payment-term-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
    		 #:term#
   		</td>
   		<td>
    		 #:discount_percentage#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="accountingSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="term" required="required" validationMessage="required" />
                <span data-for="term" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="accountingList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="container-fluid">
			<div class="row-fluid">
				<div class="span12">
					<div id="example" class="k-content">
						<div class="hidden-print">
							<span class="pull-right glyphicons no-js remove_2" 
								onclick="javascript:window.history.back()"><i></i></span>

							<input data-role="dropdownlist"
							   data-option-label="(--- TYPE ---)"
			                   data-auto-bind="false"
			                   data-value-primitive="true"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: contact_type_id,
			                              source: contactTypeDS" />

							<button id="search" type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
							<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
						</div>

						<h3 align="center"><span data-bind="text: lang.lang.customer_list"></span></h3>
				
						<div id="grid"></div>					
					    					
					</div> <!-- //End div example--> 
				</div><!-- //End div span12-->
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>

<script id="segment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960" style="overflow: hidden;">					
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>
					
			        <h2 span data-bind="text: lang.lang.segment"></h2>

			        <div class="row">
				        <div class="span6">
				        	<p>
					        	<span data-bind="text: lang.lang.segment_is_important"></span>
					        </p>
				        </div>
				         <div class="span6">
				         	<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i>&nbsp&nbsp<span data-bind="text: lang.lang.add_new_segment"></span></button>
							
				        </div>
			        </div>				    			   

				    <br>

				    <!-- Window -->
				    <div data-role="window"
			                 data-title="Segment"		                 
			                 data-width="280"
			                 data-height="165"
			                 data-actions="{}"
			                 data-position="{top: '30%', left: '37%'}"
			                 data-bind="visible: windowVisible">
				    	
				    	<table>							
							<tr style="border-bottom: 8px solid #fff;">
								<td width="40%"><span data-bind="text: lang.lang.name"></span></td>
								<td>
									<input class="k-textbox" placeholder="name..." data-bind="value: obj.name" style="width: 100%;">
								</td>
							</tr>		
						</table>

						<br>

						<div style="text-align: center;">
							<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i><span data-bind="text: lang.lang.close"></span></span>  
						</div>
					</div>
							
	                <div class="row-fluid">
		                <div class="span12 table-segment" style="padding: 0;">	                					
			            	<table class="table table-condensed">
			            		<thead style="background-color: #1E4E78; color: #fff; font-weight: bold">
			            			<tr>
			            				<th data-bind="text: lang.lang.name"></th>            					            	
			            				<th></th>
			            			</tr>
			            		</thead>
			            		<tbody data-role="listview"			            			
						                data-template="segment-template"
						                data-bind="source: dataSource"></tbody>
			            	</table>
		            	</div>

		            <!-- Item Window -->
		            <div data-role="window"
			                 data-title="Segment Item"		                 
			                 data-width="250"
			                 data-height="201"
			                 data-actions="{}"
			                 data-position="{top: '30%', left: '37%'}"		                 
			                 data-bind="visible: windowItemVisible">
	            		<table>
							<tr style="border-bottom: 8px solid #fff;">
								<td width="35%"><span data-bind="text: lang.lang.code"></span></td>
								<td>
									<input class="k-textbox" placeholder="type code ..." data-bind="value: item.code" style="width: 100%;">
								</td>
							</tr>
							<tr style="border-bottom: 8px solid #fff;">
								<td><span data-bind="text: lang.lang.name"></span></td>
								<td>
									<input class="k-textbox" placeholder="type name ..." data-bind="value: item.name" style="width: 100%;">
								</td>
							</tr>
						</table>

						<br>
						<div style="text-align: center;">
							<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: saveItem"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindowItem"><i></i><span data-bind="text: lang.lang.close"></span></span>  
						</div>
					</div>

					<h3 data-bind="text: objName"></h3>

					<div class="row">
		            	<div class="span12">		                	
						    <table class="table table-bordered table-white">
			            		<thead>
			            			<tr>
			            				<th data-bind="text: lang.lang.code"></th>
			            				<th data-bind="text: lang.lang.name"></th>
			            				<th data-bind="text: lang.lang.segment"></th>   					            		
			            				<th></th>
			            			</tr>
			            		</thead>
			            		<tbody data-role="listview"			            				
						                data-template="segment-item-template"
						                data-auto-bind="false"
						                data-bind="source: itemDS"></tbody>
			            	</table>
			            	<div id="pager" class="k-pager-wrap"
						    	 data-auto-bind="false"
					             data-role="pager" data-bind="source: itemDS"></div>
		            	</div>
	            	</div>
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="segment-template" type="text/x-kendo-tmpl">
    <tr>    	
    	<td>#=name#</td>
    	<td >
    		<span data-bind="click: edit" style="cursor: pointer;"><i class="icon-edit"></i> Edit</span>
    		#if(!is_system=="1"){#
	    		|
	    		<span data-bind="click: delete" style="cursor: pointer;"><i class="icon-remove"></i> Delete</span>
    		#}#
    		|
    		<span data-bind="click: view" style="cursor: pointer;"><i class="icon-view"></i> View Item</span>
    		|
    		<span data-bind="click: addItem" style="cursor: pointer;"><i class="icon-plus icon-white"></i> Add Item</span>
    	</td>
   	</tr>
</script>
<script id="segment-item-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>#=code#</td>
    	<td>#=name#</td>
    	<td>#=segment[0].name#</td>
   		<td>
    		<span data-bind="click: editItem" style="cursor: pointer;"><i class="icon-edit"></i> Edit</span>
    		#if(!is_system=="1"){#
	    		|
	    		<span data-bind="click: deleteItem" style="cursor: pointer;"><i class="icon-remove"></i> Delete</span>
    		#}#
    	</td>
   	</tr>
</script>


<script id="fixedAssetsList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960" style="overflow: hidden;">					
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>
					
			        <h2 >Fixed Assets List</h2>

			        <div class="row">
				        <div class="span6">
				        	<p>
					        	<span data-bind="text: lang.lang.segment_is_important"></span>
					        </p>
				        </div>
				         <div class="span6">
				         	<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i>&nbsp&nbsp<span data-bind="text: lang.lang.add_new_segment"></span></button>
							
				        </div>
			        </div>				    			   

				    <br>

				    <!-- Window -->
				    <div data-role="window"
			                 data-title="Segment"		                 
			                 data-width="280"
			                 data-height="165"
			                 data-actions="{}"
			                 data-position="{top: '30%', left: '37%'}"
			                 data-bind="visible: windowVisible">
				    	
				    	<table>							
							<tr style="border-bottom: 8px solid #fff;">
								<td width="40%"><span data-bind="text: lang.lang.name"></span></td>
								<td>
									<input class="k-textbox" placeholder="name..." data-bind="value: obj.name" style="width: 100%;">
								</td>
							</tr>		
						</table>

						<br>

						<div style="text-align: center;">
							<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i><span data-bind="text: lang.lang.close"></span></span>  
						</div>
					</div>
							
	                <div class="row-fluid">
		                <div class="span12 table-segment" style="padding: 0;">	                					
			            	<table class="table table-condensed">
			            		<thead style="background-color: #1E4E78; color: #fff; font-weight: bold">
			            			<tr>
			            				<th data-bind="text: lang.lang.name"></th>            					            	
			            				<th></th>
			            			</tr>
			            		</thead>
			            		<tbody data-role="listview"			            			
						                data-template="segment-template"
						                data-bind="source: dataSource"></tbody>
			            	</table>
		            	</div>

		            <!-- Item Window -->
		            <div data-role="window"
			                 data-title="Segment Item"		                 
			                 data-width="250"
			                 data-height="201"
			                 data-actions="{}"
			                 data-position="{top: '30%', left: '37%'}"		                 
			                 data-bind="visible: windowItemVisible">
	            		<table>
							<tr style="border-bottom: 8px solid #fff;">
								<td width="35%"><span data-bind="text: lang.lang.code"></span></td>
								<td>
									<input class="k-textbox" placeholder="type code ..." data-bind="value: item.code" style="width: 100%;">
								</td>
							</tr>
							<tr style="border-bottom: 8px solid #fff;">
								<td><span data-bind="text: lang.lang.name"></span></td>
								<td>
									<input class="k-textbox" placeholder="type name ..." data-bind="value: item.name" style="width: 100%;">
								</td>
							</tr>
						</table>

						<br>
						<div style="text-align: center;">
							<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: saveItem"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindowItem"><i></i><span data-bind="text: lang.lang.close"></span></span>  
						</div>
					</div>

					<h3 data-bind="text: objName"></h3>

					<div class="row">
		            	<div class="span12">		                	
						    <table class="table table-bordered table-white">
			            		<thead>
			            			<tr>
			            				<th data-bind="text: lang.lang.code"></th>
			            				<th data-bind="text: lang.lang.name"></th>
			            				<th data-bind="text: lang.lang.segment"></th>   					            		
			            				<th></th>
			            			</tr>
			            		</thead>
			            		<tbody data-role="listview"			            				
						                data-template="segment-item-template"
						                data-auto-bind="false"
						                data-bind="source: itemDS"></tbody>
			            	</table>
			            	<div id="pager" class="k-pager-wrap"
						    	 data-auto-bind="false"
					             data-role="pager" data-bind="source: itemDS"></div>
		            	</div>
	            	</div>
				</div>							
			</div>
		</div>
	</div>
</script>

<script id="taxReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>SALE TAX REPORTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td width="50%">
								<h3><a href="#/sale_journal">Sale Journal</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/purchase_journal">Purchase Journal</a></h3>								
							</td>						
						</tr>
						<tr>
							<td width="50%">
								<p>
									
								</p>
								
							</td>
							<td width="50%">
								<p>
									
								</p>
							</td>
							
						</tr>
						
					</table>
				</div>
			</div>

		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			
		</div>
	</div>
</script>
<script id="saleJournal" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="block-title">
						<h3 data-bind="text: company.name"></h3>
						<h2>សៀវភៅទិន្នានុប្បវត្តិលក់</h2>
						<p>Sale Journal</p>
						<p>ខែ កក្ដដា ឆ្នំា​  ២០១៦ For  July  2016</p>
					</div>

					<div class="row-fluid company-name">
						<div class="span7" style="padding-left: 0; padding-right: 15px;">
							<table>
								<tr style="border-bottom: 1px solid #000;">
									<td>
										នាមករណ៍សហគ្រាសៈ
										<br>
										Company's name:
									</td>
									<td>
										បញ្ចី
										<br>
										Banh Ji
									</td>
								</tr>
															
								<tr>
									<td>
										អាស័យដ្ឋាន:
										<br/>
										Address:
									</td>
									<td>#245 ផ្លូវ 182 ភូមិ  ៧ សង្កាត់ ទឹកល្អក់ទី ២ ខណ្ឌ ទួលគោក រាជធានីភ្នំពេញ</td>
								</tr>
							</table>
						</div>
						<div class="span5">
							<table>
								<tr style="border-bottom: 1px solid #000;">
									<td>
										លេខអត្តសញ្ញាណកម្មអតប:
										<br>
										Tax Identification No:
									</td>
									<td>
										100100260	
									</td>
								</tr>
								<tr>
									<td>
										អត្រាប្តូរប្រាក់មធ្យមៈ
										<br>
										Average Exchange Rate:
									</td>
									<td>
										 4,090
									</td>
								</tr>								
							</table>
						</div>
					</div>

					<br>
					<div class="row-fluid table-company">						
						<table class="table table-bordered">
							<tbody>
								<tr>
									<th style="text-align:center !important" colspan="5">វិក័យប័ត្រ<br>Invoice</th>
									<th style="text-align:center !important" colspan="7">ការផ្គត់ផ្គង់<br>Supplies</th>	
									<th></th>	
								</tr>
								<tr>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">ថ្ងៃទី<br>Date</td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">លេខវិក័យប័ត្រ<br>Invoicen<sup>o</sup> <br></td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">អ្នកទិញ<br>Client</td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">លេខអតប<br>VAT Tin</td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">បរិយាយ<br>Description<br></td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">បរិមាណ<br>Qty<br></td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">ផ្គត់ផ្គង់មិនជាប់អាករ<br>Non-taxable sale<br></td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">ការនាំចេញ<br>Value of Exports<br></td>
									<td style="text-align:center !important;vertical-align: top !important;" colspan="4">ការលក់ជាប់អាករ<br>Taxable sale</td>
									<td style="text-align:center !important;vertical-align: top !important;" rowspan="3">សរុបតម្លៃលក់រួមទាំងអាករ<br>Total Taxable Value</td>
									
								</tr>
								<tr>
									<td colspan="2" style="text-align:center;">លក់អោយបុគ្គលជាប់អាករ<br>Sales to Taxable Persons</td>
									<td colspan="2" style="text-align:center;">លក់អោយអ្នកប្រើប្រាស់<br>Sales to Customers</td>
								</tr>
								<tr>
									<td style="text-align:center !important">តម្លៃជាប់អាករ<br>Taxable Value</td>
									<td style="text-align:center !important">អាករ<br>VAT<br></td>
									<td style="text-align:center !important">តម្លៃជាប់អាករ<br>Taxable Value</td>
									<td style="text-align:center !important">អាករ<br>VAT</td>
								</tr>
								<tr>
									<td style="text-align:center !important">S1</td>
									<td style="text-align:center !important">S2</td>
									<td style="text-align:center !important">S3</td>
									<td style="text-align:center !important">S4</td>
									<td style="text-align:center !important">S5</td>
									<td style="text-align:center !important">S6</td>
									<td style="text-align:center !important">S7</td>
									<td style="text-align:center !important">S8</td>
									<td style="text-align:center !important">S9</td>
									<td style="text-align:center !important">S10</td>
									<td style="text-align:center !important">S11</td>
									<td style="text-align:center !important">S12</td>
									<td style="text-align:center !important">S13=sum(S7:S12)</td>
									
								</tr>
								</tbody><tbody class="tax">
									<tr class="none-padding">
										<td><p style="padding:5px !important; padding-left:10px !important;" class="no">1</p></td>
										<td><input type="text" name="s2[]" id="s2" class="form-control s2" value=""></td>
										<td><input type="text" name="s3[]" id="s3" class="form-control s3" value="" ></td>
										<td><input type="text" name="s4[]" id="s4" class="form-control s4" value=""></td>
										<td><input type="text" name="s5[]" id="s5" class="form-control s5" value=""></td>
										<td><input type="text" name="s6[]" id="s6" class="checknb form-control text-center s6" value=""></td>
										<td><input type="text" name="s7[]" id="s7" class="checknb form-control text-right s7" value=""></td>
										<td><input type="text" name="s8[]" id="s8" class="checknb form-control text-right s8" value="" style="width:100px;"></td>
										<td><input type="text" name="s9[]" id="s9" class="checknb form-control text-right s9" value=""></td>
										<td><input type="text" name="s10[]" id="s10" class="checknb form-control text-right s10" value=""></td>
										<td><input type="text" name="s11[]" id="s11" class="checknb form-control text-right s11" value=""></td>
										<td><input type="text" name="s12[]" id="s12" class="checknb form-control text-right s12" value=""></td>
										<td><input type="text" name="s13[]" id="s13" class="form-control text-right s13" style="font-weight:bold;" value="" readonly=""></td>
										
									</tr>
								</tbody>						
								<tbody><tr>
									<td style="text-align:right !important" colspan="7">សរុបលក់ជារៀល<br>Total Sale in KHR</td>
									<td name="total_s7" id="total_s7" class="total_s7" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s8" id="total_s8" class="total_s8" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s9" id="total_s9" class="total_s9" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s10" id="total_s10" class="total_s10" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s11" id="total_s11" class="total_s11" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s12" id="total_s12" class="total_s12" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									
								</tr>
								<tr id="hide-border">
									<td></td>
									<td></td>
									<td></td>
									<td></td>
									<td></td>
									<td></td>
									<td style="text-align:center !important">Box12</td>
									<td style="text-align:center !important">Box13</td>
									<td style="text-align:center !important">Box14</td>
									<td style="text-align:center !important">Box15</td>
									<td style="text-align:center !important">Box14</td>
									<td style="text-align:center !important">Box15</td>
									<td></td>	
								</tr>
							</tbody>
						</table>
					
					</div>
				</div>
			</div>
		</div>
	</div>	
</script>
<script id="purchaseJournal" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="block-title">
						<h3 data-bind="text: company.name"></h3>
						<h2>សៀវភៅទិន្នានុប្បវត្តិទិញ</h2>
						<p>PURCHASE JOURNAL</p>
						<p>ខែ កក្ដដា ឆ្នំា​  ២០១៦ For  July  2016</p>
					</div>

					<div class="row-fluid company-name">
						<div class="span7" style="padding-left: 0; padding-right: 15px;">
							<table>
								<tr style="border-bottom: 1px solid #000;">
									<td>
										នាមករណ៍សហគ្រាសៈ
										<br>
										Company's name:
									</td>
									<td>
										បញ្ចី
										<br>
										Banh Ji
									</td>
								</tr>
															
								<tr>
									<td>
										អាស័យដ្ឋាន:
										<br/>
										Address:
									</td>
									<td>#245 ផ្លូវ 182 ភូមិ  ៧ សង្កាត់ ទឹកល្អក់ទី ២ ខណ្ឌ ទួលគោក រាជធានីភ្នំពេញ</td>
								</tr>
							</table>
						</div>
						<div class="span5">
							<table>
								<tr style="border-bottom: 1px solid #000;">
									<td>
										លេខអត្តសញ្ញាណកម្មអតប:
										<br>
										Tax Identification No:
									</td>
									<td>
										100100260	
									</td>
								</tr>
								<tr>
									<td>
										អត្រាប្តូរប្រាក់មធ្យមៈ
										<br>
										Average Exchange Rate:
									</td>
									<td>
										 4,090
									</td>
								</tr>								
							</table>
						</div>
					</div>

					<br>
					<div class="row-fluid table-company">						
						<table class="table table-bordered">
							<tbody>
								<tr>
							        <td style="text-align:center !important" colspan="6">វិក័យប័ត្រ<br>Invoice    </td>
							        <td style="text-align:center !important" colspan="6">ការផ្គត់ផ្គង់<br>Supplies    </td>
							       
							    </tr>
							    <tr>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">ថ្ងៃទី<br>Date</td>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">លេខវិក័យប័ត្រ<br>Invoice n<sup>o</sup></td>
							        <td style="text-align:center !important;vertical-align: middle !importantrowspan="3">អ្នកទិញ<br>Client</td>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">លេខ អ ត ប<br>VAT Tin    </td>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">បរិយាយ<br>Description    </td>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">បរិមាណ<br>Qty    </td>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">ការទិញមិនជាប់អាករ<br>Non-taxable Purchase    </td>
							        <td style="text-align:center !important;vertical-align: middle !important;" colspan="4">ការទិញជាប់អាករ<br>Taxable Purchase    </td>
							        <td style="text-align:center !important;vertical-align: middle !important;" rowspan="3">សរុបតម្លៃទិញរួមទាំងអាករ<br>Total Value Including VAT    </td>
							        
							    </tr>
							    <tr>
							        <td style="text-align:center !important" colspan="2">ការនាំចូល<br>Imports    </td>
							        <td style="text-align:center !important" colspan="2">ការទិញក្នុងស្រុក<br>Local Purchases    </td>
							    </tr>
							    <tr>
							        <td style="text-align:center !important">តម្លៃជាប់អាករ<br>Taxable Value</td>
							        <td style="text-align:center !important">អាករ<br>VAT    </td>
							        <td style="text-align:center !important">តម្លៃជាប់អាករ<br>Taxable Value    </td>
							        <td style="text-align:center !important">អាករ<br>VAT    </td>
							    </tr>
							   
							    <tr>
							        <td style="text-align:center !important">P1</td>
							        <td style="text-align:center !important">P2</td>
							        <td style="text-align:center !important">P3</td>
							        <td style="text-align:center !important">P4</td>
							        <td style="text-align:center !important">P5</td>
							        <td style="text-align:center !important">P6</td>
							        <td style="text-align:center !important">P7</td>
							        <td style="text-align:center !important">P8</td>
							        <td style="text-align:center !important">P9</td>
							        <td style="text-align:center !important">P10</td>
							        <td style="text-align:center !important">P11</td>
							        <td style="text-align:center !important">P13=sum(P7:P11)</td>
							       
							    </tr>
							</tbody>
								<tbody class="tax">
									<tr class="none-padding">
										<td><input type="text" name="s1[]" id="s1" class="form-control datetime s1" value="" ></td>
										<td><input type="text" name="s2[]" id="s2" class="form-control s2" value=""></td>
										<td><div class="select2-container form-control s3" id="s2id_s3"><a href="javascript:void(0)" class="select2-choice select2-default" tabindex="-1">   <span class="select2-chosen" id="select2-chosen-8"></span><abbr class="select2-search-choice-close"></abbr>   <span class="select2-arrow" role="presentation"><b role="presentation"></b></span></a><label for="s2id_autogen8" class="select2-offscreen"></label><input class="select2-focusser select2-offscreen" type="text" aria-haspopup="true" role="button" aria-labelledby="select2-chosen-8" id="s2id_autogen8"><div class="select2-drop select2-display-none select2-with-searchbox">   <div class="select2-search">       <label for="s2id_autogen8_search" class="select2-offscreen"></label>       <input type="text" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" class="select2-input" role="combobox" aria-expanded="true" aria-autocomplete="list" aria-owns="select2-results-8" id="s2id_autogen8_search" placeholder="">   </div>   <ul class="select2-results" role="listbox" id="select2-results-8">   </ul></div></div><select name="s3[]" id="s3" class="form-control s3" tabindex="-1" title="" style="display: none;"><option value=""></option><option value="1">Owner</option><option value="2">Owner</option><option value="398">WG company</option><option value="401">Coffe shop</option></select></td>
										<td><input type="text" name="s4[]" id="s4" class="checknb form-control s4" value=""></td>
										<td><input type="text" name="s5[]" id="s5" class="form-control s5" value=""></td>
										<td><input type="text" name="s6[]" id="s6" class="checknb form-control text-center s6" value=""></td>
										<td><input type="text" name="s7[]" id="s7" class="checknb form-control text-right s7" value=""></td>
										<td><input type="text" name="s9[]" id="s9" class="checknb form-control text-right s9" value=""></td>
										<td><input type="text" name="s10[]" id="s10" class="checknb form-control text-right s10" value=""></td>
										<td><input type="text" name="s11[]" id="s11" class="checknb form-control text-right s11" value=""></td>
										<td><input type="text" name="s12[]" id="s12" class="checknb form-control text-right s12" value=""></td>
										<td><input type="text" name="s13[]" id="s13" class="form-control text-right s13" style="font-weight:bold;" value="" readonly=""></td>
										
									</tr>
								</tbody>				
								
							    <tbody><tr>
							        <td style="text-align:right !important" colspan="6">សរុបទិញជារៀល<br>Total Purchase in KHR</td>
							        <td name="total_s7" id="total_s7" class="total_s7" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s9" id="total_s9" class="total_s9" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s10" id="total_s10" class="total_s10" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s11" id="total_s11" class="total_s11" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s12" id="total_s12" class="total_s12" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									<td name="total_s13" id="total_s13" class="total_s13" style="padding-right:15px; text-align:right; font-weight:bold;"></td>
									
							    </tr>
							    <tr id="hide-border">
							        <td></td>
							        <td></td>
							        <td></td>
							        <td></td>
							        <td></td>
							        <td></td>
							        <td>Box06</td>
							        <td>Box09</td>
							        <td>Box10</td>
							        <td>Box07</td>
							        <td>Box08</td>
							       	<td>Box09</td>
							    </tr>										
							</tbody>
						</table>					
					</div>
				</div>
			</div>
		</div>
	</div>	
</script>



<!-- ***************************
*	Employee Section            *
**************************** -->
<script id="employeeDashboard" type="text/x-kendo-template">

	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
					
			        <td valign="top">
			        	<h2>EMPLOYEE</h2>
			        	<p>
			        		In here, you can manage your employee information, and other related transactions.
			        	</p>
			        	<div class="supplier-icon">
					       	<div class="span4">
						       	<a href="#/employee" class="center">
						       		<img title="Add Employee" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/employees.ico" />
						       	</a>
						       </div>
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div>

			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center">
				<tr>
					<td class="center">
						<a href="#/cash_advance">
							<img title="Add Cash Advance" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_advance.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">Advance</span>
						</a>						
					</td>
					<td class="center">
						<a href="#/expense">
							<img title="Add Expense" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/expense.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">Expense</span>
						</a>
					</td>
					<td class="center">
						<a href="#/cash_transaction">				
							<img title="Add Cash Transaction" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_transaction.png" width="110" height="200" />						
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">Cash Tnx.</span>
						</a>					
					</td>					
				</tr>							
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span>Expense</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary">
							
							<div align="center" class="text-large strong" data-bind="text: sale"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%">										
										<span data-bind="text: sale_customer"></span>
										<br>
										<span>Employee</span>
									</td>
									<td width="33%">
										<span data-bind="text: sale_product"></span>
										<br>
										<span>Product</span>
									</td>
									<td width="33%">
										<span data-bind="text: sale_order"></span>
										<br>
										<span>Order</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span>Order</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info">
							
							<div align="center" class="text-large strong" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td width="50%">										
										<span data-bind="text: order_avg"></span>
										<br>
										<span>Average</span>
									</td>
									<td width="50%">
										<span data-bind="text: order_open"></span>
										<br>
										<span>Open</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span>Receivable</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%">										
										<span data-bind="text: ar_open"></span>
										<br>
										<span>Open</span>
									</td>
									<td width="33%">
										<span data-bind="text: ar_customer"></span>
										<br>
										<span>Customer</span>
									</td>
									<td width="33%">
										<span data-bind="text: ar_overdue"></span>
										<br>
										<span>Overdue</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">
					<h4>Top 5 Employees</h4>					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 1%;" class="center">#</th>
				                <th>Name</th>			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="customerDashBoard-top-customer-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>			
				</div>						
			</div>

			<!-- Graph -->
			<div>
				<div id="graph" style="height: 100%;"></div>
			</div>

		</div>		

	</div>
</script>
<script id="employeeDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td>#:banhji.customerDashboard.topCustomerDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="employeeDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.customerDashboard.topARDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="employeeDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.customerDashboard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="employeeCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Employee ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
																
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: contactDS"
						 data-auto-bind="false" 
						 data-row-template="employeeCenter-customer-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							        	<li style="font-size: large; color: black; font-weight: bold;">
							            	<span data-bind="text: obj.number"></span>
							            	
							            	<span data-bind="text: obj.fullname"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-7"><i></i></span>
							            </li>							           
							            <li class="glyphicons riflescope"><span data-toggle="tab" data-target="#tab2-7"><i></i></span>
							            </li>							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab3-7"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab4-7"><i></i></span>
							            </li>
							            <li class="glyphicons edit"><span data-bind="click: goEditContact"><i></i></span>
							            </li>							            							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-7" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashadvance">Cash Advance</span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goExpense">Expense</span>								            			
								            		</td>								            	
							            	</table>
							            </div>
							            <!-- // Transactions Tab content END -->

							            <!-- SEARCH Tab content -->
							            <div id="tab2-7" class="tab-pane box-generic">
							                <input data-role="dropdownlist"
							                	   data-auto-bind="false"
						            			   data-option-label="Select Customer Type..."					            			   		                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: contact_type_id,
								                              source: contactTypeDS"
								                   style="width: 100%"/>

							                <input data-role="dropdownlist"
						            			   data-option-label="Select Currency..."
						            			   data-template="currency-list-tmpl"					            			   		                   
								                   data-value-primitive="true"
								                   data-text-field="code"
								                   data-value-field="id"
								                   data-bind="value: currency_id,
								                              source: currencyDS"
								                   style="width: 100%"/>

								            <br><br>
								            <span class="btn btn-primary btn-icon glyphicons search pull-right" data-bind="click: search"><i></i> <span data-bind="text: lang.lang.search"></span></span>
								            <br>
							            </div>
							            <!-- // SEARCH Tab content END -->							            

							            <!-- INFO Tab content -->
							            <div id="tab3-7" class="tab-pane box-generic">
							            	<div class="row-fluid">
								            	<div class="span6">
										
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons user"><i></i> <span data-bind="text: obj.wnumber"></span> <span data-bind="text: obj.fullname"></span></h4>
														</div>
														<div class="widget-body">
															<ul class="unstyled icons margin-none">
																<li class="glyphicons group"><i></i> <span data-bind="text: obj.contact_type"></span></li>
																<li class="glyphicons phone"><i></i> <span data-bind="text: obj.phone"></span></li>
																<li class="glyphicons envelope"><i></i> <span data-bind="text: obj.email"></li>
																<li class="glyphicons calendar"><i></i> <span data-bind="text: obj.registered_date"></li>
															</ul>
														</div>
													</div>
													<!-- // Bio END -->
													
												</div>
												<div class="span6">
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons edit" data-bind="click: goEditContact"><i></i> <span data-bind="text: lang.lang.edit"></span></h4>
														</div>
														<div class="widget-body">
															<p><i class="icon-home"></i> <span data-bind="text: obj.address"></span></p>
														</div>
													</div>
													<!-- // Bio END -->
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab4-7" class="tab-pane box-generic">

										    <div class="chat-controls">															
												<form class="margin-none">
													<div class="row-fluid">
														<div class="span10">
															<input type="text" name="message" class="input-block-level margin-none" data-bind="value: note" placeholder="កំណត់Memo ...">
														</div>
														<div class="span2">
															<span class="btn btn-block btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.save"></span></span>
														</div>
													</div>
												</form>															
											</div>

											<br>

									    	<div data-role="grid"
									    	 	 data-height="100"
					 							 data-scrollable="{virtual: true}"									                 
								                 data-row-template="customerCenter-note-tmpl"
								                 data-bind="source: noteDS"
								                 data-columns="[{title: ''}]"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt">Total Advance<span data-bind="text: balance" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadDeposit">
										<span class="glyphicons briefcase"><i></i></span>
										<span class="txt">Business Adva<span data-bind="text: deposit" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons circle_exclamation_mark"><i></i></span>
										<span class="txt"><span data-bind="text: outInvoice"></span> Open</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadOverInvoice">
										<span class="glyphicons turtle"><i></i></span>
										<span class="txt"><span data-bind="text: overInvoice"></span> Over Due</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input id="sorter" name="sorter"
				    	   data-role="dropdownlist"                   
				           data-value-primitive="true"
				           data-text-field="text"
				           data-value-field="value"
				           data-bind="value: sorter,
				                      source: sortList" />
				                                   
				        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
				        
				       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />

			            <button id="search" type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Amount</th>
								<th>Status</th>
								<th>Action</th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="customerCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="employeeCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Invoice" || type=="Cash_Sale" || type=="Quote" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return"){#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>						
			#}else{#
				#=number#
			#}#        	
        </td>
    	<td class="right">
    		#if(type=="GDN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else{#
    			#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<td>        	
        	#if(type==="Invoice"){#
        		#if(status==="0" || status==="2") {#
        			# var date = new Date(), dueDate = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else {#
					Paid
				#}#
        	#}else if(type==="Sale_Order" || type==="GDN"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#
        	#}else if(type==="Quote"){#        		
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Approved        			
        		#}#
        	#}#			
		</td>    	
    	<td align="center">
			#if(type==="Invoice"){#
				<a href="\#/invoice/#=id#"><i></i> Send</a>

				#if(status==="0" || status==="2"){#					
					| <a href="\#/cashier/#=id#"><i></i> Pay</a>
				#}#        	
			#}else if(type==="Sale_Order"){#
        		#if(status==="0"){#
        			
        		#}#
        	#}else if(type==="Quote"){#
        		<a href="\#/quote/#=id#"><i></i> Send</a>        		
        		#if(status==="0"){#
        			
        		#}#
        	#}else if(type==="GDN"){#        		
        		#if(status==="0"){#
        			
        		#}#
        	#}#
		</td>     	
    </tr>
</script>
<script id="employeeCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				<span class="strong">
					#=number# #=fullname#				
				</span>
			</div>
		</td>
	</tr>
</script>
<script id="employeeCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>

<script id="employee" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">				
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

			        <h2>Employee</h2>

			        <br>				

			    	<div class="row-fluid">
			    		<div class="span6 well">

							<div class="row-fluid">

								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlContactType">Employee Type<span style="color:red">*</span></label>
										<input id="ddlContactType" name="ddlContactType"
											   data-role="dropdownlist"
											   data-option-label="(--- Select ---)"									                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_type_id,
							                   			  disabled: obj.is_pattern, 
							                              source: contactTypeDS,
							                              events:{change: contactTypeChanges}"
							                   required data-required-msg="required"
							                   style="width: 100%;" />									            
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">							
										<label for="number"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>
				              			<input id="number" name="number" class="k-textbox"
					              				data-bind="value: obj.number, disabled: obj.is_pattern" 
					              				placeholder="e.g. ID0001" required data-required-msg="required"
					              				style="width: 100%;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->											
								</div>
							</div>
							
							<div class="row-fluid">
								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="surname"><span data-bind="text: lang.lang.surname"></span> <span style="color:red">*</span></label>
					              		<input id="surname" name="surname" class="k-textbox" data-bind="value: obj.surname, disabled: obj.is_pattern" 
							              		placeholder="surname ..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="name"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
							            <input id="name" name="name" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="name ..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">	
								<!-- Map -->
								<div id="map" class="span12" style="height: 130px;"></div>
							</div>

							<div class="separator line bottom"></div>

						
						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons usd active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.account"></span></a>
						            </li>								           							            
						            <li class="span2 glyphicons nameplate_alt">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.info"></span></a>
						            </li>
						            <li class="span2 glyphicons paperclip">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.info"></span></a>
						            </li>
						            									           						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">
						        <!-- //ACCOUNTING INFO -->
						        <div class="tab-pane active" id="tab1">
						        	
						        	<div class="row-fluid">

						            	<div class="span3">													
											<!-- Group -->
											<div class="control-group">										
												<label for="ddlAD">Advance Account<span style="color:red">*</span></label>
												<input id="ddlAD" name="ddlAD"
													   data-role="dropdownlist"
													   data-header-template="account-header-tmpl"
													   data-option-label="(--- Select ---)"											                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                              source: adDS"
									                   required data-required-msg="required"											                              
									                   style="width: 100%;" />									            
											</div>
											<!-- // Group END -->													
										</div>												
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlSA">Salary Account<span style="color:red">*</span></label>
												<input id="ddlSA" name="ddlSA"
													   data-role="dropdownlist"
													   data-option-label="(--- Select ---)"											                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-header-template="account-header-tmpl"
									                   data-value-field="id"
									                   data-bind="value: obj.salary_account_id,
									                              source: saDS"
									                   required data-required-msg="required"											                              
									                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
									            <input id="currency" name="currency" 
									            	data-role="dropdownlist"
									            	data-value-primitive="true"
									                data-text-field="code"
									                data-value-field="id"
													data-bind="value: obj.currency_id, source: currencyDS"
													data-option-label="(--- Select ---)" 
													required data-required-msg="required" style="width: 100%;" />
											</div>													
										</div>																																				
							        </div>	
							        <div class="separator line bottom"></div>
					        	</div>
						        <!-- //ACCOUNTING INFO END -->								        

						        <!-- //GENERAL INFO -->
						        <div class="tab-pane" id="tab2">
					            	<table class="table table-borderless table-condensed cart_total">						            	
					            		<tr>
							                <td><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></td>
							              	<td>
							              		<input id="customerStatus" name="customerStatus" 
							              				data-role="dropdownlist"
									            		data-text-field="name"
						           						data-value-field="id"
						           						data-value-primitive="true" 
									            		data-bind="source: statusList, value: obj.status"
									            		data-option-label="(--- Select ---)"
									            		required data-required-msg="ត្រូវការ ស្ថានភាព" />
							              	</td>							              	
							            	<td><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></td>
							              	<td>
							              		<input id="registered_date" name="registered_date" 
								            		data-role="datepicker"			            		
					            					data-bind="value: obj.registered_date" 
					            					data-format="dd-MM-yyyy"
					            					data-parse-formats="yyyy-MM-dd" 
					            					placeholder="dd-MM-yyyy" required data-required-msg="required" />
							              	</td>
							            </tr>									            
							            <tr>
							                <td><span data-bind="text: lang.lang.email"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" /></td>							              	
							            	<td><span data-bind="text: lang.lang.phone"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" /></td>
							            </tr>									           							            
							            <tr>
							            	<td><span data-bind="text: lang.lang.address"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." />							              	
							            	<td><span data-bind="text: lang.lang.memo"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." /></td>
							            </tr>
							            <tr>
							            	<td><label for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> <i class="icon-share"></i></label></td>
							              	<td><input class="k-textbox" data-bind="value: obj.bill_to" placeholder="bill to ..." />							              	
							            	<td><span data-bind="text: lang.lang.ship_to"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.ship_to" placeholder="ship to ..." /></td>									              	
							            </tr>							            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //GENERAL INFO END -->	
						        <div class="tab-pane" id="tab3">	
						        	<input name="files"
					                   type="file"
					                   data-role="upload"
					                   data-async="{ saveUrl: 'save', removeUrl: 'remove', autoUpload: false }">								     
						        </div>						        
						    </div>
						</div>
					</div>

					<br>											
							
							<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->	          					                
			    											
				</div> <!-- // End div example-->  
			</div> <!-- // End div span12-->
		</div> <!-- // End div row-fluid-->	
	</div> 	 
</script>
<script id="employee-contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="employeeReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>EMPLOYEE REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports on employee related transactions.   
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Inventory Position Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/">Inventory Sale by Item Analysis</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase 
									order and sale order. In addition, it also includes average cost and price.
								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory 
									with analysis of average gross profit margin.
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/">Inventory Position Detail</a></h3>
							</td>
							<td >
								<h3><a href="#/">Inventory Turnover List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for 
									each inventory within a period of time.
								</p>
							</td>
							<td >
								<p>
									Provides analysis of inventory turnover days by each inventory.
								</p>
							</td>
						</tr>
					</table>					
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Inventory List</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/">Recurring Inventory Template List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Lists the products you purchase and sold. The following 
									information is included: name, description, cost, sales price, and quantity on hand.s						

								</p>
								
							</td>
							<td >
							</td>							
						</tr>
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Inventory Balance</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>6</span>
								<br>
								<span>Inventory items </span>
							</td>
							<td>
								<span>1</span>
								<br>
								<span>Categories</span>
							</td>
							<td>
								<span>10%</span>
								<br>
								<span>Average Margin</span>
							</td>
							<td>
								<span>20 days</span>
								<br>
								<span>Turnover Days</span>
							</td>
						</tr>
					</table>
				</div>
				<div id="sale-report-chart">Chart</div>
			</div>
		</div>
	</div>
</script>



<!-- ***************************
*	Vendor Section            *
**************************** -->
<script id="vendorDashboard" type="text/x-kendo-template">
	<div class="row-fluid">
		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2 data-bind="text: lang.lang.supplier"></h2>
			        	<p>
			        		<span data-bind="text: lang.lang.S_inhere"></span>
			        	</p>

			        	<p style="width: 100%; float: left; margin-top: 8px; margin-bottom: 15px;">
				        	<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 32px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" href="#/vendor_recurring">
									<span class="badge fix badge-primary" style="color: #fff;  position: absolute; top: -13px; background: #203864; right: 5px; width: 25px; height: 25px; font-size: 15px; line-height: 25px;">0</span>
									Recurring												
								</a>
							</span>

							<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a href="" target="_blank" style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 39px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" >
									This Module's Guide												
								</a>
							</span>
						</p>
						<div class="cover-block" style="box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        	<div class="supplier-icon">
						       	<div class="span4">
							       	<a href="#/vendor" class="center">
							       		<img title="Add Suppliers" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/suppliers.ico" />
							       	</a>
							       </div>
							    <div class="span4">
							       	<a href="#/item" class="center">
							       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/item_service" class="center">
							       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
							       	</a>
							    </div>
							</div>
						</div>
			        </td>
			 	</tr>
			</table>
			<div class="cover-block">
				<table class="table table-borderless table-condensed table-vertical-center costom-imag">
				<tr>
					<td class="center">
						<a href="#/purchase_order">
							<img title="Add Purchase Order" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase_order.png" width="110" height="200" />
							<span data-bind="text: lang.lang.po" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>						
					</td>
					<td class="center">
						<a href="#/grn">
							<img title="Add Received Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/received_note.png" width="110" height="200" />
							<span data-bind="text: lang.lang.goods_received_note" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
					<td class="center" style="width:121px;">
						<a href="#/vendor_deposit">
							<img title="Add Supplier Deposit" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/supplier_deposit.png" width="110" height="200" />
							<span data-bind="text: lang.lang.deposit" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center" style="vertical-align: top;">
						<a href="#/purchase">
							<img title="Add Purchase" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase.png" width="110" height="200" />
							<span data-bind="text: lang.lang.purchase" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
					<td class="center" style="vertical-align: top;">
						<a href="#/purchase_return">
							<img title="Add Purchase Return" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase_return.png" width="110" height="200" />
							<span data-bind="text: lang.lang.c_purchase_return" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
					<td class="center" style="vertical-align: top;">						
						<a href="#/cash_payment">
							<img title="Add Cash Payment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_payment.png" width="110" height="200" />
							<span data-bind="text: lang.lang.cash_payment" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>						
					</td>										
				</tr>				
				</table>
			</div>
		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<a href="#/expense_purchase_summary_supplier"><div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.purchase"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: purchase"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: purchase_supplier"></span>
										<br>
										<span><span data-bind="text: lang.lang.supplier"></span></span>
									</td>
									<td>
										<span data-bind="text: purchase_product"></span>
										<br>
										<span><span data-bind="text: lang.lang.product"></span></span>
									</td>
									<td>
										<span data-bind="text: purchase_order"></span>
										<br>
										<span><span data-bind="text: lang.lang.order"></span></span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div></a>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<a href="#/sale_summary_by_customer"><div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.purchase_order"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/open_purchase_order"><div class="widget-body alert-info" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: order_avg"></span>
										<br>
										<span><span data-bind="text: lang.lang.average"></span></span>
									</td>
									<td>
										<span data-bind="text: order_open"></span>
										<br>
										<span><span data-bind="text: lang.lang.open"></span></span>
									</td>									
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<a href="#/sale_summary_by_customer"><div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.payables"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/suppliers_balance_summary"><div class="widget-body alert-info3" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: ap"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: ap_open"></span>
										<br>
										<span><span data-bind="text: lang.lang.open"></span></span>
									</td>
									<td>
										<span data-bind="text: ap_customer"></span>
										<br>
										<span><span data-bind="text: lang.lang.supplier"></span></span>
									</td>
									<td>
										<span data-bind="text: ap_overdue"></span>
										<br>
										<span><span data-bind="text: lang.lang.overdue"></span></span>
									</td>
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">			
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>				                
				                <th style="background: #203864;" class="center" colspan="2"><span data-bind="text: lang.lang.top_5_suppliers"></span></th>			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="vendorDashboard-top-vendor-template"
			                 data-bind="source: topContactDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th style="background: #203864;" class="center" colspan="2"><span data-bind="text: lang.lang.top_5_ap_balance"></span></th>
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="vendorDashboard-top-ap-template"
			                 data-bind="source: topAPDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th style="background: #203864;" class="center" colspan="2"><span data-bind="text: lang.lang.top_5_purchased_products"></span></th>			                		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="vendorDashboard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'sale', name: 'Monthly Purchase', categoryField:'month', color: '#203864', overlay: {gradient:'none'} },
	                                 { field: 'order', name: 'Monthly Purchase Order', categoryField:'month', color: '#A6C9E3', overlay: {gradient:'none'} }
	                             ]"
	                 data-auto-bind="false"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>            
            </div>
            <!-- End Graph -->

		</div>
	</div>
</script>
<script id="vendorDashboard-top-vendor-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<!-- <td style="width: 1%">#:banhji.vendorDashboard.topContactDS.indexOf(data)+1#</td> -->		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="vendorDashboard-top-ap-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.vendorDashboard.topAPDS.indexOf(data)+1#</td> -->		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="vendorDashboard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.vendorDashboard.topProductDS.indexOf(data)+1#</td> -->		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>
<script id="vendorCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Number or Name ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%; margin-bottom: 10px;">								
								<input data-role="dropdownlist"
									   data-value-primitive="true"
					                   data-option-label="Select Type..."
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: contact_type_id,
					                              source: contactTypeDS"
					                   style="width: 100%" />									
							</div>

						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total()"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid"
						 data-bind="source: contactDS"						  
						 data-row-template="vendorCenter-vendor-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">
							    	<input type="text" name="" data-bind="value: obj.name" style="border: none; width: 69%; font-size: 20px; font-weight: 600; margin-top: -11px; margin-left: 11px; background: #fff; " disabled="disabled">
							        <!-- Tabs -->
							        <ul class="pull-right">
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-4"><i></i></span>
							            </li>							            							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab2-4"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab3-4"><i></i></span>
							            </li>
							            <li class="glyphicons paperclip"><span data-toggle="tab" data-target="#tab4-4"><i></i></span>
							            </li>
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">							           

							            <!-- TRANSACTIONS Tab content -->
							            <div id="tab1-4" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-inverse" data-bind="click: goPO"><span data-bind="text: lang.lang.purchase_order"></span></span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goPurchase"><span data-bind="text: lang.lang.purchase"></span></span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goGRN"><span data-bind="text: lang.lang.goods_received_note"></span></span>								            			
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goPurchaseReturn"><span data-bind="text: lang.lang.purchase_return"></span></span>								            			
								            		</td>
								            	</tr>								            	
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goDeposit"><span data-bind="text: lang.lang.deposit"></span></span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashPayment"><span data-bind="text: lang.lang.cash_payment"></span></span>								            			
								            		</td>
								            	</tr>								            	
							            	</table>
							            </div>
							            <!-- // TRANSACTIONS Tab content END -->							            						            

							            <!-- INFO Tab content -->
							            <div id="tab2-4" class="tab-pane box-generic">
							            	<div class="row-fluid">
							            		<div class="accounCetner-textedit">
									            	<table width="100%">
														<tr>
															<td width="40%"><span data-bind="text: lang.lang.supplier_type"></span></td>
															<td width="60%">
																<span class="strong" data-bind="text: obj.contact_type"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.number"></span></td>
															<td>
																<span class="strong" data-bind="text: obj.abbr"></span>
																<span class="strong" data-bind="text: obj.number"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.name"></span></td>
															<td>
																<span data-bind="text: obj.name"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.billde_address"></span></td>
															<td>
																<span data-bind="text: obj.address"></span>
															</td>
														</tr>								
														<tr>
															<td><span data-bind="text: lang.lang.phone"></span></td>
															<td>
																<span data-bind="text: obj.phone"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.currency"></span></td>
															<td>										
																<span data-bind="text: currencyCode"></span>
															</td>
														</tr>
													</table>

													<span class="btn btn-primary btn-icon glyphicons edit pull-right" data-bind="click: goEdit"><i></i><span data-bind="text: lang.lang.view_all_info_edit"></span></span>
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab3-4" class="tab-pane box-generic">

										    <div>
												<input type="text" class="k-textbox" 
														data-bind="value: note" 
														placeholder="Add memo ..." 
														style="width: 350px;" />
												<span class="btn btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.add"></span></span>
											</div>

											<br>

									    	<div class="table table-condensed" style="height: 100;"						 
												 data-role="grid"
												 data-auto-bind="false"						 
												 data-bind="source: noteDS"
												 data-row-template="vendorCenter-note-tmpl"
												 data-columns="[{title: ''}]"
												 data-height="100"						 
												 data-scrollable="{virtual: true}"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->

							            <!-- Attach Tab content -->
								        <div id="tab4-4" class="tab-pane">							            	
								            <p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
								            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

								            <table class="table table-bordered">
										        <thead>
										            <tr>			                
										                <th><span data-bind="text: lang.lang.file_name"></span></th>
										                <th><span data-bind="text: lang.lang.description"></span></th>
										                <th><span data-bind="text: lang.lang.date"></span></th>
										                <th style="width: 13%;"></th>                			                
										            </tr> 
										        </thead>
										        <tbody data-role="listview" 
										        		data-template="attachment-list-tmpl" 
										        		data-auto-bind="false"
										        		data-bind="source: attachmentDS"></tbody>			        
										    </table>

										    <span class="btn btn-icon btn-success glyphicons ok_2" data-bind="click: uploadFile" style="color: #fff; padding: 5px 38px; text-align: left; width: 98px !important; display: inline-block; margin-top: 10px;"><i></i><span data-bind="text: lang.lang.save"></span></span>

								        </div>
								        <!-- // Attach Tab content END -->								            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6" style="margin-bottom:10px;">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance" style="background: #0077c5;">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt"><span data-bind="text: lang.lang.balance"></span><span data-bind="text: balance" style="font-size:medium; "></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadPO">
										<span class="glyphicons truck"><i></i></span>
										<span class="txt"><span data-bind="text: lang.lang.po"></span><span data-bind="text: po" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadBalance" style="background: #21abf6;">
										<span class="glyphicons circle_exclamation_mark"><i></i></span>
										<span class="txt"><span data-bind="text: openInvoice"></span><span data-bind="text: lang.lang.open"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadOverInvoice">
										<span class="glyphicons turtle"><i></i></span>
										<span class="txt"><span data-bind="text: overInvoice"></span><span data-bind="text: lang.lang.overdue"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input data-role="datepicker"
							   class="sdate"
							   data-format="dd-MM-yyyy"
					           data-bind="value: sdate,
					           			  max: edate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      min: sdate"
					           placeholder="To ..." >

					  	<button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th><span data-bind="text: lang.lang.type"></span></th>								
								<th><span data-bind="text: lang.lang.reference_no"></span></th>
								<th><span data-bind="text: lang.lang.amount"></span></th>
								<th><span data-bind="text: lang.lang.status"></span></th>
								<th><span data-bind="text: lang.lang.action"></span></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="vendorCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="vendorCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>		
			#if(type=="Vendor_Deposit" && amount<0){#
				<a href="\#/purchase/#=reference.length>0?reference[0].id:0#">#=number#</a>						
			#}else{#
				<a href="\#/#=type.toLowerCase()#/#=id#">#=number#</a>
			#}#
        </td>
    	<td class="right">
    		#if(type=="GRN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else if(type=="Cash_Purchase" || type=="Credit_Purchase"){#
    			#=kendo.toString(amount-deposit, locale=="km-KH"?"c0":"c", locale)#
    		#}else{#
    			#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<!-- Status -->
    	<td align="center">        	
        	#if(type==="Credit_Purchase"){#
        		#if(status==="0" || status==="2") {#
        			# var date = new Date(), dueDate = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else if(status==="1") {#
					Paid
				#} else if(status==="3") {#
					Returned
				#}#
        	#}else if(type==="Purchase_Order"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#
        	#}else if(type==="GRN"){#
        		Received 	
        	#}#			
		</td>    	
    	<!-- Actions -->
    	<td align="center">
    		#if(type==="Credit_Purchase"){#
    			#if(status==="0" || status==="2") {#
        			<a data-bind="click: payBill"><i></i> Pay Bill</a>
        		#}#	
        	#}#
		</td>     	
    </tr>
</script>
<script id="vendorCenter-vendor-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body strong">				
				<span>#=abbr##=number#</span>
				<span>#=name#</span>
			</div>
		</td>
	</tr>
</script>
<script id="vendorCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>
<script id="vendor" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.supplier"></h2>			    		   

				    <br>

				    <!-- Top Part -->
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlContactType"><span data-bind="text: lang.lang.supplier_type"></span><span style="color:red">*</span></label>
										<input id="ddlContactType" name="ddlContactType"
												   data-role="dropdownlist"
												   data-header-template="vendor-type-header-tmpl"       
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_type_id,
								                   			  disabled: obj.is_pattern,
								                              source: contactTypeDS,
								                              events:{change: typeChanges}"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />																				            
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6" style="padding-right: 0;">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtAbbr"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>										
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" required data-required-msg="required"
					              				style="width: 55px;" />
					              		-
					              		<input id="txtNumber" name="txtNumber" class="k-textbox"					              			   					                   
							                   data-bind="value: obj.number, 
							                   			  disabled: obj.is_pattern, 
							                   			  events:{change: checkExistingNumber}"
							                   placeholder="eg. 001" required data-required-msg="required"
							                   style="width: 143px;" />
									</div>
									<!-- // Group END -->											
								</div>
							</div>
							
							<div class="row">
								<div class="span12">	
									<!-- Group -->
									<div class="control-group">								
										<label for="fullname"><span data-bind="text: lang.lang.full_name"></span><span style="color:red">*</span></label>
							            <input id="fullname" name="fullname" class="k-textbox" 
							            		data-bind="value: obj.name, 
							            					disabled: obj.is_pattern,
							            					attr: { placeholder: phFullname }" 
							              		required data-required-msg="required"
							              		style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>

							<div class="row">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="customerStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="customerStatus" name="customerStatus" 
							              				data-role="dropdownlist"
									            		data-text-field="name"
						           						data-value-field="id"
						           						data-value-primitive="true" 
									            		data-bind="source: statusList, value: obj.status"
									            		data-option-label="(--- Select ---)"
									            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="registeredDate"><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></label>
							            <input id="registeredDate" name="registeredDate" 
								            		data-role="datepicker"			            		
					            					data-bind="value: obj.registered_date, disabled: obj.is_pattern" 
					            					data-format="dd-MM-yyyy"
					            					data-parse-formats="yyyy-MM-dd" 
					            					placeholder="dd-MM-yyyy" required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>																					
						</div>
						<div class="span6">
							<div class="row-fluid">	
								<!-- Map -->
								<div id="map" class="span12" style="height: 130px;"></div>
							</div>

							<div class="separator line bottom"></div>

							<div class="row-fluid">	
								<div class="span6">									
									<!-- Group -->
									<div class="control-group">
						    			<label for="latitute"><span data-bind="text: lang.lang.latitute"></span> </label>
										<div class="input-prepend">
											<span class="add-on glyphicons direction"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.latitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>
									</div>									
									<!-- // Group END -->
								</div>	
								
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">
						    			<label for="longtitute"><span data-bind="text: lang.lang.longtitute"></span> </label>
						    			<div class="input-prepend">
											<span class="add-on glyphicons google_maps"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.longtitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>										
									</div>
									<!-- // Group END -->
								</div>										
							</div>
						</div>
					</div>								
							
					<!-- // Bottom Part -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">
						        	<li class="span2 glyphicons nameplate_alt active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.info"></span></a>
						            </li>						            
						            <li class="span2 glyphicons usd">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.account"></span></a>
						            </li>
						            <li class="span2 glyphicons credit_card">
						            	<a href="#tab3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.payment"></span></a>
						            </li>
						            <li class="span2 glyphicons parents">
						            	<a href="#tab4" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.agents"></span></a>
						            </li>						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- //GENERAL INFO -->
						        <div class="tab-pane active" id="tab1">
					            	<table class="table table-borderless table-condensed cart_total">					            		
							            <tr>
							                <td><span data-bind="text: lang.lang.vat_no"></span></td>
							              	<td>
					            				<input class="k-textbox" data-bind="value: obj.vat_no" 
													placeholder="e.g. 01234567897" style="width: 100%;" />									
							              	</td>							              	
							            	<td><span data-bind="text: lang.lang.phone"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" style="width: 100%;" /></td>
							            </tr>
							            <tr>
							            	<td><span data-bind="text: lang.lang.country"></span></td>
							              	<td>
							              		<input data-role="dropdownlist"
							              			   data-option-label="(--- Select ---)"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.country_id,
									                              source: countryDS" style="width: 100%;" />
							              	</td>							            								              	
							            	<td><span data-bind="text: lang.lang.email"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" style="width: 100%;" />							            	
							            </tr>
							            <tr>
							            	<td><span data-bind="text: lang.lang.city"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.city" placeholder="city name ..." style="width: 100%;" />							              	
							            	<td><span data-bind="text: lang.lang.post_code"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.post_code" placeholder="e.g. 12345" style="width: 100%;" />
							            </tr>							            
							            <tr style="vertical-align: top;">
							            	<td><span data-bind="text: lang.lang.address"></span></td>
							              	<td><textarea class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." style="width: 100%;" /></textarea></td>									            								              	
							            	<td><span data-bind="text: lang.lang.memo"></span></td>
							              	<td><textarea rows="2" class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." style="width: 100%;" ></textarea></td>							              	
							            </tr>									            
							            <tr  style="vertical-align: top;">
							            	<td>
							            		<span for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> </span>											            
							            	</td>
							            	<td>
							            		<textarea rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="billed to ..."></textarea>
							            	</td>
							            	<td><span data-bind="text: lang.lang.delivered_to"></span></td>
							            	<td>
							            		<textarea rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="delivered to ..."></textarea>
							            	</td>
							            </tr>								            							            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //GENERAL INFO END -->

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane" id="tab2">
						        	
						        	<div class="row-fluid">

						            	<div class="span3">													
											<!-- Group -->
											<div class="control-group">										
												<label for="ddlAP"><span data-bind="text: lang.lang.account_payable"></span><span style="color:red">*</span></label>
												<input id="ddlAP" name="ddlAP"
													   data-role="dropdownlist"
													   data-header-template="account-header-tmpl"
													   data-template="account-list-tmpl"
													   data-option-label="(--- Select ---)"											                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                              source: apDS"
									                   required data-required-msg="required"											                              
									                   style="width: 100%;" />									            
											</div>
											<!-- // Group END -->													
										</div>												
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlTradeDiscountAccount"><span data-bind="text: lang.lang.trade_discount"></span><span style="color:red">*</span></label>
												<input id="ddlTradeDiscountAccount" name="ddlTradeDiscountAccount"
														   data-role="dropdownlist"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"
														   data-option-label="(--- Select ---)"												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.trade_discount_id,
										                              source: tradeDiscountDS"
										                   required data-required-msg="required"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlSettlementDiscountAccount"><span data-bind="text: lang.lang.settlement_discount"></span><span style="color:red">*</span></label>
												<input id="ddlSettlementDiscountAccount" name="ddlSettlementDiscountAccount"
														   data-role="dropdownlist"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"
														   data-option-label="(--- Select ---)"												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.settlement_discount_id,
										                              source: settlementDiscountDS"
										                   required data-required-msg="required"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlPrePaymentAccount"><span data-bind="text: lang.lang.prepayment_account"></span><span style="color:red">*</span></label>
												<input id="ddlPrePaymentAccount" name="ddlPrePaymentAccount"
														   data-role="dropdownlist"
														   data-option-label="(--- Select ---)"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.deposit_account_id,
										                              source: prepaidAccountDS"
										                   required data-required-msg="required"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
																																		
							        </div>								        										        

							        <div class="separator line bottom"></div>

							        <div class="row-fluid">

							        	<div class="span3">						
								            <label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
								            <input id="currency" name="currency" 
								            	data-role="dropdownlist"
								            	data-template="currency-list-tmpl"
								            	data-value-primitive="true"
								                data-text-field="code"
								                data-value-field="locale"
												data-bind="value: obj.locale, 
															disabled: isProtected,
															source: currencyDS"
												data-option-label="(--- Select ---)" 
												required data-required-msg="required" style="width: 100%;" />
								        </div>

										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlTax"><span data-bind="text: lang.lang.tax"></span></label>
												<input id="ddlTax" name="ddlTax"
														   data-role="dropdownlist"
														   data-header-template="tax-header-tmpl"
														   data-option-label="(--- Select ---)"																   												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.tax_item_id,
										                              source: taxItemDS"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->
										</div>

										<!-- Group -->
										<div class="span3">	
									        <div class="control-group">
												<label for="txtCreditLimit"><span data-bind="text: lang.lang.credit_limit"></span> </label>								              		
									            <input data-role="numerictextbox"
									                   data-format="n"
									                   data-min="0"										                   
									                   data-bind="value: obj.credit_limit"										                  
									                   style="width: 100%;">
											</div>
										</div>												

									</div>
					        	</div>
						        <!-- //ACCOUNTING END -->

						        <!-- //PAYMENT -->
						        <div class="tab-pane" id="tab3">
						        	
					            	<table class="table table-borderless table-condensed cart_total">						            	
					            		<tr>							            			
							                <td><span data-bind="text: lang.lang.payment_method"></span></td>
							              	<td>
							              		<input id="ddlPaymentMethod" name="ddlPaymentMethod"
													data-role="dropdownlist"
													data-header-template="vendor-payment-method-header-tmpl"
									            	data-value-primitive="true"
									                data-text-field="name"
									                data-value-field="id"
													data-bind="value: obj.payment_method_id, source: paymentMethodDS"
													data-option-label="(--- Select ---)" 
													style="width: 100%;" />
							              	</td>
							              	<td><span data-bind="text: lang.lang.payment_term"></span></td>
							              	<td>
							              		<input id="ddlPaymentTerm" name="ddlPaymentTerm"
													data-role="dropdownlist"
													data-header-template="vendor-payment-term-header-tmpl"
									            	data-value-primitive="true"
									                data-text-field="name"
									                data-value-field="id"
													data-bind="value: obj.payment_term_id, source: paymentTermDS" 
													data-option-label="(--- Select ---)"
													style="width: 100%;" />
							              	</td>									            	
							            </tr>
							            <tr>
							                <td><span data-bind="text: lang.lang.bank_name"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_name" placeholder="bank name ..." style="width: 100%;" /></td>							              	
							            	<td><span data-bind="text: lang.lang.account_number"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_account_number" placeholder="account number ..." style="width: 100%;" /></td>
							            </tr>									           							            
							            <tr>
							            	<td><span data-bind="text: lang.lang.account_name"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_account_name" placeholder="account name ..." style="width: 100%;" />							              	
							            	<td><span data-bind="text: lang.lang.bank_address"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_address" placeholder="bank address ..." style="width: 100%;" /></td>
							            </tr>
							            <tr>
							            	<td><span data-bind="text: lang.lang.name_on_check"></span></td>
							            	<td><input class="k-textbox" data-bind="value: obj.name_on_cheque" placeholder="name on check ..." style="width: 100%;" /></td>
							            	<td></td>
							            	<td></td>
							            </tr>									            						            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //PAYMENT END -->						        

						        <!-- //CONTACT PERSON -->
						        <div class="tab-pane" id="tab4">
						        	<span style="margin-bottom: 15px;" class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyContactPerson"><i></i> <span data-bind="text: lang.lang.new_agent"></span></span>
						        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.department"></span></th>						                
								                <th><span data-bind="text: lang.lang.phone"></span></th>
								                <th><span data-bind="text: lang.lang.email"></span></th>
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="vendor-contact-person-row-tmpl" 
								        		data-bind="source: contactPersonDS">
								        </tbody>										        						        
								    </table>
					        	</div>
						        <!-- //CONTACT PERSON END -->

						    </div>
						</div>
					</div>

					<br>											
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					

							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="vendor-contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="purchaseOrder" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.c_purchase_order"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.suppliers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
												   data-header-template="vendor-header-tmpl"
												   data-template="contact-list-tmpl"									                    
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_ordered"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" >

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i><span data-bind="text: lang.lang.recuring"></span></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span><span data-bind="text: balance"></span>
												</td>										
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span><span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
								            <tr>
								            	<td><span data-bind="text: lang.lang.expected_date"></span></td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">											
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"		   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Select job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">
							         	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
				                <th data-bind="text: lang.lang.item"></th>
				                <th data-bind="text: lang.lang.description"></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.qty1"></span></th>
				                <th style="width: 13%;"><span data-bind="text: lang.lang.cost1"></span></th>
				                <th style="width: 1%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>
				                <th style="width: 10%;" data-bind="visible: showRequiredDate"><span data-bind="text: lang.lang.tax"></span><span data-bind="text: lang.lang.deliv_date"></span></th>			                
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="purchaseOrder-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
	  									<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>
									<li>
										<input type="checkbox" id="chbRequiredDate" class="k-checkbox" data-bind="checked: showRequiredDate">
      									<label class="k-checkbox-label" for="chbRequiredDate"><span data-bind="text: lang.lang.delivery_date"></span></label>
									</li>															
								</ul>
							</div>
							
							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
						  				 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: obj.discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>					
									<tr>
										<td class="right"><h4 data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="purchaseOrder-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.purchaseOrder.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"				   
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"
				   data-role="dropdownlist"
				   data-header-template="item-measurement-header-tmpl"
				   data-value-primitive="true"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: cost, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>
		<td class="center" data-bind="visible: showRequiredDate">
			<input data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: required_date"
					style="width:100%;" />
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>				
    </tr>   
</script>
<script id="grn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
    				onclick="javascript:window.history.back()"
					data-bind="click: cancel"><i></i></span>

		        <h2 data-bind="text: lang.lang.goods_received_note"></h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 190px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr>
									<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
									<td>
										<input id="txtNumber" name="txtNumber" class="k-textbox" 
												data-bind="value: obj.number,
															disabled: obj.is_recurring,
															events:{change:checkExistingNumber}" 
												required data-required-msg="required" 
												placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
										<div style="padding-left: 0; width: 25px; float: left;">
											<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
										</div>
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.date"></span></td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd HH:mm:ss"
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>								
								<tr>
									<td><span data-bind="text: lang.lang.supplier"></span></td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"
											   data-header-template="vendor-header-tmpl"
											   data-template="contact-list-tmpl"										                    
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																															
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: { backgroundColor: amtDueColor}">
								<div align="left"><span data-bind="text: lang.lang.total_quantity"></span></div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>							

						</div>						
					</div>					   

					<div class="span8">

						<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons pen"><a href="#tab2-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">											
								            <tr>
								            	<td><span data-bind="text: lang.lang.expected_date"></span></td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>							           
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-value-primitive="true"
															data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-4">
							         	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab4-4">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

				    </div>
				</div>

				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
			                <th><span data-bind="text: lang.lang.items"></span></th>
			                <th><span data-bind="text: lang.lang.description"></span></th>
			                <th style="width: 20%;"><span data-bind="text: lang.lang.quantity"></span></th>			                			                			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="grn-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span4">	
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>									
						
						<!-- Add New Item -->
						<ul class="topnav addNew">
							<li role="presentation" class="dropdown ">
						  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
						  			<span data-bind="text: lang.lang.add_new_item"></span>
			    					<span class="caret"></span>
						  		</a>
					  			<ul class="dropdown-menu addNewItem">  				  				
					  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
					  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
					  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
					  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
					  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
					  				 				
					  			</ul>
						  	</li>				
						</ul>
						<!--End Add New Item -->

					</div>
					<!-- Column END -->

					<!-- Column -->
					<div class="span4" align="center">
						<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span4">
						<table class="table table-condensed table-striped table-white">
							<tbody>																								
								<tr>
									<td class="right"><h4><span data-bind="text: lang.lang.total"></span></h4></td>
									<td class="right strong"><h4 data-format="n0" data-bind="text: obj.amount"></h4></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>	           
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no_"></span></button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_new"></span></span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_close"></span></span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_print"></span></span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.delete"></span></span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="grn-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.grn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"				   
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"
					data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"
					data-value-primitive="true"            
                    data-text-field="measurement"
                    data-value-field="measurement_id"
                    data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                    data-option-label="UM"
                    style="width: 57%;" />
		</td>						
    </tr>   
</script>
<script id="vendorDeposit" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

		        <h2 data-bind="text: lang.lang.vendor_deposit"></h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 150px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr>
									<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
									<td>
										<input id="txtNumber" name="txtNumber" class="k-textbox" 
												data-bind="value: obj.number,
															disabled: obj.is_recurring,
															events:{change:checkExistingNumber}" 
												required data-required-msg="required" 
												placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
										<div style="padding-left: 0; width: 25px; float: left;">
											<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
										</div>
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.date"></span></td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd HH:mm:ss"
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>
								<tr>
									<td><span data-bind="text: lang.lang.suppliers"></span></td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"											                    
							                   data-value-primitive="true"
							                   data-header-template="vendor-header-tmpl"
							                   data-template="contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>													
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: {backgroundColor: amtDueColor}">
								<div align="left"><span data-bind="text: lang.lang.amount_deposited"></span></div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>

						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic-noborder">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active" ><a href="#tab1-4" data-toggle="tab" ><i></i></a>
						            </li>
						            <li class="span1 glyphicons pencil"><a href="#tab2-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span2 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i><span data-bind="text: lang.lang.recurring"></span></a>
						            </li>
						           <!--  <li class="span1 glyphicons show_liness"><a href="#tab4-5" data-toggle="tab"><i></i></a></li> -->							            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- Option Tab content -->
						    	<div class="tab-pane active" id="tab1-4">
							       	<table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">						
										<tr>
											<td style="width: 15%"><span data-bind="text: lang.lang.deposit_to"></span></td>
											<td style="width: 40%">
												<input id="cbbAccount" name="cbbAccount"
													   data-role="combobox"
									                   data-value-primitive="true"
									                   data-header-template="account-header-tmpl"
									                   data-template="account-list-tmpl"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                   			  source: depositAccountDS"
									                   data-placeholder="Add Account.."
									                   required data-required-msg="required" style="width: 100%" />
											</td>
										</tr>
										<tr>
											<td style="width: 10%"><span data-bind="text: lang.lang.segment"></span></td>
											<td style="width: 40%">
												<select data-role="multiselect"
											   data-value-primitive="true"
											   data-header-template="segment-header-tmpl"							   
											   data-item-template="segment-list-tmpl"				    
											   data-value-field="id" 
											   data-text-field="code"
											   data-bind="value: obj.segments, 
											   			source: segmentItemDS,
											   			events:{ change: segmentChanges }"
											   data-placeholder="Add Segment.."				   
											   style="width: 100%" /></select>
											</td>														
										</tr>
										<tr>							            				
											<td>
							            		<span data-bind="text: lang.lang.reference"></span>	            						            		
							            	</td>
							            	<td>
												<input data-role="combobox"
														data-template="reference-list-tmpl"
														data-value-primitive="true"
														data-auto-bind="false"
														data-text-field="number" 
							              				data-value-field="id"	 
							              				data-bind="value: obj.reference_id,
							              							enabled: enableRef,
							              							source: referenceDS,						              							
							              							events:{change: referenceChanges}" 
							              				placeholder="Select Reference..." style="width: 100%" />
											</td>
										</tr>									
									</table>
						   		</div>
						   		<!-- Option Tab content END -->

						        <!-- Memo Tab content -->
						        <div class="tab-pane" id="tab2-4">
						        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
						        		data-bind="value: obj.memo2" style="width:100%;" 
						        		placeholder="Please enter transaction purpose here ..."></textarea>
						        </div>
						        <!-- // Memo Tab content END -->

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab3-4">
						        	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
						            
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th><span data-bind="text: lang.lang.file_name"></span></th>
								                <th><span data-bind="text: lang.lang.description"></span></th>
								                <th><span data-bind="text: lang.lang.date"></span></th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab4-4">							            	
						            
						            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->								        

						        <!-- Journal Entry Tab content -->
						        <div class="tab-pane saleSummaryCustomer" id="tab4-5">
									<table class="table table-borderless table-condensed">
								        <thead>
								            <tr>
								                <th>NUMBER</th>
								                <th>ACCOUNT</th>                		                
								                <th class="right">DEBITS (Dr)</th>
								                <th class="right">CREDITS (Cr)</th>		                
								            </tr>
								        </thead> 
								        <tbody>
								        	<tr>
								        		<td>1</td>
								        		<td>2</td>
								        		<td class="right">3</td>
								        		<td class="right">4</td>
								        	</tr>
								        	<tr>
								        		<td>1</td>
								        		<td>2</td>
								        		<td class="right">3</td>
								        		<td class="right">4</td>
								        	</tr>
								        </tbody>			        
								    </table>
								</div>
								<!-- // Journal Entry Tab content END -->

						    </div>
						</div>

				    </div>
				</div>								
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			               
			                <th style="width: 30%;"><span data-bind="text: lang.lang.account"></span></th>
			                <th><span data-bind="text: lang.lang.description"></span></th>
			                <th style="width: 10%;"><span data-bind="text: lang.lang.ref"></span></th>			                
			                <th style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="vendorDeposit-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span6 hidden-print">
						
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>	
						
						<!-- Add New Item -->
						<!-- <ul class="topnav addNew">
							<li role="presentation" class="dropdown ">
						  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
						  			<span data-bind="text: lang.lang.add_new_item"></span>
			    					<span class="caret"></span>
						  		</a>
					  			<ul class="dropdown-menu addNewItem">  				  				
					  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
					  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
					  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
					  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
					  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
					  				 				
					  			</ul>
						  	</li>				
						</ul> -->
						<!--End Add New Item -->

						<!--Add Account -->
						<a href="#/account" class="btn btn-default"><span data-bind="text: lang.lang.add_account"></span></a>
						 

					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span6">
						<table class="table table-borderless table-condensed cart_total">
							<tbody>								
								<tr>
									<td class="right"><span data-bind="text: lang.lang.total"></span></td>
									<td class="right strong"><span data-bind="text: total"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save"></span><span data-bind="text: lang.lang.new"></span></span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_close"></span></span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_print"></span></span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.delete"></span></span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="vendorDeposit-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.vendorDeposit.lineDS.indexOf(data)+1#			
		</td>				
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"
                   data-header-template="account-header-tmpl"                  
                   data-template="account-list-tmpl"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>		
		<td class="right">
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>			
    </tr>   
</script>
<script id="purchase" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.purchase"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.supplier"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="vendor-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_purchased"></span></div>
									<h2 data-bind="text: amount_due" align="right"></h2>
								</div>
							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab2-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab3-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i></a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab5-6" data-toggle="tab"><i></i></a></li> -->						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">
							            	<tr>
							            		<td style="width: 40%">
							            			<table>
							            				<tr>
							            					<td>
										            			<input type="radio" value="Cash_Purchase" class="k-radio"
										            					name="payOption" id="payOption1"
										            					data-bind="checked: obj.type, 
										            								events:{ change: typeChanges }"> 
										            			<label class="k-radio-label" for="payOption1"><span data-bind="text: lang.lang.cash"></span></label>
										            		</td>
										            		<td>
													            <input type="radio" value="Credit_Purchase" class="k-radio"
													            		name="payOption" id="payOption2"
													            		data-bind="checked: obj.type, 
													            					events:{ change: typeChanges }"> 
													            <label class="k-radio-label" for="payOption2"><span data-bind="text: lang.lang.credit"></span></label>
											            	</td>
											            </tr>
										            </table>
							            		</td>
							            		<td style="width: 60%" data-bind="invisible: isCash">
							            			<span data-bind="text: lang.lang.due_date"></span>						            			
								            		<input id="txtDueDate" name="txtDueDate" class="pull-right"
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" />
							            		</td>						            		
							            	</tr>							            
											<tr>
								            	<td>
								            		<span data-bind="text: lang.lang.bill_no"></span>
								            		<input class="k-textbox pull-right" data-bind="value: obj.reference_no" style="width: 170px;" />
								            	</td>
								            	<td>
								            		<span data-bind="text: lang.lang.bill_date"></span>
								            		<input id="txtBillDate" name="txtBillDate" class="pull-right" 
								            				data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.bill_date" />							            		
								            	</td>
								            </tr>
											<tr>
								            	<td><span data-bind="text: lang.lang.account"></span></td>				
												<td>
													<input id="ddlAccount" name="ddlAccount" 
															data-role="dropdownlist"
								              				data-header-template="account-header-tmpl"
								              				data-template="account-list-tmpl"
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.account_id,
								              							source: accountDS"
								              				data-option-label="Select Account..."
								              				required data-required-msg="required" 
								              				style="width: 100%" />
												</td>
											</tr>																				
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-value-primitive="true"
															data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}"
								              				placeholder="Select Reference..." 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	
										<table class="table table-borderless table-condensed cart_total">
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span><span data-bind="text: balance"></span>
												</td>										
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span><span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"							   
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>
											<tr data-bind="invisible: isCash">
								            	<td><span data-bind="text: lang.lang.payment_term"></span></td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-header-template="vendor-payment-term-header-tmpl"					              				 
								              				data-bind="value: obj.payment_term_id,
								              							source: paymentTermDS"
								              				data-option-label="Select Term..." 
								              				style="width: 100%" />
												</td>
											</tr>
											<tr data-bind="visible: isCash">
								            	<td><span data-bind="text: lang.lang.payment_method"></span></td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-header-template="vendor-payment-method-header-tmpl"						              				 
								              				data-bind="value: obj.payment_method_id,
								              							source: paymentMethodDS"
								              				data-option-label="Select Method..." 
								              				style="width: 100%" />
												</td>
											</tr>							            
								            <tr data-bind="visible: isCash">
								            	<td><span data-bind="text: lang.lang.check_no"></span></td>				
												<td>
													<input class="k-textbox" data-bind="value: obj.check_no" style="width: 100%" />
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">

							        	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab5-6">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Middle Part -->
					<div class="box-generic">

					    <!-- Tabs Heading -->
					    <div class="tabsbar tabsbar-2">
					        <ul class="row-fluid row-merge">
					        	<li class="span6 glyphicons cargo active"><a href="#tab1-2" data-toggle="tab"><i></i><span data-bind="text: lang.lang.items_expense"></span></a>
					            </li>
					            <li class="span6 glyphicons circle_plus"><a href="#tab2-2" data-toggle="tab"><i></i><span data-bind="text: lang.lang.additional_costs"></span></a>
					            </li>				            					            								            
					        </ul>
					    </div>
					    <!-- // Tabs Heading END -->

					    <div class="tab-content">

					    	<!-- Item Tab content -->
					        <div class="tab-pane active" id="tab1-2">						            
					        	<!-- Item List -->
								<table class="table table-bordered table-primary table-striped table-vertical-center">
							        <thead>
							            <tr>
							                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
							                <th><span data-bind="text: lang.lang.items"></span></th>
							                <th><span data-bind="text: lang.lang.description"></span></th>
							                <th style="width: 20%;"><span data-bind="text: lang.lang.quantity"></span></th>
							                <th style="width: 10%;"><span data-bind="text: lang.lang.cost"></span></th>
							                <th style="width: 1%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>			                
							                <th class="center" style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>
							                <th class="center" style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>
							                <th class="center" style="width: 1%;" data-bind="visible: showAdditionalCost">+Cost</th>			                			                			                
							            </tr> 
							        </thead>
							        <tbody data-role="listview" 
							        		data-template="purchase-item-line-template" 
							        		data-auto-bind="false"
							        		data-bind="source: lineDS"></tbody>			        
							    </table>

							    <!-- Item Add Row part -->
					            <div class="row">		
															
									<div class="span12">
										<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

										<div class="btn-group">
											<div class="leadcontainer">
												
											</div>
											<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
											<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
												<li>
													<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
													<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
												</li>
												<li>
													<input type="checkbox" id="chbAdditionalCost" class="k-checkbox" data-bind="checked: showAdditionalCost" />												
													<label class="k-checkbox-label" for="chbAdditionalCost"><span data-bind="text: lang.lang.additional_costs"></span></label>
												</li>																									
											</ul>
										</div>

										<!-- Add New Item -->
										<ul class="topnav addNew">
											<li role="presentation" class="dropdown ">
										  		<a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
										  			<span data-bind="text: lang.lang.add_new_item"></span>
							    					<span class="caret"></span>
										  		</a>
									  			<ul class="dropdown-menu addNewItem">  				  				
									  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
									  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
									  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
									  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
									  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
									  				 				
									  			</ul>
										  	</li>				
										</ul>
										<!--End Add New Item -->

									</div>										
									
								</div>

								<br>

							    <!-- Account List -->
								<table class="table table-bordered table-primary table-striped table-vertical-center">
							        <thead>
							            <tr>
							                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
							                <th style="width: 20%;"><span data-bind="text: lang.lang.account"></span></th>
							                <th><span data-bind="text: lang.lang.description"></span></th>
							                <th data-bind="visible: showRef" style="width: 7%;"><span data-bind="text: lang.lang.ref"></span></th>			                
							                <th data-bind="visible: showSegment" style="width: 15%;"><span data-bind="text: lang.lang.segment"></span></th>
							                <th class="center" style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>
							                <th class="center" style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>			                			                
							            </tr> 
							        </thead>
							        <tbody data-role="listview" 
							        		data-template="purchase-account-line-template" 
							        		data-auto-bind="false"
							        		data-bind="source: accountLineDS"></tbody>			        
							    </table>
							    <!-- Add Row Account -->
							    <div>
									<button class="btn btn-inverse" data-bind="click: addRowAccount"><i class="icon-plus icon-white"></i></button>												

									<div class="btn-group">
										<div class="leadcontainer">
											
										</div>
										<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
										<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
											<li>											
												<input type="checkbox" id="chbReference" class="k-checkbox" data-bind="checked: showRef" />												
												<label class="k-checkbox-label" for="chbReference"><span data-bind="text: lang.lang.reference"></span></label>
											</li>
											<li>											
												<input type="checkbox" id="chbSegment" class="k-checkbox" data-bind="checked: showSegment" />												
												<label class="k-checkbox-label" for="chbSegment"><span data-bind="text: lang.lang.segment"></span></label>
											</li>															
										</ul>
									</div>
									
							  		<a href="#/account" class="btn" style="background: #f4f4f4; color: #333; width: 137px;">
							  			<span data-bind="text: lang.lang.add_account"></span>
							  		</a>					
								</div>

					        </div>
					        <!-- // Item Tab content END -->

					        <!-- Additional Cost Tab content -->
					        <div class="tab-pane" id="tab2-2">				        	
								<table class="table table-bordered table-primary table-striped table-vertical-center">
							        <thead>
							            <tr>
							                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
							                <th><span data-bind="text: lang.lang.type"></span></th>
							                <th><span data-bind="text: lang.lang.account"></span></th>
							                <th><span data-bind="text: lang.lang.supplier"></span></th>
							                <th data-bind="text: lang.lang.inv_"></th>
							                <th><span data-bind="text: lang.lang.date"></span></th>
							                <th data-bind="visible: showDueDateColumn"><span data-bind="text: lang.lang.due_date"></span></th>
							                <th data-bind="visible: showDescriptionColumn"><span data-bind="text: lang.lang.description"></span></th>						                						                			                
							                <th class="center" style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>
							                <th class="center" style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>			                			                			                
							            </tr> 
							        </thead>
							        <tbody data-role="listview" 
							        		data-template="purchase-additional-cost-template" 
							        		data-auto-bind="false"
							        		data-bind="source: additionalCostDS"></tbody>			        
							    </table>

							    <!-- Add Row part -->
					            <div class="row-fluid">		
															
									<div class="span8">

										<table>
											<tr>
												<td>
													<button class="btn btn-inverse" data-bind="click: addRowAdditionalCost"><i class="icon-plus icon-white"></i></button>

													<div class="btn-group">
														<div class="leadcontainer">
															
														</div>
														<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
														<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
															<li>
																<input type="checkbox" id="chbDueDateColumn" class="k-checkbox" data-bind="checked: showDueDateColumn" />												
																<label class="k-checkbox-label" for="chbDueDateColumn"><span data-bind="text: lang.lang.due_date"></span></label>
															</li>																										
														</ul>
													</div>
												</td>
												<td><span data-bind="text: lang.lang.additional_cost_apply"></span></td>
												<td>
													<input type="radio" name="engine" id="engine1" class="k-radio" value="Equal" 
															data-bind="checked: obj.additional_apply,
																		events:{ change: changes }">
										            <label class="k-radio-label" for="engine1"><span data-bind="text: lang.lang.equal"></span></label>
							            		</td>						            	
							            		<td>						         
										            <input type="radio" name="engine" id="engine2" class="k-radio" value="Weighted"
										            		data-bind="checked: obj.additional_apply,
																		events:{ change: changes }">
										            <label class="k-radio-label" for="engine2"><span data-bind="text: lang.lang.weighted"></span></label>
							            		</td>
							            	</tr>
							            </table>
									</div>

									<div class="span4">
										<table class="table table-condensed table-striped table-white">
											<tbody>
												<tr>												
													<td class="right"><span data-bind="text: lang.lang.costs_allocated"></span></td>
													<td class="right strong" width="40%"><span data-bind="text: additional_cost"></span></td>
												</tr>
											</tbody>
										</table>
									</div>										
									
								</div>
					        </div>
					        <!-- // Additional Cost Tab content END -->				        						        								        

					    </div>
					</div>

 		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">														
							<div class="span12 well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-spinners="false"
								                   data-min="0"							                                      
								                   data-bind="value: obj.discount,
								                              events: { change: discountChanges }"
								                   style="width: 90%; text-align: right;">
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>																
									<tr>
										<td class="right"><h4><span data-bind="text: lang.lang.total"></span></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.deposit"></span>
											<span data-format="n" data-bind="text: total_deposit"></span>										
										</td>
										<td class="right">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-spinners="false"
								                   data-min="0"							                                      
								                   data-bind="value: obj.deposit,
								                              events: { change: changes }"
								                   style="width: 90%; text-align: right;">
										</td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.remaining"></span>
										</td>
										<td class="right">
											<span data-format="n" data-bind="text: obj.remaining"></span>
										</td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no_"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="purchase-item-line-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.purchase.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="txtMeasurement" name="txtMeasurement-#:uid#"
				   data-role="dropdownlist"
                   data-header-template="item-measurement-header-tmpl"
                   data-value-primitive="true"
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: cost, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"                   
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>
		<td class="center" data-bind="visible: showAdditionalCost">
			<span data-format="n" data-bind="text: additional_cost"></span>
						
			<input type="checkbox" data-bind="checked: additional_applied,
										events:{ change: changes }" />
							
		</td>				
    </tr>   
</script>
<script id="purchase-account-line-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowAccount }"></i>
			#:banhji.purchase.accountLineDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="cbbAccounts" name="cbbAccounts-#:uid#"
				   data-role="combobox"
                   data-template="account-list-tmpl"
                   data-value-primitive="true"                                     
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: expenseAccountDS"
                   data-placeholder="Add Account.."        
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>			
		<td data-bind="visible: showSegment">
			<select data-role="multiselect" id="ddlSegment"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-min="0" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItemAccount-#:uid#"
				   data-role="combobox"
                   data-header-template="tax-header-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>			
    </tr>   
</script>
<script id="purchase-additional-cost-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowAdditionalCost }"></i>
			#:banhji.purchase.additionalCostDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="ddlType-#:uid#" name="ddlType-#:uid#"
				   data-role="dropdownlist"                   
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: type,
                              source: typeList,
                              events:{ change : typeColumnChanges }"                                       
                   required data-required-msg="required" style="width: 100%" />	
		</td>
		<td>
			<input id="ddlAccount" name="ddlAccount-#:uid#" 
					data-role="dropdownlist"
					data-header-template="account-header-tmpl"
      				data-template="account-list-tmpl"
					data-value-primitive="true"
					data-text-field="name" 
      				data-value-field="id"
      				data-bind="value: account_id,
      							source: additionalCostAccountDS"
      				data-option-label="Select Account..."
      				required data-required-msg="required" 
      				style="width: 100%" />
		</td>
		<td>
			<input id="ddlVendor" name="ddlVendor-#:uid#"
				   data-role="combobox"
				   data-header-template="vendor-header-tmpl"
                   data-template="contact-list-tmpl"                 
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: additionalContactDS,
                              events:{ change : contactColumnChanges }"
                   data-placeholder="Add Name.."                    
                   style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"
					style="width: 100%; margin-bottom: 0;" />		
		</td>
		<td>
			<input id="txtIssuedDate" name="txtIssuedDate" 
					data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: issued_date"
					style="width:100%;" />
		</td>
		<td data-bind="visible: showDueDateColumn">
			<input data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: due_date"
					style="width:100%;" />
		</td>		
		<td data-bind="visible: showDescriptionColumn">
			<input type="text" class="k-textbox" 
					data-bind="value: memo"
					style="width: 100%; margin-bottom: 0;" />
		</td>				
		<td class="right">
			<input id="txtSubTotal-#:uid#" name="txtSubTotal-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-min="0"
					data-bind="value: sub_total, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>		
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-header-template="tax-header-tmpl"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>			
    </tr>   
</script>
<script id="purchaseReturn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.c_purchase_return"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.supplier"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="vendor-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_received"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons pen"><a href="#tab2-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab4-4" data-toggle="tab"><i></i></a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab4-5" data-toggle="tab"><i></i></a></li> -->
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">										
											<tr>							            				
												<td><span data-bind="text: lang.lang.relate_purchase"></span></td>
								            	<td>
													<input id="cbbReference" name="cbbReference"
															data-role="combobox"
								              				data-template="reference-list-tmpl"
								              				data-value-primitive="true"
								              				data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}"
								              				placeholder="Type number..." 
								              				required data-required-msg="required" style="width: 100%" />
												</td>
											</tr>		            	
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"	
														   data-header-template="segment-header-tmpl"							   
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->						        

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for internal ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab3-4">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-4">

							        	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->

							        <div class="tab-pane saleSummaryCustomer" id="tab4-5">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>


							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 13%;"><span data-bind="text: lang.lang.cost"></span></th>		                
				                <th style="width: 1%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>			                
				                <th class="center" style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th class="center" style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>		                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="purchaseReturn-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>
									
		            <!-- Bottom part -->
		            <div class="row">
			
						<!-- Column -->
						<div class="span9">		
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												
						
							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
										<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>																
								</ul>
							</div>
							
							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
						  				 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>					

							<table class="table table-bordered table-inverse table-striped table-vertical-center" data-bind="visible: showReturn">
						        <thead>
						            <tr>
						            	<th class="center" style="width: 1%;">
						            		<button type="button" data-role="button" data-bind="click: addRowOption"><i class="icon-plus"></i></button>
						            	</th>
						            	<th style="width: 30%"><span data-bind="text: lang.lang.type_of_return"></span></th>					               
						                <th><span data-bind="text: lang.lang.condition"></span></th>					                		                
						                <th style="width: 20%"><span data-bind="text: lang.lang.amount"></span></th>		                			                			                
						            </tr> 
						        </thead>
						        <tbody data-role="listview" 
						        		data-template="purchaseReturn-return-line-template" 
						        		data-auto-bind="false"
						        		data-bind="source: returnDS"></tbody>			        
						    </table>
														
						</div>
						<!-- Column END -->

						<!-- Column -->
						<!-- <div class="span3" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div> -->
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span3">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>																
									<tr>
										<td class="right"><h4><span data-bind="text: lang.lang.total"></span></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.amount_paid"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: obj.amount_paid"></span>
										</td>
									</tr>
									<tr>							
										<td class="right"><span data-bind="text: lang.lang.remaining"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: remaining"></span>
										</td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="purchaseReturn-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.purchaseReturn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"
				   data-role="dropdownlist"
                   data-header-template="item-measurement-header-tmpl"
                   data-value-primitive="true"
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-min="0" 
					data-bind="value: cost, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>					
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="purchaseReturn-return-line-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowOption }"></i>					
		</td>			
		<td>
			<input id="ddlOption" name="ddlOption-#:uid#"
				   data-role="dropdownlist"
				   data-value-primitive="true"				                      			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: type, 
                   			  source: optionList,
                   			  events:{ change: optionChanges }"
                   data-option-label="Select Option..." 
                   style="width: 100%" />            
		</td>
		<td>
			<input id="cbbInvoice" name="cbbInvoice-#:uid#"
				   data-role="combobox"
				   data-template="reference-list-tmpl"
				   data-value-primitive="true"
                   data-auto-bind="false"
                   data-text-field="number"
                   data-value-field="id"
                   data-bind="value: reference_id, 
                   			  source: invoiceDS,
                   			  visible: showInvoice,
                   			  events:{ change: invoiceChanges }"
                   placeholder="Select Invoice..." 
                   style="width: 100%" />

            <input id="ddlAccount" name="ddlAccount-#:uid#"
				   data-role="dropdownlist"
				   data-template="account-list-tmpl"
				   data-value-primitive="true"				                      			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id, 
                   			  source: accountDS,
                   			  visible: showAccount"                   
                   style="width: 100%" />            
		</td>						
		<td>
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-min="0" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>								
    </tr>   
</script>

<script id="vendorSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2 data-bind="text: lang.lang.general_supplier_setting"></h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.supplier_type"></span></span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.payment_method"></span></span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.payment_term"></span></span></a>
	            </li>
	            <li><a href="#tab4-1" class="glyphicons list" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.custom_forms"></span></span></a>
	            </li>	
	            <li><a href="#tab5-1" class="glyphicons building" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.prefix_setting"></span></span></a>
	            </li>                           
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- Tab Contact Type content -->
	            <div class="tab-pane active" id="tab1-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="Enter New Vendor Type here ..." data-bind="value: contactTypeName">
					    <button class="btn btn-default" type="button" data-bind="click: addContactType"><i class="icon-plus"></i><span data-bind="text: lang.lang.add_type"></span></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th><span data-bind="text: lang.lang.type"></span></th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
		            			data-edit-template="vendorSetting-edit-contact-type-template"
				                data-template="vendorSetting-contact-type-template"
				                data-bind="source: contactTypeDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Contact Type content END -->

	            <!-- PAYMENT METHOD -->
	            <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i><span data-bind="text: lang.lang.add_method"></span></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th><span data-bind="text: lang.lang.name"></span></th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="vendorSetting-edit-payment-method-template"
				                data-template="vendorSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // PAYMENT METHOD END -->

	            <!-- PAYMENT TERM -->
	            <div class="tab-pane" id="tab3-1">
            		<div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="net due ..." data-bind="value: paymentTermNetDue">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="period ..." data-bind="value: paymentTermPeriod">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i><span data-bind="text: lang.lang.add_term"></span></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th><span data-bind="text: lang.lang.name"></span></th>
	            				<th><span data-bind="text: lang.lang.net_due"></span></th>
	            				<th><span data-bind="text: lang.lang.discount_period"></span></th>
	            				<th><span data-bind="text: lang.lang.discount_persentage"></span></th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="vendorSetting-edit-payment-term-template"
				                data-template="vendorSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // PAYMENT TERM END -->

	            <!-- Tab Invocice Custom content -->
	            <div class="tab-pane" id="tab4-1">
            		
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center"><span data-bind="text: lang.lang.name"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.form_type"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.last_edited"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.action"></span></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="customerSetting-form-template"
				                 data-bind="source: txnTemplateDS">				            
	            		</tbody>
	            	</table>
	            	<a id="addNew" class="btn-icon btn-primary glyphicons ok_2" data-bind="click: goInvoiceCustom" style="width: 110px;"><i></i><span data-bind="text: lang.lang.add_new"></span></a>
	            </div>
	            <!-- // Tab Invoice Custom content END -->
	            <div class="tab-pane" id="tab5-1">
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center" data-bind="text: lang.lang.type"></th>
	            				<th class="center" data-bind="text: lang.lang.abbr"></th>
	            				<th style="text-align: left;padding-left: 5px;" data-bind="text: lang.lang.name"></th>
	            				<th class="center"><span data-bind="text: lang.lang.action"></span></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="accountSetting-prefix-template"
				                 data-bind="source: prefixDS">				            
	            		</tbody>
	            	</table>

	            </div>
	        </div>
	    </div>

	</div>
</script>
<script id="vendorSetting-contact-type-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		        <a class="k-button" href="\#/vendor/0/#=id#"><span data-bind="text: lang.lang.pattern"></span></a>
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="vendorSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="vendorSetting-payment-method-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="vendorSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="vendorSetting-payment-term-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">
    		#:net_due#
   		</td>
   		<td align="center">
    		#:discount_period#
   		</td>
   		<td align="center">
    		#:discount_percentage#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="vendorSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="netDue" required="required" validationMessage="required" />
                <span data-for="netDue" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_period" name="period" required="required" validationMessage="required" />
                <span data-for="period" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="vendorRecurring" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

				    <h2>Supplier Recurring</h2>

				    <br>

				    <div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons user" href="#tab-1" data-toggle="tab"><i></i>Select Supplier</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									
									       <input id="cbbContact" name="cbbContact"
												   data-role="combobox"											                    
								                   data-value-primitive="true"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: contact_id,
								                              source: contactDS,
								                              events:{change: search}"
								                   data-placeholder="Supplier..." style="width: 200px;" />
							        	</div>
								        <!-- //GENERAL INFO END -->

								    </div>
								</div>
							</div>
						</div>
					</div>
					                           					
	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
			                <th>TYPE</th>
			                <th>RECURRING NAME</th>
			                <th>SUPPLIER</th>
			                <th>START DATE</th>
			                <th class="center">FREQUENCY</th>
			                <th></th>
	            		</thead>
	            		<tbody data-role="listview" 
				        		data-template="vendorRecurring-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
			             data-role="pager" 
			             data-auto-bind="false"
			             data-bind="source: dataSource"></div>

	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="vendorRecurring-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#=type#</td>
		<td>#=recurring_name#</td>
		<td>#=banhji.vendorRecurring.getContactName(contact_id)#</td>
		<td>#=kendo.toString(new Date(start_date), "dd-MM-yyyy")#</td>
		<td class="center">#=frequency#</td>
		<td class="center">
			<a class="btn btn-warning" data-bind="click: edit"><i></i> Edit</a>
			<a class="btn btn-success" data-bind="click: use"><i></i> Use</a>
		</td>		
    </tr>   
</script>

<script id="vendorReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>EXPENSE/PURCHASE MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports in different ways to help analyze what 
					you spent and their impact on your cash flow and performance. 
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/expenses_purchase_summary_supplier">Expenses/ Purchase Summary by Supplier</a></h3>
							</td>
							<td >
								<h3><a href="#/suppliers_transaction_list">Suppliers Transaction List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes total expenses/ purchase for each suppliers within a period of time.
								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each suppliers
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/expenses_purchase_detail_supplier">Expenses/Purchase Detail by Supplier</a></h3>
							</td>
							<td >
								<h3><a href="#/deposit_detail_supplier">Deposit Detail by Supplier</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual expenses/ purchase transactions by date for each supplier within a period of time.
								</p>
							</td>
							<td >
								<p>
									Provides detailed information about supplier deposit for specific order, prepayment, or credit.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/purchase_summary_product_services">Purchase Summary by Product/ Services</a></h3>
							</td>
							<td >
								<h3><a href="#/open_purchase_order">Open Purchase Order</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Summarizes total expenses/ purchase for each product/ service within a period of time. 
								</p>
							</td>
							<td >
								<p>
									Lists all the open purchase order grouped by suppliers including the original amount as well.
								</p>
							</td>
						</tr>
						<tr>
							<td >
								<h3><a href="#/purchase_detail_product_services">Purchase Detail by Product/ Services</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual sale transactions by date for each product/ service with a period of time.
								</p>
							</td>
						</tr>

					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>PAYABLES MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/suppliers_balance_summary">Suppliers Balance Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/suppliers_balance_detail">Suppliers Balance Detail</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Show each supplier’s total outstanding balances.
								</p>
								
							</td>
							<td >
								<p>
									Lists individual unpaid bill for each supplier
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/payables_aging_summary">Payables Aging Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/payables_aging_detail">Payables Aging Detail</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all unpaid bills for the current period, 30, 60, 90, and more than 90 days, grouped by individual suppliers. 
								</p>
							</td>
							<td >
								<p>
									Lists individual unpaid bills, grouped by suppliers. This includes due date, outstanding days (aging days), and amount.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/list_bills_paid">List of bills to be paid</a></h3>
							</td>
							<td >
								<h3><a href="#/bill_payment_list">Bill Payment List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all unpaid invoices, grouped by Due today and Overdue.
								</p>
							</td>
							<td >
								<p>
									Lists of paid bills for the select period of time, group by method of payments.
								</p>
							</td>
						</tr>						

					</table>
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<!-- <td style="width: 48%; padding-right: 8px !important;">
								<h3><a href="#/product_service_list">Product/ Service List</a></h3>
							</td> -->
							<td >
								<h3><a href="#/supplier_list">Supplier List</a></h3>								
							</td>
							<td >
								<h3><a href="#/vendor_recurring">Recurring Supplier Template List</a></h3>								
							</td>						
						</tr>
						<tr>
							<!-- <td style="width: 48%; padding-right: 8px !important;" >
								<p>
									Lists the products and services you purchase. The following information is included: name, 
									description, cost, sales price, and quantity on hand.
								</p>								
							</td> -->
							<td >
								<p>
									Lists of all active suppliers
								</p>
							</td>
							<td>								
							</td>						
						</tr>
						<!-- <tr>
							<td>
							</td>
							<td >
								<h3><a href="#/customer_recurring">Recurring Supplier Template List</a></h3>								
							</td>
						</tr> -->
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Expenses/ Purchase Overview</h2>
					<div align="center" class="text-large strong" data-bind="text: purchase"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: purchase_supplier"></span>
								<br>
								<span>Suppliers</span>
							</td>
							<td>
								<span data-bind="text: purchase_product"></span>
								<br>
								<span>Products</span>
							</td>
							<td>
								<span data-bind="text: purchase_order"></span>
								<br>
								<span>Order</span>
							</td>
						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
			</div>
			<div class="report-chart">
				<div class="widget-body receivable-overview" style="background-color: LightGray">
					<h2>PAYABLES MANAGEMENT</h2>
					<div align="center" class="text-large strong" data-bind="text: ap"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: ap_open"></span>
								<br>
								<span>Open</span>
							</td>
							<td>
								<span data-bind="text: ap_supplier"></span>
								<br>
								<span>Supplier</span>
							</td>
							<td>
								<span data-bind="text: ap_overdue"></span>
								<br>
								<span>Overdue</span>
							</td>
							<td>
								<span data-bind="text: collection_day"></span>
								<br>
								<span>Payable Payment Days</span>
							</td>
						</tr>
					</table>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="expensesSummarySupplier" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Expenses/ Purchase Summary by Supplier</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">
									<p>Total Supplier</p>
									<span data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-sale">
									<p>Total Expenses/ Purchase</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th ><span>Supplier</span></th>
									<th style="text-align: right;"><span>Credit Purchase</span></th>
									<th style="text-align: right;"><span>Cash Purchase</span></th>
									<th ><span>Total Expenses/ Purchase</span></th>								
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-bind="source: dataSource"
										  data-auto-bind="false"
										 data-template="expensesSummarySupplier-temp"
							></tbody>
						</table>					
					</div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="expensesSummarySupplier-temp" type="text/x-kendo-template" >
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=credit_purchase#</td>
		<td style="text-align: right;">#=cash_purchase#</td>
		<td style="text-align: right;">#=kendo.toString(amount, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="expensesDetailSupplier" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">

						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Expenses/ Purchase Detail by Supplier</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">
									<p>Total Supplier</p>
									<span data-bind="text: dataSource.total"></span>
								</div>

							</div>
							<div class="span9">
								<div class="total-sale">
									<p>Total Expenses/ Purchase</p>
									<span data-bind="text: total"></span>
								</div>
							</div>
						</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.type"></span></th>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th  style="text-align: right;"><span>Reference</span></th>							
								<th><span data-bind="text: lang.lang.amount"></span></th>
							</tr>
						</thead>
						<tbody data-role="listview" data-bind="source: dataSource" 
						       data-auto-bind="false" 
						       data-template="expensesDetailSupplier-temp">
						</tbody>
					</table>

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="expensesDetailSupplier-temp" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td>#=name#</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>
			<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>			
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="4">&nbsp;</td>
    </tr>
</script>
<script id="supplierTransaction" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Suppliers Transaction List</h2>
							<p data-bind="text: displayDate"></p>
						</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.type"></span></th>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th style="text-align: right;"><span>Reference</span></th>
								<th><span data-bind="text: lang.lang.amount"></span></th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: dataSource"
									   data-auto-bind="false"
									 data-template="supplierTransaction-temp"
						></tbody>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="supplierTransaction-temp" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td>#=name#</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>	
	# var total = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# total += kendo.parseFloat(line[i].amount);#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>
			<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>			
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(total, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="4">&nbsp;</td>
    </tr>
</script>
<script id="depositDetailSupplier" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Deposit Detail By Supplier</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">
									<p>Number of Supplier</p>
									<span data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Deposit Balance</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th><span>Number</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
									<th style="text-align: right;"><span>Balance</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									 data-bind="source: dataSource"
									 data-auto-bind="false"
									 data-template="depositDetailSupplier-template"
							></tbody>
						</table>

					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="depositDetailSupplier-template" type="text/x-kendo-tmpl">
	<tr>
	#var balance = balance_forward;#
		<td colspan="5" style="font-weight: bold;">#: name #</td>
    	<td class="right strong" style="color: black;">
    		#=kendo.toString(balance_forward, "c", banhji.locale)#
    	</td>
	</tr>
	#for(var i=0; i<line.length; i++){#
		#balance += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important; color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>		
			<td style="color: black;">
				#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#
			</td>
			<td style="color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a>
			</td>
			<td style="color: black;">
				#if(line[i].reference.length>0){#
					<a href="\#/#=line[i].reference[0].type.toLowerCase()#/#=line[i].reference[0].id#"><i></i> #=line[i].reference[0].number#</a>
				#}#
			</td>
			<td align="right" style="color: black;">
				#=kendo.toString(line[i].amount, "c2", banhji.locale)#
			</td>
			<td class="right" style="color: black;">
				#=kendo.toString(balance, "c2", banhji.locale)#
			</td> 			
	    </tr>    
    #}# 
    <tr>
    	<td colspan="5" style="font-weight: bold; color: black;">Total #: name #</td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(balance, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="6">&nbsp;</td>
    </tr>  
</script>
<script id="purchaseSummaryProductServices" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.item"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="item-header-tmpl"
															   data-item-template="item-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.itemIds, 
															   			source: itemDS"
															   data-placeholder="Select Item..."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Purchase Summary By Product/Services</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Total Product/services</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Avg. Purchase</p>
										<span data-bind="text: avg_sale"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Total Purchase</p>
									<span data-bind="text: total_sale"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>ITEM</span></th>
									<th style="text-align: right;"><span>QTY</span></th>
									<th style="text-align: right;"><span>AMOUNT</span></th>
									<th style="text-align: right;"><span>AVG PRICE</span></th>
									<th style="text-align: right;"><span>AVG COST</span></th>
									<th style="text-align: right;"><span>GROSS PROFIT MARGIN</span></th>								
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-template="purchaseSummaryProductServices-temp"
										 data-auto-bind="false"
										 data-bind="source: dataSource"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="purchaseSummaryProductServices-temp" type="text/x-kendo-template">
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=kendo.toString(quantity, "n")# #=measurement#</td>
		<td style="text-align: right;">#=kendo.toString(amount, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(avg_price, "c2", banhji.locale)#</td>	
		<td style="text-align: right;">#=kendo.toString(avg_cost, "c2", banhji.locale)#</td>	
		<td style="text-align: right;">#=kendo.toString(gpm, "p")#</td>			
	</tr>
</script>
<script id="purchaseOrderList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Purchase Order List</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Number of Supplier</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Purchase Order</p>
										<span data-bind="text: orderCount"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">									
									<p>Amount</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed">
							<thead>
								<tr>
									<th><span>Number</span></th>
									<th><span>Reference</span></th>
									<th><span>Date</span></th>
									<th style="text-align: center;"><span>Status</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									data-template="purchaseOrderList-temp"
									data-auto-bind="false"
									data-bind="source: dataSource"
							></tbody>
						</table>
					</div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="purchaseOrderList-temp" type="text/x-kendo-template">
	<tr style="font-weight: bold; color: black;">
		<td colspan="5">#=name#</td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>
			<td>
				#if(line[i].reference.length>0){#
					<a href="\#/#=line[i].reference[0].type.toLowerCase()#/#=line[i].reference[0].id#"><i></i> #=line[i].reference[0].number#</a>
				#}#
			</td>
			<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: center;">
        		#if(line[i].status==="0"){#
        			Open
        		#}else{#
        			Used
        		#}#
			</td>
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td colspan="4" style="font-weight: bold; color: black;">Total #=name#</td>    	
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="5">&nbsp;</td>
    </tr>
</script>
<script id="purchaseDetailProductServices" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.item"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="item-header-tmpl"
															   data-item-template="item-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.itemIds, 
															   			source: itemDS"
															   data-placeholder="Select Item..."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Purchase Detail By Product/Service</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Total Product/Services</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Avg. Purchase</p>
										<span data-bind="text: product_sale"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">									
									<p>Total Purchase</p>
									<span data-bind="text: total_sale"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th style="text-align: right;"><span>Purchase Date</span></th>
									<th style="text-align: right;"><span>Reference</span></th>
									<th style="text-align: right;"><span>QTY</span></th>
									<th style="text-align: right;"><span>PRICE</span></th>
									<th><span>AMOUNT</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-template="purchaseDetailProductServices-temp"
										 data-auto-bind="false"
										 data-bind="source: dataSource"										 
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="purchaseDetailProductServices-temp" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td colspan="6">#=name#</td>
	</tr>
	#var totalAmount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		#totalAmount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important; color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].type#</a>
			</td>
			<td style="text-align: right;">#=kendo.toString(new Date(line[i].issued_date),"dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>
			<td style="text-align: right;">#=kendo.toString(line[i].quantity, "n")# #=line[i].measurement#</td>
			<td style="text-align: right;">#=kendo.toString(line[i].price, "c2", banhji.locale)#</td>
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>

	#}#
	<tr>
    	<td colspan="5" style="font-weight: bold; color: black;">Total #: name #</td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalAmount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="6">&nbsp;</td>
    </tr>
</script>
<script id="suppliersBalanceSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Suppliers Balance Summary</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Open Bill</p>
										<span data-bind="text: total_txn"></span>
									</div>
									<div class="span6">
										<p>Number of Supplier</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Total Supplier Balance</p>
									<span data-bind="text: total_balance"></span>									
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>SUPPLIER NAME</span></th>
									<th style="text-align: right;"><span>No.BILL</span></th>
									<th><span>BALANCE</span></th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="suppliersBalanceSummary-temp"
					                data-bind="source: dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="suppliersBalanceSummary-temp" type="text/x-kendo-template">
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=txn_count#</td>
		<td align="right">#=kendo.toString(amount, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="suppliersBalanceDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>					
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Supplier Balance Detail</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Open Bill</p>
										<span data-bind="text: total_txn"></span>
									</div>
									<div class="span6">
										<p>Number Supplier</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Total Supplier Balance</p>
									<span data-bind="text: total_balance"></span>						
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th style="text-align: right;"><span>Bill Date</span></th>
									<th style="text-align: right;"><span>Reference</span></th>								
									<th><span>Balance</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-auto-bind="false"
										 data-bind="source: dataSource"										 
										 data-template="suppliersBalanceDetail-temp"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="suppliersBalanceDetail-temp" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td colspan="4">#=name#</td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += kendo.parseFloat(line[i].amount);#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>
			<td style="text-align: right;">#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>			
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="4">&nbsp;</td>
    </tr>
</script>
<script id="payablesAgingSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Payables Aging Summary</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row">
							<div class="span3" style="padding-right: 0;">
								<div class="total-customer">									
									<p>Number of Supplier</p>
									<span data-format="n0" data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Total Supplier Balance</p>
									<span data-bind="text: totalBalance"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Name</span></th>
									<th style="text-align: right;"><span>CURRENT</span></th>
									<th style="text-align: right;"><span>1-30</span></th>
									<th style="text-align: right;"><span>31-60</span></th>
									<th style="text-align: right;"><span>61-90</span></th>
									<th style="text-align: right;"><span>OVER 90</span></th>
									<th style="text-align: right;"><span>TOTAL</span></th>							
								</tr>
							</thead>
							<tbody data-role="listview"
									data-auto-bind="false"
								 	data-bind="source: dataSource"
								 	data-template="payablesAgingSummary-temp"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="payablesAgingSummary-temp" type="text/x-kendo-template" >
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=kendo.toString(current, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(in30, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(in60, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(in90, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(over90, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(total, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="payablesAgingDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">									
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filters -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Payables Aging Detail</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row">
							<div class="span3" style="padding-right: 0;">
								<div class="total-customer">									
									<p>Number of Supplier</p>
									<span data-format="n0" data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Total Supplier Balance</p>
									<span data-bind="text: totalBalance"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Bill Date</span></th>
									<th><span>Due Date</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: center;"><span>Status</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
									<th style="text-align: right;"><span>Balance</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
								 data-auto-bind="false"
								 data-bind="source: dataSource"
								 data-template="payablesAgingDetail-temp"
							></tbody>
						</table>
					</div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="payablesAgingDetail-temp" type="text/x-kendo-tmpl">
	<tr>
		<td colspan="7" style="font-weight: bold; color: black;">#: name #</td>
	</tr>
	#var totalBalance = 0;#
	#for(var i=0; i<line.length; i++){#
	#totalBalance += line[i].amount;#
	<tr>
		<td style="padding-left: 20px !important;">
			<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
		</td>
		<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
		<td>#=kendo.toString(new Date(line[i].due_date), "dd-MM-yyyy")#</td>
		<td><a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a></td>		
		<td style="text-align: right;"> 
    		#if(line[i].type==="Cash_Receipt"){#
				PMT
			#}else if(line[i].type==="Sale_Return"){#
				Returned
        	#}else{#
        		#if(line[i].status==="0" || line[i].status==="2") {#
					# var date = new Date(), dueDates = new Date(line[i].due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDates < toDay) {#
						Over Due #:Math.floor((toDay - dueDates)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDates - toDay)/(1000*60*60*24))# days to pay
					#}#
				#}else{#
					Paid
				#}#
        	#}#
		</td>
		<td style="text-align: right;">
			#=kendo.toString(line[i].amount, "c2", banhji.locale)#
		</td>
		<td style="text-align: right;">
			#=kendo.toString(totalBalance, "c2", banhji.locale)#
		</td>
	</tr>
    #}#
    <tr>
    	<td colspan="6" style="font-weight: bold; color: black;">Total</td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalBalance, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="7">&nbsp;</td>
    </tr>  
</script>
<script id="listBillsPaid" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Supplier.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>List Of Bill to be Paid</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">									
									<p>Number of Supplier</p>
									<span data-format="n0" data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Total Balance</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th><span>Name</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: center;"><span>Status</span></th>	
									<th><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									data-auto-bind="false"
								 	data-bind="source: dataSource"
								 	data-template="listBillsPaid-temp"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="listBillsPaid-temp" type="text/x-kendo-template">
	<tr>
		<td>
			<a href="\#/#=type.toLowerCase()#/#=id#">#=type#</a>
		</td>
		<td>#=kendo.toString(new Date(issued_date),"dd-MM-yyyy")#</td>
		<td>#=name#</td>
		<td>
			<a href="\#/#=type.toLowerCase()#/#=id#">#=number#</a>
		</td>
		<td style="text-align: center;">
			# var date = new Date(), dueDates = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
			#if(dueDates < toDay) {#
				Over Due #:Math.floor((toDay - dueDates)/(1000*60*60*24))# days
			#} else {#
				#:Math.floor((dueDates - toDay)/(1000*60*60*24))# days to pay
			#}#
		</td>
		<td style="text-align: right;">#=kendo.toString(amount, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="billPaymentList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.suppliers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="supplier-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Suppler.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Bill Payment List</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3" style="padding: 0;">
								<div class="total-customer">									
									<p>Number of Bill</p>
									<span data-format="n0" data-bind="text: total_txn"></span>
								</div>
							</div>
							<div class="span9" style="padding-right: 0;">
								<div class="total-customer">
									<p>Total Balance</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Bill Date</span></th>
									<th><span>Bill Number</span></th>
									<th><span>Bill Amount</span></th>
									<th><span>Payment Date</span></th>
									<th><span>Payment Number</span></th>
									<th><span>Payment Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-auto-bind="false"
										 data-bind="source: dataSource"
										 data-template="billPaymentList-temp"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="billPaymentList-temp" type="text/x-kendo-template">
	<tr>
		<td colspan="6" style="font-weight: bold; color: black;">#: name #</td>
	</tr>
	# var totalInvoice = 0, totalReceived = 0;#	
	#for(var i=0; i<line.length; i++){#
	#totalInvoice += line[i].amount;#
	<tr>
		<td style="vertical-align: top;">#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
		<td style="vertical-align: top;"><a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a></td>
		<td style="vertical-align: top; text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		<td colspan="3" style="padding-top: 0 !important; ">
			#if(line[i].payments.length>0){#
			<table class="table receipt-table">
				#for(var j=0; j<line[i].payments.length; j++){#
				#totalReceived += line[i].payments[j].amount;#
				<tr>
					<td style="background: transparent !important;">#=kendo.toString(new Date(line[i].payments[j].issued_date), "dd-MM-yyyy")#</td>
					<td style="background: transparent !important;"><a href="\#/#=line[i].payments[j].type.toLowerCase()#/#=line[i].payments[j].id#">#=line[i].payments[j].number#</a></td>
					<td style="text-align: right; background: transparent !important;">#=kendo.toString(line[i].payments[j].amount, "c2", banhji.locale)#</td>
				</tr>
				#}#
			</table>
			#}#
		</td>
	</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalInvoice, "c", banhji.locale)#
    	</td>    	
    	<td></td>
    	<td></td>
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalReceived, "c", banhji.locale)#
    	</td>
    </tr>
	<tr>
    	<td colspan="6">&nbsp;</td>
    </tr>
</script>
<script id="productServiceList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>								        
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Product/ Service List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Product Items on Hand</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Service Items</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Service Items on Hand</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item Name</th>
							<th>Description</th>
							<th>Type</th>
							<th>Sale Tax</th>							
							<th>Record P</th>
							<th>Cost</th>
							<th>Sale Price</th>
							<th>QOH</th>
							<th>Suppliers</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>					
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<th colspan="9" style="text-align: left; padding-left: 8px !important;">Total</th>
						</tr>
					</table>

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="supplierList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
																			
										<li><a class="glyphicons print" href="#tab-1" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<br>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: institute.name"></h3>
							<h2>Supplier List</h2>
						</div>
						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>SupplierID</span></th>
									<th><span>Supplier Name</span></th>
									<th><span>Type</span></th>
									<th><span>Address</span></th>
									<th><span>Phone</span></th>
									<th><span>E-Mail</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-bind="source: contact"
										 data-template="SupplierList-temp"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="SupplierList-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr>
		<td>#=number#</td>
		<td>#=name#</td>
		<td>#=contact_type#</td>
		<td>#=address#</td>
		<td>#=phone#</td>
		<td>#=email#</td>
	</tr>
</script>



<!-- ***************************
*	Customer Section           *
**************************** -->
<script id="customerDashboard" type="text/x-kendo-template">

	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td>
			        	<h2 data-bind="text: lang.lang.customers"></h2>
			        	<p>
			        		<span data-bind="text: lang.lang.in_here"></span>
			        	</p>

			        	<p style="width: 100%; float: left; margin-top: 8px; margin-bottom: 15px;">
				        	<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 32px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" href="#/customer_recurring">
									<span class="badge fix badge-primary" style="color: #fff;  position: absolute; top: -13px; background: #203864; right: 5px; width: 25px; height: 25px; font-size: 15px; line-height: 25px;">0</span>
									Recurring												
								</a>
							</span>

							<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a href="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/guide/banhJi_customer_guide.pdf" target="_blank" style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 39px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
									This Module's Guide												
								</a>
							</span>
						</p>

						<div class="cover-block" style="box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        	<div class="supplier-icon">
						       	<div class="span4">
							       	<a href="#/customer" class="center">
							       		<img title="Add Customers" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/customers.ico" />
							       	</a>
							       </div>
							    <div class="span4">
							       	<a href="#/item" class="center">
							       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/item_service" class="center">
							       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
							       	</a>
							    </div>
							</div>
						</div>

			        </td>
			 	</tr>
			</table>
			<div class="cover-block">
				<table class="table table-borderless table-condensed table-vertical-center costom-imag">
					<tr>
						<td class="center">
							<a href="#/quote">
								<img title="Add Quote" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/quotation.png"  height="200" />
								<span data-bind="text: lang.lang.quotation" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>
						<td class="center">
							<a href="#/sale_order">
								<img title="Add Sale Order" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_order.png"  height="200" />
								<span data-bind="text: lang.lang.sale_order" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>
						<td class="center">
							<a href="#/customer_deposit">
								<img title="Add Customer Deposit" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/customer_deposit.png"  height="200" />
								<span data-bind="text: lang.lang.c_deposit" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>					
					</tr>
					<tr>
						<td class="center">
							<a href="#/cash_sale">
								<img title="Add Cash Sale" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_receipt.png"  height="200" />
								<span data-bind="text: lang.lang.cash_sale" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>
						<td class="center">
							<a href="#/invoice">
								<img title="Add Invoice" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/invoice.png"  height="200" />
								<span data-bind="text: lang.lang.invoice" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>
						<td class="center">						
							<a href="#/cash_receipt">
								<img title="Add Cash Receipt" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_receipt.png"  height="200" />
								<span data-bind="text: lang.lang.cash_receipt" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>										
					</tr>
					<tr>				
						<td style="vertical-align:top;" class="center">
							<a href="#/gdn">
								<img title="Add Delivery Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/delivery_note.png"  height="200" />
								<span data-bind="text: lang.lang.delivery_note" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>
						<td width="186" class="center">
							<a href="#/sale_return">
								<img title="Add Sale Return" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_return.png"  height="200" />
								<span data-bind="text: lang.lang.sale_return" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>				
						<td width="186" class="center">
							<a href="#/statement">
								<img title="Add Statement" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/statement.png"  height="200" />
								<span data-bind="text: lang.lang.statement" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>
					</tr>				
				</table>
			</div>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border"  >
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.sale"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/sale_summary_by_customer"><div class="widget-body alert alert-primary " style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong medai-font" data-bind="text: sale"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%" style="vertical-align: top">
										<span data-bind="text: sale_customer"></span>
										<br>
										<span data-bind="text: lang.lang.customers"></span>
									</td>
									<td width="33%" style="vertical-align: top">
										<span data-bind="text: sale_product"></span>
										<br>
										<span data-bind="text: lang.lang.product"></span>
									</td>
									<td width="33%" style="vertical-align: top">
										<span data-bind="text: sale_order"></span>
										<br>
										<span data-bind="text: lang.lang.order"></span>
									</td>
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<a href="#/sale_order_list"><div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.sale_order"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info " style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong medai-font" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td width="50%" style="vertical-align: top">										
										<span data-bind="text: order_avg"></span>
										<br>
										<span><span data-bind="text: lang.lang.average"></span></span>
									</td>
									<td width="50%" style="vertical-align: top">
										<span data-bind="text: order_open"></span>
										<br>
										<span><span data-bind="text: lang.lang.order_open"></span></span>
									</td>									
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.receivable"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/customer_balance_summary"><div class="widget-body alert-info" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong medai-font" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%" style="vertical-align: top">										
										<span data-bind="text: ar_open"></span>
										<br>
										<span><span data-bind="text: lang.lang.open"></span></span>
									</td>
									<td width="33%" style="vertical-align: top">
										<span data-bind="text: ar_customer"></span>
										<br>
										<span><span data-bind="text: lang.lang.customers"></span></span>
									</td>
									<td width="33%" style="vertical-align: top">
										<span data-bind="text: ar_overdue"></span>
										<br>
										<span><span data-bind="text: lang.lang.overdue"></span></span>
									</td>
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">								
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th class="center" colspan="2" style="background: #203864;"><span data-bind="text: lang.lang.top_5_customers"></span></th>				                			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="customerDashBoard-top-customer-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>				           
				            <tr>
				                <th class="center" colspan="2" style="background: #203864;"><span data-bind="text: lang.lang.top_5_ar_balance"></span></th>				                			                
				            </tr>					        
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="customerDashBoard-top-ar-template"
			                 data-bind="source: topARDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>				           
				            <tr>
				                <th class="center" colspan="2" style="background: #203864;"><span data-bind="text: lang.lang.top_5_products"></span></th>				                			                
				            </tr>					        
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="customerDashBoard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#203864', overlay:{ gradient: 'none'} },
	                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#9CB9D9', overlay:{ gradient: 'none'} }
	                             ]"
	                 data-auto-bind="false"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>
            <!-- End Graph -->
            </div>
		</div>		

	</div>		
</script>
<script id="customerDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<!-- <td style="width: 1%">#:banhji.customerDashboard.topCustomerDS.indexOf(data)+1#</td -->>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="customerDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.customerDashboard.topARDS.indexOf(data)+1#</td>		 -->
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="customerDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.customerDashboard.topProductDS.indexOf(data)+1#</td>		 -->
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="customerCenter" type="text/x-kendo-template">
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Number or Name..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>						
							<div class="select2-container" style="width: 100%;  margin-bottom: 10px;">
								<input data-role="dropdownlist"
					                   data-option-label="Select Type..."
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: contact_type_id,
					                              source: contactTypeDS"
					                   style="width: 100%;" />							
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid"						 
						 data-bind="source: contactDS"
						 data-row-template="customerCenter-customer-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">
							    	<input type="text" name="" data-bind="value: obj.name" disabled="disabled" style="border: none; width: 69%; font-size: 20px; font-weight: 600; margin-top: -11px; margin-left: 11px; background: #fff;">
							        <!-- Tabs -->
							        <ul class="pull-right">

							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-4"><i></i></span>
							            </li>							            							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab2-4"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab3-4"><i></i></span>
							            </li>
							            <li class="glyphicons paperclip"><span data-toggle="tab" data-target="#tab4-4"><i></i></span>
							            </li>							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-4" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-inverse" data-bind="click: goQuote"><span><span data-bind="text: lang.lang.quote"></span></span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goDeposit"><span><span data-bind="text: lang.lang.c_deposit"></span></span>								            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goSaleOrder"><span><span data-bind="text: lang.lang.sale_order"></span></span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashSale"><span><span data-bind="text: lang.lang.cash_sale"></span></span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goSaleReturn"><span data-bind="text: lang.lang.sale_return1"></span></span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goInvoice"><span data-bind="text: lang.lang.invoice"></span></span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>								            		
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goGDN"><span data-bind="text:lang.lang.c_gdn"></span></span>
								            		</td>
								            		<td class="center">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashReceipt"><span data-bind="text: lang.lang.cash_receipt"></span></span>								            			

								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goStatement"><span data-bind="text: lang.lang.statement"></span></span>
								            		</td>
								            		<td>
								            			
								            		</td>
								            	</tr>
							            	</table>
							            </div>
							            <!-- // Transactions Tab content END -->							           					            

							            <!-- INFO Tab content -->
							            <div id="tab2-4" class="tab-pane box-generic">
							            	<div class="row-fluid">
							            		<div class="accounCetner-textedit">
									            	<table width="100%">
														<tr>
															<td width="40%"><span data-bind="text: lang.lang.customer_type"></span></td>
															<td width="60%">
																<span class="strong" data-bind="text: obj.contact_type"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.number"></span></td>
															<td>
																<span class="strong" data-bind="text: obj.abbr"></span>
																<span class="strong" data-bind="text: obj.number"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.name"></span></td>
															<td>
																<span data-bind="text: obj.name"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.billed_address"></span></td>
															<td>
																<span data-bind="text: obj.address"></span>
															</td>
														</tr>								
														<tr>
															<td><span data-bind="text: lang.lang.phone"></span></td>
															<td>
																<span data-bind="text: obj.phone"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.currency"></span></td>
															<td>										
																<span data-bind="text: currencyCode"></span>
															</td>
														</tr>
													</table>

													<span class="btn btn-primary btn-icon glyphicons edit pull-right" data-bind="click: goEdit"><i></i><span data-bind="text: lang.lang.view_edit_profile"></span></span>
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab3-4" class="tab-pane">

										    <div>
												<input type="text" class="k-textbox" 
														data-bind="value: note" 
														placeholder="Add memo ..." 
														style="width: 366px;" />
												<span class="btn btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.add"></span></span>
											</div>

											<br>

											<div class="table table-condensed" style="height: 100;"						 
												 data-role="grid"
												 data-auto-bind="false"						 
												 data-bind="source: noteDS"
												 data-row-template="customerCenter-note-tmpl"
												 data-columns="[{title: ''}]"
												 data-height="100"						 
												 data-scrollable="{virtual: true}"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->

							            <!-- Attach Tab content -->
								        <div id="tab4-4" class="tab-pane">							            	
								            <p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
								            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

								            <table class="table table-bordered">
										        <thead>
										            <tr>			                
										                <th><span data-bind="text: lang.lang.file_name"></span></th>
										                <th><span data-bind="text: lang.lang.description"></span></th>
										                <th><span data-bind="text: lang.lang.date"></span></th>
										                <th style="width: 13%;"></th>                			                
										            </tr> 
										        </thead>
										        <tbody data-role="listview" 
										        		data-template="attachment-list-tmpl" 
										        		data-auto-bind="false"
										        		data-bind="source: attachmentDS"></tbody>			        
										    </table>

										    <span class="btn btn-icon btn-success glyphicons ok_2" data-bind="click: uploadFile" style="color: #fff; padding: 5px 38px; text-align: left; width: 98px !important; display: inline-block; margin-top: 10px;"><i></i> <span data-bind="text: lang.lang.save"></span></span>

								        </div>
								        <!-- // Attach Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6" style="margin-bottom: 10px;">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance" style="cursor: pointer; background: #0077c5">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt"><span data-bind="text: lang.lang.balance"></span><span data-bind="text: balance" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadDeposit" style="cursor: pointer; ">
										<span class="glyphicons briefcase"><i></i></span>
										<span class="txt"><span data-bind="text: lang.lang.deposit"></span><span data-bind="text: deposit" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadBalance" style="cursor: pointer; background: #21abf6;">
										<span class="glyphicons circle_exclamation_mark"><i></i></span>
										<span class="txt"><span data-bind="text: outInvoice"></span> <span data-bind="text: lang.lang.open_invoice"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadOverInvoice" style="cursor: pointer;"> 
										<span class="glyphicons turtle"><i></i></span>
										<span class="txt"><span data-bind="text: overInvoice"></span> <span data-bind="text: lang.lang.over_due"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>
					</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input data-role="datepicker"
							   class="sdate"
							   data-format="dd-MM-yyyy"
					           data-bind="value: sdate,
					           			  max: edate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      min: sdate"
					           placeholder="To ..." >

					  	<button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th><span data-bind="text: lang.lang.type"></span></th>								
								<th><span data-bind="text: lang.lang.reference_no"></span></th>
								<th><span data-bind="text: lang.lang.amount"></span></th>
								<th><span data-bind="text: lang.lang.status"></span></th>
								<th><span data-bind="text: lang.lang.action"></span></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="customerCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="customerCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <!-- Reference -->
        <td>
        	#if(type=="Customer_Deposit" && amount<0){#			
				<a href="\#/#=reference[0].type.toLowerCase()#/#=reference[0].id#"><i></i> #=number#</a>			
			#}else{#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>
			#}#        	
        </td>
        <!-- Amount -->
    	<td class="right">
    		#if(type=="GDN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else if(type=="Commercial_Invoice" || type=="Vat_Invoice" || type=="Invoice" || type=="Commercial_Cash_Sale" || type=="Vat_Cash_Sale" || type=="Cash_Sale"){#
    			#=kendo.toString(amount-deposit, locale=="km-KH"?"c0":"c", locale)#
    		#}else{#
    			#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<!-- Status -->
    	<td align="center">
    		#if(type==="Quote"){#       		
				#if(status==="0"){#
        			Open
        		#}else{#
        			Used        			
        		#}#
        	#}else if(type==="Sale_Order"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#
        	#}else if(type==="GDN"){#
        		Delivered
        	#}else if(type==="Commercial_Invoice" || type==="Vat_Invoice" || type==="Invoice"){#
        		#if(status==="0" || status==="2") {#
        			# var date = new Date(), dueDate = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else if(status==="1") {#
					Paid
				#} else if(status==="3") {#
					Returned
				#}#        	
        	#}#        				
		</td>
		<!-- Actions -->
    	<td align="center">
			#if(type==="Commercial_Invoice" || type==="Vat_Invoice" || type==="Invoice"){#
				#if(status==="0" || status==="2") {#
        			<a data-bind="click: payInvoice"><i></i> <span data-bind="text: lang.lang.receive_payment"></span></a>
        		#}#
        	#}#
		</td>     	
    </tr>
</script>
<script id="customerCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body strong">				
				<span>#=abbr##=number#</span>
				<span>#=name#</span>
			</div>
		</td>
	</tr>
</script>
<script id="customerCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>
<script id="customer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>						
					
			        <h2 span data-bind="text: lang.lang.customers"></h2>			    		   

				    <br>

				    <!-- Top Part -->
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlContactType"><span data-bind="text: lang.lang.customer_type"></span> <span style="color:red">*</span></label>
										<input id="ddlContactType" name="ddlContactType"
												   data-role="dropdownlist"
												   data-header-template="customer-type-header-tmpl"       
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_type_id,
								                   			  disabled: obj.is_pattern,
								                              source: contactTypeDS,
								                              events:{change: typeChanges}"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />																				            
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6" style="padding-right: 0;">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtAbbr"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>										
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" required data-required-msg="required"
					              				style="width: 55px;" />
					              		-					              		
					              		<input id="txtNumber" name="txtNumber"
					              			   class="k-textbox"					              			   					                   
							                   data-bind="value: obj.number, 
							                   			  disabled: obj.is_pattern,
							                   			  events:{change:checkExistingNumber}"
							                   placeholder="eg. 001" required data-required-msg="required"
							                   style="width: 143px;" />
									</div>
									<!-- // Group END -->											
								</div>
							</div>
							
							<div class="row">
								<div class="span12">	
									<!-- Group -->
									<div class="control-group">								
										<label for="fullname"><span data-bind="text: lang.lang.full_name"></span> <span style="color:red">*</span></label>
							            <input id="fullname" name="fullname" class="k-textbox" 
							            		data-bind="value: obj.name, 
							            					disabled: obj.is_pattern,
							            					attr: { placeholder: phFullname }" 
							              		required data-required-msg="required"
							              		style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>

							<div class="row">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="customerStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="customerStatus" name="customerStatus" 
							              				data-role="dropdownlist"
									            		data-text-field="name"
						           						data-value-field="id"
						           						data-value-primitive="true" 
									            		data-bind="source: statusList, value: obj.status"
									            		data-option-label="(--- Select ---)"
									            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="registeredDate"><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></label>
							            <input id="registeredDate" name="registeredDate" 
								            		data-role="datepicker"			            		
					            					data-bind="value: obj.registered_date, disabled: obj.is_pattern" 
					            					data-format="dd-MM-yyyy"
					            					data-parse-formats="yyyy-MM-dd" 
					            					placeholder="dd-MM-yyyy" required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>																					
						</div>
						<div class="span6">
							<div class="row-fluid">	
								<!-- Map -->
								<div id="map" class="span12" style="height: 130px;"></div>
							</div>

							<div class="separator line bottom"></div>

							<div class="row-fluid">	
								<div class="span6">									
									<!-- Group -->
									<div class="control-group">
						    			<label for="latitute"><span data-bind="text: lang.lang.latitute"></span> </label>
										<div class="input-prepend">
											<span class="add-on glyphicons direction"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.latitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>
									</div>									
									<!-- // Group END -->
								</div>	
								
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">
						    			<label for="longtitute"><span data-bind="text: lang.lang.longtitute"></span> </label>
						    			<div class="input-prepend">
											<span class="add-on glyphicons google_maps"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.longtitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>										
									</div>
									<!-- // Group END -->
								</div>										
							</div>
						</div>
					</div>								
							
					<!-- // Bottom Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons nameplate_alt active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
						            </li>								            
						            <li class="span2 glyphicons usd">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.account"></span></span></a>
						            </li>
						            <li class="span2 glyphicons parents">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span><span ></span>Contact</span></a>
						            </li>						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- //GENERAL INFO -->
						        <div class="tab-pane active" id="tab1">
					            	<table class="table table-borderless table-condensed cart_total">					            		
							            <tr>
							                <td><span data-bind="text: lang.lang.vat_no"></span></td>
							              	<td>
					            				<input class="k-textbox" data-bind="value: obj.vat_no" 
													placeholder="e.g. 01234567897" style="width: 100%;" />									
							              	</td>							              	
							            	<td><span data-bind="text: lang.lang.phone"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" style="width: 100%;" /></td>
							            </tr>
							            <tr>
							            	<td><span data-bind="text: lang.lang.country"></span></td>
							              	<td>
							              		<input data-role="dropdownlist"
							              			   data-option-label="(--- Select ---)"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.country_id,
									                              source: countryDS" style="width: 100%;" />
							              	</td>							            								              	
							            	<td><span data-bind="text: lang.lang.email"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" style="width: 100%;" />							            	
							            </tr>
							            <tr>
							            	<td><span data-bind="text: lang.lang.city"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.city" placeholder="city name ..." style="width: 100%;" /></td>							              	
							            	<td><span data-bind="text: lang.lang.post_code"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.post_code" placeholder="e.g. 12345" style="width: 100%;" /></td>
							            </tr>							            
							            <tr style="vertical-align: top;">
							            	<td><span data-bind="text: lang.lang.address"></span></td>
							              	<td><textarea class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." style="width: 100%;" /></textarea></td>									            								              	
							            	<td><span data-bind="text: lang.lang.memo"></span></td>
							              	<td><textarea rows="2" class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." style="width: 100%;" ></textarea></td>							              	
							            </tr>									            
							            <tr  style="vertical-align: top;">
							            	<td>
							            		<span for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> </span>											            
							            	</td>
							            	<td>
							            		<textarea rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="billed to ..."></textarea>
							            	</td>
							            	<td><span data-bind="text: lang.lang.delivered_to"></span></td>
							            	<td>
							            		<textarea rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="delivered to ..."></textarea>
							            	</td>
							            </tr>							            							            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //GENERAL INFO END -->

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane" id="tab2">
						        	
						        	<div class="row-fluid">								        		
						            	<div class="span3">
											<label for="ddlAR"><span data-bind="text: lang.lang.account_receiveable"></span> <span style="color:red">*</span></label>
											<input id="ddlAR" name="ddlAR"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.account_id,
								                              source: arDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />													
										</div>
										<div class="span3">
											<label for="ddlRA"><span data-bind="text: lang.lang.revenue_account"></span> <span style="color:red">*</span></label>
											<input id="ddlRA" name="ddlRA"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl" 
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.ra_id,
								                              source: raDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />													
										</div>
										<div class="span3">
											<label for="ddlDepositAccount"><span data-bind="text: lang.lang.deposit_account"></span> <span style="color:red">*</span></label>
											<input id="ddlDepositAccount" name="ddlDepositAccount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.deposit_account_id,
								                              source: depositDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />													
										</div>
										<div class="span3">
											<label for="ddlTradeDiscount"><span data-bind="text: lang.lang.trade_discount"></span> <span style="color:red">*</span></label>
											<input id="ddlTradeDiscount" name="ddlTradeDiscount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.trade_discount_id,
								                              source: tradeDiscountDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />														
										</div>												
							        </div>

							        <div class="separator line bottom"></div>

							        <div class="row-fluid">
						        		<div class="span3">						
								            <label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
								            <input id="currency" name="currency" 
								            	data-role="dropdownlist"
								            	data-template="currency-list-tmpl"
								            	data-value-primitive="true"
								                data-text-field="code"
								                data-value-field="locale"
												data-bind="value: obj.locale,
															disabled: isProtected, 
															source: currencyDS"
												data-option-label="(--- Select ---)" 
												required data-required-msg="required" style="width: 100%;" />
								        </div>
						            	<div class="span3">
											<label for="ddlPaymentTerm"><span data-bind="text: lang.lang.payment_term"></span></label>
											<input id="ddlPaymentTerm" name="ddlPaymentTerm"
												data-header-template="customer-term-header-tmpl"
												data-role="dropdownlist"
								            	data-value-primitive="true"
								                data-text-field="name"
								                data-value-field="id"
												data-bind="value: obj.payment_term_id, source: paymentTermDS" 
												data-option-label="(--- Select ---)"
												style="width: 100%;" />
										</div>
										<div class="span3">
											<label for="ddlPaymentMethod"><span data-bind="text: lang.lang.payment_method"></span></label>
											<input id="ddlPaymentMethod" name="ddlPaymentMethod"
												data-header-template="customer-payment-method-header-tmpl"
												data-role="dropdownlist"
								            	data-value-primitive="true"
								                data-text-field="name"
								                data-value-field="id"
												data-bind="value: obj.payment_method_id, source: paymentMethodDS"
												data-option-label="(--- Select ---)" 
												style="width: 100%;" />
										</div>
										<div class="span3">
											<label for="ddlSettlementDiscount"><span data-bind="text: lang.lang.settlement_discount"></span> <span style="color:red">*</span></label>
											<input id="ddlSettlementDiscount" name="ddlSettlementDiscount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.settlement_discount_id,
								                              source: settlementDiscountDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />														
										</div>												
							        </div>

							        <div class="separator line bottom"></div>

							        <div class="row-fluid">
							        	<div class="span3">
											<label for="ddlTaxItem"><span data-bind="text: lang.lang.tax"></span></label>
											<input id="ddlTaxItem" name="ddlTaxItem"
												   data-role="dropdownlist"								
												   data-header-template="tax-header-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.tax_item_id,
								                              source: taxItemDS"
								                   data-option-label="(--- Select ---)"
								                   style="width: 100%;" />
										</div>	
								        <div class="span3">
											<label for="txtCreditLimit"><span data-bind="text: lang.lang.credit_limit"></span> </label>								              		
								            <input data-role="numerictextbox"
								                   data-format="n"
								                   data-min="0"										                   
								                   data-bind="value: obj.credit_limit"										                  
								                   style="width: 100%;">
										</div>																							
									</div>
					        	</div>
						        <!-- //ACCOUNTING END -->						       

						        <!-- //CONTACT PERSON -->
						        <div class="tab-pane" id="tab3">
						        	<span style="margin-bottom: 15px;" class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyContactPerson"><i></i><span data-bind="text: lang.lang.new_contact_person"></span></span>

						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.department"></span></th>						                
								                <th><span data-bind="text: lang.lang.phone"></span></th>
								                <th><span data-bind="text: lang.lang.email"></span></th>
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="contact-person-row-tmpl" 
								        		data-bind="source: contactPersonDS">
								        </tbody>										        						        
								    </table>
					        	</div>
						        <!-- //CONTACT PERSON END -->
						    </div>
						</div>
					</div>

					<br>											
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="quote" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.quote"></h2>

				    <br>
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_quoted"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" >

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.recuring"></span></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span> <span data-bind="text: balance"></span>
												</td>										
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span> <span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
								            <tr>
								            	<td><span data-bind="text: lang.lang.validity_date"></span></td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>							           
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.refrence"></span>	            						            		
								            	</td>
								            </tr>
								            <tr>
								            	<td>
								            		<span data-bind="text: lang.lang.term"></span>     		
								            	</td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"	
								              				data-header-template='customer-term-header-tmpl'					              				 
								              				data-bind="value: obj.payment_term_id,
								              							source: paymentTermDS,
								              							events:{ change: setTerm }"
								              				data-option-label="Select Term..." 
								              				style="width: 100%" />
												</td>
											</tr>
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">							                        	
											<tr>
												<td><span data-bind="text: lang.lang.sale_rep"></span></td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"		   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Select job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">
							         	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recurring Tab content -->
							        <div class="tab-pane" id="tab5-5">
							            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>             
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.price"></span></th>
				                <th style="width: 10%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>			                
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.tax"></span></th>			                			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="quote-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>											 
	 									<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
	  									<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>

									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
						  				 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: obj.discount"></span>
	                   					</td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>															
									<tr>
										<td class="right"><h4 span data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="quote-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.quote.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"				   
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" 
					name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" 
					style="width: 40%;" />

			<input 	id="ddlMesurement"
					data-role="dropdownlist"					
					data-header-template="item-measurement-header-tmpl"
					data-value-primitive="true"                 
                	data-text-field="measurement"
                   	data-value-field="measurement_id"
                   	data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input 	id="txtPrice-#:uid#" 
					name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input 	id="ccbTaxItem" 
					name="ccbTaxItem-#:uid#"
					data-header-template="tax-header-tmpl"
				   	data-role="combobox"   
				   	data-value-primitive="true"
                   	data-text-field="name"
                   	data-value-field="id"
                   	data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   	style="width: 100%" />			
		</td>						
    </tr>
</script>
<script id="saleOrder" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">				    
			    	
		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>					

			        <h2 data-bind="text: lang.lang.sale_order"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: {backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_ordered"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" >

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i> Recuring</a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span> <span data-bind="text: balance"></span>
												</td>										
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span> <span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
								            <tr>
								            	<td><span data-bind="text: lang.lang.expected_date"></span></td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>							           
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>	                    		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
								              				data-value-primitive="true"
								              				data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">							                        	
											<tr>
												<td><span data-bind="text: lang.lang.sale_rep"></span></td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"		   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Select job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">
							         	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>		
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>                
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.price"></span></th>
				                <th style="width: 10%;" data-bind="visible: showCost"><span >Cost</span></th>
				                <th style="width: 10%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>
				                <th style="width: 10%;" data-bind="visible: showRequiredDate"><span data-bind="text: lang.lang.delivery_date"></span></th>               
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.tax"></span></th>
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="saleOrder-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
      									<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>
									<li>
										<input type="checkbox" id="chbRequiredDate" class="k-checkbox" data-bind="checked: showRequiredDate">
      									<label class="k-checkbox-label" for="chbRequiredDate"><span data-bind="text: lang.lang.delivery_date"></span></label>
									</li>
									<li>
										<input type="checkbox" id="chbCost" class="k-checkbox" data-bind="checked: showCost">
      									<label class="k-checkbox-label" for="chbCost"><span>Cost</span></label>
									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>	
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: obj.discount"></span>
	                   					</td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>
									<tr>
										<td class="right"><h4><span data-bind="text: lang.lang.total"></span></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="saleOrder-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.saleOrder.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"				   
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" name="ddlMesurement"
					data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"
					data-value-primitive="true"                
                    data-text-field="measurement"
                    data-value-field="measurement_id"
                    data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                    data-option-label="UM"
                    style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showCost">
			<span data-format="n" data-bind="text: cost"></span>
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>
		<td class="center" data-bind="visible: showRequiredDate">
			<input data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: required_date"
					style="width:100%;" />
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="customerDeposit" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.customer_deposit"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 150px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-value-primitive="true"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: {backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_deposited"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.recurring"></span></a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab5-6" data-toggle="tab"><i></i></a>
							            </li> -->						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span> <span data-bind="text: balance"></span>
												</td>										
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span> <span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr> 
											<tr>
												<td style="width: 15%"><span data-bind="text: lang.lang.deposit_to"></span></td>
												<td style="width: 40%">
													<input id="cbbAccount" name="cbbAccount"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="account-header-tmpl"
										                   data-template="account-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                   			  source: depositAccountDS"
										                   data-placeholder="Add Account.."
										                   required data-required-msg="required" style="width: 100%" />
												</td>
											</tr>  
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>   						     		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
								              				data-value-primitive="true"
												            data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">							                        	
											<tr>
												<td><span data-bind="text: lang.lang.sale_rep"></span></td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"		   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Select job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">
							         	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p> 
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>								     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab5-6">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			               
				                <th style="width: 30%;"><span data-bind="text: lang.lang.account"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.reference"></span></th>			                
				                <th style="width: 15%;"><span data-bind="text: lang.lang.amount"></span></th>			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="customerDeposit-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row">
			
						<!-- Column -->
						<div class="span6">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>
							
							<!-- Add New Item -->
							<!-- <ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li> 
						  			</ul>
							  	</li>				
							</ul> -->
							<!--End Add New Item -->

							<!--Add Account -->
							<a href="#/account" class="btn btn-default"><span data-bind="text: lang.lang.add_account"></span></a>

						</div>
						<!-- Column END -->


						
						<!-- Column -->
						<div class="span6">
							<table class="table table-borderless table-condensed cart_total">
								<tbody>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total"></span>:</td>
										<td class="right strong"><span data-bind="text: total"></span></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>
		           
		            <br>

					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>															
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="customerDeposit-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.customerDeposit.lineDS.indexOf(data)+1#			
		</td>				
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"
                   data-header-template="account-header-tmpl"                   
                   data-template="account-list-tmpl"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>		
		<td class="" >
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-min="0" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%; text-align: right;" /> 						
		</td>			
    </tr>   
</script>
<script id="cashSale" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.cash_sale"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.type"></span></td>
										<td>
											<input id="cbbType" name="cbbType"
												   data-role="dropdownlist"											                    
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="type"
								                   data-bind="value: obj.type,
								                              source: typeList,
								                              events:{ change: typeChanges }"
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"								                   
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_received"></span></div>
									<h2 data-bind="text: amount_due" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" >

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i> Recuring</a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab5-6" data-toggle="tab"><i></i></a></li> -->						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span>
													<span data-bind="text: balance"></span>
												</td>
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span>
													<span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
											<tr>
								            	<td><span data-bind="text: lang.lang.payment_method"></span></td>				
												<td>
													<input data-role="dropdownlist"
								              				data-value-primitive="true"
								              				data-header-template="customer-payment-method-header-tmpl"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-bind="value: obj.payment_method_id,
								              							source: paymentMethodDS"
								              				data-option-label="Select method..."							              				 
								              				style="width: 100%" />
												</td>
											</tr>
								            <tr>
								            	<td><span data-bind="text: lang.lang.cash_account"></span></td>				            	
							            		<td>
							            			<input id="ddlCash" name="ddlCash"
							            				data-role="dropdownlist"
							            				data-header-template="account-header-tmpl"
							            				data-template="account-list-tmpl"
							              				data-value-primitive="true"
														data-text-field="name" 
							              				data-value-field="id"
							              				data-bind="value: obj.account_id,
							              							source: cashAccountDS"
							              				data-option-label="Select Account..." 
							              				required data-required-msg="required" 
							              				style="width: 100%" />
												</td>							            	
								            </tr>
								            <tr>
								            	<td><span data-bind="text: lang.lang.check_no"></span></td>							            	
							            		<td>
													<input class="k-textbox" placeholder="type check number ..." data-bind="value: obj.check_no" style="width: 100%;">
												</td>							            	
								            </tr>
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>	                		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"															
								              				data-value-primitive="true"
										                    data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}"
								              				placeholder="Select Reference..." 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">
											<tr>
												<td><span data-bind="text: lang.lang.sale_rep"></span></td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>		            	
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"	   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">

							        	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>		
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							             <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>								     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab5-6">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			          
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.price"></span></th>
				                <th style="width: 10%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>	                
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.tax"></span></th>
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="cashSale-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
	  									<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li> 	
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-spinners="false"
								                   data-min="0"							                                      
								                   data-bind="value: obj.discount,
								                              events: { change: discountChanges }"
								                   style="width: 90%; text-align: right;">
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>						
									<tr>
										<td class="right" style="font-size:20px;"><span data-bind="text: lang.lang.total"></span></td>
										<td class="right strong" style="font-size:20px;" data-bind="text: total"></td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.deposit"></span>
											<span data-format="n" data-bind="text: total_deposit"></span>										
										</td>
										<td class="right">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-spinners="false"
								                   data-min="0"							                                      
								                   data-bind="value: obj.deposit,
								                              events: { change: changes }"
								                   style="width: 90%; text-align: right;">
										</td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.remaining"></span>
										</td>
										<td class="right">
											<span data-format="n" data-bind="text: obj.remaining"></span>
										</td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>											
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashSale-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.cashSale.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" name="ddlMesurement"
				   data-role="dropdownlist"
				   data-header-template="item-measurement-header-tmpl"
				   data-value-primitive="true"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"				     
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>				
    </tr>   
</script>
<script id="invoice" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.invoice"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.type"></span></td>
										<td>
											<input id="cbbType" name="cbbType"
												   data-role="dropdownlist"											                    
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="type"
								                   data-bind="value: obj.type,
								                              source: typeList,
								                              events:{ change: typeChanges }"
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_due"></span></div>
									<h2 data-bind="text: amount_due" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-6" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-6" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-6" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-6" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-6" data-toggle="tab"><i></i></a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab6-6" data-toggle="tab"><i></i></a></li> -->						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-6">						            
							            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													<span data-bind="text: lang.lang.balance"></span>
													<span data-bind="text: balance"></span>
												</td>
												<td>
													<span data-bind="text: lang.lang.credit_allowed"></span>
													<span data-format="n" data-bind="text: obj.credit_allowed"></span> 
												</td>
											</tr>
											<tr>
								            	<td>
								            		<span data-bind="text: lang.lang.term"></span>		            		
								            	</td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"	
								              				data-header-template='customer-term-header-tmpl'					              				 
								              				data-bind="value: obj.payment_term_id,
								              							source: paymentTermDS,
								              							events:{ change: setTerm }"
								              				data-option-label="Select Term..." 
								              				style="width: 100%" />
												</td>
											</tr>
								            <tr>
								            	<td><span data-bind="text: lang.lang.due_date"></span></td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>	            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
								              				data-value-primitive="true"
										                    data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}"
								              				placeholder="Select Reference..." 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-6">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-6">
							        	
										<table class="table table-borderless table-condensed cart_total">
								            <tr>
												<td><span data-bind="text: lang.lang.sale_rep"></span></td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>						            	
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"
														   data-value-field="id"
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-6">

							        	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>		
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-6">							            	
							            
							            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab5-6">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			  
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 13%;"><span data-bind="text: lang.lang.price"></span></th>
				                <th style="width: 1%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>			                
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="invoice-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding-left: 10px">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
      									<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  	
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
							</div>
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-spinners="false"
								                   data-min="0"							                                      
								                   data-bind="value: obj.discount,
								                              events: { change: discountChanges }"
								                   style="width: 90%; text-align: right;">
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>
									<tr>
										<td class="right"><h4 span data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.deposit"></span>
											<span data-format="n" data-bind="text: total_deposit"></span>										
										</td>
										<td class="right">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-spinners="false"
								                   data-min="0"							                                      
								                   data-bind="value: obj.deposit,
								                              events: { change: changes }"
								                   style="width: 90%; text-align: right;">
										</td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.remaining"></span>
										</td>
										<td class="right">
											<span data-format="n" data-bind="text: obj.remaining"></span>
										</td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>															
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->					

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="invoice-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.invoice.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" name="ddlMesurement"
				   data-role="dropdownlist"
				   data-header-template="item-measurement-header-tmpl"
				   data-value-primitive="true"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"				   
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>				
    </tr>   
</script>
<script id="gdn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2 data-bind="text: lang.lang.goods_delivery_note"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-value-primitive="true"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.total_quantity"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons pen"><a href="#tab2-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.recurring"></span></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">											
								            <tr>
								            	<td><span data-bind="text: lang.lang.expected_date"></span></td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>							           
											<tr>							            				
												<td>
								            		<span data-bind="text: lang.lang.reference"></span>	            						  
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
								              				data-value-primitive="true"
										                    data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							enabled: enableRef,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>
											<tr>
												<td valign="top">
													<span data-bind="text: lang.lang.billing_address"></span>
												</td>
												<td>
													<textarea cols="0" rows="2" class="k-textbox"
															data-bind="value: obj.bill_to" 
															placeholder="Billing to ..." style="width:100%"></textarea>
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-4">
							         	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>	
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab4-4">
							            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" data-bind="visible: obj.isNew" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			     
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.quantity"></span></th>			                			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="gdn-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">	
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>
							
							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  	
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>																								
									<tr>
										<td class="right"><h4 span data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-format="n0" data-bind="text: obj.amount"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>															
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="gdn-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.gdn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" name="ddlMesurement"
				   data-role="dropdownlist"
				   data-header-template="item-measurement-header-tmpl"
				   data-value-primitive="true"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>						
    </tr>   
</script>
<script id="saleReturn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.sale_return"></h2>
				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_return"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons pen"><a href="#tab2-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab4-4" data-toggle="tab"><i></i></a>
							            </li>
							           <!--  <li class="span1 glyphicons show_liness"><a href="#tab4-5" data-toggle="tab"><i></i></a></li> -->
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content E4D -->						        

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab3-4">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-4">
							        	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->					        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab4-5">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			      
				                <th style="width: 20%;"><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.price"></span></th>
				                <th style="width: 10%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>	                
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>		                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="saleReturn-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>
				    <!-- Item Add Row part -->
		            <div class="row">
						<div class="span12">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
										<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
						  				 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

						</div>
					</div>

					<br>

				    <!-- Account List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
				                <th style="width: 20%;"><span data-bind="text: lang.lang.account"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th data-bind="visible: showRef" style="width: 7%;"><span data-bind="text: lang.lang.ref"></span></th>			                
				                <th data-bind="visible: showSegment" style="width: 15%;"><span data-bind="text: lang.lang.segment"></span></th>
				                <th class="center" style="width: 20%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th class="center" style="width: 11%;"><span data-bind="text: lang.lang.tax"></span></th>			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="saleReturn-account-line-template" 
				        		data-auto-bind="false"
				        		data-bind="source: accountLineDS"></tbody>			        
				    </table>
				    <!-- Add Row Account -->
				    <div>
						<button class="btn btn-inverse" data-bind="click: addRowAccount"><i class="icon-plus icon-white"></i></button>												

						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>											
									<input type="checkbox" id="chbReference" class="k-checkbox" data-bind="checked: showRef" />												
									<label class="k-checkbox-label" for="chbReference"><span data-bind="text: lang.lang.reference"></span></label>
								</li>
								<li>											
									<input type="checkbox" id="chbSegment" class="k-checkbox" data-bind="checked: showSegment" />												
									<label class="k-checkbox-label" for="chbSegment"><span data-bind="text: lang.lang.segment"></span></label>
								</li>															
							</ul>
						</div>
						
				  		<a href="#/account" class="btn" style="background: #f4f4f4; color: #333; width: 137px;">
				  			<span data-bind="text: lang.lang.add_account"></span>
				  		</a>					
					</div>

				    <!-- Return Window -->
				    <div data-role="window"
		                 data-title="Return Option"
		                 data-width="600"
		                 data-actions="{}"
		                 data-position="{top: '150px', left: '30%'}"
		                 data-height="300"
		                 data-bind="visible: windowVisible">

						<table class="table table-bordered table-primary table-striped table-vertical-center">							
							<tr data-bind="visible: isOffsetInvoice">
								<td>Offset Invoice</td>
								<td>
									<input data-role="combobox"
									   data-template="reference-list-tmpl"
									   data-value-primitive="true"
					                   data-auto-bind="false"
					                   data-text-field="number"
					                   data-value-field="id"
					                   data-bind="value: returnObj.reference_id, 
					                   			  source: referenceDS,
					                   			  events:{change: referenceChanges}"
					                   placeholder="Select Invoice..." 
					                   style="width: 100%" />
								</td>
							</tr>
							<tr data-bind="invisible: isOffsetInvoice">
								<td style="width: 15%"><span data-bind="text: lang.lang.deposit_to"></span></td>
								<td style="width: 40%">
									<input id="cbbAccount" name="cbbAccount"
										   data-role="combobox"
						                   data-value-primitive="true"
						                   data-header-template="account-header-tmpl"
						                   data-template="account-list-tmpl"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: returnObj.account_id,
						                   			  source: depositAccountDS"
						                   data-placeholder="Add Account.."
						                   required data-required-msg="required" style="width: 100%" />
								</td>
							</tr>
							<tr>
								<td>Amount</td>
								<td>
									<input data-role="numerictextbox"
										data-spinners="false" 
										data-format="n"
										data-min="0"
										data-bind="value: returnObj.amount,
													events:{change: returnChanges}" 
										style="width: 100%;" />
								</td>
							</tr>
						</table>

						<br>

						<div align="center">
							<span class="btn btn-icon btn-primary glyphicons ok_2" data-bind="click: closeWindow" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-icon btn-danger glyphicons remove_2" data-bind="click: cancelWindow" style="width: 80px;"><i></i> Discard</span>
						</div>
					</div>

					<br>

		            <!-- Bottom part -->
		            <div class="row">
			
						<!-- Column -->
						<div class="span7">
							<table class="table table-bordered table-inverse table-striped table-vertical-center" data-bind="visible: showReturn">
						        <thead>
						            <tr>
						            	<th class="center" style="width: 1%;"></th>
						            	<th><span data-bind="text: lang.lang.type_of_return"></span></th>
						                <th>Reference No.</th>
						                <th class="right"><span data-bind="text: lang.lang.amount"></span></th>                          
						            </tr> 
						        </thead>
						        <tbody data-role="listview"
						        		data-template="saleReturn-return-line-template" 
						        		data-auto-bind="false"
						        		data-bind="source: returnDS"></tbody>			        
						    </table>

						    <br>
						    <button class="btn btn-inverse" data-bind="click: openOffsetInvoiceWindow"><i class="icon-plus icon-white"></i> Charge Against Invoice</button>
							<button class="btn btn-inverse" data-bind="click: openDepositWindow"><i class="icon-plus icon-white"></i> Add To Deposit</button>

						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span5">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: obj.discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>																
									<tr>
										<td class="right"><h4 span data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>
									<tr>
										<td class="right">
											Offset Amount:
										</td>
										<td class="right">
											<span data-format="n" data-bind="text: obj.deposit"></span>
										</td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.remaining"></span>
										</td>
										<td class="right">
											<span id="remaining" name="remaining" data-format="n" data-bind="text: obj.remaining"></span>
										</td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>															
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="saleReturn-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.saleReturn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" name="ddlMesurement" 
				   data-role="dropdownlist"
				   data-header-template="item-measurement-header-tmpl"
				   data-value-primitive="true"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>					
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-header-template="tax-header-tmpl"
				   data-role="combobox"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="saleReturn-account-line-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowAccount }"></i>
			#:banhji.saleReturn.accountLineDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="cbbAccounts" name="cbbAccounts-#:uid#"
				   data-role="combobox"
                   data-template="account-list-tmpl"
                   data-value-primitive="true"                                     
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."        
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>			
		<td data-bind="visible: showSegment">
			<select data-role="multiselect" id="ddlSegment"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-min="0" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItemAccount-#:uid#"
				   data-role="combobox"
                   data-header-template="tax-header-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>			
    </tr>   
</script>
<script id="saleReturn-return-line-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #" data-bind="click: selectedRow">
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowReturn }"></i>
		</td>
		<td>#=type#</td>
		<td><span data-bind="text: reference_no"></span></td>
		<td class="right"><span data-format="n2" data-bind="text: amount"></span></td>
    </tr>   
</script>
<script id="cashRefund" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>Cash Refund</h2>
				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td><span data-bind="text: lang.lang.customers"></span></td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.amount_return"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons pen"><a href="#tab2-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab4-4" data-toggle="tab"><i></i></a>
							            </li>
							           <!--  <li class="span1 glyphicons show_liness"><a href="#tab4-5" data-toggle="tab"><i></i></a></li> -->
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">										
											<tr>							            				
												<td><span data-bind="text: lang.lang.related_invoices"></span></td>
								            	<td>
													<input id="cbbReference" name="cbbReference"
															data-role="combobox"
								              				data-value-primitive="true"
								              				data-template="reference-list-tmpl"
										                    data-auto-bind="false"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,
								              							enabled: enableRef,						              							
								              							events:{change: referenceChanges}"
								              				placeholder="Select Invoice..." 
								              				required data-required-msg="required" style="width: 100%" />
												</td>
											</tr>			            	
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content E4D -->						        

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab3-4">
							        	<span data-bind="text: lang.lang.billing_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.delivery_address"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-4">
							        	<p><span data-bind="text: lang.lang.file_type"></span>: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th><span data-bind="text: lang.lang.file_name"></span></th>
									                <th><span data-bind="text: lang.lang.description"></span></th>
									                <th><span data-bind="text: lang.lang.date"></span></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->					        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab4-5">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			      
				                <th><span data-bind="text: lang.lang.items"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 15%;"><span data-bind="text: lang.lang.quantity"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.price"></span></th>
				                <th style="width: 10%;" data-bind="visible: showDiscount"><span data-bind="text: lang.lang.discount"></span></th>	                
				                <th style="width: 10%;"><span data-bind="text: lang.lang.amount"></span></th>
				                <th style="width: 10%;"><span data-bind="text: lang.lang.tax"></span></th>		                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="cashRefund-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row">
			
						<!-- Column -->
						<div class="span9">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
										<label class="k-checkbox-label" for="chbDiscount"><span data-bind="text: lang.lang.discount"></span></label>
									</li>																
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  	
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

							<br><br>					

							<table class="table table-bordered table-inverse table-striped table-vertical-center" data-bind="visible: showReturn">
						        <thead>
						            <tr>
						            	<th class="center" style="width: 1%;">
						            		<button type="button" data-role="button" data-bind="click: addRowOption"><i class="icon-plus"></i></button>
						            	</th>
						            	<th style="width: 30%"><span data-bind="text: lang.lang.type_of_return"></span></th>			
						                <th><span data-bind="text: lang.lang.condition"></span></th>					                	
						                <th style="width: 20%"><span data-bind="text: lang.lang.amount"></span></th>                          
						            </tr> 
						        </thead>
						        <tbody data-role="listview" 
						        		data-template="cashRefund-return-line-template" 
						        		data-auto-bind="false"
						        		data-bind="source: returnDS"></tbody>			        
						    </table>
														
						</div>
						<!-- Column END -->

						<!-- Column -->
						<!-- <div class="span3" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div> -->
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span3">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
										<td class="right strong" width="40%"><span data-format="n" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
										<td class="right strong">
											<span data-format="n" data-bind="text: obj.discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_tax"></span></td>
										<td class="right strong"><span data-format="n" data-bind="text: obj.tax"></span></td>
									</tr>																
									<tr>
										<td class="right"><h4 span data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>
									<tr>
										<td class="right">
											Amount Paid
										</td>
										<td class="right">
											<span data-format="n" data-bind="text: obj.amount_paid"></span>
										</td>
									</tr>
									<tr>
										<td class="right">
											<span data-bind="text: lang.lang.remaining"></span>
										</td>
										<td class="right">
											<span data-format="n" data-bind="text: obj.remaining"></span>
										</td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>															
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
							</div>
						</div>
					</div>
					<!-- // Form actions END -->							

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashRefund-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.saleReturn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" name="ddlMesurement" 
				   data-role="dropdownlist"
				   data-header-template="item-measurement-header-tmpl"
				   data-value-primitive="true"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-min="0"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>					
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-header-template="tax-header-tmpl"
				   data-role="combobox"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="cashRefund-return-line-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowOption }"></i>
		</td>
		<td>
			<input id="ddlOption" name="ddlOption-#:uid#"
				   data-role="dropdownlist"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: type, 
                   			  source: optionList,
                   			  events:{ change: optionChanges }"
                   data-option-label="Select Option..." 
                   style="width: 100%" />            
		</td>
		<td>
			<input id="cbbInvoice" name="cbbInvoice-#:uid#"
				   data-role="combobox"
				   data-template="reference-list-tmpl"
				   data-value-primitive="true"
                   data-auto-bind="false"
                   data-text-field="number"
                   data-value-field="id"
                   data-bind="value: reference_id, 
                   			  source: invoiceDS,
                   			  visible: showInvoice,
                   			  events:{ change: invoiceChanges }"
                   placeholder="Select Invoice..." 
                   style="width: 100%" />

            <input id="ddlAccount" name="ddlAccount-#:uid#"
				   data-role="dropdownlist"
				   data-template="account-list-tmpl"
				   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id, 
                   			  source: accountDS,
                   			  visible: showAccount"
                   style="width: 100%" />
		</td>
		<td>
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
    </tr>   
</script>
<script id="statement" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br><br>

					<div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons print" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									
									       <input id="ccbItem" name="cbbContact"
												   data-role="combobox"	
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: contact_id,
								                              source: contactDS"
								                   data-placeholder="Customer..." />

											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	 <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //ACCOUNTING -->
								        <!--div class="tab-pane" id="tab-2">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div-->
								        <!-- //ACCOUNTING END -->						       

								       
								    </div>
								</div>
							</div>
						</div>
					</div>

					<br><br>
					
					<div class="block-title">
						<h3 data-bind="text: company.name"></h3>
						<h2 data-bind="text: lang.lang.statement"></h2>
						<p data-bind="text: obj.name"></p>
						<p data-bind="text: displayDate"></p>
					</div>

					<div class="row-fluid" >
						<div class="span5" style="margin-bottom: 15px;">
							<table class="table-statement" style="margin-top: 0;">
								<tr>
									<td style="font-weight: 600;background-color: #ddd;">Customer Info</td>
								</tr>
								<tr>
									<td data-bind="text: obj.bill_to"></td>
								</tr>
							</table>
						</div>
						<div class="span2"></div>
						<div class="span5" style="margin-bottom: 15px;">
							<div class="strong" style="margin-bottom: 0px; width: 100%; padding: 10px; background-color: rgb(213, 219, 219);" align="center" >
									<div align="left"><span>Amount Due</span></div>
									<h2 align="right" data-bind="text: total"></h2>
								</div>
						</div>

					</div>				
					
					<table class="table table-borderless table-condensed">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th><span data-bind="text: lang.lang.type"></span></th>
								<th><span data-bind="text: lang.lang.job"></span></th>
								<th><span data-bind="text: lang.lang.reference_no"></span></th>
								<th><span data-bind="text: lang.lang.amount"></span></th>
								<th><span data-bind="text: lang.lang.balance"></span></th>
							</tr>
						</thead>
						<tbody data-role="listview"
							data-auto-bind="false"
							data-bind="source: dataSource"
							data-template="statement-row-template"
						></tbody>
					</table>

					<table class="table-statement">
						<thead>
							<tr>
								<th class="center"><span data-bind="text: lang.lang.current"></span></th>
								<th class="center">30</th>
								<th class="center">60</th>
								<th class="center">90</th>
								<th class="center">> 90</th>
								<th class="center"><span data-bind="text: lang.lang.amount_due"></span></th>
							</tr>
						</thead>
						<tbody data-role="listview"
							data-auto-bind="false"
							data-bind="source: agingDS"
							data-template="statement-aging-row-template"
						></tbody>
					</table>
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="statement-row-template" type="text/x-kendo-template" >
	<tr>
		<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
		<td>#=type#</td>
		<td>#=job#</td>
		<td>#=reference_no#</td>		
		<td align="right">#=kendo.toString(amount, "c", locale)#</td>
		<td align="right">#=kendo.toString(balance, "c", locale)#</td>
	</tr>
</script>
<script id="statement-aging-row-template" type="text/x-kendo-template" >
	<tr>
		<td align="right">#=kendo.toString(current, "c", locale)#</td>
		<td align="right">#=kendo.toString(oneMonth, "c", locale)#</td>
		<td align="right">#=kendo.toString(twoMonth, "c", locale)#</td>
		<td align="right">#=kendo.toString(threeMonth, "c", locale)#</td>		
		<td align="right">#=kendo.toString(overMonth, "c", locale)#</td>
		<td align="right">#=kendo.toString(amount, "c", locale)#</td>
	</tr>
</script>


<script id="customerSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2 data-bind="text: lang.lang.general_customer_setting"></h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-4" class="glyphicons group" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.customer_type"></span></span></a>
	            </li>
	            <li><a href="#tab2-4" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.payment_method"></span></span></a>
	            </li>
	            <li><a href="#tab3-4" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.payment_terms"></span></span></a>
	            </li>
	            <li><a href="#tab4-4" class="glyphicons list" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.custom_forms"></span></span></a>
	            </li>	   
	            <li><a href="#tab4-5" class="glyphicons building" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.prefix_setting"></span></span></a>
	            </li>                     
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- CUSTOMER TYPE -->
	            <div class="tab-pane active" id="tab1-4">
	            	<div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="input customer type ..." data-bind="value: contactTypeName">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="input abbr ..." data-bind="value: contactTypeAbbr">
					    <select class="span3" id="appendedInputButtons" data-bind="value: contactTypeCompany" >
			                <option value="0"><span data-bind="text: lang.lang.not_a_company"></span></option>
			                <option value="1"><span data-bind="text: lang.lang.it_is_a_company"></span></option>			                
			            </select>
					    <button class="btn btn-default" type="button" data-bind="click: addContactType"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_type"></span></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th class="center"><span data-bind="text: lang.lang.type"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.abbr"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.is_company"></span></th>
	            				<th class="center"></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="customerSetting-edit-contact-type-template"
				                data-template="customerSetting-contact-type-template"
				                data-bind="source: contactTypeDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // CUSTOMER TYPE END -->

	            <!-- PAYMENT METHOD -->
	            <div class="tab-pane" id="tab2-4">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_method"></span></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th class="center"><span data-bind="text: lang.lang.name"></span></th>
	            				<th class="center"></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-method-template"
				                data-template="customerSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // PAYMENT METHOD END -->

	            <!-- PAYMENT TERM -->
	            <div class="tab-pane" id="tab3-4">
            		<div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="net due ..." data-bind="value: paymentTermNetDue">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="period ..." data-bind="value: paymentTermPeriod">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_term"></span></button>
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th class="center"><span data-bind="text: lang.lang.name"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.net_due"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.discount_period"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.discount_percentage"></span></th>
	            				<th class="center"></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-term-template"
				                data-template="customerSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // PAYMENT TERM END -->

	            <!-- Tab Invocice Custom content -->
	            <div class="tab-pane" id="tab4-4">
            		
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center"><span data-bind="text: lang.lang.name"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.form_type"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.last_edited"></span></th>
	            				<th class="center"><span data-bind="text: lang.lang.action"></span></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="customerSetting-form-template"
				                 data-bind="source: txnTemplateDS">				            
	            		</tbody>
	            	</table>

	            	<a id="addNew" class="btn-icon btn-primary glyphicons ok_2" data-bind="click: goInvoiceCustom" style="width: 110px;"><i></i>Add New</a>

	            </div>
	            <!-- // Tab Invoice Custom content END -->
	            <div class="tab-pane" id="tab4-5">
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center" data-bind="text: lang.lang.type"></th>
	            				<th class="center" data-bind="text: lang.lang.abbr"></th>
	            				<th style="text-align: left;padding-left: 5px;" data-bind="text: lang.lang.name"></th>
	            				<th class="center"><span data-bind="text: lang.lang.action"></span></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="accountSetting-prefix-template"
				                 data-bind="source: prefixDS">				            
	            		</tbody>
	            	</table>

	            </div>
	        </div>
	    </div>

	</div>
</script>
<script id="customerSetting-contact-type-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">
    		#:abbr#
   		</td>
   		<td align="center">
    		#if(is_company=="1"){#
    			Yes
    		#}else{#
    			No
    		#}#
   		</td>
   		<td align="center">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		        <a class="k-button" href="\#/customer/0/#=id#"><span data-bind="text: lang.lang.pattern"></span></a>
		   	</div>		   	
   		</td>   		
   	</tr>
</script>
<script id="customerSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <dl>                
            <dd>
                <select data-bind="value: is_company" >
	                <option value="0"><span data-bind="text: lang.lang.not_a_company"></span></option>
	                <option value="1"><span data-bind="text: lang.lang.it_is_a_company"></span></option>			                
	            </select>
            </dd>              
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="customerSetting-payment-method-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="customerSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="customerSetting-payment-term-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">
    		#:net_due#
   		</td>
   		<td align="center">
    		#:discount_period#
   		</td>
   		<td align="center">
    		#:discount_percentage#
   		</td>
   		<td align="center">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="customerSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="netDue" required="required" validationMessage="required" />
                <span data-for="netDue" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_period" name="period" required="required" validationMessage="required" />
                <span data-for="period" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="customerSetting-form-template" type="text/x-kendo-template">
	<tr>
		<td ><a style="text-align: left;" href="\\#/invoice_custom/#= id # "> #=name#  </a></td>
		<td style="text-align: left; padding-left: 10px!important;"> 
			#= type.replace("_"," ")# 
		</td>
		<td style="text-align: left; padding-left: 10px!important;"> #if( updated_at ){ # 
				#=kendo.toString(new Date(updated_at),"D")# 
			 #}else{ #
			 	#=kendo.toString(new Date(created_at),"D")# 
			 #}#
		</td>
		<td class="center">
			#if( status == 0){ #
			<a class="btn-action glyphicons pencil btn-success" href="\\#/invoice_custom/#= id # "><i></i></a>
			<a data-bind="click: deleteForm" class="btn-action glyphicons remove_2 btn-danger"><i></i></a>
			# } #
		</td>
	</tr>
</script>
<script id="customerRecurring" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"><i></i></span>

				    <h2>Customer Recurring</h2>

				    <br>

				    <div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons user" href="#tab-1" data-toggle="tab"><i></i>Select Customer</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									
									       <input id="ccbItem" name="cbbContact"
												   data-role="combobox"								                   
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: contact_id,
								                              source: contactDS,
								                              events:{change: search}"
								                   data-placeholder="Customer..." style="width: 200px;" />
							        	</div>
								        <!-- //GENERAL INFO END -->

								    </div>
								</div>
							</div>
						</div>
					</div>
					                           					
	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
			                <th>TYPE</th>
			                <th>RECURRING NAME</th>
			                <th>CUSTOMER</th>
			                <th>START DATE</th>
			                <th class="center">FREQUENCY</th>
			                <th></th>
	            		</thead>
	            		<tbody data-role="listview" 
				        		data-template="customerRecurring-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
			             data-role="pager" 
			             data-auto-bind="false"
			             data-bind="source: dataSource"></div>

	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="customerRecurring-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#=type#</td>
		<td>#=recurring_name#</td>
		<td>#=banhji.customerRecurring.getContactName(contact_id)#</td>
		<td>#=kendo.toString(new Date(start_date), "dd-MM-yyyy")#</td>
		<td class="center">#=frequency#</td>
		<td class="center">
			<a class="btn btn-warning" data-bind="click: edit"><i></i> Edit</a>
			<a class="btn btn-success" data-bind="click: use"><i></i> Use</a>
		</td>		
    </tr>   
</script>
<script id="job" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

					<div class="hidden-print">
				    	<div class="pull-right">

				    		<span class="glyphicons no-js remove_2" 
								data-bind="click: cancel"><i></i></span>						
						</div>

				        <h2 data-bind="text: lang.lang.job"></h2>				        				        				        	
				    </div>			   

				    <br>

				    <div data-role="window"
		                 data-title="Job"		                 
		                 data-width="600"
		                 data-actions="{}"
		                 data-position="{top: '150px', left: '30%'}"
		                 data-height="300"
		                 data-bind="visible: isVisible">

						<table class="table table-bordered table-primary table-striped table-vertical-center">							
							<tr>
								<td><span data-bind="text: lang.lang.name"></span></td>
								<td>
									<input class="k-textbox" placeholder="type name ..." data-bind="value: obj.name" style="width: 100%;">
								</td>
							</tr>
							<tr>
								<td>Description</td>
								<td>
									<input class="k-textbox" placeholder="type description ..." data-bind="value: obj.description" style="width: 100%;">
								</td>
							</tr>
							<tr>
								<td><span data-bind="text: lang.lang.customers"></span></td>
								<td>
									<input data-role="combobox"
										   data-template="contact-list-tmpl"				            			               			   		                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.contact_id,
						                              source: contactDS"
						                   style="width: 100%;" />
								</td>
							</tr>							
						</table>

						<br>

						<div align="center">
							<span class="btn btn-icon btn-primary glyphicons ok_2" data-bind="click: save" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-icon btn-danger glyphicons remove_2" data-bind="click: closeWindow" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.close"></span></span>						
						</div>
					</div>
					
					<button style="margin-bottom: 15px;" class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i> <span data-bind="text: lang.lang.add_new_job"></span></button>
					                                					

	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
	            			<tr>	            				
	            				<th><span data-bind="text: lang.lang.name"></span></th>
	            				<th><span data-bind="text: lang.lang.description"></span></th>
	            				<th><span data-bind="text: lang.lang.customers"></span></th>	            					 			
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"			            			
				                data-template="job-template"
				                data-bind="source: dataSource"></tbody>

	            	</table>
	            	<div data-role="pager" data-bind="source: dataSource"></div>
	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="job-template" type="text/x-kendo-tmpl">
    <tr>    	
    	<td>#=name#</td>
    	<td>#=description#</td>
    	<td>
    		#if(contact.length>0){#
    			#=contact[0].name#
    		#}#
    	</td>    	
    	<td align="center">
    		<span data-bind="click: edit"><i class="icon-edit"></i> <span data-bind="text: lang.lang.edit"></span></span>
    		|
    		<span data-bind="click: delete"><i class="icon-remove"></i> <span data-bind="text: lang.lang.delete"></span></span>
    	</td>
   	</tr>
</script>

<script id="customerReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">

		<div class="span7">
			<div class="row-fluid sale-report">				
				<h2>SALE MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports in 
					different ways to help analyze your revenue performance.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td width="50%">
								<h3><a href="#/sale_summary_by_customer">Sale Summary by Customer</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/customer_transaction_list">Customer Transaction List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td width="50%">
								<p>
									Summarizes total sales for each customer within a period 
									of time so you can see which ones generate the most revenue for you.
								</p>
								
							</td>
							<td width="50%">
								<p>
									List of all transactions related to and grouped by each customer, including invoice, cash sale
								</p>
							</td>
							
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/sale_detail_by_customer">Sale Detail by Customer</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/deposit_detail_by_customer">Deposit Detail by Customer</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Lists individual sale transactions by date for each customer with a period of time.
								</p>
							</td>
							<td width="50%">
								<p>
									Provides detailed information about customer deposit for specific order, prepayment, or credit.
								</p>
							</td>
						</tr>

						<tr>
							<td width="50%">
								<h3><a href="#/sale_summary_by_product">Sale Summary by Product/ Services</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/sale_detail_by_product">Sale Detail by Product/ Services</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Summarizes total sales for each product/ service within a period of time. In addition, it also includes gross profit margin, quantity, amount, cost, and average prices. 
								</p>
							</td>
							<td width="50%">
								<p>
									Lists individual sale transactions by date for each product/ service with a period of time.
								</p>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/profitability_summary_job">Profitability Summary by Job</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/sale_order_list">Sale Order List</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/profitability_detail_job">Profitability Detail by Job</a></h3>
							</td>
							<td width="50%"></td>
						</tr>
					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">

				<h2 data-bind="text: lang.lang.receivable_management_reports"></h2>

				<p>
					The following reports provide summary and detailed reports.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td >
								<h3><a href="#/customer_balance_summary">Customer Balance Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_balance_detail">Customer Balance Detail</a></h3>								
							</td>						
						</tr>
						<tr>
							<td>
								<p>
									Show each customer’s total outstanding balances.
								</p>
								
							</td>
							<td >
								<p>
									Lists individual unpaid invoices for each customer
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/receivable_aging_summary">Receivable Aging Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/receivable_aging_detail">Receivable Aging Detail</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all unpaid invoices for the current period, 30, 60, 90, 
									and more than 90 days, grouped by individual customers.
								</p>
							</td>
							<td >
								<p>
									Lists individual unpaid invoices, grouped by customer. This includes due date, 
									outstanding days (aging days), and amount.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/collect_invoice">List of invoices to be collected</a></h3>
							</td>
							<td >
								<h3><a href="#/collection_report">Collection Report</a></h3>
							</td>
						</tr>
						<tr>
							<td>
								<p>
									Lists all unpaid invoices, grouped by Due today and Overdue.
								</p>
							</td>
							<td >
								<p>
									Lists of collected invoices for the select period of time, group by method of payment.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/invoice_list">Invoice List</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_list">Customer List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Shows a chronological list of all your invoices for a selected date range.
								</p>
							</td>
							<td >
								<p>
									List of all active customers
								</p>
							</td>
						</tr>

					</table>
				</div>
			</div>
			
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<h3><a href="#/customer_recurring">Recurring Customer Template List</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_setting">Payment Method & Term List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<p></p>								
							</td>
							<td>
								<p>
									List the types of payments and the term that determine due date for payment from customers.
								</p>
							</td>
							
						</tr>
						<tr >
							<td></td>														
						</tr>

					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>SALE OVERVIEW</h2>
					<div align="center" class="text-large strong" data-bind="text: sale"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: sale_customer"></span>
								<br>
								<span>Customer</span>
							</td>
							<td>
								<span data-bind="text: sale_product"></span>
								<br>
								<span>Product</span>
							</td>
							<td>
								<span data-bind="text: order"></span>
								<br>
								<span>Order</span>
							</td>
							<td >
								<span data-bind="text: sale_order"></span>
								<br>
								<span>Sale Order</span>
							</td>

						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
	            </div>
			</div>
			<div class="report-chart">
				<div class="widget-body receivable-overview" style="background-color: LightGray">
					<h2>RECEIVABLES MANAGEMENT</h2>
					<div align="center" class="text-large strong" data-bind="text: ar"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: ar_open"></span>
								<br>
								<span>Open</span>
							</td>
							<td>										
								<span data-bind="text: ar_customer"></span>
								<br>
								<span>Customer</span>
							</td>
							<td>
								<span data-bind="text: ar_overdue"></span>
								<br>
								<span>Overdue</span>
							</td>
							<td>
								<span data-bind="text: collection_day"></span> days
								<br>
								<span>Collection Days</span>
							</td>
						</tr>
					</table>
				</div>
				
            </div>
			</div>
		</div>
	</div>
</script>
<script id="saleSummaryByCustomer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Sale Summary By Customer</h2>
							<p data-bind="text: displayDate"></p>
						</div>
						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">
									<p>Number of Customer</p>
									<span data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-sale">
									<p>Total Sale</p>
									<span data-bind="text: totalAmount"></sapn>
								</div>
							</div>
						</div>
						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th ><span>Customer</span></th>
									<th style="text-align: right;"><span>Number Invoice</span></th>
									<th style="text-align: right;"><span>Number CashSale</span></th>
									<th style="text-align: right;"><span>Total Sale</span></th>
								</tr>
							</thead>
		            		<tbody  data-role="listview"
		            				data-auto-bind="false"
					                data-template="saleSummaryByCustomer-template"
					                data-bind="source: dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>
			</div>
		</div>
	</div>	
</script>
<script id="saleSummaryByCustomer-template" type="text/x-kendo-template">
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=invoice_count#</td>
		<td style="text-align: right;">#=cash_sale_count#</td>
		<td style="text-align: right;">#=kendo.toString(amount, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="saleDetailByCustomer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Sale Detail By Customer</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">
									<p>Number of Customers</p>
									<span data-bind="text: dataSource.total"></span>
								</div>

							</div>
							<div class="span9">
								<div class="total-sale">
									<p>Amount</p>
									<span data-bind="text: totalAmount"></sapn>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th style="text-align: right;"><span>Reference</span></th>
									<th><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									data-template="saleDetailByCustomer-template"
									data-auto-bind="false" 
									data-bind="source: dataSource">
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
	<br>
	<br>
</script>
<script id="saleDetailByCustomer-template" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td>#=name#</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>
			<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>			
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="4">&nbsp;</td>
    </tr>
</script>
<script id="customerTransactionList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Customer Transaction List</h2>
							<p data-bind="text: displayDate"></p>
						</div>						

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-bind="source: dataSource"
										 data-auto-bind="false"
										 data-template="customerTransactionList-template"
							></tbody>
						</table>

						<div class="k-pager-wrap" 
							 data-role="pager" 
					    	 data-auto-bind="false"
				             data-bind="source: dataSource"></div>

					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="customerTransactionList-template" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td>#=name#</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>
			<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>			
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="4">&nbsp;</td>
    </tr>
</script>
<script id="saleSummaryByProduct" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.item"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="item-header-tmpl"
															   data-item-template="item-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.itemIds, 
															   			source: itemDS"
															   data-placeholder="Select Item..."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Sale Summary By Product/Services</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Total Product/services</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Avg. Sale Per Invoice</p>
										<span data-bind="text: avg_sale"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Total Sale</p>
									<span data-bind="text: total_sale"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>ITEM</span></th>
									<th style="text-align: right;"><span>QTY</span></th>
									<th style="text-align: right;"><span>AMOUNT</span></th>
									<th style="text-align: right;"><span>AVG PRICE</span></th>
									<th style="text-align: right;"><span>AVG COST</span></th>
									<th style="text-align: right;"><span>GROSS PROFIT MARGIN</span></th>								
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-template="saleSummaryByProduct-template"
										 data-auto-bind="false"
										 data-bind="source: dataSource"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="saleSummaryByProduct-template" type="text/x-kendo-template">
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=kendo.toString(quantity, "n")# #=measurement#</td>
		<td style="text-align: right;">#=kendo.toString(amount, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(avg_price, "c2", banhji.locale)#</td>	
		<td style="text-align: right;">#=kendo.toString(avg_cost, "c2", banhji.locale)#</td>	
		<td style="text-align: right;">#=kendo.toString(gpm, "p")#</td>			
	</tr>
</script>
<script id="saleDetailByProduct" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.item"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="item-header-tmpl"
															   data-item-template="item-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.itemIds, 
															   			source: itemDS"
															   data-placeholder="Select Item..."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Sale Detail By Product/Service</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Total Product/Services</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Avg. Sale Per Invoice</p>
										<span data-bind="text: product_sale"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">									
									<p>Total Sale</p>
									<span data-bind="text: total_sale"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th style="text-align: right;"><span>Invoice Date</span></th>
									<th style="text-align: right;"><span>Reference</span></th>
									<th style="text-align: right;"><span>QTY</span></th>
									<th style="text-align: right;"><span>PRICE</span></th>
									<th><span>AMOUNT</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-template="saleDetailByProduct-template"
										 data-auto-bind="false"
										 data-bind="source: dataSource"										 
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="saleDetailByProduct-template" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td colspan="6">#=name#</td>
	</tr>
	#var totalAmount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		#totalAmount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important; color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].type#</a>
			</td>
			<td style="text-align: right;">#=kendo.toString(new Date(line[i].issued_date),"dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>
			<td style="text-align: right;">#=kendo.toString(line[i].quantity, "n")# #=line[i].measurement#</td>
			<td style="text-align: right;">#=kendo.toString(line[i].price, "c2", banhji.locale)#</td>
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>

	#}#
	<tr>
    	<td colspan="5" style="font-weight: bold; color: black;">Total #: name #</td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalAmount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="6">&nbsp;</td>
    </tr>
</script>
<script id="depositDetailByCustomer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Deposit Detail By Customer</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<p>Number of Customer</p>
									<span data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Deposit Balance</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th><span>Number</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
									<th style="text-align: right;"><span>Balance</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									 data-bind="source: dataSource"
									 data-auto-bind="false"
									 data-template="depositDetailByCustomer-template"
							></tbody>
						</table>

					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="depositDetailByCustomer-template" type="text/x-kendo-tmpl">
	<tr>
		<td colspan="5" style="font-weight: bold;">#: name #</td>
    	<td class="right strong" style="color: black;">
    		#=kendo.toString(balance_forward, "c", banhji.locale)#
    	</td>
	</tr>
	#var balance = balance_forward;#
	#for(var i=0; i<line.length; i++){#
		#balance += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important; color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>		
			<td style="color: black;">
				#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#
			</td>
			<td style="color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a>
			</td>
			<td style="color: black;">
				#if(line[i].reference.length>0){#
					<a href="\#/#=line[i].reference[0].type.toLowerCase()#/#=line[i].reference[0].id#"><i></i> #=line[i].reference[0].number#</a>
				#}#
			</td>
			<td align="right" style="color: black;">
				#=kendo.toString(line[i].amount, "c2", banhji.locale)#
			</td>
			<td class="right" style="color: black;">
				#=kendo.toString(balance, "c2", banhji.locale)#
			</td> 			
	    </tr>    
    #}# 
    <tr>
    	<td colspan="5" style="font-weight: bold; color: black;">Total #: name #</td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(balance, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="6">&nbsp;</td>
    </tr>  
</script>
<script id="customerBalanceSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Customer Balance Summary</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Open Invoice</p>
										<span data-bind="text: total_txn"></span>
									</div>
									<div class="span6">
										<p>Number Customer</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Total Customer Balance</p>
									<span data-bind="text: total_balance"></span>									
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>CUSTOMER NAME</span></th>
									<th style="text-align: right;"><span>No.TRANSACTIONS</span></th>
									<th><span>ACCOUNT RECEIVABLE BALANCE</span></th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="customerBalanceSummary-template"
					                data-bind="source: dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="customerBalanceSummary-template" type="text/x-kendo-template">
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=txn_count#</td>
		<td align="right">#=kendo.toString(amount, "c2", banhji.locale)#</td>
	</tr>
</script>	
<script id="customerBalanceDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>					
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Customer Balance Detail</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Open Invoice</p>
										<span data-bind="text: total_txn"></span>
									</div>
									<div class="span6">
										<p>Number Customer</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Total Customer Balance</p>
									<span data-bind="text: total_balance"></span>						
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th style="text-align: right;"><span>Invoice Date</span></th>
									<th style="text-align: right;"><span>Reference</span></th>								
									<th><span>Receivable Balance</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-auto-bind="false"
										 data-bind="source: dataSource"										 
										 data-template="customerBalanceDetail-template"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="customerBalanceDetail-template" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td colspan="4">#=name#</td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += kendo.parseFloat(line[i].amount);#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
			</td>
			<td style="text-align: right;">#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>			
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="4">&nbsp;</td>
    </tr>
</script> 
<script id="receivableAgingSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.customers, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Receivable Aging Summary</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row">
							<div class="span3" style="padding-right: 0;">
								<div class="total-customer">									
									<p>Number of Customer</p>
									<span data-format="n0" data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Total Customer Balance</p>
									<span data-bind="text: totalBalance"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Name</span></th>
									<th style="text-align: right;"><span>CURRENT</span></th>
									<th style="text-align: right;"><span>1-30</span></th>
									<th style="text-align: right;"><span>31-60</span></th>
									<th style="text-align: right;"><span>61-90</span></th>
									<th style="text-align: right;"><span>OVER 90</span></th>
									<th style="text-align: right;"><span>TOTAL</span></th>							
								</tr>
							</thead>
							<tbody data-role="listview"
									data-auto-bind="false"
								 	data-bind="source: dataSource"
								 	data-template="receivableAgingSummary-template"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="receivableAgingSummary-template" type="text/x-kendo-template" >
	<tr>
		<td>#=name#</td>
		<td style="text-align: right;">#=kendo.toString(current, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(in30, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(in60, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(in90, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(over90, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(total, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="receivableAgingDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">									
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filters -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.customers, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Receivable Aging Detail</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row">
							<div class="span3" style="padding-right: 0;">
								<div class="total-customer">									
									<p>Number of Customer</p>
									<span data-format="n0" data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Total Customer Balance</p>
									<span data-bind="text: totalBalance"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Invoice Date</span></th>
									<th><span>Due Date</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: center;"><span>Status</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
									<th style="text-align: right;"><span>Balance</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
								 data-auto-bind="false"
								 data-bind="source: dataSource"
								 data-template="receivableAgingDetail-template"
							></tbody>
						</table>
					</div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="receivableAgingDetail-template" type="text/x-kendo-tmpl">
	<tr>
		<td colspan="7" style="font-weight: bold; color: black;">#: name #</td>
	</tr>
	#var totalBalance = 0;#
	#for(var i=0; i<line.length; i++){#
	#totalBalance += line[i].amount;#
	<tr>
		<td style="padding-left: 20px !important;">
			<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
		</td>
		<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
		<td>#=kendo.toString(new Date(line[i].due_date), "dd-MM-yyyy")#</td>
		<td><a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a></td>		
		<td style="text-align: right;"> 
    		#if(line[i].type==="Cash_Receipt"){#
				PMT
			#}else if(line[i].type==="Sale_Return"){#
				Returned
        	#}else{#
        		#if(line[i].status==="0" || line[i].status==="2") {#
					# var date = new Date(), dueDates = new Date(line[i].due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDates < toDay) {#
						Over Due #:Math.floor((toDay - dueDates)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDates - toDay)/(1000*60*60*24))# days to pay
					#}#
				#}else{#
					Paid
				#}#
        	#}#
		</td>
		<td style="text-align: right;">
			#=kendo.toString(line[i].amount, "c2", banhji.locale)#
		</td>
		<td style="text-align: right;">
			#=kendo.toString(totalBalance, "c2", banhji.locale)#
		</td>
	</tr>
    #}#
    <tr>
    	<td colspan="6" style="font-weight: bold; color: black;">Total</td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalBalance, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="7">&nbsp;</td>
    </tr>  
</script>
<script id="collectInvoice" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- //Date -->
								        <div class="tab-pane active" id="tab-1">
									        As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.customers, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>List Of Invoice To Be Collected</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3">
								<div class="total-customer">									
									<p>Number of Customer</p>
									<span data-format="n0" data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span9">
								<div class="total-customer">
									<p>Total Amount</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th><span>Name</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: center;"><span>Status</span></th>	
									<th><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									data-auto-bind="false"
								 	data-bind="source: dataSource"
								 	data-template="collectInvoice-template"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="collectInvoice-template" type="text/x-kendo-template">
	<tr>
		<td>
			<a href="\#/#=type.toLowerCase()#/#=id#">#=type#</a>
		</td>
		<td>#=kendo.toString(new Date(issued_date),"dd-MM-yyyy")#</td>
		<td>#=name#</td>
		<td>
			<a href="\#/#=type.toLowerCase()#/#=id#">#=number#</a>
		</td>
		<td style="text-align: center;">
			# var date = new Date(), dueDates = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
			#if(dueDates < toDay) {#
				Over Due #:Math.floor((toDay - dueDates)/(1000*60*60*24))# days
			#} else {#
				#:Math.floor((dueDates - toDay)/(1000*60*60*24))# days to pay
			#}#
		</td>
		<td style="text-align: right;">#=kendo.toString(amount, "c2", banhji.locale)#</td>
	</tr>
</script>
<script id="collectionReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.customers, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Collection Report</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span3" style="padding: 0;">
								<div class="total-customer">									
									<p>Number of Invoice</p>
									<span data-format="n0" data-bind="text: total_txn"></span>
								</div>
							</div>
							<div class="span9" style="padding-right: 0;">
								<div class="total-customer">
									<p>Total Amount</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Invoice Date</span></th>
									<th><span>Invoice Number</span></th>
									<th><span>Invoice Amount</span></th>
									<th><span>Receipt Date</span></th>
									<th><span>Receipt Number</span></th>
									<th><span>Receipt Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-auto-bind="false"
										 data-bind="source: dataSource"
										 data-template="collectionReport-template"
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="collectionReport-template" type="text/x-kendo-template">
	<tr>
		<td colspan="6" style="font-weight: bold; color: black;">#: name #</td>
	</tr>
	# var totalInvoice = 0, totalReceived = 0;#	
	#for(var i=0; i<line.length; i++){#
	#totalInvoice += line[i].amount;#
	<tr>
		<td style="vertical-align: top;">#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
		<td style="vertical-align: top;"><a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a></td>
		<td style="vertical-align: top; text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		<td colspan="3" style="padding-top: 0 !important; ">
			#if(line[i].payments.length>0){#
			<table class="table receipt-table">
				#for(var j=0; j<line[i].payments.length; j++){#
				#totalReceived += line[i].payments[j].amount;#
				<tr>
					<td style="background: transparent !important;">#=kendo.toString(new Date(line[i].payments[j].issued_date), "dd-MM-yyyy")#</td>
					<td style="background: transparent !important;"><a href="\#/#=line[i].payments[j].type.toLowerCase()#/#=line[i].payments[j].id#">#=line[i].payments[j].number#</a></td>
					<td style="text-align: right; background: transparent !important;">#=kendo.toString(line[i].payments[j].amount, "c2", banhji.locale)#</td>
				</tr>
				#}#
			</table>
			#}#
		</td>
	</tr>
	#}#
	<tr>
    	<td style="font-weight: bold; color: black;">Total</td>
    	<td></td>
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalInvoice, "c", banhji.locale)#
    	</td>    	
    	<td></td>
    	<td></td>
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalReceived, "c", banhji.locale)#
    	</td>
    </tr>
	<tr>
    	<td colspan="6">&nbsp;</td>
    </tr>
</script>
<script id="invoiceList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>								
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Invoice List</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">									
									<p>Total Balance</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<div class="span6">
										<p>Number of Customer</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Number of Invoice</p>
										<span data-bind="text: invoiceCount"></span>
									</div>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Date</span></th>
									<th><span>Number</span></th>
									<th><span>Reference</span></th>
									<th><span>Due Date</span></th>
									<th style="text-align: center;"><span>Status</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									data-template="invoiceList-template"
									data-auto-bind="false"
									data-bind="source: dataSource"										 
							></tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="invoiceList-template" type="text/x-kendo-template">
	<tr style="font-weight: bold">
		<td colspan="7">#=name#</td>
	</tr>
	# var totalAmount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# totalAmount += line[i].amount;#
		<tr>
			<td><a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].type#</a></td>
			<td style="text-align: right;">#=kendo.toString(new Date(line[i].issued_date),"dd-MM-yyyy")#</td>
			<td style="text-align: right;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>
			<td style="color: black;">
				#if(line[i].reference.length>0){#
					<a href="\#/#=line[i].reference[0].type.toLowerCase()#/#=line[i].reference[0].id#"><i></i> #=line[i].reference[0].number#</a>
				#}#
			</td>
			<td style="text-align: right;">#=kendo.toString(new Date(line[i].due_date),"dd-MM-yyyy")#</td>
			<td style="text-align: right;"> 
				#if(line[i].status==="0" || line[i].status==="2") {#
    				# var date = new Date(), dueDate = new Date(line[i].due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else if(line[i].status==="1") {#
					Paid
				#} else if(line[i].status==="3") {#
					Returned
				#}#   

			</td>
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>

	#}#
	<tr>
    	<td colspan="6" style="font-weight: bold; color: black;">Total #=name#</td>    	
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(totalAmount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="7">&nbsp;</td>
    </tr>
</script>
<script id="customerList" type="text/x-kendo-template">
	<h2 align="center">Customer List</h2>    	
	<div id="grid"></div>
</script>
<script id="customerBalance" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content">									

					<div class="box-generic hidden-print">
						
						<span class="pull-right glyphicons no-js remove_2" 
							onclick="javascript:window.history.back()"><i></i></span>

						Type:
						<input data-role="dropdownlist"
						   data-option-label="Select Type..."		                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: contact_type_id,
		                              source: contactTypeDS" />

		                Status:
		                <input data-role="dropdownlist"
						   data-option-label="Select Status..."		                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: status,
		                              source: statusList" />

		                As of Date:
		                <input data-role="datepicker"	                       
		                   data-format="dd-MM-yyyy"
		                   data-parse-formats="yyyy-MM-dd"
		                   data-bind="value: date"
		                   placeholder="Pick A Date..." />

						<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
						<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
					</div>

					<br>

					<h3 align="center">Customer Balance</h3>

					<br>

					<div class="row-fluid row-merge">
						<div class="col-md-6">
							<div class="innerAll padding-bottom-none-phone">
								<a href="" class="widget-stats widget-stats-gray widget-stats-4">
									<span class="txt">Total Customer </span>
									<span class="count" data-format="n0" data-bind="text: dataSource.total()"></span>
									<span class="glyphicons user"><i></i></span>
									<div class="clearfix"></div>
									<i class="icon-play-circle"></i>
								</a>
							</div>
						</div>						
						<div class="col-md-6">
							<div class="innerAll padding-bottom-none-phone">
								<a href="" class="widget-stats widget-stats-primary widget-stats-4">
									<span class="txt">Total Balance As Of <span data-format="dd-MM-yyyy" data-bind="text: date"></span> </span>
									<span class="count" data-bind="text: total"></span>
									<span class="glyphicons coins"><i></i></span>
									<div class="clearfix"></div>
									<i class="icon-play-circle"></i>
								</a>
							</div>
						</div>												
					</div>

					<br>					
			
					<div data-role="grid"
						 data-auto-bind="false"
						 data-groupable="true"
						 data-sortable="true"
						 data-pageable="true"			                 		                 
		                 data-columns="[
                            { field: 'number', title:'Number' },
                            { field: 'fullname', title:'Name' },                             
                            { field: 'contact_type_id', title:'Type', template:'#=contact_type#' },
                            { field: 'balance', title:'Balance', 
                            	template:'#=kendo.toString(balance, &quot;c0&quot;, banhji.locale)#', 
                            	attributes:{style:'text-align:right;'} 
                            }
                         ]"
		                 data-bind="source: dataSource"></div>

				</div> <!-- //End div example-->				
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>
<script id="saleJobEngagement" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<select data-role="multiselect"
								        		   data-item-template="contact-list-tmpl"
												   data-value-primitive="true"
												   data-value-field="id" 
												   data-text-field="name"
												   data-bind="value: customerList, 
												   			source: customerDS"
												   data-placeholder="Add Customer..."
												   style="width: 100%" /></select>
									    </div>								        							       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>	
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Sale by Job/Engagement</h2>
							<p>From <span data-bind="text: displayDateStart"></span> to <span data-bind="text: displayDateEnd"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<p>Number of Job Sale</p>
									<span data-bind="text: count"></span>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
										<p>Amount</p>
										<span data-bind="text: total"></span>							
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Job</span></th>
									<th style="text-align: right;"><span>Name</span></th>
									<th style="text-align: right;"><span>Type</span></th>
									<th style="text-align: right;"><span>Date</span></th>
									<th style="text-align: right;"><span>Reference</span></th>
									<th><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
										 data-bind="source: saleJob.dataSource"
										 data-template="saleJobEngagement-temp"
							></tbody>
						</table>					
					</div>	
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="saleJobEngagement-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr>
		# var myDate = kendo.toString(new Date(date),'dd-MM-yyyy'); #
		<td>#=job#</td>
		<td style="text-align: right;">#=name#</td>
		<td style="text-align: right;">#=type#</td>
		<td style="text-align: right;">#=myDate#</td>
		<td style="text-align: right;">
			<a href="\#/#=type.toLowerCase()#/#=id#">#=number#</a>
		</td>	
		<td align="right">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="saleOrderList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>	
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

								        <!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

								    	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.customers"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="contact-header-tmpl"
															   data-item-template="contact-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.contactIds, 
															   			source: contactDS"
															   data-placeholder="Select Customer.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Sale Order List</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Number of Customer</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Order</p>
										<span data-bind="text: orderCount"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">									
									<p>Amount</p>
									<span data-bind="text: totalAmount"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed">
							<thead>
								<tr>
									<th><span>Number</span></th>
									<th><span>Reference</span></th>
									<th><span>Date</span></th>
									<th style="text-align: center;"><span>Status</span></th>
									<th style="text-align: right;"><span>Amount</span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
									data-template="saleOrderList-template"
									data-auto-bind="false"
									data-bind="source: dataSource"
							></tbody>
						</table>
					</div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="saleOrderList-template" type="text/x-kendo-template">
	<tr style="font-weight: bold; color: black;">
		<td colspan="5">#=name#</td>
	</tr>	
	# var amount = 0;#
	#for(var i= 0; i <line.length; i++) {#
		# amount += line[i].amount;#
		<tr>
			<td style="padding-left: 20px !important;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#">#=line[i].number#</a>
			</td>
			<td>
				#if(line[i].reference.length>0){#
					<a href="\#/#=line[i].reference[0].type.toLowerCase()#/#=line[i].reference[0].id#"><i></i> #=line[i].reference[0].number#</a>
				#}#
			</td>
			<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
			<td style="text-align: center;">
        		#if(line[i].status==="0"){#
        			Open
        		#}else{#
        			Used
        		#}#
			</td>
			<td style="text-align: right;">#=kendo.toString(line[i].amount, "c2", banhji.locale)#</td>
		</tr>
	#}#
	<tr>
    	<td colspan="4" style="font-weight: bold; color: black;">Total #=name#</td>    	
    	<td style="text-align: right; font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(amount, "c2", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="5">&nbsp;</td>
    </tr>
</script>





<!-- ***************************
*	Sale Section        *
**************************** -->
<script id="saleDashboard" type="text/x-kendo-template">

	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2 >Sales</h2>
			        	<p>
			        		<span data-bind="text: lang.lang.in_here"></span>
			        	</p>

			        	<p style="width: 100%; float: left; margin-top: 8px; margin-bottom: 15px;">
				        	<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 32px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" href="#/sales_recurring">
									<span class="badge fix badge-primary" style="color: #fff;  position: absolute; top: -13px; background: #203864; right: 5px; width: 25px; height: 25px; font-size: 15px; line-height: 25px;">0</span>
									Recurring												
								</a>
							</span>

							<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a href="" target="_blank" style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 39px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" >
									This Module's Guide												
								</a>
							</span>
						</p>

						<div class="cover-block" style="box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        	<div class="supplier-icon">
						       	<div class="span4">
							       	<a href="#/customer" class="center">
							       		<img title="Add Customers" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/customers.ico" width="120"  />
							       	</a>
							       </div>
							    <div class="span4">
							       	<a href="#/item" class="center">
							       		<img title="Add Job" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/add_job.ico" width="120" />
							       	</a>
							    </div>
							    <div class="span4">
							    </div>
							</div>
						</div>
			        </td>
			 	</tr>
			</table>

			<div class="cover-block">
				<table class="table table-borderless table-condensed table-vertical-center costom-imag">
					<tr>
						<td class="center">
							<a href="#/quote">
								<img title="Add Quote" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/quotation.png"  height="200" />
								<span data-bind="text: lang.lang.quotation" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>
						<td class="center">
							<a href="#/sale_order">
								<img title="Add Sale Order" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_order.png"  height="200" />
								<span data-bind="text: lang.lang.sale_order" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>
						<td class="center" style="vertical-align: top;">
							<a href="#/item_catalog">
								<img title="Add Catalog" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/catalog.png" width="110" height="200" />
								<span data-bind="text: lang.lang.catalog" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>
						</td>										
					</tr>
					<tr>
						<td class="center">
							<a href="#/purchase_order">
								<img title="Add Purchase Order" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase_order.png" width="110" height="200" />
								<span data-bind="text: lang.lang.po" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
							</a>						
						</td>
						<td></td>
						<td></td>					
					</tr>
				</table>
			</div>
		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border"  >
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons shopping_cart"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.quote"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/sale_summary_by_customer"><div class="widget-body alert alert-primary" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: quote"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%" style="vertical-align: top">										
										<span data-bind="text: quote_customer"></span>
										<br>
										<span><span data-bind="text: lang.lang.customers"></span></span>
									</td>
									<td width="33%" style="vertical-align: top">
										<span data-bind="text: quote_open"></span>
										<br>
										<span>Open</span>
									</td>
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<a href="#/sale_order_list"><div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.sale_order"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: so"></div>
							<table width="100%">
								<tr align="center">
									<td width="50%" style="vertical-align: top">										
										<span data-bind="text: so_customer"></span>
										<br>
										<span><span data-bind="text: lang.lang.customers"></span></span>
									</td>
									<td width="50%" style="vertical-align: top">
										<span data-bind="text: so_open"></span>
										<br>
										<span>Open</span>
									</td>									
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cargo"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.products"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/customer_balance_summary"><div class="widget-body alert-info3" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: product"></div>
							<table width="100%">
								<tr align="center">
									<td width="50%" style="vertical-align: top">
										<span data-bind="text: product_quote"></span>
										<br>
										<span>On Quote</span>
									</td>
									<td width="50%" style="vertical-align: top">
										<span data-bind="text: product_so"></span>
										<br>
										<span>On SO</span>
									</td>
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">								
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th style="background: #203864;" class="center" colspan="2">Top 5 Quotations</th>				                			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="customerDashBoard-top-customer-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>				           
				            <tr>
				                <th style="background: #203864;" class="center" colspan="2">Top 5 Sale Orders</th>				                			                
				            </tr>					        
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="customerDashBoard-top-ar-template"
			                 data-bind="source: topARDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>				           
				            <tr>
				                <th style="background: #203864;" class="center" colspan="2"><span data-bind="text: lang.lang.top_5_products"></span></th>				                			                
				            </tr>					        
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="customerDashBoard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'sale', name: 'Monthly Quote', categoryField:'month', color: '#203864' , overlay: {gradient: 'none'} },
	                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' , overlay: {gradient: 'none'} }
	                             ]"
	                 data-auto-bind="false"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>
            <!-- End Graph -->
            </div>
		</div>		

	</div>		
</script>
<script id="saleDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<!-- <td style="width: 1%">#:banhji.customerDashboard.topCustomerDS.indexOf(data)+1#</td -->>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="saleDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.customerDashboard.topARDS.indexOf(data)+1#</td>		 -->
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="saleDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.customerDashboard.topProductDS.indexOf(data)+1#</td>		 -->
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>
<script id="saleCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Number or Name..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>						
							<div class="select2-container" style="width: 100%;  margin-bottom: 10px;">
								<input data-role="dropdownlist"
					                   data-option-label="Select Type..."
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: contact_type_id,
					                              source: contactTypeDS"
					                   style="width: 100%;" />							
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid"						 
						 data-bind="source: contactDS"
						 data-row-template="saleCenter-customer-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							        	<li style="font-size: large; color: black; font-weight: bold;">							            	
							            	<span data-bind="text: obj.name"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-4"><i></i></span>
							            </li>							            							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab2-4"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab3-4"><i></i></span>
							            </li>
							            <li class="glyphicons paperclip"><span data-toggle="tab" data-target="#tab4-4"><i></i></span>
							            </li>							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-4" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-inverse" data-bind="click: goQuote"><span><span data-bind="text: lang.lang.quote"></span></span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-inverse" data-bind="click: goSaleOrder"><span><span data-bind="text: lang.lang.sale_order"></span></span>								            			
								            		</td>
								            	</tr>
							            	</table>
							            </div>
							            <!-- // Transactions Tab content END -->							           					            

							            <!-- INFO Tab content -->
							            <div id="tab2-4" class="tab-pane box-generic">
							            	<div class="row-fluid">
							            		<div class="accounCetner-textedit">
									            	<table width="100%">
														<tr>
															<td width="40%"><span data-bind="text: lang.lang.customer_type"></span></td>
															<td width="60%">
																<span class="strong" data-bind="text: obj.contact_type"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.number"></span></td>
															<td>
																<span class="strong" data-bind="text: obj.abbr"></span>
																<span class="strong" data-bind="text: obj.number"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.name"></span></td>
															<td>
																<span data-bind="text: obj.name"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.billed_address"></span></td>
															<td>
																<span data-bind="text: obj.address"></span>
															</td>
														</tr>								
														<tr>
															<td><span data-bind="text: lang.lang.phone"></span></td>
															<td>
																<span data-bind="text: obj.phone"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.currency"></span></td>
															<td>										
																<span data-bind="text: currencyCode"></span>
															</td>
														</tr>
													</table>

													<span class="btn btn-primary btn-icon glyphicons edit pull-right" data-bind="click: goEdit"><i></i><span data-bind="text: lang.lang.view_edit_profile"></span></span>
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab3-4" class="tab-pane">

										    <div>
												<input type="text" class="k-textbox" 
														data-bind="value: note" 
														placeholder="Add memo ..." 
														style="width: 366px;" />
												<span class="btn btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.add"></span></span>
											</div>

											<br>

											<div class="table table-condensed" style="height: 100;"						 
												 data-role="grid"
												 data-auto-bind="false"						 
												 data-bind="source: noteDS"
												 data-row-template="saleCenter-note-tmpl"
												 data-columns="[{title: ''}]"
												 data-height="100"						 
												 data-scrollable="{virtual: true}"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->

							            <!-- Attach Tab content -->
								        <div id="tab4-4" class="tab-pane">							            	
								            <p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
								            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

								            <table class="table table-bordered">
										        <thead>
										            <tr>			                
										                <th><span data-bind="text: lang.lang.file_name"></span></th>
										                <th><span data-bind="text: lang.lang.description"></span></th>
										                <th><span data-bind="text: lang.lang.date"></span></th>
										                <th style="width: 13%;"></th>                			                
										            </tr> 
										        </thead>
										        <tbody data-role="listview" 
										        		data-template="attachment-list-tmpl" 
										        		data-auto-bind="false"
										        		data-bind="source: attachmentDS"></tbody>			        
										    </table>

										    <span class="btn btn-icon btn-success glyphicons ok_2" data-bind="click: uploadFile" style="color: #fff; padding: 5px 38px; text-align: left; width: 98px !important; display: inline-block; margin-top: 10px;"><i></i> <span data-bind="text: lang.lang.save"></span></span>

								        </div>
								        <!-- // Attach Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6" style="margin-bottom: 10px;">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadQuote">
										<span class="glyphicons shopping_cart"><i></i></span>
										<span class="txt"><span data-bind="text: lang.lang.quote"></span><span data-bind="text: quote" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadSO">
										<span class="glyphicons cart_in"><i></i></span>
										<span class="txt"><span data-bind="text: lang.lang.sale_order"></span><span data-bind="text: so" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>										
						</div>
					</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input data-role="datepicker"
							   class="sdate"
							   data-format="dd-MM-yyyy"
					           data-bind="value: sdate,
					           			  max: edate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      min: sdate"
					           placeholder="To ..." >

					  	<button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th><span data-bind="text: lang.lang.type"></span></th>								
								<th><span data-bind="text: lang.lang.reference_no"></span></th>
								<th><span data-bind="text: lang.lang.amount"></span></th>
								<th><span data-bind="text: lang.lang.status"></span></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="saleCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="saleCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <!-- Reference -->
        <td>
        	#if(type=="Customer_Deposit" && amount<0){#			
				<a href="\#/#=reference[0].type.toLowerCase()#/#=reference[0].id#"><i></i> #=number#</a>			
			#}else{#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>
			#}#        	
        </td>
        <!-- Amount -->
    	<td class="right">
    		#if(type=="GDN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else{#
    			#=kendo.toString(amount-deposit, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<!-- Status -->
    	<td align="center">
    		#if(type==="Quote"){#       		
				#if(status==="0"){#
        			Open
        		#}else{#
        			Used        			
        		#}#
        	#}else if(type==="Sale_Order"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#
        	#}else{#

        	#}#        				
		</td> 	
    </tr>
</script>
<script id="saleCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body strong">				
				<span>#=abbr##=number#</span>
				<span>#=name#</span>
			</div>
		</td>
	</tr>
</script>
<script id="saleCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>
<script id="sale" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head widget-custome" style="background: #203864 !important;">
									<ul>
										<li class="active"><a  class="glyphicons search" href="#tab-1" data-toggle="tab"><i></i>Search</a></li>
										<li><a  class="glyphicons cargo" href="#tab-2" data-toggle="tab"><i></i>Category</a></li>
										<li><a  class="glyphicons heart" data-toggle="tab" data-bind="click: favorite"><i></i>Favorite</a></li>
									</ul>
									<div style="float: right;">
										<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
											<a style="color: #fff; margin-top: 4px; line-height: 17px;" class="glyphicons shopping_cart" href="#/quote" >
												<i></i><span class="badge fix badge-primary" style="color: #fff; position: absolute; left: -8px; top: -9px; background: red;" data-bind="text: quoteLineDS.total()"></span>
												Quote												
											</a>
										</span>
										<sapn style="position: relative; height: 35px; line-height: 35px; padding-left: 15px; float: left; display: block; border-left: 1px solid #efefef;">
											<a style="color: #fff; margin-top: 4px; line-height: 17px;" class="glyphicons cart_in" href="#/sale_order" >
												<i></i><span class="badge fix badge-primary" style="color: #fff; position: absolute; left: -12px; top: -9px; background: red;" data-bind="text: soLineDS.total()"></span>
												Sale Order
											</a>
										</span>
									</div>

									
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input type="text" class="span2 search-query" placeholder="Search" id="search-placeholder" data-bind="value: searchText" style="background-color: #fff; color: #333; border-color: #ddd; height: 33px; width: 192px;">
											<button type="submit" class="btn btn-inverse" data-bind="click: search"><i class="icon-search"></i></button>					
									    </div>
									    <div class="tab-pane" id="tab-2">

									    	<ul data-role="listview"
									    		 data-auto-bind="false"
									    		 data-selectable="true"
								                 data-template="sale-category-template"
								                 data-bind="source: categoryDS,"
								                 style="overflow: auto; padding-top: 15px; padding-left: 15px; padding-bottom: 15px;"></ul>
									    	
									    </div>
									   								        							       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="row-fluid" id="main-section" style="overflow: hidden;margin-top: 15px;">
						<ul data-role="listview"
							 data-auto-bind="false"
			                 data-template="sale-template"
			                 data-bind="source: dataSource"
			                 style="height: 300px; "></ul>
			        </div>

			        <div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: dataSource"></div>


			        <!--  Top Up Sale Detail -->
			        <div class="modal fade popRightBlog-saleDetail" id="saleDetail">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-right: 15px; font-size: 35px; color: #000;">×</button>
						<div class="row-fluid sale-detail">
							<div id="details">
				                <a id="navigate-prev" data-bind="click: prevItem"></a>
			                	
			                	<div id="detail-info" style="background: none;">
			                		<img class="main-image" width="200px" data-bind="attr: { src: obj.image_url, alt: obj.name, title: obj.name }" style="border: 1px solid #ddd;">
			                		<div id="description">
										<h1 data-bind="text:obj.name"></h1>
										<p data-bind="text:obj.sale_description"></p>
										<div id="details-total">
											<p id="price-quantity" data-bind="text:obj.item_prices[0].price" style="font-weight: 600;color: #333;background: none; font-size: 30px;padding-left: 0;"></p>												
										</div>
									</div>
								</div>
								<div id="nutrition-info" style="border: 1px solid #ddd;">
									<h2 style="padding-top: 15PX;padding-bottom: 5px;padding-left: 10px;font-size: 20px;font-weight: 600;">Information</h2>
									<dl>
										<dt style="padding-left: 10px;">Categories:</dt>
										<dd data-bind="text:obj.category"></dd>
										<dt style="padding-left: 10px;">UOM</dt>
										<dd data-bind="text:obj.measurement_id"></dd>
										<dt style="padding-left: 10px;">On Hand</dt>
										<dd data-bind="text:on_hand"></dd>
										<dt style="padding-left: 10px;">On SO</dt>
										<dd data-bind="text:on_so"></dd>
										<dt style="padding-left: 10px;">On PO</dt>
										<dd data-bind="text:on_po"></dd>
									</dl>
								</div>

								<a data-bind="click: nextItem" id="navigate-next"></a>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</script>
<script id="sale-category-template" type="text/x-kendo-tmpl">
    <li class="btn btn-primary" 
    	data-bind="text: name, click: selectedType"
    	style="width: auto !important; text-align: center; padding:5px 10px !important; margin-bottom: 10px;">
    </li>
</script>
<script id="sale-template" type="text/x-kendo-tmpl">	
	<li class="products span2" aria-selected="false" >
	    <a class="view-details" href="\#saleDetail" data-toggle="modal" data-bind="click:loadDetail">
	        <img class="main-image" src="#= image_url!==null ? image_url : banhji.no_image #" alt="#=name#" title="#=name#">
	    </a>
	    <div style=" padding-bottom: 49px;">
	        <strong style="color: \#2B569A;">#=name#</strong>
	        <span style="color: \#2B569A;" class="price"><span>$</span><span data-bind="text: price"></span></span>

		    <div class="add-to-cart row-fluid""> 
		    	<span class="span5" data-bind="click: addQuote" style="background: \#203864; padding: 5px; cursor: pointer; width: 60px; margin-left: 7px; color: \#fff;"> Quote </span>
		    	<span class="span6" data-bind="click: addSO" style="background: \#1b8330; padding: 5px; margin-left: 5px; cursor: pointer; width: 58px; color: \#fff;"> Order </span>
		    </div>
		</div>
	</li>
</script>
<script id="saleDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

					<h2>Sale Detail</h2>

					<div class="row-fluid sale-detail">
						<div id="details-top-image"></div>
						<div id="details">
			                <a id="navigate-prev" href=""></a>
			                	<div id="detail-info">
			                		<img class="main-image" width="200px" src="<?php echo base_url();?>assets/chirashi-sushi.jpg" alt="Selected Product" title="Selected Product" >
			                		<div id="description">
										<h1>Chirashi sushi</h1>
										<p>Sushi bar variety with sushi rice.</p>
										<div id="details-total">
											<p id="price-quantity" data-bind="">$21.00</p>
											<button class="buy" data-bind="">Add to cart</button>
										</div>
									</div>
								</div>
							<div id="nutrition-info">
								<h2>Nutritional Information</h2>
								<dl>
									<dt>Protein</dt>
									<dd >2.3138</dd>
									<dt>Fat (total)</dt>
									<dd >0.6041</dd>
									<dt>Carbohydrate</dt>
									<dd >0.6041</dd>
									<dt>Energy (kJ)</dt>
									<dd >7.5314</dd>
									<dt>Energy (kcal)</dt>
									<dd >1.8000</dd>
									<dt>Sugar</dt>
									<dd >0.3114</dd>
								</dl>
							</div><a data-bind="" id="navigate-next" href="#/menu/3"></a>
						</div>
					</div>
					<div id="details-bottom-image"></div>
				</div>
			</div>
		</div>
	</div>
</script>
<script type="text/x-kendo-template" id="detail-template">

	<div id="details-top-image">
	</div>

	<div id="details">
        <a data-bind="attr: {href: previousHref }" id="navigate-prev"></a><div
		id="detail-info"><img class="main-image"
		data-bind="attr: { src: imgUrl }" alt="Selected Product" title="Selected Product"/><div
		id="description">
				<h1 data-bind="text: current.name"></h1>
				<p data-bind="text: current.description"></p>
				<div id="details-total">
					<p id="price-quantity" data-bind="text: price"></p>
					<button class="buy" data-bind="click: addToCart">Add to cart</button>
				</div>
			</div>
		</div><div id="nutrition-info"><h2>Nutritional Information</h2>
				<dl>
				  <dt>Protein</dt>
					<dd data-bind="text: current.stats.protein"></dd>
				  <dt>Fat (total)</dt>
					<dd data-bind="text: current.stats.fat"></dd>
				  <dt>Carbohydrate</dt>
					<dd data-bind="text: current.stats.fat"></dd>
					  <dt>Energy (kJ)</dt>
					<dd data-bind="text: current.stats.energy"></dd>
				  <dt>Energy (kcal)</dt>
					<dd data-bind="text: kCal"></dd>
					  <dt>Sugar</dt>
					<dd data-bind="text: current.stats.sugar"></dd>
				</dl>
		</div><a data-bind="attr: { href: nextHref }" id="navigate-next"></a>
	</div>

    <div id="details-bottom-image"></div>
</script>
<script id="saleRecurring" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

				    <h2>Sale Recurring</h2>

				    <br>

				    <div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons user" href="#tab-1" data-toggle="tab"><i></i>Select Customer</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									
									       <input id="ccbItem" name="cbbContact"
												   data-role="combobox"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: contact_id,
								                              source: contactDS,
								                              events:{change: search}"
								                   data-placeholder="Customer..." style="width: 200px;" />
							        	</div>
								        <!-- //GENERAL INFO END -->

								    </div>
								</div>
							</div>
						</div>
					</div>
					                           					
	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
			                <th>TYPE</th>
			                <th>RECURRING NAME</th>
			                <th>CUSTOMER</th>
			                <th>START DATE</th>
			                <th class="center">FREQUENCY</th>
			                <th></th>
	            		</thead>
	            		<tbody data-role="listview" 
				        		data-template="saleRecurring-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
			             data-role="pager" 
			             data-auto-bind="false"
			             data-bind="source: dataSource"></div>

	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="saleRecurring-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#=type#</td>
		<td>#=recurring_name#</td>
		<td>#=contact.length>0?contact[0].abbr + contact[0].number +" "+ contact[0].name:""#</td>
		<td>#=kendo.toString(new Date(start_date), "dd-MM-yyyy")#</td>
		<td class="center">#=frequency#</td>
		<td class="center">
			<a class="btn btn-success" href="\#/#=type.toLowerCase()#/#=id#/1"><i></i> Edit</a>
		</td>		
    </tr>   
</script>
<script id="saleReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">				
				<h2>SALE MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports in 
					different ways to help analyze your revenue performance.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">						
						<tr>
							<td width="50%">
								<h3><a href="#/quotation_list">Quotation List</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/sale_order_list">Sale Order List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<h3><a href="#/sale_job_engagement">Sale by Job/Engagement</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_list">Customer List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
							</td>
							<td >
								<p>
									List of all active customers
								</p>
							</td>
						</tr>
						<tr>
							<td>
								<h3><a href="#/sale_inventory_position_summary">Inventory Position Summary</a></h3>
							</td>
							<td>
								
							</td>

						</tr>
						<tr>
							<td>
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price.
								</p>
							</td>
							<td>
								
							</td>

						</tr>
					</table>
				</div>
			</div>

			
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<h3><a href="#/customer_recurring">Recurring Customer Template List</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_setting">Payment Method & Term List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<p></p>								
							</td>
							<td>
								<p>
									List the types of payments and the term that determine due date for payment from customers.
								</p>
							</td>
							
						</tr>
						<tr >
							<td></td>														
						</tr>

					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>SALE ORDER</h2>
					<div align="center" class="text-large strong" data-bind="text: sale"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: sale_customer"></span>
								<br>
								<span>Customer</span>
							</td>
							<td>
								<span data-bind="text: sale_product"></span>
								<br>
								<span>Product</span>
							</td>
							<td>
								<span data-bind="text: order"></span>
								<br>
								<span>Order</span>
							</td>
							<td >
								<span data-bind="text: sale_order"></span>
								<br>
								<span>Sale Order</span>
							</td>

						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
	            </div>
			</div>
			
			</div>
		</div>
	</div>
</script>
<script id="saleInventoryPositionSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: inventoryPositionSummary.search"><i class="icon-search"></i></button>							
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Inventory Position Summary</h2>
							<p><span data-bind="text: startDate"></span> to <span data-bind="text: endDate"></p>
						</div>

						<div class="row-fluid" style="width: 80%; margin: 0 auto;">
							<div class="span5">
								<div class="total-customer">
									<p>Product Items</p>
									<span data-bind="text: count"></span>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Product Items on hand</p>
									<span data-bind="text: onHand"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed " style="width: 80%; margin: 0 auto;">
							<thead>
								<tr>
									<th><span>Item Name</span></th>
									<th class="center"><span>QOH</span></th>
									<th style="text-align: center;"><span>On Purchase Order</span></th>
									<th style="text-align: center;"><span>On Sale Order</span></th>
								
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="sale-inventory-position-summary-row-template"
					                data-bind="source: inventoryPositionSummary.dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="sale-inventory-position-summary-row-template" type="text/x-kendo-tmpl">
	<tr>
	    <td>#=item#</td>
	    <td align="center">#=onHand#</td>
	    <td align="center">#=po#</td>
	    <td align="center">#=so#</td>
	</tr>
</script>





<!-- ***************************
*	Invoice Form Section        *
**************************** -->
<script id="invoiceCustom" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>
			        <h2 style="padding:0 15px;"" data-bind="text: lang.lang.custom_forms"></h2>
				    <br>	
				    <div class="row" style="margin-left:0;">			   				
						<div class="span4">	
							<div class="span12">
								<select class="span12 selectType" 
									data-role="dropdownlist" 
									data-value-primitive="true" 
									data-text-field="name" 
									data-value-field="id" 
									data-bind="value: obj.type, 
												source: selectTypeList, 
												events:{change: onChange}" ></select>
							</div>
							<div class="span12" style="margin-bottom: 10px;">
								<input type="text" id="formName" name="Form Name" class="k-textbox" placeholder="Form Name" required validationMessage="" data-bind="value: obj.name" style="width: 100%;" />
							</div>
							<div class="span12">
								<h2 class="btn btn-block btn-primary">Form Style</h2>
								<div class="row formstyle">
									<div id="formStyle"
										 data-role="listview"
										 data-selectable="true"
						                 data-template="invoiceCustom-txn-form-template"
						                 data-bind="source: txnFormDS"
						                 style="overflow: auto">
						            </div>
						        </div>
							</div>
							<div class="span12" style="margin-left:0; margin-top: 10px;">
								<h2 class="btn btn-block btn-primary">Form Color</h2>
								<div class="colorPalatte span12">
									<div class="" style="margin-top: 15px;">
										<div data-selectable="true" data-bind="value: obj.color, events: { change : colorCC }" data-tile-size='{ width: 60, height: 35 }' data-role="colorpalette" data-columns="6" data-palette='[ "#ffffff", "#000000", "#eeece1", "#1f497d", "#4f81bd", "#c0504d", "#9bbb59", "#dbeef3", "#8064a2", "#f79646", "#f2f2f2", "#7f7f7f", "#ddd9c3", "#c6d9f0", "#dbe5f1", "#f2dcdb", "#ebf1dd", "#e5e0ec"]'></div>
                                	</div>
                                </div>
							</div>
							<div class="span12" style="margin-left:0; margin-top: 10px;padding-bottom: 30px;">
								<h2 class="btn btn-block btn-primary">Form Appearance</h2>
								<div class="colorPalatte span12">
									<div class="" style="margin-top: 15px;">
										<input type="text" id="formtitle" name="Form Title" class="k-textbox" placeholder="Form Title" required validationMessage="" data-bind="value: obj.title" style="width: 100%;" />
										<textarea data-bind="value: obj.note, text: obj.note" placeholder="Note" class="span12" style="min-height: 100px;margin-top: 15px;padding-left: 10px;"></textarea>
                                	</div>
                                </div>
							</div>
						</div>
						<div class="span8" id="invFormContent" style="padding-left:0;padding-right: 0;width: 63%;border:1px solid #eee;margin-bottom:20px;">

						</div>
					</div>
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>
						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span class="btn btn-icon btn-primary glyphicons ok_2" data-bind="click: save" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save"></span></span>
								<span class="btn btn-icon btn-success glyphicons power" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.close"></span></span>		
							</div>
						</div>
					</div>
					<!-- // Form actions END -->	
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="invoiceForm" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>
			        <h2>PREVIEW FORM</h2>
				    <br>	
				    <div class="row" style="margin-left:0;">	 				
						<div class="span10" id="invFormContent" style="min-height: 300px;border:1px solid #ccc; margin: 0 auto;float:none;padding-bottom:20px;margin-bottom: 30px;">	
							<div id="loading-inv" style="margin-left: -15px;text-align: center;position: absolute;width: 100%; height: 100%;background: rgba(142, 159, 167, 0.8);z-index: 9999;">
								<i class="fa fa-circle-o-notch fa-spin" style="font-size: 50px;color: #fff;position: absolute; top: 45%;left: 45%"></i>
							</div>
						</div>
					</div>
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="savePrint" class="btn btn-icon btn-primary glyphicons print" data-bind="click: printGrid" style="width: 80px;"><i></i>Print / PDF</span>
						<!--span id="savePDF" class="btn btn-icon btn-success glyphicons edit" data-bind="click: savePDF" style="width: 120px;"><i></i> Save PDF</span-->									
					</div>
					<!-- // Form actions END -->
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="invoiceForm1" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 style="text-align:left;" data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន Address: <span data-bind="text: company.address"></span></pre>
                    <pre>ទូរស័ព្ទលេខ HP <span data-bind="text: company.phone"></span></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear mid-header" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p style="font-weight:bold">
                        		<span style="font-size: 12px;" data-bind="text: contactDS.data()[0].name"></span><br>
                        		<span data-bind="text: contactDS.data()[0].address"></span>
                        	</p>
                        </div>
                    </div>
                    <div class="clear">
                    	<!--div class="left">
                    		<p>ទូរស័ព្ទ​លេខ HP:</p>
                        </div-->
                        <div class="left dotted-ruler" style="width: 78%;">
                        	<p style="font-weight:bold" data-bind="text: contactDS.data()[0].phone"></p>
                        </div>
                    </div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
        	<div class="clear">
            	<table cellpadding="0" cellspacing="0" border="1" class="span12">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td style="text-align: right; padding-right: 5px;" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សរុប (បូក​បញ្ចូល​ទាំង​អាករ)​ Total (VAT included)</td>
                            <td style="text-align: right; padding-right: 5px;" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">ប្រាក់កក់ Deposit</td>
                            <td style="text-align: right; padding-right: 5px;" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td style="text-align: right; padding-right: 5px;" data-bind="text: obj.amount_due"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm2" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 style="text-align:left;" data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន Address: <span data-bind="text: company.address"></span></pre>
                    <pre>ទូរស័ព្ទលេខ HP <span data-bind="text: company.phone"></span></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រអាករ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear mid-header" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
		        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
		        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
		        			</p>
                        </div>
                    </div>
                    <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: contactDS.data()[0].vat_no"></span><p style="font-size:8px;font-weight:normal;margin-left: 8px;">(ប្រសិន​បើ​មាន / If any)</p>
                	</div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
            
        	<div class="clear inv2">
            	<table cellpadding="0" cellspacing="0" border="1" style="width:100%;">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុប​ Sub Total</td>
                            <td class="rside" data-bind="text: obj.sub_total"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td class="rside" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">អាករ​លើ​តម្លៃ​បន្ថែម ១០% VAT (10%)</td>
                            <td class="rside" data-bind="text: obj.tax"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុបរួម​ Grand Total</td>
                            <td class="rside" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">ប្រាក់កក់ Deposit</td>
                            <td class="rside" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td class="rside" data-bind="text: obj.amount_due"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<!--script id="invoiceForm3" type="text/x-kendo-template">
	<div class="inv1 sale-order">
    	<div class="head">
        	<h1>Sale Order</h1>
        	<div class="span12">
        		<div class="span10" style="text-align:right;">
        			Date : <br>
        			SONo : 
        		</div>
        		<div class="span2" style="text-align:left;padding-left: 10px;">
        			<p data-bind="text: obj.issued_date"></p>
        			<p data-bind="text: obj.number"></p>
        		</div>
        	</div>
        </div>
        <div class="content clear">
        	<table class="span12">
        		<thead>
        			<tr>
	        			<th colspan="2">
	        				CUSTOMER INFORMATION
	        			</th>
	        			<th colspan="2">
	        				DELIVERED TO ADDRESS
	        			</th>
	        		</tr>
        		</thead>
        		<tbody>
        			<tr style="height: 100px">
        				<td colspan="2">
        					<p><span data-bind="text: obj.contact[0].name"></span><br>
        					<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
	        			</td>
	        			<td colspan="2">
	        				<p><span data-bind="text: obj.contact[0].name"></span><br>
        					<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
	        			</td>
        			</tr>
        			<tr>
	        			<td class="span3">TERM OF PAYMENT</td>
	        			<td class="span3"></td>
	        			<td class="span3">DELIVERY DATE</td>
	        			<td class="span3" data-bind="text: obj.issued_date"></td>
	        		</tr>
	        		<tr>
	        			<td class="span3">MODE OF PAYMENT</td>
	        			<td class="span3"></td>
	        			<td class="span3">TERM OF DELIVERY</td>
	        			<td class="span3"></td>
	        		</tr>
        		</tbody>
        	</table>
        	<table class="span12" style="margin-top: 5px;">
        		<thead>
        			<tr>
	        			<th data-bind="style: {backgroundColor: obj.color}">
	        				Item <br>Code
	        			</th>
	        			<th data-bind="style: {backgroundColor: obj.color}">
	        				Description
	        			</th>
	        			<th width="70" data-bind="style: {backgroundColor: obj.color}">
	        				Required<br>Date
	        			</th>
	        			<th width="40" data-bind="style: {backgroundColor: obj.color}">
	        				UM
	        			</th>
	        			<th width="40" data-bind="style: {backgroundColor: obj.color}">
	        				QTY
	        			</th>
	        			<th width="100" data-bind="style: {backgroundColor: obj.color}">
	        				Unit Price
	        			</th>
	        			<th width="70" data-bind="style: {backgroundColor: obj.color}">
	        				Total
	        			</th>
	        		</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template3"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td colspan="4" rowspan="4" style="text-align:left;padding-left:20px;">
	        				<b>Note:</b><br>
	        				<ol>
								<li>Please notify us immediately if you are unable to deliver as specified.</li>
								<li>Check will be used to settled this order if the settled amount is equal to or greater than 500 USD</li>
								<li>Please send all correspondence to address above.</li>
							</ol>
        				</td>
        				<td style="text-align:left;padding-left:20px;" colspan="2"><b>SUB TOTAL</b></td>
        				<td data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="text-align:left;padding-left:20px;" colspan="2"><b>VAT​(10%) if applicable</b></td>
        				<td data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="text-align:left;padding-left:20px;" colspan="2"><b>Other charges</b></td>
        				<td></td>
        			</tr>
        			<tr>
        				<td style="text-align:left;padding-left:20px;" colspan="2"><b>Total</b></td>
        				<td data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<div class="span12 clear" style="margin-top: 15px">
	        	<div class="span6">
	        		<div class="span6">
	        			<p>Approved by: </p>
	        			<p style="margin-top: 40px;padding-top: 5px;width: 80%;border-top: 1px solid #000;">Name:<br>Date:<p>
	        		</div>
	        		<div class="span6">
	        			<p>Recieved by: </p>
	        			<p style="margin-top: 40px;padding-top: 5px;width: 80%;border-top: 1px solid #000;">Name:<br>Date:<p>
	        		</div>
	        	</div>
	        	<div class="span6">
	        		<table class="span12">
	        			<tr>
	        				<thead><th>I hereto accept the terms and conditions in the contract and purchase order:</th></thead>
	        			</tr>
	        			<tr><td>Customer Name:</td></tr>
	        			<tr><td>Position:</td></tr>
	        			<tr><td>Date:</td></tr>
	        		</table>
	        	</div>
	        </div>
        </div>
    </div>
</script>
<script id="invoiceForm4" type="text/x-kendo-template">
	<div class="inv1 quotation">
        <div class="content clear">
        	<table class="span12">
        		<tbody>
        			<tr>
        				<td style="border-top: none;border-left: none" width="500" colspan="2" rowspan="3">
        					<h2>Quotation Form</h2>
	        			</td>
	        			<td width="120">
	        				<b>Date</b>
	        			</td>
	        			<td data-bind="text: obj.issued_date"></td>
        			</tr>
        			<tr>
	        			<td ><b>Quotation Form #</b></td>
	        			<td data-bind="text: obj.number"></td>
	        		</tr>
	        		<tr>
	        			<td><b>Requisition #</b></td>
	        			<td></td>
	        		</tr>
	        		<tr>
	        			<td width="150"><b>Customer Name:</b></td>
	        			<td data-bind="text: obj.contact[0].name"></td>
	        			<td ><b>Date of contact:</b></td>
	        			<td ></td>
	        		</tr>
	        		<tr>
	        			<td width="150"><b>Contact Information:</b></td>
	        			<td data-bind="text: obj.contact[0].address"></td>
	        			<td ><b>Time of contact:</b></td>
	        			<td ></td>
	        		</tr>
	        		<tr>
	        			<td width="150"><b>Validity Date</b></td>
	        			<td ></td>
	        			<td ><b>Date price provided </b></td>
	        			<td ></td>
	        		</tr>
        		</tbody>
        	</table>
        	<table class="span12" style="margin-top: 5px;">
        		<thead>
        			<tr>
	        			<th data-bind="style: {backgroundColor: obj.color}">
	        				No
	        			</th>
	        			<th width="70" data-bind="style: {backgroundColor: obj.color}">
	        				Item<br>Code
	        			</th>
	        			<th width="" data-bind="style: {backgroundColor: obj.color}">
	        				Description
	        			</th>
	        			<th width="30" data-bind="style: {backgroundColor: obj.color}">

	        			</th>
	        			<th width="40" data-bind="style: {backgroundColor: obj.color}">
	        				UM
	        			</th>
	        			<th width="40" data-bind="style: {backgroundColor: obj.color}">
	        				QTY
	        			</th>
	        			<th width="80" data-bind="style: {backgroundColor: obj.color}">
	        				Unit Price
	        			</th>
	        			<th width="70" data-bind="style: {backgroundColor: obj.color}">
	        				Extended<br>Price
	        			</th>
	        		</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template4"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="text-align:right;padding-right:10px;" colspan="7"><b>Total</b></td>
        				<td data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<div class="span12 clear" style="margin-top: 10px">
	        	<p><b>Additional Specifications </b></p>
	        	<table class="span12" style="margin-top:10px;">
	        		<tr>
	        			<td colspan="3">
	        			<br><br><br><br>
	        			</td>
	        		</tr>
	        		<tr>
	        			<td colspan="3"><b>Prepared By:<br>Position:<br>Date:</b></td>
	        		</tr>
	        		<tr>
	        			<td rowspan="2">This form is used only when official quotation from supplier is not feasible.<td>
	        			<td>&nbsp;</td>
	        		</tr>
	        		<tr>
	        			<td width="80">&nbsp;</td>
	        			<td width="80">&nbsp;</td>
	        		</tr>
	        	</table>
	        </div>
        </div>
    </div>
</script>
<script id="invoiceForm5" type="text/x-kendo-template">
	<div class="inv1 quotation">
        <div class="content clear">
        	<table class="span12">
        		<tbody>
        			<tr>
        				<td class="main-color" width="300" colspan="4" rowspan="3">
        					<h2>GOODS DELIVERED NOTE </h2>
	        			</td>
	        			<td width="120">
	        				<b>GDN #</b>
	        			</td>
	        			<td width="100">&nbsp;</td>
        			</tr>
        			<tr>
	        			<td ><b>Date</b></td>
	        			<td data-bind="text: obj.issued_date"></td>
	        		</tr>
	        		<tr>
	        			<td><b>SO/ CONTRACT #</b></td>
	        			<td></td>
	        		</tr>
	        		<tr>
	        			<td width="90"><b>Name</b></td>
	        			<td width="80" data-bind="text: obj.contact[0].name"></td>
	        			<td width="90"><b>CODE</b></td>
	        			<td width="80"></td>
	        			<td ><b>CUSTOMER<br>INVOICE #</b></td>
	        			<td data-bind="text: obj.number"></td>
	        		</tr>
	        		<tr>
	        			<td ><b>ADDRESS</b></td>
	        			<td colspan="3" data-bind="text: obj.contact[0].address"></td>
	        			<td><b>DELIVERY NOTE #</b></td>
	        			<td ></td>
	        		</tr>
        		</tbody>
        	</table>
        	<table class="span12" style="margin-top: 5px;">
        		<thead>
        			<tr>
	        			<th rowspan="2" width="70" data-bind="style: {backgroundColor: obj.color}">
	        				Item<br>Code
	        			</th>
	        			<th rowspan="2" data-bind="style: {backgroundColor: obj.color}">
	        				DESCRIPTION
	        			</th>
	        			<th rowspan="2" data-bind="style: {backgroundColor: obj.color}">
	        				INSPECTION<br>CRITERIA
	        			</th>
	        			<th colspan="5" data-bind="style: {backgroundColor: obj.color}">
	        				QUANTITY
	        			</th>
	        		</tr>
	        		<tr>
	        			<th data-bind="style: {backgroundColor: obj.color}"><b style="font-size:10px">ORDERED</b></th>
	        			<th data-bind="style: {backgroundColor: obj.color}"><b style="font-size:10px">RECEIVED</b></th>
	        			<th data-bind="style: {backgroundColor: obj.color}"><b style="font-size:10px">INSPECTED</b></th>
	        			<th data-bind="style: {backgroundColor: obj.color}"><b style="font-size:10px">ACCEPTED</b></th>
	        			<th data-bind="style: {backgroundColor: obj.color}"><b style="font-size:10px">REJECTED</b></th>
	        		</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template5"
						data-bind="source: lineDS">
        		<tfoot>
        			
        			<tr>
        				<td style="text-align:center;color:#fff;background:#000" colspan="8">Goods/ Materials received are delivered correctly in term of quantity, quality and other specifications according to the specified SO.</td>
        			</tr>
        		</tfoot>
        	</table>
        	<div class="span12 clear" style="margin-top: 10px">
	        	<div class="span6" style="padding-left: 30px;">
	        		<strong>
	        			Delivered By:<br>
	        			Received By:<br>
	        			Inspected By:
	        		</strong>
	        	</div>
	        	<div class="span6" style="padding-left: 30px;">
	        		<strong>
	        			Date/ Time:<br>
	        			Date/ Time:<br>
	        			Date/ Time:
	        		</strong>
	        	</div>
	        	<table class="span12" style="margin-top: 10px;">
	        		<tr>
	        			<td width="280">
	        				<b>Sample Lot</b><br><br>
	        				<p>Lot Size:_______________<span style="float:right;padding-right:10px;">Delivery Damage</span></p>
	        				<p><span style="float:right;padding-right:10px;">Markings/Finish</span></p><br>
	        				<p>Sample Qty:____________<span style="float:right;padding-right:10px;">Attributes</span></p><br>
	        			</td>
	        			<td>
	        				<b>Conformance/Discrepancies to Specifications</b><br><br>
	        			</td>
	        		</tr>
	        	</table>
	        </div>
        </div>
    </div>
</script-->

<script id="invoiceForm6" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 35%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD : <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th width="80" class="rside">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;color: #000" colspan="3" rowspan="4" data-bind="text: obj.note"></td>

        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;color: #000" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90" style="color:#000;">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80" style="color:#000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td width="90" style="color:#000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color:#000;">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color:#000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color:#000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm7" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 35%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD : <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th width="80" class="rside">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;" colspan="3" rowspan="4" data-bind="text: obj.note"></td>

        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;color: #000;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;color: #000;" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>

        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90" style="color:#000;">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80" style="color:#000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td width="90" style="color:#000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color:#000;">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color:#000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color:#000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm8" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>សរុប TOTAL <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD : <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th class="rside" width="80">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template8"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="2" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;color: #000;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td class="rside" style="background-color: #eee;color: #000;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90" style="color: #000;">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80" style="color: #000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td width="90" style="color: #000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color: #000;">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color: #000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm9" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>សរុប TOTAL <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD : <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th class="rside" width="80">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template8"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;color: #000;text-align: left;" colspan="2" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee; color: #000" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90" style="color: #000;">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80" style="color: #000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td width="90" style="color: #000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color: #000;">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color: #000;">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000;">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm10" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 35%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD : <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th width="80" class="rside">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template10"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;" colspan="3" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;color:#000" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee; color:#000" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee; color:#000" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color:#000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90" style="color: #000">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80" style="color: #000">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000" width="90">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color: #000">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color: #000">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm11" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 35%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD : <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th width="80" class="rside">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template10"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;" colspan="3" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;color: #000" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td style="color: #000" width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td style="color: #000" width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000" width="90">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color: #000">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color: #000">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm12" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>សរុប TOTAL <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th class="rside" width="80">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template12"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;color: #000" colspan="2" rowspan="4" data-bind="text: obj.note"></td>

        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.discount"></td>
        				
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td style="color: #000" width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td style="color: #000" width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000" width="90">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color: #000">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color: #000">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm13" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>សរុប TOTAL <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT : <span data-bind="text: paymentMethodDS.data()[0].name"></span></div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD <span data-bind="text: obj.due_date"></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT PRICE</th>
        				<th class="rside" width="80">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template12"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;color: #000" colspan="2" rowspan="4" data-bind="text: obj.note"></td>

        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.discount"></td>
        				
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;color: #000" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;color: #000;font-weight: bold;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td style="color: #000" width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td style="color: #000" width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000" width="90">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td style="color: #000">អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td style="color: #000">តំណែង<br>POSITION</td><td width="80"></td>
        			<td style="color: #000">កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm14" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header" style="background:none;">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span6" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title" style="font-size: 26px"></p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12">
        		<tr>
        			<td style="background: #c6d9f1;text-align: left;padding-left: 5px;" width="150"><b>SALE ORDER #</b></td>
        			<td width="100"><b data-bind="text: obj.reference_no"></b></td>
        			<td width="150" style="background: #c6d9f1;text-align: left;padding-left: 5px;"><b>INVOICE #</b></td>
        			<td><b></b></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;text-align: left;padding-left: 5px;"><b>JOB/ CONTRACT #</b></td>
        			<td><b></b></td>
        			<td style="background: #c6d9f1"><b></b></td>
        			<td><b></b></td>
        		</tr>
        	</table>
        	<table class="span12" style="margin: 5px 0;">
        		<thead>
        			<tr>
        				<th width="50" style="background: #c6d9f1;">NO</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">ITEM CODE</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">DESCRIPTION</th>
        				<th style="background: #c6d9f1;">UM</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">QTY</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">REMARK</th>
        			</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template14"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12">
        		<tr>
        			<td style="background: #c6d9f1" width="150">ISSUED BY</td>
        			<td width="100"></td>
        			<td width="150" style="background: #c6d9f1">DATE</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">DELIVERED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">RECEIVED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE/TIME</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">ACKNOWLEDGED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE/TIME</td>
        			<td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm15" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2 data-bind="text: obj.title"></h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12" border="1">
        			<tr>
        				<td width="200">លេខសក្ខីប័ត្រ TV No.</td>
        				<td width="200"></td>
        				<td width="200">កាលបរិច្ឆេទ Date</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td>Rational for transfer</td>
        				<td colspan="3"></td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12" style="border-top: none;">
        		<tr>
        			<td colspan="4" style="background: #10253f; color: #fff;border-top: 0;">
        				ផ្ទេរប្រាក់​ពី Transfer from
        			</td>
        			<td colspan="2" style="background: #eee;border-top: 0;">
        				ផ្ទេរប្រាក់ទៅ Transfer to
        			</td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;">
        				No.
        			</td>
        			<td style="background: #c6d9f1;">
        				Nature
        			</td>
        			<td style="background: #c6d9f1;">
        				Amount
        			</td>
        			<td style="background: #c6d9f1;">
        				Cheque No./<br>Account No.
        			</td>
        			<td>
        				Nature
        			</td>
        			<td>
        				Bank Account No./ Cash<br>Account Code
        			</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr>
        			<td style="background: #c6d9f1;text-align: right;padding-right: 5px;" colspan="2">ចំនួនសរុប<br>Total</td>
        			<td></td>
        			<td style="background: #c6d9f1;text-align: right;padding-right: 5px;" colspan="2">ចំនួនជាអក្សរ<br>Amount in Words</td>
        			<td></td>
        		</tr>
        	</table>
        	<div class="span12" style="background: #eee;padding: 5px;">
        		<div class="span9" style="background: #fff;border:1px solid #ccc;padding: 8px;">
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;">រៀបចំដោយ<br>Prepared by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;">ត្រួតពិនិត្យដោយ<br>Reviewed by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;font-weight:bold;">ពិនិត្យ និងសំរេចដោយ<br>Approved by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        		</div>
        		<div class="span3" style="padding: 10px;">
        			<p style="margin-bottom:45px;font-size:10px;">Transerred by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
        		</div>
        	</div>
        	<table class="span12" border="1">
        		<tr>
        			<td colspan="3" style="background: #10253f; color: #fff;padding-left: 5px;text-align:left;">
        				សម្រាប់ការិយាល័យហិរញ្ញវត្ថុ For Accounting Department
        			</td>
        		</tr>
        		<tr>
        			<td style="text-align: center;">លេខគណនី<br>Account code</td>
        			<td>ឥណពន្ធ<br>Debit</td>
        			<td>ឥណទាន<br>Credit</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: left;padding-left: 5px;">
        				<span style="font-size: 10px; margin-right: 100px;">Posted By:</span> Date:
        			</td>
        		</tr>
        	</table>
        	<table class="span12" border="1">
        		<tr>
        			<td rowspan="2" style="border-top:0;text-align: left;padding-left: 5px;">Used for internal deposit, withdraw, transfer amoung the company's Bank account to<br> bank account and to on hand and deposit back to the bank accounts.</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;">Version</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;"><b>V.01</b></td>
        		</tr>
        		<tr>
        			<td style="text-align: left;padding-left: 5px;">Doc. Control</td>
        			<td style="text-align: left;padding-left: 5px;"><b>TRM02-07</b></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm16" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2>សក្ខីប័ត្រដាក់សាច់ប្រាក់ Deposit Voucher</h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12" border="1">
        			<tr>
        				<td width="200">លេខសក្ខីប័ត្រ TV No.</td>
        				<td width="200"></td>
        				<td width="200">កាលបរិច្ឆេទ Date</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td>Rational for Deposit</td>
        				<td colspan="3"></td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12" style="border-top: none;">
        		<tr>
        			<td colspan="4" style="background: #10253f; color: #fff;border-top: 0;">
        				ដាក់ប្រាក់​ពី Deposit from
        			</td>
        			<td colspan="2" style="background: #eee;border-top: 0;">
        				ដាក់ប្រាក់ទៅ Deposit to
        			</td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;">
        				No.
        			</td>
        			<td style="background: #c6d9f1;">
        				Nature
        			</td>
        			<td style="background: #c6d9f1;">
        				Amount
        			</td>
        			<td style="background: #c6d9f1;">
        				Cheque No./<br>Account No.
        			</td>
        			<td>
        				Nature
        			</td>
        			<td>
        				Bank Account No./ Cash<br>Account Code
        			</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr>
        			<td style="background: #c6d9f1;text-align: right;padding-right: 5px;" colspan="2">ចំនួនសរុប<br>Total</td>
        			<td></td>
        			<td style="background: #c6d9f1;text-align: right;padding-right: 5px;" colspan="2">ចំនួនជាអក្សរ<br>Amount in Words</td>
        			<td></td>
        		</tr>
        	</table>
        	<div class="span12" style="background: #eee;padding: 5px;">
        		<div class="span9" style="background: #fff;border:1px solid #ccc;padding: 8px;">
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;">រៀបចំដោយ<br>Prepared by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;">ត្រួតពិនិត្យដោយ<br>Reviewed by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;font-weight:bold;">ពិនិត្យ និងសំរេចដោយ<br>Approved by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        		</div>
        		<div class="span3" style="padding: 10px;">
        			<p style="margin-bottom:45px;font-size:10px;">Deposited by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
        		</div>
        	</div>
        	<table class="span12" border="1">
        		<tr>
        			<td colspan="3" style="background: #10253f; color: #fff;padding-left: 5px;text-align:left;">
        				សម្រាប់ការិយាល័យហិរញ្ញវត្ថុ For Accounting Department
        			</td>
        		</tr>
        		<tr>
        			<td style="text-align: center;">លេខគណនី<br>Account code</td>
        			<td>ឥណពន្ធ<br>Debit</td>
        			<td>ឥណទាន<br>Credit</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: left;padding-left: 5px;">
        				<span style="font-size: 10px; margin-right: 100px;">Posted By:</span> Date:
        			</td>
        		</tr>
        	</table>
        	<table class="span12" border="1">
        		<tr>
        			<td rowspan="2" style="border-top:0;text-align: left;padding-left: 5px;">Used for internal deposit, withdraw, transfer amoung the company's Bank account to<br> bank account and to on hand and deposit back to the bank accounts.</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;">Version</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;"><b>V.01</b></td>
        		</tr>
        		<tr>
        			<td style="text-align: left;padding-left: 5px;">Doc. Control</td>
        			<td style="text-align: left;padding-left: 5px;"><b>TRM02-07</b></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm17" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2>សក្ខីប័ត្រដកប្រាក់ Withdrawal Voucher</h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12" border="1">
        			<tr>
        				<td width="200">លេខសក្ខីប័ត្រ TV No.</td>
        				<td width="200"></td>
        				<td width="200">កាលបរិច្ឆេទ Date</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td>Rational for Withdraw</td>
        				<td colspan="3"></td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12" style="border-top: none;">
        		<tr>
        			<td colspan="4" style="background: #10253f; color: #fff;border-top: 0;">
        				ដកប្រាក់​ពី Withdraw from
        			</td>
        			<td colspan="2" style="background: #eee;border-top: 0;">
        				ដកប្រាក់ទៅ Withdraw to
        			</td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;">
        				No.
        			</td>
        			<td style="background: #c6d9f1;">
        				Nature
        			</td>
        			<td style="background: #c6d9f1;">
        				Amount
        			</td>
        			<td style="background: #c6d9f1;">
        				Cheque No./<br>Account No.
        			</td>
        			<td>
        				Nature
        			</td>
        			<td>
        				Bank Account No./ Cash<br>Account Code
        			</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td></tr>
        		<tr>
        			<td style="background: #c6d9f1;text-align: right;padding-right: 5px;" colspan="2">ចំនួនសរុប<br>Total</td>
        			<td></td>
        			<td style="background: #c6d9f1;text-align: right;padding-right: 5px;" colspan="2">ចំនួនជាអក្សរ<br>Amount in Words</td>
        			<td></td>
        		</tr>
        	</table>
        	<div class="span12" style="background: #eee;padding: 5px;">
        		<div class="span9" style="background: #fff;border:1px solid #ccc;padding: 8px;">
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;">រៀបចំដោយ<br>Prepared by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;">ត្រួតពិនិត្យដោយ<br>Reviewed by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        			<div class="span4">
        				<p style="margin-bottom:30px;font-size:10px;font-weight:bold;">ពិនិត្យ និងសំរេចដោយ<br>Approved by:</p>
        				_______________
        				<p style="font-size:10px;">Name: <br>Date:</p>
        			</div>
        		</div>
        		<div class="span3" style="padding: 10px;">
        			<p style="margin-bottom:45px;font-size:10px;">Withdrew by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
        		</div>
        	</div>
        	<table class="span12" border="1">
        		<tr>
        			<td colspan="3" style="background: #10253f; color: #fff;padding-left: 5px;text-align:left;">
        				សម្រាប់ការិយាល័យហិរញ្ញវត្ថុ For Accounting Department
        			</td>
        		</tr>
        		<tr>
        			<td style="text-align: center;">លេខគណនី<br>Account code</td>
        			<td>ឥណពន្ធ<br>Debit</td>
        			<td>ឥណទាន<br>Credit</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: left;padding-left: 5px;">
        				<span style="font-size: 10px; margin-right: 100px;">Posted By:</span> Date:
        			</td>
        		</tr>
        	</table>
        	<table class="span12" border="1">
        		<tr>
        			<td width="450" style="border-top:0;text-align: left;padding-left: 5px;"></td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;">Version</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;"><b>V.01</b></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm18" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2>សក្ខីប័ត្របុរេប្រទាន ADVANCE VOUCHER</h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12 left-tbl" border="1">
        			<tr>
        				<td width="200">អ្នកស្នើសុំ NAME</td>
        				<td width="200"></td>
        				<td width="200">លេខសក្ខីប័ត្រ AV No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">តំណែង Position</td>
        				<td width="200"></td>
        				<td width="200">កាលបរិច្ឆេទ Date</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">ផ្នែក Department</td>
        				<td width="200"></td>
        				<td width="200">លេខប័ណ្ណលទ្ធកម្ម PR No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">ទូទាត់ដោយ Mode of<br>Payment</td>
        				<td colspan="3">ទូទាត់ដោយ mode of payment </td>
        			</tr>
        			<tr>
        				<td width="200">គោលបំណងនៃ​បុរេប្រទាន<br>Purpose of Advance</td>
        				<td colspan="3">&nbsp;</td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12" style="border-top: none;">
        		<tr style="background: #c6d9f1;">
        			<th style="border-top: 0;">
        				No.
        			</th>
        			<th style="border-top: 0;">
        				បរិយាយ DESCRIPTION
        			</th>
        			<th style="border-top: 0;">
        				REF.
        			</th>
        			<th style="border-top: 0;">
        				AMOUNT
        			</th>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;">សរុប Total</td>
        			<td></td>
        		</tr>
        	</table>
        	<table class="span12 left-tbl" >
        		<tr>
        			<td colspan="2" style="border-top: none;text-align:right;padding-right:5px;">
        				 ចំនួនជាអក្សរ<br>Amount in Words
        			</td>
        			<td colspan="3" style="border-top: none;">&nbsp;</td>
        		</tr>
        		<tr>
        			<td colspan="2"></td>
        			<td style="background: #000; color: #fff;text-align:center;">SIGNATURE</td>
        			<td style="background: #000; color: #fff;text-align:center;">POSITION</td>
        			<td style="background: #000; color: #fff;text-align:center;">DATE</td>
        		</tr>
        		<tr>
        			<td style="background: #10253f; color: #fff;text-align:center;" rowspan="2" width="20"><p class="upside">Requestiong<br>Dept</p></td>
        			<td width="100">រៀបចំដោយ<br>PREPARED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>យល់ស្របដោយ<br>ENDORSED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td rowspan="4" style="text-align:center;" width="20"><p class="upside">Finance Department</p></td>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>សំរេចដោយ<br>APPROVED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>ទួទាត់ដោយ<br>PAID BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>ទទួលដោយ<br>RECEIVED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background:#000;"></td>
        			<td colspan="4">For Accounting Department Only</td>
        		</tr>
        		<tr>
        			<td></td>
        			<td style="text-align:center;">Account Code</td>
        			<td style="text-align:center;">Account Description</td>
        			<td style="text-align:center;">Debit</td>
        			<td style="text-align:center;">Credit</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr>
        			<td style="background: #c6d9f1;"></td>
        			<td style="background: #c6d9f1;">កត់ត្រាដោយ<br>POSTED BY</td>
        			<td style="text-align:center;"></td>
        			<td style="text-align:center;"></td>
        			<td style="text-align:center;"></td>
        		</tr>
        	</table>
        	<table class="span12" border="1" style="margin-top:5px;">
        		<tr>
        			<td rowspan="2" width="400" style="text-align: left;padding-left: 5px;">Advance Voucher should be used to account for cash advance request (either for operational or salary advance). No additional voucher is required to disburse cash. This is a pre-printed form and there are two copies, one of which (original) will be given to advance requestor; while another one is for the Finance Department.</td>
        			<td style="text-align: left;padding-left: 5px;">Version</td>
        			<td style="text-align: left;padding-left: 5px;"><b>V.01</b></td>
        		</tr>
        		<tr>
        			<td style="text-align: left;padding-left: 5px;">Doc. Control</td>
        			<td style="text-align: left;padding-left: 5px;"><b>APM02-02</b></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm19" type="text/x-kendo-template">
    <div class="inv1 pcg">
        <div class="content clear">
        	<div class="span12 clear" style="padding:20px 0;">
        		<div class="span5" style="margin-right: 15px;">
        			<div class="logo" style="width: 100%;">
		            	<img style="width: 45%" data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
		            </div>
        			
        		</div>
        		<div class="span6" style="float:right;">
        			<p class="form-title" style="font-size: 24px;margin-bottom: 5px;margin-top: 22px;line-height: 28px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ឈ្មោះ Name : <span data-bind="text: obj.contact.name"> </span></div>
        		<div class="span6" style="text-align: left;padding-left: 10px;">ទូទាត់ដោយ Mode of Payment : <span data-bind="text: obj.payment_method[0].name"></span></div>
				<div class="span12" style="text-align: left;padding-left: 10px;margin-top: 10px;">គោលបំណងការចំណាយ Purpose of Payment : <span ></span></div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
	        		<tr style="background: #c6d9f1;">
	        			<th style="border-top: 0;" width="60">
	        				ល.រ<br>No.
	        			</th>
	        			<th style="border-top: 0;" width="120">
	        				វិក្កយបត្រលេខ<br>Invoice No.
	        			</th>
	        			<th style="border-top: 0;text-align: left;padding-left: 10px;">
	        				បរិយាយ​<br>Description
	        			</th>
	        			<th style="border-top: 0;" width="120">
	        				ចំនួន<br>Amount
	        			</th>
	        		</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template19"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;" colspan="2" rowspan="4">
        				</td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				
        				<td style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>

        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tbody>
	        		<tr>
	        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
	        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
	        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
	        		</tr>
	        		<tr>
	        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
	        			<td>តំណែង<br>POSITION</td><td width="80"></td>
	        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
	        		</tr>
	        		<tr>
	        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
	        			<td>តំណែង<br>POSITION</td><td width="80"></td>
	        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
	        		</tr>
	        		<tr>
	        			<td>ទួទាត់ដោយ<br>PAID BY</td><td></td>
	        			<td>តំណែង<br>POSITION</td><td width="80"></td>
	        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
	        		</tr>
	        		<tr>
	        			<td>ទទួលដោយ<br>RECEIVED BY</td><td></td>
	        			<td>តំណែង<br>POSITION</td><td width="80"></td>
	        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
	        		</tr>
	        	</tbody>
        	</table>

        	<table class="span12 left-tbl" style="margin-top: 30px;">
        		<tr class="mid-header">
        			<td colspan="4" style="text-align:center;font-weight: bold;">For Accounting Department Only</td>
        		</tr>
        		<tr>
        			<td >Account Code</td>
        			<td >Account Description</td>
        			<td >Debit</td>
        			<td >Credit</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm20" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2>សក្ខីប័ត្រចំណាយ REIMBURSEMENT VOUCHER</h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12 left-tbl" border="1">
        			<tr>
        				<td width="200">ឈ្មោះ NAME</td>
        				<td width="200"></td>
        				<td width="200">លេខសក្ខីប័ត្រ PV No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">អ្នកផ្គត់ផ្គង់ Supplier Code</td>
        				<td width="200"></td>
        				<td width="200">កាលបរិច្ឆេទ Date</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">ផ្នែក Department</td>
        				<td width="200"></td>
        				<td width="200">លេខសក្ខីប័ត្របំណុល APV No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">ទូទាត់ដោយ Mode of<br>Payment</td>
        				<td colspan="3">ទូទាត់ដោយ mode of payment </td>
        			</tr>
        			<tr>
        				<td width="200">គោលបំណងការចំណាយ<br>Purpose of Advance</td>
        				<td colspan="2">&nbsp;</td>
        				<td>Budgeted: </td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12" style="border-top: none;">
        		<tr style="background: #c6d9f1;">
        			<th style="border-top: 0;">
        				No.
        			</th>
        			<th style="border-top: 0;" width="100">
        				Invoice No.
        			</th>
        			<th style="border-top: 0;">
        				Description
        			</th>
        			<th style="border-top: 0;" width="120">
        				Amount
        			</th>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;">Total</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;">Settlement Discounts</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;background: #c6d9f1;">NET AMOUNT PAID</td>
        			<td></td>
        		</tr>
        	</table>
        	<table class="span12 left-tbl" >
        		<tr>
        			<td colspan="2" style="background: #c6d9f1;border-top: none;text-align:right;padding-right:5px;">
        				Amount in Words
        			</td>
        			<td colspan="3" style="border-top: none;">&nbsp;</td>
        		</tr>
        		<tr>
        			<td colspan="2"></td>
        			<td style="background: #000; color: #fff;text-align:center;">SIGNATURE</td>
        			<td style="background: #000; color: #fff;text-align:center;">POSITION</td>
        			<td width="120" style="background: #000; color: #fff;text-align:center;">DATE</td>
        		</tr>
        		<tr>
        			<td style="background: #10253f; color: #fff;text-align:center;" rowspan="5" width="20"><p class="upside">Finance Department</p></td>
        			<td width="100">រៀបចំដោយ<br>PREPARED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td><b>សំរេចដោយ<br>APPROVED BY</b></td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>ទួទាត់ដោយ<br>PAID BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td>ទទួលដោយ<br>RECEIVED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background:#000;"></td>
        			<td colspan="4">For Accounting Department Only</td>
        		</tr>
        		<tr>
        			<td></td>
        			<td style="text-align:center;">Account Code</td>
        			<td style="text-align:center;">Account Description</td>
        			<td style="text-align:center;">Debit</td>
        			<td style="text-align:center;">Credit</td>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr>
        			<td style="background: #c6d9f1;"></td>
        			<td style="background: #c6d9f1;">កត់ត្រាដោយ<br>POSTED BY</td>
        			<td style="text-align:center;"></td>
        			<td style="text-align:center;"></td>
        			<td style="text-align:center;"></td>
        		</tr>
        	</table>
        	<table class="span12" border="1">
        		<tr>
        			<td rowspan="2" width="400" style="border-top:0;text-align: left;padding-left: 5px;">This is an automated voucher generated based on the payment made to outstanding invoice, reimbursements, claims, and other disbursement. The purpose of this voucher is used to approve payment transactions.</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;">Version</td>
        			<td style="border-top:0;text-align: left;padding-left: 5px;"><b>V.01</b></td>
        		</tr>
        		<tr>
        			<td style="text-align: left;padding-left: 5px;">Doc. Control</td>
        			<td style="text-align: left;padding-left: 5px;"><b>TRM02-03</b></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm21" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2>សក្ខីប័ត្រជំរះបុរេប្រទាន<br>ADVANCE SETTLEMENT VOUCHER</h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12 left-tbl" border="1">
        			<tr>
        				<td width="200">អ្នកស្នើសុំ NAME</td>
        				<td width="200"></td>
        				<td width="200">លេខសក្ខីប័ត្រ AS No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">តំណែង Position</td>
        				<td width="200"></td>
        				<td width="200">កាលបរិច្ឆេទ Date</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">ផ្នែក Department</td>
        				<td width="200"></td>
        				<td width="200">លេខសំណើរបុរេប្រទាន ADR No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">គោលបំណងនៃ​ការទូទាត់បុរេប្រទាន <br>Purpose of Advance</td>
        				<td colspan="3">&nbsp;</td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12" style="margin-top: 5px;">
        		<tr style="background: #c6d9f1;height: 30px;">
        			<th width="160">
        				ACCOUNT CODE
        			</th>
        			<th >
        				បរិយាយ DESCRIPTION
        			</th>
        			<th >
        				REF.
        			</th>
        			<th width="120">
        				AMOUNT
        			</th>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;">សរុបចំណាយជាក់ស្តែង TOTAL EXPENSES</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;">ចំនួនបុរេប្រទាន ADVANCED AMOUNT</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;">ប្រាក់ត្រូវ NET AMOUNT DUE <input type="checkbox" name="nad"> បង់អោយបុគ្គលិក TO STAFF <input type="checkbox" name="ts"> ទទួលពីបុគ្គលិក FROM STAFF <input type="checkbox" name="fs"></td>
        			<td></td>
        		</tr>
        	</table>
        	<table class="span12 left-tbl" >
        		<tr>
        			<td colspan="2" style="background: #c6d9f1;border-top: none;text-align:right;padding-right:5px;">
        				 ចំនួនជាអក្សរ<br>Amount in Words
        			</td>
        			<td colspan="3" style="border-top: none;">&nbsp;</td>
        		</tr>
        		<tr>
        			<td colspan="2"></td>
        			<td style="background: #000; color: #fff;text-align:center;">SIGNATURE</td>
        			<td style="background: #000; color: #fff;text-align:center;">POSITION</td>
        			<td style="background: #000; color: #fff;text-align:center;">DATE</td>
        		</tr>
        		<tr>
        			<td style="text-align:center;" rowspan="4" width="20"></td>
        			<td width="100" style="background: #c6d9f1;">រៀបចំដោយ<br>PREPARED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;">ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		
        		<tr>
        			<td style="background: #c6d9f1;"><b>សំរេចដោយ<br>APPROVED BY</b></td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;">កត់ត្រាដោយ<br>POSTED BY</td>
        			<td></td>
        			<td></td>
        			<td></td>
        		</tr>
        	</table>
        	
        </div>
    </div>
</script>
<script id="invoiceForm22" type="text/x-kendo-template">
	<div class="inv1 pcg-cash">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<h2 data-bind="text: obj.title"></h2>
        	</div>
        	<div class="span12" style="background:none;margin-top: 15px;">
        		<table class="span12 left-tbl" border="1">
        			<tr>
        				<td width="200" style="text-align:center;"><b>លេខសក្ខីប័ត្រ JV No.</b></td>
        				<td width="200" style="text-align:center;" data-bind="text: obj.number"></td>
        				<td width="200" style="text-align:center;"><b>កាលបរិច្ឆេត Date<b></td>
        				<td width="200" style="text-align:center;" data-bind="text: obj.issued_date"></td>
        			</tr>
        			<tr>
        				<td colspan="4">ប្រភេទប្រតិបត្តិការ Type of transaction : <span data-bind="text: obj."></span></td>
        			</tr>
        			
        			<tr>
        				<td colspan="4">Please specify, if applicable</td>
        			</tr>
        			<tr>
        				<td width="200">វិក្ក័យប័ត្រ Invoice No.</td>
        				<td width="200"></td>
        				<td width="200">សក្ខីប័ត្របុរេប្រទាន<br>Advance Voucher No.</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">សក្ខីប័ត្របំណុល<br>AP Voucher No.</td>
        				<td width="200"></td>
        				<td width="200">សក្ខីប័ត្រចំណាយ<br>Payment Voucher No</td>
        				<td width="200"></td>
        			</tr>
        			<tr>
        				<td width="200">សក្ខីប័ត្រទិន្នានុប្បវត្តិ<br>Journal Voucher No.</td>
        				<td width="200"></td>
        				<td width="200">Other</td>
        				<td width="200"></td>
        			</tr>
        		</table>
        	</div>
        	<table class="span12 left-tbl" style="margin-top: 5px;">
        		<tr>
        			<td style="background: #c6d9f1;">
        				 ពន្យាល់ Description of the transaction
        			</td>
        		</tr>
        		<tr>
        			<td style="padding: 5px 0;">&nbsp;</td>
        		</tr>
        	</table>
        	<table class="span12" style="margin-top: 5px;">
        		<tr>
        			<th><b>លេខកូជគណនី<br>Account Code</b></th>
        			<th><b>ឈ្មោះគណនី</b>Account Name</th>
        			<th><b>ពិពណ៌នា Description</b></th>
        			<th><b>ឥណពន្ធ<br>Debit</b></th>
        			<th><b>ឥណទាន<br>Credit</b></th>
        		</tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td></td><td></td><td></td><td></td></tr>
        		<tr>
        			<td colspan="3" style="text-align: right;padding-right: 5px;"><b>សរុប Total</b></td>
        			<td></td>
        			<td></td>
        		</tr>
        	</table>
        	<div class="span12" style="background: #eee;padding: 5px;">
    			<div class="span3">
    				<p style="margin-bottom:30px;font-size:10px;">រៀបចំដោយ<br>Prepared by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
    			</div>
    			<div class="span3">
    				<p style="margin-bottom:30px;font-size:10px;">ត្រួតពិនិត្យដោយ<br>Reviewed by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
    			</div>
    			<div class="span3">
    				<p style="margin-bottom:30px;font-size:10px;font-weight:bold;">អ្នកអនុម័ត<br>Approved by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
    			</div>
        		<div class="span3">
        			<p style="margin-bottom:30px;font-size:10px;">អ្នកកត់ត្រា<br>Recorded by:</p>
    				_______________
    				<p style="font-size:10px;">Name: <br>Date:</p>
        		</div>
        	</div>
        	
        </div>
    </div>
</script>
<!--script id="invoiceForm23" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<b>Delivered to</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>PO Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>PO No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span3">TERM OF PAYMENT</div>
        		<div class="span3">MODE OF PAYMENT</div>
        		<div class="span3">DELIVERY DATE</div>
        		<div class="span3">SALE REP</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th width="90">CODE</th>
        				<th>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>QTY</th>
        				<th>UNIT PRICE</th>
        				<th width="80">Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>ACCEPTED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script-->
<script id="invoiceForm24" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header" style="background:none;">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span6" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title" style="font-size: 26px"></p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12">
        		<tr>
        			<td style="background: #c6d9f1;text-align: left;padding-left: 5px;" width="150"><b>SALE ORDER #</b></td>
        			<td width="100"><b></b></td>
        			<td width="150" style="background: #c6d9f1;text-align: left;padding-left: 5px;"><b>INVOICE #</b></td>
        			<td><b></b></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1;text-align: left;padding-left: 5px;"><b>JOB/ CONTRACT #</b></td>
        			<td><b></b></td>
        			<td style="background: #c6d9f1"><b></b></td>
        			<td><b></b></td>
        		</tr>
        	</table>
        	<table class="span12" style="margin: 5px 0;">
        		<thead>
        			<tr>
        				<th width="50" style="background: #c6d9f1;">NO</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">ITEM CODE</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">DESCRIPTION</th>
        				<th style="background: #c6d9f1;">ឯកតា<br>UM</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">QTY</th>
        				<th style="background: #c6d9f1;text-align: left;padding-left: 5px;">REMARK</th>
        			</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template14"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12">
        		<tr>
        			<td style="background: #c6d9f1" width="150">ISSUED BY</td>
        			<td width="100"></td>
        			<td width="150" style="background: #c6d9f1">DATE</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">DELIVERED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">RECEIVED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE/TIME</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">ACKNOWLEDGED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE/TIME</td>
        			<td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm25" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span12">
	        	<div class="span7">
	        		<div class="logo" style="width: 40%">
		            	<img style="width: " data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
		            </div>
	        	</div>
	        	<div class="span5">
	        		<div class="span12" style="margin-bottom: 10px;">
	        			<h2 style="font-size: 24px;text-align: left;color:#10253f " data-bind="text: obj.title"></h2>
	        			<!--img src="<?php echo base_url(); ?>assets/invoice/img/official-receipt.jpg" /-->
	        		</div>
	        		<div class="span12">
	        			<table class="span12">
	        				<tr>
	        					<td class="light-blue-td" width="100">កាលបរិច្ឆេទ Date</td>
	        					<td style="text-align: left;padding-left: 5px;" data-bind="text: obj.issued_date"></td>
	        				</tr>
	        				<tr>
	        					<td class="light-blue-td">លេខបបង្កាន់ដៃ Receipt No.</td>
	        					<td style="text-align: left;padding-left: 5px;" data-bind="text: obj.number"></td>
	        				</tr>
	        			</table>
	        		</div>
	        	</div>
	        </div>
        	<div class="span12" style="margin-top: 10px;">
		    	<div class="span7" style="margin-top: 10px;">
		    		<table class="span11">
						<tr>
							<td class="light-blue-td" width="120">ទទួលពីឈ្មោះ​ <br>Recieve From</td>
							<td style="text-align: left;padding-left: 5px;" data-bind="text: contactDS.data()[0].name"></td>
						</tr>
						<tr>
							<td class="light-blue-td">អស័យដ្ឋាន <br>Contact Address</td>
							<td style="text-align: left;padding-left: 5px;" data-bind="text: contactDS.data()[0].address"></td>
						</tr>
						<tr>
							<td class="light-blue-td">គោលបំណង​​ <br>Purpose</td>
							<td style="text-align: left;padding-left: 5px;" data-bind="text: lineDS.data()[0].description"></td>
						</tr>
						<tr>
							<td class="light-blue-td">លេខយោង <br> Reference Document</td>
							<td style="text-align: left;padding-left: 5px;" data-bind="text: obj.reference_no"></td>
						</tr>
					</table>
		    	</div>
		    	<div class="span5" style="float:right">
		    		<p style="padding: 5px 0; text-align: left;font-weight: bold;color: #000;">ចំនួនទទួលសរុប​ <br> TOTAL RECEIVED AMOUNT</p>
		    		<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}">
		    			<p><span class="total-amount" data-bind="text: obj.amount"></span></p>		    			
		    		</div>
		    		<p style="padding: 5px 0;font-weight: bold;color: #000;clear:both;">វិធីសាស្រ្តទូទាត់​ Mode of payment</p>
		    		<p style="color: #000;clear:both;" data-bind="text: paymentMethodDS.data()[0].name"></p>
		    	</div>
		    </div>
        	<div class="span12">
        		<div class="span8">
        			<p style="color:black;margin: 10px 0;" data-bind="text: obj.note"></p>
        		</div>
        	</div>
        	<div class="span12">
        		<div class="span5">
        			<p>On behalf of <span data-bind="text: company.name"></span></p>
        			<div style="height: 60px;border-bottom: 1px solid #000" class="span12"></div>
        			<p style="font-weight: bold;">Name</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p>Paid By:</p>
        			<div style="height: 60px;border-bottom: 1px solid #000" class="span12"></div>
        			<p style="font-weight: bold;">Name</p>
        		</div>
        	</div>
        	<div style="margin-top: 15px" class="span12">
        		<p>Address: <span data-bind="text: company.address"></span> <sapn data-bind="text: company.city"></sapn> <span data-bind="text: company.country.name"></span>.</p>
        	</div>
        </div>
    </div>
</script>
<script id="invoiceForm26" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<table class="span12 left-tbl">
        		<tr>
        			<td colspan="4" rowspan="2" data-bind="style: {backgroundColor: obj.color}" style="text-align:center;padding-left:0;" class="main-color">
        			ប័ណ្ណកែតម្រូវបរិមាណសន្និធិ<br>Material Adjustment Note
        			</td>
        			<td colspan="2">កាលបរិច្ឆេត Date</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td colspan="2">លេខ MA No</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td colspan="2" width="100">
        				គម្រោង Project
        			</td>
        			<td colspan="2" width="100">

        			</td>
        			<td colspan="2">
        				ផល្ូវ Street #
        			</td>
        			<td width="120">

        			</td>
        		</tr>
        		<tr>
        			<td colspan="2">
        				ល្វែង Bloc #
        			</td>
        			<td colspan="2">

        			</td>
        			<td colspan="2">
        				អគារ House #
        			</td>
        			<td>

        			</td>
        		</tr>
        		<tr>
        			<td colspan="2">
        				មេការ
        			</td>
        			<td colspan="2">

        			</td>
        			<td colspan="2">
        				មេជាង
        			</td>
        			<td>

        			</td>
        		</tr>
        		<tr class="center-tbl" style="background: #c6d9f1;">
        			<td>
        				ល.រ<br>No
        			</td>
        			<td colspan="2">
        				ប្រភេទសន្និធិ ឬ​សម្ភារៈ<br>Item Description
        			</td>
        			<td>
        				លេខកូដ<br>Sku
        			</td>
        			<td>
        				ខ្នាត<br>UM
        			</td>
        			<td>
        				ចំនួន Qty
        			</td>
        			<td>
        				ផ្សេងៗ Remark
        			</td>
        		</tr>
        		<tr><td>&nbsp;</td><td colspan="2"></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td colspan="2"></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td colspan="2"></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td colspan="2"></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td colspan="2"></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td>&nbsp;</td><td colspan="2"></td><td></td><td></td><td></td><td></td></tr>
        		<tr><td colspan="7"></td></tr>
        		<tr>
        			<td colspan="2" width="100">
        				អ្នករៀបចំ<br>Prepared By
        			</td>
        			<td colspan="2" width="100">

        			</td>
        			<td colspan="2">
        				អ្នកយល់ព្រម<br>Approved By
        			</td>
        			<td width="120">

        			</td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm27" type="text/x-kendo-template">
	<div class="inv1">
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear mid-header" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
		        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
		        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
		        			</p>
                        </div>
                    </div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
        	<div class="clear">
            	<table cellpadding="0" cellspacing="0" border="1" class="span12">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td class="rside" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សរុប Total</td>
                            <td class="rside" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">ប្រាក់កក់ Deposit</td>
                            <td class="rside" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td class="rside" data-bind="text: obj.amount_due"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm23" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 style="text-align:left;" data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន Address: <span data-bind="text: company.address"></span></pre>
                    <pre>ទូរស័ព្ទលេខ HP <span data-bind="text: company.phone"></span></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p style="font-weight:bold">
                        		<span data-bind="text: obj.contact[0].name"></span><br>
                        		<span data-bind="text: obj.contact[0].address"></span>
                        	</p>
                        </div>
                    </div>
                    <div class="clear">
                    	<!--div class="left">
                    		<p>ទូរស័ព្ទ​លេខ HP:</p>
                        </div-->
                        <div class="left dotted-ruler" style="width: 78%;">
                        	<p style="font-weight:bold" data-bind="text: obj.contact[0].phone"></p>
                        </div>
                    </div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
        	<div class="clear">
            	<table cellpadding="0" cellspacing="0" border="1" class="span12">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th width="50">បរិមាណ<br />Quantity</th>
                            <th width="50">ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td class="rside" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សរុប (បូក​បញ្ចូល​ទាំង​អាករ)​ Total (VAT included)</td>
                            <td class="rside" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">ប្រាក់កក់ Deposit</td>
                            <td class="rside" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td class="rside" data-bind="text: obj.amount_due"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សាច់ប្រាក់ទទួលបាន Cash Receipt</td>
                            <td class="rside" data-bind="text: obj.cash_receipt"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សមតុល្យ Balance</td>
                            <td class="rside" data-bind="text: obj.balance"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm28" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 style="text-align:left;" data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន Address: <span data-bind="text: company.address"></span></pre>
                    <pre>ទូរស័ព្ទលេខ HP <span data-bind="text: company.phone"></span></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
		        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
		        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
		        			</p>
                        </div>
                    </div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
            
        	<div class="clear inv2">
            	<table cellpadding="0" cellspacing="0" border="1" style="width:100%;">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុប​ Sub Total</td>
                            <td class="rside" data-bind="text: obj.sub_total"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td class="rside" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">អាករ​លើ​តម្លៃ​បន្ថែម ១០% VAT (10%)</td>
                            <td class="rside" data-bind="text: obj.tax"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុបរួម​ Grand Total</td>
                            <td class="rside" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">ប្រាក់កក់ Deposit</td>
                            <td class="rside" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">
                        	សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td class="rside" data-bind="text: obj.amount_due"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">
                        	សាច់ប្រាក់ទទួលបាន Cash Receipt</td>
                            <td class="rside" data-bind="text: obj.cash_receipt"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">
                        	សមតុល្យ Balance</td>
                            <td class="rside" data-bind="text: obj.balance"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm29" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 style="text-align:left;" data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន Address: <span data-bind="text: company.address"></span></pre>
                    <pre>ទូរស័ព្ទលេខ HP <span data-bind="text: company.phone"></span></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រអាករ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
		        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
		        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
		        			</p>
                        </div>
                    </div>
                    <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: contactDS.data()[0].vat_no"></span><p style="font-size:8px;font-weight:normal;margin-left: 8px;">(ប្រសិន​បើ​មាន / If any)</p>
                	</div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
            
        	<div class="clear inv2">
            	<table cellpadding="0" cellspacing="0" border="1" style="width:100%;">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុប​ Sub Total</td>
                            <td class="rside" data-bind="text: obj.sub_total"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td class="rside" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">អាករ​លើ​តម្លៃ​បន្ថែម ១០% VAT (10%)</td>
                            <td class="rside" data-bind="text: obj.tax"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុបរួម​ Grand Total</td>
                            <td class="rside" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">ប្រាក់កក់ Deposit</td>
                            <td class="rside" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">
                        	សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td class="rside" data-bind="text: obj.amount_due"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">
                        	សាច់ប្រាក់ទទួលបាន Cash Receipt</td>
                            <td class="rside" data-bind="text: obj.cash_receipt"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">
                        	សមតុល្យ Balance</td>
                            <td class="rside" data-bind="text: obj.balance"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm30" type="text/x-kendo-template">
	<div class="inv1">
        <div class="content">
        	<div style="overflow: hidden;padding:10px 0;">
        		<h1>វិក្កយបត្រ</h1>
            	<h2 data-bind="text: obj.title"></h2>
        	</div>
            <div class="clear" style="padding: 10px;background: #dce6f2;padding-bottom: 10px;">
            	<div class="cover-customer">
                	<h5>ព័ត៌មានអតិថិជន​ CUSTOMER INFO:</h5>
                    <div class="clear">
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
		        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
		        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
		        			</p>
                        </div>
                    </div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ No. :</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ Date:</p>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
        	<div class="clear">
            	<table cellpadding="0" cellspacing="0" border="1" class="span12">
                	<thead>
                        <tr class="main-color" style="height: 45px;" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">បញ្ចុះតម្លៃ Discount</td>
                            <td class="rside" data-bind="text: obj.discount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សរុប Total</td>
                            <td class="rside" data-bind="text: obj.amount"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">ប្រាក់កក់ Deposit</td>
                            <td class="rside" data-bind="text: obj.deposit"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សាច់ប្រាក់ត្រូវទូទាត់ Amount Due</td>
                            <td class="rside" data-bind="text: obj.amount_due"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សាច់ប្រាក់ទទួលបាន Cash Receipt</td>
                            <td class="rside" data-bind="text: obj.cash_receipt"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សមតុល្យ Balance</td>
                            <td class="rside" data-bind="text: obj.balance"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm31" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p>ឈ្មោះ Name : <span data-bind="text: contactDS.data()[0].name"></span><br>
        			អស័យដ្ឋាន Address : <span data-bind="text: contactDS.data()[0].address"></span><br>
        			លេខទូរស័ព្ទ Tel : <span data-bind="text: contactDS.data()[0].phone"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" style="font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template31"
						data-bind="source: lineDS">
        		
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">ចេញដោយ <br>ISSUED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">ដឹកជញ្ជូន <br>DELIVERED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm32" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" style="font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template31"
						data-bind="source: lineDS">
        		
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">ចេញដោយ <br>ISSUED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">ដឹកជញ្ជូន <br>DELIVERED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm33" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template33"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">ចេញដោយ <br>ISSUED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">ដឹកជញ្ជូន <br>DELIVERED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm34" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអតិថិជន CUSTOMER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template33"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">ចេញដោយ <br>ISSUED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">ដឹកជញ្ជូន <br>DELIVERED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm35" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង់ SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT</div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT COST</th>
        				<th width="80" class="rside">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;" colspan="3" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm36" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង់ SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT</div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT COST</th>
        				<th width="80" class="rside">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;text-align: left;" colspan="3" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;" class="rside" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color lside" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td class="rside" style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm37" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>សរុប TOTAL <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង់ SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT</div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT COST</th>
        				<th class="rside" width="80">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template8"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="2" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm38" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>សរុប TOTAL <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង់ SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span6" style="text-align: left;padding-left: 10px;">ល្ខខណ្ឌ<br>TERM OF PAYMENT</div>
        		
        		<div class="span6" style="text-align: left;padding-left: 10px;">សុពលភាព <br>VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">តម្លៃ​ឯកតា<br>UNIT COST</th>
        				<th class="rside" width="80">សរុប<br>Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template8"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="2" rowspan="4" data-bind="text: obj.note"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">បញ្ចុះតម្លៃ Discount</td>
        				<td class="rside" style="background-color: #eee;" data-bind="text: obj.discount"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">សរុបរង SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">ពន្ធ TAX</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">សរុបរួម GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm39" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" style="font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template31"
						data-bind="source: lineDS">
        		
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm40" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span7" style="margin-right: 15px;">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title" style="font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template31"
						data-bind="source: lineDS">
        		
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm41" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template33"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm42" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>អស័យដ្ឋាន Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;font-size: 24px;" data-bind="text: obj.title"></p>
        			<p><b>កាលបរិច្ឆេត Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>លេខ No. : </b><span data-bind="text: obj.number"></span></p>
        			
        		</div>
        		<div class="span7">
        			<b style="font-size: 14px;line-height: 24px;">ព័ត៌មានអ្នកផ្គត់ផ្គង SUPPLIER INFO</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr class="main-color ten">
        				<th width="90">លេខកូដ<br>CODE</th>
        				<th class="lside">ពិពណ៌នា<br>ITEM DESCRIPTION</th>
        				<th>ឯកតា<br>UM</th>
        				<th>ចំនួន<br>QTY</th>
        				<th class="rside">កំណត់សំគាល់<br>REMARK</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template33"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12 left-tbl ten" rules="rows" style="margin-top: 40px;">
        		<tr>
        			<td width="90">រៀបចំដោយ <br>PREPARED BY</td><td width="120"></td>
        			<td width="80">តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        		<!--tr>
        			<td>ត្រួតពិនិត្យដោយ<br>REVIEWED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr-->
        		<tr>
        			<td>អនុម័តដោយ<br>APPROVED BY</td><td></td>
        			<td>តំណែង<br>POSITION</td><td width="80"></td>
        			<td>កាលបរិច្ឆេទ<br>DATE</td><td width="120"></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<!--Caritas Company-->
<script id="formCaritasExpense" type="text/x-kendo-template">
	<div class="voucher1">
    	<div class="head">
    		<div class="logo">
            	<img style="max-width: 100px" data-bind="attr: { src: company.logo.url, alt: company.name, title: company.name }" />
            </div>
            <div class="official">
            	Official
            </div>
            <div class="head-title">
            	ADVANCE VOUCHER
            </div>
            <div class="row">
            	<div class="span12">
	    			<div class="span7" style="padding-left: 0; padding-right: 15px;">
	    				<table class="tableright">
	    					<tr>
	    						<td style="width: 156px; text-align: right;">PAID TO/ RECEIVED FROM</td>
	    						<td></td>
	    					</tr>
	    					<tr>
	    						<td style="text-align: right;">PAYMENT METHOD</td>
	    						<td></td>
	    					</tr>
	    					<tr>
	    						<td style="text-align: right;">Location</td>
	    						<td></td>
	    					</tr>
	    				</table>
	    			</div>
	    			<div class="span5" style="padding-right: 0; ">
	    				<table class="tableright">
	    					<tr>
	    						<td style="width: 130px; text-align: right;">Transaction Date:</td>
	    						<td style="text-align: center; color: #333; font-weight: 600;">1-Jan-2016</td>
	    					</tr>
	    					<tr>
	    						<td style="text-align: right;">Transaction No:</td>
	    						<td style="text-align: center; color: #333; font-weight: 600; background: #d9d9d9;">PV1701001</td>
	    					</tr>
	    					<tr>
	    						<td style="text-align: right;">Project Name:</td>
	    						<td style="text-align: center;"></td>
	    					</tr>
	    				</table>
	    			</div>
	    		</div>
    		</div>
    	</div>
    	<div class="content">
    		<div class="row">
    			<div class="span12" style="padding-bottom: 15px;">
    				<table class="tablecontent">
    					<thead>  				
	    					<tr>
	    						<th style="width: 240px; border: 1px solid #333; text-align: center; padding: 5px;" rowspan="2">DESCRIPTION</th>
	    						<th style="width: 50px; border: 1px solid #333; text-align: center; padding: 5px;" rowspan="2">REF</th>
	    						<th style="width: 109px; border: 1px solid #333; text-align: center; padding: 5px;" rowspan="2">DONOR</th>
	    						<th style="border: 1px solid #333; text-align: center; padding: 5px; background: #fbda6c; " colspan="3">ACCOUNTING ENTRY</th>		
	    					</tr>
	    					<tr>
	    						<th style="border: 1px solid #333; padding: 5px; text-align: center; background: #fbda6c;">ACCOUNT</th>
	    						<th style="border: 1px solid #333; padding: 5px; text-align: center; background: #fbda6c;">DR</th>
	    						<th style="border: 1px solid #333; padding: 5px; text-align: center; background: #fbda6c;">CR</th>
	    					</tr>
	    				</thead>
	    				<tbody>
	    					<tr>
	    						<td style="border: 1px solid #333; padding: 5px;">Being for payment of Office Rental Being for payment of Office Rental Being for payment of Office Rental</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">1-10</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">ABC</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; font-weight: 800; text-align: center;">1100</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;">1,000.00</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;"></td>
	    					</tr>
	    					<tr>
	    						<td style="border: 1px solid #333; padding: 5px;">Being for payment of Office Rental Being for payment of Office Rental Being for payment of Office Rental</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">1-10</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">ABC</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; font-weight: 800; text-align: center;">1130</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;">9,000.00</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;"></td>
	    					</tr>
	    					<tr>
	    						<td style="border: 1px solid #333; padding: 5px;">Being for payment of Office Rental Being for payment of Office Rental Being for payment of Office Rental</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">1-10</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">ABC</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; font-weight: 800; text-align: center;">1120</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;"></td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;">10,000.00</td>
	    					</tr>
	    					<tr>
	    						<td style="border: 1px solid #333; padding: 5px;">Being for payment of Office Rental Being for payment of Office Rental Being for payment of Office Rental</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">1-10</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: center;">ABC</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; font-weight: 800; text-align: center;">1100</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;">1,000.00</td>
	    						<td style="border: 1px solid #333; padding: 5px; background: #fbda6c; text-align: right; font-weight: 800;"></td>
	    					</tr>
	    				</tbody>
	    				<tfoot>
	    					<tr>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: left;" colspan="2">PREPARED BY :</td>
	    						<td style="border: 1px solid #333; padding: 5px; font-weight: 800;">Total</td>
	    						<td style="border: 1px solid #333; padding: 5px; font-weight: 800;"></td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: right; font-weight: 800;">10,000.00</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: right; font-weight: 800;">10,000.00</td>
	    					</tr>
	    					<tr>
	    						<td colspan="2" rowspan="2" style="border: 1px solid #333; padding: 5px;">VERIFIED BY :</td>
	    						<td rowspan="2" style="border: 1px solid #333; padding: 5px; font-weight: 800; background: #808080; color: #FFF;">Only for Advance Clearance</td>
	    						<td colspan="2" style="border: 1px solid #333; padding: 5px; ">AV No:    N123</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: right; ">1000</td>
	    					</tr>
	    					<tr>
	    						<td colspan="2" style="border: 1px solid #333; padding: 5px; text-align: left; font-weight: 800;">NET AMOUNT DUE FROM STAFF</td>
	    						<td style="border: 1px solid #333; padding: 5px; text-align: right; font-weight: 800;">9,000.00</td>
	    					</tr>
	    					<tr>
	    						<td colspan="2" rowspan="2" style="border: 1px solid #333; padding: 5px;">APPROVED BY :</td>
	    						<td style="border: 1px solid #333; padding: 5px; ">In Words:</td>
	    						<td style="border: 1px solid #333; padding: 5px; "></td>
	    						<td style="border: 1px solid #333; padding: 5px; "></td>
	    						<td style="border: 1px solid #333; padding: 5px; "></td>
	    					</tr>
	    					<tr>
	    						<td colspan="4" style="border: 1px solid #333; padding: 5px; text-align: center;">Nine Thousand Dollars And No Cents</td>
	    					</tr>
	    					<tr>
	    						<td colspan="2" style="border: 1px solid #333; padding: 5px;">RECEIVED BY :</td>
	    						<td colspan="4" style="border: 1px solid #333; padding: 5px; "></td>
	    					</tr>
	    				</tfoot>
    				</table>
    			</div>
    		</div>
    	</div>
    	<div class="footer">
    	</div>
    </div>
</script>


<script id="invoiceCustom-txn-form-template" type="text/x-kendo-template">
	<a class="span4 #= type #" data-id="#= id #" data-bind="click: selectedForm" style="padding-right: 0; width: 32%;">
    	<img src="<?php echo base_url(); ?>assets/invoice/img/#= image_url #.jpg" alt="#: name # image" />
    </a>
</script>
<script id="invoiceForm-lineDS-template" type="text/x-kendo-template">
	<tr>
		<td><i>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</i>&nbsp;</td>
		<td class="lside">#= description #</td>
		<td>#= quantity#</td>
		<td class="rside" width="70">#= kendo.toString(price, "c", locale) #</td>
		<td class="rside">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template3" type="text/x-kendo-template">
	<tr>
		<td><i>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</i></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template4" type="text/x-kendo-template">
	<tr>
		<td><i>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</i></td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td></td>
		<td></td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template5" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;</td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right; padding-right: 5px;"></td>
		<td style="text-align: right; padding-right: 5px;"></td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template6" type="text/x-kendo-template">
	<tr>
		<td class="center" style="color: \\#000">&nbsp;#= item_id #</td>
		<td class="lside" style="color: \\#000">#= description#</td>
		<td style="color: \\#000">#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td style="color: \\#000">#= quantity#</td>
		<td class="rside" width="70" style="color: \\#000">#= kendo.toString(price, "c", locale) #</td>
		<td class="rside" style="background-color: \\#eee;color: \\#000">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template8" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;color: \\#000;">&nbsp;#= description#</td>
		<td style="color: \\#000;">#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td style="color: \\#000;"">#= quantity#</td>
		<td class="rside" style="color: \\#000;">#= kendo.toString(price, "c", locale) #</td>
		<td class="rside" style="background-color: \\#eee;color: \\#000;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template10" type="text/x-kendo-template">
	<tr>
		<td class="center" style="color:\\#000">&nbsp;#= item_id #</td>
		<td class="lside" style="color:\\#000">#= description#</td>
		<td style="color:\\#000">#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td style="color:\\#000">#= quantity#</td>
		<td class="rside" width="70" style="color:\\#000">#= kendo.toString(price, "c", locale) #</td>
		<td class="rside" style="background-color: \\#eee;color: \\#000">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template12" type="text/x-kendo-template">
	<tr>
		<td class="lside" style="color:\\#000">#= description.length>0 ? description: "&nbsp;"#</td>
		<td style="color:\\#000">#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td style="color:\\#000">#= quantity#</td>
		<td class="rside" width="70" style="color:\\#000">#= kendo.toString(price, "c", locale) #</td>
		<td class="rside" style="background-color: \\#eee;color:\\#000">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template14" type="text/x-kendo-template">
	<tr>
		<td>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;"></td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template19" type="text/x-kendo-template">
	<tr>
		<td>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td></td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template31" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;</td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template33" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>



<!-- ***************************
*	Document Section      	  *
**************************** -->
<script id="documents" type="text/x-kendo-template">
	
							
	<div  class="row-fluid saleSummaryCustomer">

        <h2 data-bind="text: lang.lang.attached_documents"></h2>

	    <br>
			
		<div class="row-fluid">
			<div class="span4">
				<p style="text-align: center; text-transform: uppercase;font-size:17px;font-weight: 600;">
					<span data-bind="text: lang.lang.transaction"></span>
				</p>
				<div class="total-customer" style="background: #d9edf7; color: #333;"> 
					<span class="number" data-bind="text:transactionSize" style="font-size: 30px; font-weight: 600;"></span>GB
					<p>of <span data-bind="text: transactionNu"></span> <span data-bind="text: lang.lang.transaction"></span></p>
					
					
				</div>
			</div>

			<div class="span4">
				<p style="text-align: center; text-transform: uppercase;font-size:17px;font-weight: 600;"><span data-bind="text: lang.lang.contact_items"></span></p>
				<div class="total-customer" style="color: #333;">
					<span class="number" data-bind="text: contactSize" style="font-size: 30px; font-weight: 600;"></span>GB
					<p>of <span data-bind="text: contactNu"></span> <span data-bind="text: lang.lang.contact_items"></span></p>
				</div>
			</div>

			<div class="span4" style="padding-left: 15px;">
				<p style="text-align: center; text-transform: uppercase;font-size:17px;font-weight: 600;"><span data-bind="text: lang.lang.total_attachment"></span></p>
				<div class="total-customer" style="background: #496cad; color: #fff;min-height: 112px;">
					<span class="number" data-bind="text: totalSize" style="font-size: 30px; font-weight: 600;"></span>GB
					<p><span data-bind="text: lang.lang.use_of"></span> <span data-bind="text: allowSize"></span> GB</p>
				</div>
			</div>
		</div>

		<div class="row-fluid" style="background: #fff; padding: 15px;">

			<table class="table table-borderless table-condensed " style="color: #000;">
				<thead>
					<tr>
						<th data-bind="text: lang.lang.file_name"></th>
						<th data-bind="text: lang.lang.description"></th>
						<th data-bind="text: lang.lang.size"></th>
						<th data-bind="text: lang.lang.attach"></th>
						<th data-bind="text: lang.lang.date"></th>
						<th data-bind="text: lang.lang.action"></th>								
					</tr>
				</thead>
				<tbody data-role="listview" data-bind="source: dataSource" data-template="document-list-template">
				</tbody>
			</table>								
		</div>
	
	</div>
</script>
<script id="document-list-template" type="text/x-kendo-template"> <tr>
		<td><a href="#=url#">#=name#</a></td>
		<td>#=description#</td>
		<td>#=kendo.toString(size, 'n4')# mb</td>
		<td>
			# if(attachedTo.type == "contact") {#
				<a href="\#/customer_center/#=attachedTo.id#">#=attachedTo.name#</a>
			#} else if(attachedTo.type == "transaction") {#
				# var link = attachedTo.go; #
				# var lowcase = link.toLowerCase(); #
				<a href="\#/#=lowcase#/#=attachedTo.id#">#=attachedTo.name#</a>
			#} else {#
				<a href="\#/item_center/#=attachedTo.id#">#=attachedTo.name#</a>
			#}#
		</td>
		<td>#=created_at#</td>
		<td align="center"><a href="\#" data-bind="click: remove">Delete</a></td>
	</tr>
</script>



<!-- ***************************
*	Inventory Section      	  *
**************************** -->
<script id="itemDashBoard" type="text/x-kendo-template">
	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2 data-bind="text: lang.lang.products_services"></h2>
			        	<p>
			        		<span data-bind="text: lang.lang.P_S_inhere"></span>
			        	</p>

			        	<p style="width: 100%; float: left; margin-top: 8px; margin-bottom: 15px;">
				        	<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 32px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;" href="#/inventories_recurring">
									<span class="badge fix badge-primary" style="color: #fff;  position: absolute; top: -13px; background: #203864; right: 5px; width: 25px; height: 25px; font-size: 15px; line-height: 25px;">0</span>
									Recurring												
								</a>
							</span>

							<span style="position: relative; height: 35px; line-height: 35px; padding-right: 15px; float: left; display: block; ">
								<a href="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/guide/banhJi_customer_guide.pdf" target="_blank" style="color: #203864; font-weight: 600; margin-top: 4px; line-height: 17px; background: #fff; padding: 8px 39px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
									This Module's Guide												
								</a>
							</span>
						</p>


			        	<div class="cover-block" style="box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        	<div class="supplier-icon">
							    <div class="span4">
							       	<a href="#/item" class="center">
							       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/non_inventory_part" class="center">
							       		<img title="Add Non Inventory Parts" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/non_inventory_parts.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/item_service" class="center">
							       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
							       	</a>
							    </div>
							  <!--   <div class="span4">
							       	<a href="#/txn_item" class="center">
							       		<img title="Add Txn Item"  src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/add_txn_item.ico" />
							       	</a>
							    </div>
							    <div class="span4">
							       	<a href="#/fixed_assets" class="center">
							       		<img title="Add Txn Item"  src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/add_fixed_assets.ico" />
							       	</a>
							    </div> -->
							</div>
						</div>
			        </td>
			 	</tr>
			</table>

			<div class="cover-block">
				<table class="table table-borderless table-condensed table-vertical-center costom-imag">
				<tr>
					<td class="center">
						<a href="#/grn">
							<img title="Add Received Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/received_note.png" width="110" height="200" />
							<span data-bind="text: lang.lang.goods_received_note" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>						
					</td>
					<td class="center">
						<a href="#/gdn">
							<img title="Add Delivery Address Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/delivery_note.png" width="110" height="200" />
							<span data-bind="text: lang.lang.goods_delivery_note" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
					<td class="center">
						<a href="#/item_adjustment">
							<img title="Add Adjustment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/adjustment.png" width="110" height="200" />
							<span data-bind="text: lang.lang.adjustment" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center">
						<a href="#/internal_usage">
							<img title="Add Internal Usage" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/internal_usage.png" width="110" height="200" />
							<span data-bind="text: lang.lang.internal_usage" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
					<td class="center">
						<a href="#/item_assembly">
							<img title="Add Build Assembly" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/build_assembly.png" width="110" height="200" />
							<span data-bind="text: lang.lang.build_assembly" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
					<td class="center" style="vertical-align: top;">
						<a href="#/item_catalog">
							<img title="Add Catalog" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/catalog.png" width="110" height="200" />
							<span data-bind="text: lang.lang.catalog" style="margin-top: 7px; display: inline-block; text-transform: uppercase;"></span>
						</a>
					</td>
				</tr>				
				</table>
			</div>
		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
				

				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.qoh"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/inventory_position_summary"><div class="widget-body alert alert-primary" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div align="center" class="text-large strong" data-bind="text: onHand"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span ></span>
									</td>
									<td>
										<span data-bind="text: purchaseSupplierCount"></span>
										<br>
										<span data-bind="text: lang.lang.supplier"></span>
									</td>
									<td>
										<span data-bind="text: purchaseProductCount"></span>
										<br>
										<span data-bind="text: lang.lang.product"></span>
									</td>
									<td>
										<span data-bind="text: purchase_order"></span>
										<br>
										<span data-bind="text: lang.lang.order"></span>
									</td>
								</tr>
							</table>
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>

				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.gross_profit_margin"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/inventory_sale_item_analysis"><div class="widget-body alert-info" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div style="margin-top: 15%;" align="center" class="text-large strong" data-bind="text: grossProfitMargin"></div>
							<!-- <table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: product"></span>
										<br>
										<span data-bind="text: lang.lang.product"></span>
									</td>
								</tr>
							</table> -->
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>

				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span><span style="color: #203864; font-weight: 600; font-style: normal;" data-bind="text: lang.lang.turnover_days"></span></h4>
						</div>
						<!-- // Widget heading END -->
						
						<a href="#/inventory_turn_over_list"><div class="widget-body alert-info3" style="min-height: 148px; background: white; color: #203864; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
							
							<div style="margin-top: 15%;" align="center" class="text-large strong" align="center" class="text-large strong"  data-bind="text: inventoryTurnOver"></div>
							<!-- <table width="100%">
								<tr align="center">
									<td>
										<span data-bind="text: product"></span>
										<br>
										<span data-bind="text: lang.lang.turnover"></span>
									</td>
								</tr>
							</table> -->
						</div></a>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">									
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th style="background: #203864;" colspan="2" class="center"><span data-bind="text: lang.lang.top_5_purchased_products"></span></th>				                			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="itemDashboard-top-customer-template"
			                 data-bind="source: topPurchase"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th style="background: #203864;" colspan="2" class="center"><span data-bind="text: lang.lang.top_5_suppliers"></span></th>		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="itemDashboard-top-ar-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center" style="font-size: 12px; box-shadow: 0 2px 0 #d4d7dc, -1px -1px 0 #eceef1, 1px 0 0 #eceef1;">
				        <thead>
				            <tr>
				                <th style="background: #203864;" colspan="2" class="center"><span data-bind="text: lang.lang.top_5_best_selling_products"></span></th>			                		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="itemDashboard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart" >
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                { field: 'purchase', name: 'Monthly Purchase', categoryField:'month', color: '#203864', overlay: {gradient: 'none'} },
	                                { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#A6C9E3' , overlay: {gradient: 'none'}}
	                            ]"
	                 data-auto-bind="false"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>            
            </div>
            <!-- End Graph -->

		</div>
	</div>	
</script>
<script id="itemDashboard-top-customer-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.itemDashBoard.topPurchase.indexOf(data)+1#</td> -->		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>
<script id="itemDashboard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.itemDashBoard.topCustomerDS.indexOf(data)+1#</td> -->		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="itemDashboard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<!-- <td style="width: 1%">#:banhji.itemDashBoard.topProductDS.indexOf(data)+1#</td> -->		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#:kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="itemCenter" type="text/x-kendo-template"> 
	<div class="widget widget-heading-simple widget-body-gray widget-employees">
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Number or Name ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>

							<div class="select2-container" style="width: 100%; margin-bottom: 10px;">								
								<input data-role="dropdownlist"
					                   data-option-label="Select Category..."
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: category_id,
					                              source: categoryDS"
					                   style="width: 100%; " />									
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: itemDS.total()"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: itemDS"
						 data-row-template="itemCenter-item-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">
							    <input type="text" disabled="disabled" data-bind="value: obj.name" style="border: none; width: 76%; font-size: 20px; font-weight: 600; margin-top: -11px; margin-left: 11px; background: #fff;">
							        <!-- Tabs -->
							        <ul class="pull-right">
							            <li class="glyphicons circle_info active"><span data-toggle="tab" data-target="#tab1-3"><i></i></span>
							            </li>
							            <li class="glyphicons coins"><span data-bind="click: pricing"><i></i></span>
							            </li>
							            <li class="glyphicons paperclip"><span data-toggle="tab" data-target="#tab3-3"><i></i></span>
							            </li>								            						            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Info Tab content -->
							            <div id="tab1-3" class="tab-pane active box-generic">
							            	
											<div class="row-fluid">
							            		<div class="accounCetner-textedit">
									            	<table width="100%">
														<tr>
															<td width="40%"><span data-bind="text: lang.lang.categories"></span>:</td>
															<td width="60%">
																<span class="strong" data-bind="text: obj.category"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.weighted_avg_cost"></span></td>
															<td>
																<span class="strong" data-format="n" data-bind="text: obj.cost"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.average_price"></span></td>
															<td>
																<span class="strong" data-format="n" data-bind="text: obj.price"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.uom"></span></td>
															<td>
																<span data-bind="text: uom"></span>
															</td>
														</tr>
														<tr>
															<td><span data-bind="text: lang.lang.currency"></span></td>
															<td>										
																<span data-bind="text: currencyCode"></span>
															</td>
														</tr>
													</table>

													<span class="btn btn-primary btn-icon glyphicons edit pull-right" data-bind="click: edit"><i></i><span data-bind="text: lang.lang.view_all_info_edit"></span></span>
												</div>
											</div>
											
							            </div>
							            <!-- // Info Tab content END -->

							             <!-- Attach Tab content -->
								        <div class="tab-pane" id="tab3-3">							            	
								            
								            <p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
								            <input id="files" name="files"
								                   type="file"
								                   data-role="upload"
								                   data-show-file-list="false"
								                   data-bind="events: { 
						                   				select: onSelect
								                   }">

								            <table class="table table-bordered">
										        <thead>
										            <tr>			                
										                <th data-bind="text: lang.lang.file_name"></th>
										                <th data-bind="text: lang.lang.description"></th>
										                <th data-bind="text: lang.lang.date"></th>
										                <th style="width: 13%;"></th>                			                
										            </tr> 
										        </thead>
										        <tbody data-role="listview" 
										        		data-template="attachment-list-tmpl" 
										        		data-auto-bind="false"
										        		data-bind="source: attachmentDS"></tbody>			        
										    </table>

										    <span style=" width: 93px !important; margin-top: 10px;" class="btn btn-icon btn-success glyphicons ok_2" data-bind="click: uploadFile"><i></i> <span data-bind="text: lang.lang.save"></span></span>

								        </div>
								        <!-- // Attach Tab content END -->						            
							           
							        </div>
							    </div>
							</div>
						</div>

						<div class="span6 account-center" style="margin-bottom: 10px;">
							<div class="row-fluid">
								<div class="span12" style="padding-right:0;">
									<div class="widget-body alert alert-primary" style="margin-bottom: 10px; background: #203864;">							
										<div align="center" class="text-large strong" data-bind="text: total_value"></div>
										<table width="100%">
											<tr align="center">
												<td>										
													<span data-format="n0" data-bind="text: on_hand"></span>
													<br>
													<span data-bind="text: lang.lang.qoh"></span>
												</td>
												<td>
													<span data-format="n0" data-bind="text: obj.on_po"></span>
													<br>
													<span data-bind="text: lang.lang.on_po"></span>
												</td>
												<td>
													<span data-format="n0" data-bind="text: obj.on_so"></span>
													<br>
													<span data-bind="text: lang.lang.on_so"></span>
												</td>
											</tr>
										</table>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadPO" style="background: #0077c5">
										<span class="glyphicons adjust_alt"><i></i></span>
										<span class="txt" style="width: 70%; margin-top: -16px;"><span data-bind="text: itemType" style="    font-size: 22px;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadSO" style="background: #21abf6">
										<span class="glyphicons random"><i></i></span>
										<span class="txt"><span data-bind="text: transactionDS.total()"></span><span data-bind="text: lang.lang.transaction"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input data-role="datepicker"
							   class="sdate"
							   data-format="dd-MM-yyyy"
					           data-bind="value: sdate,
					           			  max: edate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      min: sdate"
					           placeholder="To ..." >

					  	<button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th><span data-bind="text: lang.lang.type2"></span></th>								
								<th style="text-align: center;" ><span data-bind="text: lang.lang.reference_no"></span></th>
								<th style="text-align: center;" ><span data-bind="text: lang.lang.qty"></span></th>
								<th style="text-align: right;" ><span data-bind="text: lang.lang.cost"></span></th>
								<th style="text-align: right;" ><span data-bind="text: lang.lang.price"></span></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="itemCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="itemCenter-item-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				<span class="strong">
					#=abbr##=number# #=name#				
				</span>
			</div>
		</td>
	</tr>
</script>
<script id="itemCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(transaction_issued_date), "dd-MM-yyyy")#</td>
    	<td>#=transaction_type#</td>
        <td align="center">		
			<a href="\#/#=transaction_type.toLowerCase()#/#=id#">#=transaction_number#</a>
        </td>
    	<td align="center">#=kendo.toString(quantity, "n0")#</td>
    	<td align="right">
    		#if(cost>0){#
    			#=kendo.toString((cost+additional_cost)/rate, "c", locale)#
    		#}#
    	</td>
    	<td align="right">
    		#if(price>0){#
    			#=kendo.toString(price/rate, "c", locale)#
    		#}#
    	</td>
    </tr>
</script>
<script id="item" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.inventory_for_sale"></h2>		    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row">
								<div class="span6" style="padding-right: 0;">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-role="dropdownlist"
											   data-option-label="Select Category..."
											   data-header-template="item-category-header-tmpl"
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: categoryChanges}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"
											   data-role="dropdownlist"
											   data-header-template="item-group-header-tmpl"
											   data-option-label="Select Group..."
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row">
								<div class="span6" style="padding-right: 0;">										
									<!-- Group -->
									<div class="control-group">							
										<label for="txtNumber"><span data-bind="text: lang.lang.no_"></span><span style="color:red">*</span></label>
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" style="width: 55px;" />
				              			-
				              			<input id="txtNumber" name="txtNumber" class="k-textbox"
					              				data-bind="value: obj.number, 
					              							disabled: obj.is_pattern,
					              							events:{change: checkExistingNumber}" 
					              				placeholder="e.g. 0001" 
					              				required data-required-msg="required"
					              				style="width: 157px;" />
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="Item name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>

							<div class="row">
								<div class="span6" style="padding-right: 0;">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->								
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6">

							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-header-template="item-measurement-header-tmpl"
										   data-role="dropdownlist"						                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6" style="padding: 0; ">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtCost"><span data-bind="text: lang.lang.cost"></span></label>
							            <input id="txtCost" name="txtCost" 
							               data-role="numerictextbox"
							               data-spinners="false"
						                   data-format="n"
						                   data-min="0"						                   
						                   data-bind="value: obj.cost"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->			
								</div>
							</div>

							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtOrderPoint"><span data-bind="text: lang.lang.reorder_point"></span></label>
										<input data-role="numerictextbox"
										   data-spinners="false"
						                   data-format="n"
						                   data-min="0"						                   
						                   data-bind="value: obj.order_point"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6" style="padding: 0; ">	
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPrice"><span data-bind="text: lang.lang.price"></span></label>
							            <input id="txtPrice" name="txtPrice" 
							               data-role="numerictextbox"
							               data-spinners="false"
						                   data-format="n"
						                   data-min="0"						                   
						                   data-bind="value: obj.price"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->											
								</div>
							</div>

							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
							            <textarea id="txtPurchaseDescription" class="k-textbox" 
											data-bind="value: obj.purchase_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
								<div class="span6" style="padding: 0; ">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
							            <textarea id="txtSaleDescription" class="k-textbox" 
											data-bind="value: obj.sale_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">
						        	<li class="span2 glyphicons circle_info active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
						            </li>						            
						            <li class="span2 glyphicons usd">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>						            
						            <li class="span2 glyphicons barcode">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.supplier_customer_codes"></span></a>
						            </li>					            					            						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">
						    	<!-- //INFO -->
						        <div class="tab-pane active" id="tab1">

						        	<div class="row">
						        		<div class="span6">
						        			<div class="row">
							        			<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtSerialNumber"><span data-bind="text: lang.lang.model"></span></label>
								              			<input data-role="dropdownlist"
								              			   data-option-label="(--- Select ---)"
								              			   data-header-template="item-brand-header-tmpl"           
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.brand_id,
										                              source: brandDS"
										                   style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>

												<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtMeasurement"><span data-bind="text: lang.lang.measurement"></span></label>
								              			<input id="txtMeasurement" name="txtMeasurement" class="k-textbox"
									              				data-bind="value: obj.measurements" 
									              				placeholder="e.g. 4x6mn"
									              				style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>

												<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtColorCode"><span data-bind="text: lang.lang.color_code"></span></label>
								              			<input id="txtColorCode" name="txtColorCode" class="k-textbox"
									              				data-bind="value: obj.color_code" 
									              				placeholder="e.g. #FF0000"
									              				style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>										
									        
												<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtInternationalCode"><span data-bind="text: lang.lang.international_code"></span></label>
								              			<input id="txtInternationalCode" name="txtInternationalCode" class="k-textbox"
									              				data-bind="value: obj.international_code" 
									              				placeholder="e.g. INT0001"
									              				style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>
											</div>
						        		</div>
										<div class="span6">
											<img width="120px" data-bind="attr: { src: obj.image_url }" style="margin-bottom: 15px; border: 1px solid #ddd;">
											
											<input id="files" name="files"
							                    type="file"
							                    data-role="upload"
							                    data-multiple="false"
							                    data-show-file-list="false"
							                    data-bind="events: { 
					                   				select: onSelect
							                    }">
										</div>
																						
							        </div>
							        <br/>
							        <div class="row-fluid">
							        	<div class="span3">
											<!-- Group -->
											<div class="control-group">
									            <input type="checkbox" data-bind="checked: obj.favorite" />	<span data-bind="text: lang.lang.favorite"></span>
											</div>																		
											<!-- // Group END -->
										</div>
							        </div>							       

					        	</div>
						        <!-- //INFO END -->

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane" id="tab2">
						        	<div class="row-fluid">						            	
										<div class="span4">
											<label for="ddlIncome"><span data-bind="text: lang.lang.income_account"></span><span style="color:red">*</span></label>											
											<input id="ddlIncome" name="ddlIncome"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.income_account_id,
								                              source: incomeAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>
										<div class="span4">
											<label for="ddlCogs"><span data-bind="text: lang.lang.cost_of_good_sold_account"></span><span style="color:red">*</span></label>
											<input id="ddlCogs" name="ddlCogs"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.expense_account_id,
								                              source: cogsAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />											
										</div>
										<div class="span4">
											<label for="ddlInventory"><span data-bind="text: lang.lang.inventory_account"></span><span style="color:red">*</span></label>
											<input id="ddlInventory" name="ddlInventory"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.inventory_account_id,
								                              source: inventoryAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>												
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING END -->						        

						        <!-- //VENDOR/CUSTOMER CODE -->
						        <div class="tab-pane" id="tab3">

						        	<div class="row">
						        		<div class="span6">
						        			<span style="margin-bottom: 15px;" class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemVendor"><i></i> <span data-bind="text: lang.lang.new_vendor_item"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th><span data-bind="text: lang.lang.code"></span></th>								                
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"					        						        		 
										        		data-template="item-vendor-row-tmpl" 
										        		data-bind="source: itemVendorDS">
										        </tbody>										        						        
										    </table>
						        		</div>
						        		<div class="span6">
						        			<span style="margin-bottom: 15px;" class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemCustomer"><i></i> <span data-bind="text: lang.lang.new_customer_item"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th><span data-bind="text: lang.lang.code"></span></th>								                
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"										        						        		 
										        		data-template="item-customer-row-tmpl" 
										        		data-bind="source: itemCustomerDS">
										        </tbody>										        						        
										    </table>
						        		</div>
						        	</div>

					        	</div>
						        <!-- //VENDOR/CUSTOMER CODE END -->

						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>				
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="item-vendor-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-value-primitive="true"
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorDS"
               data-placeholder="Vendor ..."
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemVendor"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="item-customer-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbCustomer" name="cbbCustomer" 
			   data-role="combobox"
			   data-header-template="contact-header-tmpl"
			   data-template="contact-list-tmpl"
               data-value-primitive="true"
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: customerDS"
               data-placeholder="Customer ..."
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemCustomer"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="itemCatalog" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background" style="overflow: hidden;">
			<div class="container-960">					
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.catalog"></h2>
			        <br>

			        <!-- Upper Part -->
					<div class="row">
						<div class="span6">
							<div class="box-generic well" style="height: 190px;">				
								<div class="row">
									<div class="span6">	
								
										<!-- Group -->
										<div class="control-group">							
											<label for="txtNumber"><span data-bind="text: lang.lang.no_"></span><span style="color:red">*</span></label>
					              			<br>
					              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
						              				data-bind="value: obj.abbr, 
						              						   disabled: obj.is_pattern" 
						              				placeholder="eg. AB" style="width: 55px;" />
					              			-
					              			<input id="txtNumber" name="txtNumber" class="k-textbox"
						              				data-bind="value: obj.number, 
						              							disabled: obj.is_pattern,
						              							events:{change: checkExistingNumber}" 
						              				placeholder="e.g. 0001" 
						              				required data-required-msg="required"
						              				style="width: 128px;" />
						              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
										</div>
										<!-- // Group END -->


									
									</div>

									<div class="span6" >									
										<div class="control-group">
											<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
						              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name" 
								              		placeholder="Items Name..." required data-required-msg="required"
								              		style="width: 100%;" />
										</div>									
									</div>								
								</div>

								<div class="row">
									<div class="span6"  style="margin-top: 25px;">
										<input type="checkbox" data-bind="checked: obj.favorite" /> <span data-bind="text: lang.lang.favorite"></span>

										<!-- Group -->
										<div class="control-group" style=" margin-top: 17px;">								
											<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
								            <textarea id="txtPurchaseDescription" class="k-textbox" 
												data-bind="value: obj.purchase_description" style="resize:none; width: 100%;height:60px;"></textarea>
										</div>																		
										<!-- // Group END -->

									</div>
									<div class="span6">								
										<div class="control-group">								
											<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span><span style="color:red">*</span></label>
								            <input id="ddlStatus" name="ddlStatus" 
					              				data-role="dropdownlist"
							            		data-text-field="name"
				           						data-value-field="id"
				           						data-value-primitive="true" 
							            		data-bind="source: statusList, value: obj.status"
							            		data-option-label="(--- Select ---)"
							            		required data-required-msg="required" style="width: 100%;" />
										</div>
										<!-- Group -->
										<div class="control-group" style=" margin-top: 10px;">								
											<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
								            <textarea id="txtSaleDescription" class="k-textbox" 
												data-bind="value: obj.sale_description" style="resize:none; width: 100%;height:60px;"></textarea>
										</div>																		
										<!-- // Group END -->																	
									</div>																								
								</div>

							</div>						
						</div>					   

						<div class="span6" style="padding-left: 0;">
							<div class="row-fluid">
								<div class="span12">
									<label ><span data-bind="text: lang.lang.select_item_to_include_into_this_catalog"></span></label>
									<select data-role="multiselect"
						                   data-placeholder="Select..."
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.catalogs,
						                              source: itemDS"
						                   style="width: 100%"
						            ></select>
								</div>
							</div>
					    </div>					   
					</div>

				    <!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>				
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="itemAssembly" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.build_assembly"></h2>
			        <br>

			        <!-- Upper Part -->
					<div class="row">
						<div class="span6">
							<div class="box-generic well" style="height: 190px;">				
								<div class="row">
									<div class="span6">	
							
										<!-- Group -->
										<div class="control-group">							
											<label for="txtNumber"><span data-bind="text: lang.lang.no_"></span><span style="color:red">*</span></label>
					              			<br>
					              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
						              				data-bind="value: obj.abbr, 
						              						   disabled: obj.is_pattern" 
						              				placeholder="eg. AB" style="width: 55px;" />
					              			-
					              			<input id="txtNumber" name="txtNumber" class="k-textbox"
						              				data-bind="value: obj.number, 
						              							disabled: obj.is_pattern,
						              							events:{change: checkExistingNumber}" 
						              				placeholder="e.g. 0001" 
						              				required data-required-msg="required"
						              				style="width: 128px;" />
										</div>
										<!-- // Group END -->
									
									</div>

									<div class="span6">									
										<div class="control-group">
											<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
						              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name" 
								              		placeholder="Items Name..." required data-required-msg="required"
								              		style="width: 100%;" />
										</div>									
									</div>								
								</div>

								<div class="row">
									<div class="span12">
										<div class="control-group">
											<label for="ddlIncome"><span data-bind="text: lang.lang.income_account"></span><span style="color:red">*</span></label>											
											<input id="ddlIncome" name="ddlIncome"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.income_account_id,
								                              source: incomeAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>
									</div>
									<div class="span12">								
										<div class="control-group">								
											<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span><span style="color:red">*</span></label>
								            <input id="ddlStatus" name="ddlStatus" 
					              				data-role="dropdownlist"
							            		data-text-field="name"
				           						data-value-field="id"
				           						data-value-primitive="true" 
							            		data-bind="source: statusList, value: obj.status"
							            		data-option-label="(--- Select ---)"
							            		required data-required-msg="required" style="width: 100%;" />
										</div>																	
									</div>																								
								</div>

							</div>						
						</div>					   

						<div class="span6" style="padding-left:0;">
							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->
								</div>
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPrice"><span data-bind="text: lang.lang.price"></span></label>
							            <input id="txtPrice" name="txtPrice" 
							               data-role="numerictextbox"
							               data-spinners="false"
						                   data-format="n"
						                   data-min="0"						                   
						                   data-bind="value: obj.price"
						                   required data-required-msg="required" style="width: 100%">
									</div>																		
									<!-- // Group END -->
								</div>
							</div>
							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
							            <textarea id="txtPurchaseDescription" class="k-textbox" 
											data-bind="value: obj.purchase_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
							            <textarea id="txtSaleDescription" class="k-textbox" 
											data-bind="value: obj.sale_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
							</div>
					    </div>					   
					</div>

					<div class="row">
						<div class="span12">
							<table class="table table-bordered table-primary table-striped table-vertical-center">
						        <thead>
						            <tr>
						            	<th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>				                
						                <th ><span data-bind="text: lang.lang.items"></span></th>
						                <th ><span data-bind="text: lang.lang.quantity"></span></th>
						                <th ><span data-bind="text: lang.lang.cost"></span></th>
						                <th ><span data-bind="text: lang.lang.amount"></span></th>
						            </tr>
						        </thead>
						        <tbody data-role="listview"
						        		data-auto-bind="false" 
						        		data-template="itemAssembly-row-template"				        		
						        		data-bind="source: lineDS"></tbody>				        
						    </table>					    				    

						    <button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>
						    
						    <!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
						  				 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

						    <div class="strong" align="right" style="font-size: large;">
						    	<span data-bind="text: lang.lang.total"></span> <span data-bind="text: total"></span>
						    </div>
					    </div>
				    </div>

				    <!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="itemAssembly-row-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.itemAssembly.lineDS.indexOf(data)+1#
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-template="item-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{change: itemChanges}"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="n0" data-min="0"					
					data-bind="value: quantity,
                   				events:{change: onChanges}"
					required data-required-msg="required" style="width: 48%;" />

			<input data-role="dropdownlist"
				   data-option-label="UM"
                   data-auto-bind="false"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="source: measurementDS, 
                   			value: measurement_id"
                   style="width: 50%;" />
		</td>
		<td class="right">
			<span data-format="n" data-bind="text: price"></span> 						
		</td>
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>	
	</tr>
</script>
<script id="itemService" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.service_items"></h2>
				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row">
								<div class="span6" style="padding-right: 0;">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-option-label="Select Category..."
											   data-role="dropdownlist"
											   data-header-template="item-category-header-tmpl"
											   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: loadPattern}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"											   
											   data-role="dropdownlist"
											   data-header-template="item-group-header-tmpl"
											   data-option-label="Select Group..."
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"							                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row">
								<div class="span6" style="padding-right: 0">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtNumber"><span data-bind="text: lang.lang.no_"></span><span style="color:red">*</span></label>
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" style="width: 55px;" />
				              			-
				              			<input id="txtNumber" name="txtNumber" class="k-textbox"
					              				data-bind="value: obj.number, 
					              							disabled: obj.is_pattern,
					              							events:{change: checkExistingNumber}" 
					              				placeholder="e.g. 0001" 
					              				required data-required-msg="required"
					              				style="width: 157px;" />
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="Name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>

							<div class="row">
								<div class="span6">																					
									<!-- Group -->
									<div class="control-group">										
										<input type="checkbox" id="chbFavorite" class="k-checkbox" data-bind="checked: obj.favorite">
	  									<label class="k-checkbox-label" for="chbFavorite"><span data-bind="text: lang.lang.favorite"></span></label>							            
									</div>																		
									<!-- // Group END -->														
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6">
						
							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-header-template="item-measurement-header-tmpl"
										   data-role="dropdownlist"						                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6"  style="padding: 0;">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtCost"><span data-bind="text: lang.lang.cost"></span></label>
							            <input id="txtCost" name="txtCost" 
							               data-role="numerictextbox"
							               data-spinners="false"
						                   data-format="n"
						                   data-min="0"						                   
						                   data-bind="value: obj.cost"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->			
								</div>
							</div>

							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6"  style="padding: 0;">	
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPrice"><span data-bind="text: lang.lang.price"></span></label>
							            <input id="txtPrice" name="txtPrice" 
							               data-role="numerictextbox"
							               data-spinners="false"
						                   data-format="n"
						                   data-min="0"						                   
						                   data-bind="value: obj.price"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->											
								</div>
							</div>

							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
							            <textarea id="txtPurchaseDescription" class="k-textbox" 
											data-bind="value: obj.purchase_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
								<div class="span6" style="padding: 0;">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
							            <textarea id="txtSaleDescription" class="k-textbox" 
											data-bind="value: obj.sale_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons usd active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>						            
						            <li class="span2 glyphicons barcode">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.supplier_customer_codes"></span></a>
						            </li>
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">
						        <!-- //ACCOUNTING -->
						        <div class="tab-pane active" id="tab1">
						        	<div class="row-fluid">						            	
										<div class="span6">
											<label for="ddlIncome"><span data-bind="text: lang.lang.income_account"></span><span style="color:red">*</span></label>											
											<input id="ddlIncome" name="ddlIncome"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.income_account_id,
								                              source: incomeAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>
										<div class="span6">
											<label for="ddlCogs"><span data-bind="text: lang.lang.cost_of_good_sold_account"></span><span data-bind="text: lang.lang.only_for_subcontact"></span><span style="color:red">*</span></label>
											<input id="ddlCogs" name="ddlCogs"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.expense_account_id,
								                              source: cogsAccountDS"
								                   data-option-label="Select Account..." style="width: 100%;" />											
										</div>																					
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING END -->						        

						        <!-- //VENDOR/CUSTOMER CODE -->
						        <div class="tab-pane" id="tab2">

						        	<div class="row">
						        		<div class="span6">
						        			<span style="margin-bottom: 15px;" class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemVendor"><i></i> <span data-bind="text: lang.lang.new_vendor_item"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th data-bind="text: lang.lang.code"></th>	
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"					        						        		 
										        		data-template="item-vendor-row-tmpl" 
										        		data-bind="source: itemVendorDS">
										        </tbody>										        						        
										    </table>
						        		</div>
						        		<div class="span6">
						        			<span style="margin-bottom: 15px;" class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemCustomer"><i></i> <span data-bind="text: lang.lang.new_customer_item"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th data-bind="text: lang.lang.code"></th>								                
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"										        						        		 
										        		data-template="item-customer-row-tmpl" 
										        		data-bind="source: itemCustomerDS">
										        </tbody>										        						        
										    </table>
						        		</div>
						        	</div>

					        	</div>
						        <!-- //VENDOR/CUSTOMER CODE END -->
						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="itemService-vendor-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-value-primitive="true"
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               data-placeholder="Vendor ..."
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemVendor"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="itemService-customer-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbCustomer" name="cbbCustomer" 
			   data-role="combobox"
			   data-header-template="contact-header-tmpl"
			   data-template="contact-list-tmpl"
               data-value-primitive="true"
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: customerList"
               data-placeholder="Customer ..."
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemCustomer"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="nonInventoryPart" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.other_inventory"></h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row">
								<div class="span6" style="padding-right: 0;">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-option-label="Select Category..."
											   data-header-template="item-category-header-tmpl"
											   data-role="dropdownlist"							                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: categoryChanges}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"											   
											   data-role="dropdownlist"
											   data-option-label="Select Group..."
											   data-header-template="item-group-header-tmpl"
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"							                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row">
								<div class="span6" style="padding-right: 0;">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtNumber"><span data-bind="text: lang.lang.no_"></span><span style="color:red">*</span></label>
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" style="width: 55px;" />
				              			-
				              			<input id="txtNumber" name="txtNumber" class="k-textbox"
					              				data-bind="value: obj.number, 
					              							disabled: obj.is_pattern,
					              							events:{change: checkExistingNumber}" 
					              				placeholder="e.g. 0001" 
					              				required data-required-msg="required"
					              				style="width: 157px;" />
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red; resize: none;">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-header-template="item-group-header-tmpl" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="item name..." required data-required-msg="required"
							              		style="width: 100%; resize: none;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>

							<div class="row">
								<div class="span6" style="padding-right: 0;">																					
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-role="dropdownlist"
										   data-header-template="item-measurement-header-tmpl"					                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->															
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6" style="padding-right: 0;">	

							<div class="row-fluid">

								<!-- Group -->
								<div class="control-group" style="padding: 0; margin-bottom: 9px;">								
									<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
						            <textarea id="txtPurchaseDescription" cols="0" rows="3" class="k-textbox" 
										data-bind="value: obj.purchase_description" style="width: 100%; resize: none;"></textarea>
								</div>																		
								<!-- // Group END -->

								

								<!-- Group -->
								<div class="control-group" style="padding: 0;">								
									<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
						            <textarea id="txtSaleDescription" cols="0" rows="3" class="k-textbox" 
										data-bind="value: obj.sale_description" style="width: 100%;resize: none;"></textarea>
								</div>																		
								<!-- // Group END -->

							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons circle_info active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
						            </li>
						            <li class="span2 glyphicons usd">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>						            
						            <li class="span2 glyphicons barcode">						            	
						            	<a href="#tab3" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.supplier_customer_codes"></span></a>
						            </li>						            					            						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- //INFO -->
						        <div class="tab-pane active" id="tab1">

						        	<div class="row">
						        		<div class="span6">
						        			<div class="row">
							        			<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtSerialNumber"><span data-bind="text: lang.lang.model"></span></label>
								              			<input data-role="dropdownlist"
								              			   data-option-label="(--- Select ---)"
								              			   data-header-template="item-brand-header-tmpl"           
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.brand_id,
										                              source: brandDS"
										                   style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>

												<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtMeasurement"><span data-bind="text: lang.lang.measurement"></span></label>
								              			<input id="txtMeasurement" name="txtMeasurement" class="k-textbox"
									              				data-bind="value: obj.measurements" 
									              				placeholder="e.g. 4x6mn"
									              				style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>

												<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtColorCode"><span data-bind="text: lang.lang.color_code"></span></label>
								              			<input id="txtColorCode" name="txtColorCode" class="k-textbox"
									              				data-bind="value: obj.color_code" 
									              				placeholder="e.g. #FF0000"
									              				style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>										
									        
												<div class="span12">														
													<!-- Group -->
													<div class="control-group">							
														<label for="txtInternationalCode"><span data-bind="text: lang.lang.international_code"></span></label>
								              			<input id="txtInternationalCode" name="txtInternationalCode" class="k-textbox"
									              				data-bind="value: obj.international_code" 
									              				placeholder="e.g. INT0001"
									              				style="width: 100%;" />					              		
													</div>
													<!-- // Group END -->
												</div>
											</div>
						        		</div>
										<div class="span6">
											<img width="120px" data-bind="attr: { src: obj.image_url }" style="margin-bottom: 15px; border: 1px solid #ddd;">
											
											<input id="files" name="files"
							                    type="file"
							                    data-role="upload"
							                    data-multiple="false"
							                    data-show-file-list="false"
							                    data-bind="events: { 
					                   				select: onSelect
							                    }">
										</div>
																						
							        </div>
							        <br/>
							        <div class="row-fluid">
							        	<div class="span3">
											<!-- Group -->
											<div class="control-group">
									            <input type="checkbox" data-bind="checked: obj.favorite" />	<span data-bind="text: lang.lang.favorite"></span>
											</div>																		
											<!-- // Group END -->
										</div>
							        </div>							       

					        	</div>
						        <!-- //INFO END -->

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane" id="tab2">
						        	<div class="row-fluid">										
										<div class="span12">
											<label for="ddlInventory"><span data-bind="text: lang.lang.inventory_account"></span><span style="color:red">*</span></label>
											<input id="ddlInventory" name="ddlInventory"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.inventory_account_id,
								                              source: inventoryAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>												
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING END -->						        

						        <!-- //VENDOR/CUSTOMER CODE -->
						        <div class="tab-pane" id="tab3">

						        	<div class="row">
						        		<div class="span6">
						        			<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemVendor"><i></i> <span data-bind="text: lang.lang.new_vendor_item"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th data-bind="text: lang.lang.code"></th>						                
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"					        						        		 
										        		data-template="item-vendor-row-tmpl" 
										        		data-bind="source: itemVendorDS">
										        </tbody>										        						        
										    </table>
						        		</div>
						        		<div class="span6">
						        			<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemCustomer"><i></i> <span data-bind="text: lang.lang.new_customer_item"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th data-bind="text: lang.lang.code"></th>								                
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"										        						        		 
										        		data-template="item-customer-row-tmpl" 
										        		data-bind="source: itemCustomerDS">
										        </tbody>										        						        
										    </table>
						        		</div>
						        	</div>

					        	</div>
						        <!-- //VENDOR/CUSTOMER CODE END -->

						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>			
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="nonInventoryPart-vendor-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-value-primitive="true"
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               data-placeholder="Vendor ..."
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemVendor"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="nonInventoryPart-customer-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-value-primitive="true"
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               data-placeholder="Vendor ..."
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemCustomer"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="fixedAssets" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.fixed_assets"></h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row-fluid">
								<div class="span6" style="padding-right: 0;">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-role="dropdownlist"
											   data-option-label="Select Category..."
											   data-header-template="item-category-header-tmpl"
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: categoryChanges}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6" >	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"
											   data-role="dropdownlist"
											   data-header-template="item-group-header-tmpl"
											   data-option-label="Select Group..."
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row-fluid">
								<div class="span6" style="padding-right: 0;">										
									<!-- Group -->
									<div class="control-group">							
										<label for="txtNumber"><span data-bind="text: lang.lang.no_"></span><span style="color:red">*</span></label>
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" style="width: 55px;" />
				              			-
				              			<input id="txtNumber" name="txtNumber" class="k-textbox"
					              				data-bind="value: obj.number, 
					              							disabled: obj.is_pattern,
					              							events:{change: checkExistingNumber}" 
					              				placeholder="e.g. 0001" 
					              				required data-required-msg="required"
					              				style="width: 142px;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="Item name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>					
						</div>

						<div class="span6">
							<div class="row-fluid">

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->								
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-header-template="item-measurement-header-tmpl"
										   data-role="dropdownlist"						                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                   			  disabled: obj.is_pattern,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>

							</div>

							<div class="row-fluid">

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
							            <textarea id="txtPurchaseDescription" class="k-textbox" 
											data-bind="value: obj.purchase_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
							            <textarea id="txtSaleDescription" class="k-textbox" 
											data-bind="value: obj.sale_description" style="resize:none; width: 100%;height:60px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>

							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						        							            
						            <li class="span2 glyphicons usd active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>						            
						            					            					            						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane active" id="tab1">
						        	<div class="row-fluid">						            	
										<div class="span4">
											<label for="ddlFixedAssetAccount"><span data-bind="text: lang.lang.fixed_assets_account"></span><span style="color:red">*</span></label>							
											<input id="ddlFixedAssetAccount" name="ddlFixedAssetAccount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.inventory_account_id,
								                              source: fixedAssetAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>
										<div class="span4">
											<label for="ddlAccumulatedAccount"><span data-bind="text: lang.lang.accumulated_account"></span><span style="color:red">*</span></label>
											<input id="ddlAccumulatedAccount" name="ddlAccumulatedAccount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.income_account_id,
								                              source: accumulatedAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />											
										</div>
										<div class="span4" style="padding-left: 15px;">
											<label for="ddlDeposalAccount"><span data-bind="text: lang.lang.deposal_account"></span><span style="color:red">*</span></label>
											<input id="ddlDeposalAccount" name="ddlDeposalAccount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.expense_account_id,
								                              source: deposalAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>												
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING END -->						        

						     
						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete"><span data-bind="text: lang.lang.yes"></span></button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm"><span data-bind="text: lang.lang.no"></span></button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="txnItem" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.transaction_item"></h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">							
							<div class="row">
								<div class="span6" >						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" 
					              				class="k-textbox" 
					              				data-bind="value: obj.name,
					              							events:{change:checkExistingName}" 
							              		placeholder="Item name..." 
							              		required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>
							<div class="row">
								<div class="span6" style="padding-left: 15px;">						
									<!-- Group -->
									<div class="control-group">
										<label for="ddlAccount"><span data-bind="text: lang.lang.account"></span> <span style="color:red">*</span></label>
							            <input id="ddlAccount" name="ddlAccount"
							            	data-header-template="account-header-tmpl"
							            	data-template="account-list-tmpl" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true"			           								           						
						            		data-bind="source: accountDS, 
						            					value: obj.inventory_account_id"
						            		data-option-label="Select Account..."
						            		required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6">
							<div class="row">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtPurchaseDescription"><span data-bind="text: lang.lang.purchase_description"></span></label>
							            <textarea id="txtPurchaseDescription" class="k-textbox" 
											data-bind="value: obj.purchase_description" style="resize:none; width: 100%;height:110px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
								<div class="span6" style="padding-left: 0; padding-right: 0;">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtSaleDescription"><span data-bind="text: lang.lang.sale_description"></span></label>
							            <textarea id="txtSaleDescription" class="k-textbox" 
											data-bind="value: obj.sale_description" style="resize:none; width: 100%;height:110px;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>
							</div>
						</div>
					</div>									

					<br>											
			
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="itemPrice" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background" style="overflow: hidden;">
			<div class="container-960">					
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.item_prices"></h2>
			        <br>

			        <div class="widget-body">

				    	<div class="widget widget-heading-simple widget-body-simple">
							<div class="widget-head" style="text-align: center; font-size: 25px; font-weight: bold; height: auto !important;">
								<span data-bind="text: obj.number"></span>
								-
								<span data-bind="text: obj.name"></span>
							</div>

							<div class="widget-body">
								<div class="row-fluid">
									<div class="span3" style="padding-left:0;">
										<a href="" class="widget-stats widget-stats-gray widget-stats-1">
											<span class="glyphicons cart_in"><i></i><span class="txt"><span data-bind="text: lang.lang.weighted_avg_cost"></span></span></span>
											<div class="clearfix"></div>
											<span class="count"><span data-format="n" data-bind="text: obj.cost" style="font-size: xx-large;"></span></span>
										</a>
									</div>
									<div class="span3">
										<a href="" class="widget-stats widget-stats-1">
											<span class="glyphicons cart_out"><i></i><span class="txt"><span data-bind="text: lang.lang.avg_price"></span></span></span>
											<div class="clearfix"></div>
											<span class="count"><span data-format="n" data-bind="text: obj.price" style="font-size: xx-large;"></span></span>
										</a>
									</div>
									<div class="span2">
										<a href="" class="widget-stats widget-stats-gray widget-stats-2">
											<span class="count"><span data-format="n0" data-bind="text: on_hand"></span></span>
											<span class="txt"><span data-bind="text: lang.lang.qty_on_hand"></span></span>
										</a>
									</div>
									<div class="span2">
										<a href="" class="widget-stats widget-stats-2">
											<span class="count"><span data-format="n0" data-bind="text: on_po"></span></span>
											<span class="txt"><span data-bind="text: lang.lang.on_po"></span></span>
										</a>
									</div>
									<div class="span2">
										<a href="" class="widget-stats widget-stats-gray widget-stats-2">
											<span class="count"><span data-format="n0" data-bind="text: on_so"></span></span>
											<span class="txt"><span data-bind="text: lang.lang.on_so"></span></span>
										</a>
									</div>
									
								</div>					
							</div>
						</div>

						<!-- Item Price Type Window -->
					    <div data-role="window"
				                 data-title="Item Price"		                 
				                 data-width="810"
				                 data-height="290"
				                 data-actions="{}"
				                 data-position="{top: '30%', left: '18%'}"
				                 data-bind="visible: windowVisible">

							<div class="top-itemprice">
								<table>
		            				<tr>
		            					<td>
					            			<input type="radio" value="ltBase" class="k-radio"
					            					name="payOption" id="payOption1"
					            					data-bind="checked: type, 
					            								events:{ change: typeChanges }"> 
					            			<label class="k-radio-label" for="payOption1">Formula A (< Base)</label> 
					            		</td>
					            		<td>
								            <input type="radio" value="gtBase" class="k-radio"
								            		name="payOption" id="payOption2"
								            		data-bind="checked: type, 
								            					events:{ change: typeChanges }"> 
								            <label class="k-radio-label" for="payOption2">Formula B (> Base)</label>
						            	</td>
					            </table>

					            <table width="100%">
		            				<tr data-bind="visible: isltBase">
					            		<td><span style="float: left;">1</span></td>
					            		<td>
					            			<span style="float: left; "> Base UOM </span>
					            		</td>
					            		<td><span style="float: left; margin-top: 7px; font-size: 25px; font-weight: 600;">=</span></td>
					            		<td>
					            			<div class="control-group" style="padding: 5px; float: left;">								
												<label for="txtQuantity"><span data-bind="text: lang.lang.quantity"></span> <span style="color:red">*</span></label>
									            <input id="txtQuantity" name="txtQuantity"
									            	data-role="numerictextbox" 
													data-format="n" data-min="0"
													data-spinners="false"
									            	data-bind="value: priceList.quantity,
									            				disabled: isBase,
									            				events:{change:changes}"
					            					required data-required-msg="required" style="width: 100%;">
											</div>
					            		</td>
					            		<td>
					            			<div class="control-group" style="padding: 5px; float: left;">										
												<label for="ddlMesurement"><span >UOM</span> <span style="color:red">*</span></label>
												<input id="ddlMesurement" name="ddlMesurement" 
														data-role="dropdownlist"
														data-value-primitive="true"                  
									                    data-text-field="name"
									                    data-value-field="id"
									                    data-bind="value: priceList.measurement_id,
									                   			  source: measurementDS"
									                    data-option-label="UM"
									                    required data-required-msg="required" style="width: 100%;" />																				            
											</div>
					            		</td>
					            	</tr>
					            	<tr data-bind="invisible: isltBase">
						            	<td><span style="float: left;">1</span></td>
						            	<td>						            		
						            		<div class="control-group" style="padding: 5px; float: left;">										
												<label for="ddlMesurement"><span >UOM</span> <span style="color:red">*</span></label>
												<input id="ddlMesurement" name="ddlMesurement" 
														data-role="dropdownlist"
														data-value-primitive="true"                  
									                    data-text-field="name"
									                    data-value-field="id"
									                    data-bind="value: priceList.measurement_id,
									                   			  	source: measurementDS"
									                    data-option-label="UM"
									                    required data-required-msg="required" style="width: 100%;" />
											</div>
						            	</td>
						            	<td><span style="float: left; margin-top: 7px; font-size: 25px; font-weight: 600;">=</span></td>
						            	<td>
					            			<div class="control-group" style="padding: 5px; float: left;">								
												<label for="txtQuantity"><span data-bind="text: lang.lang.quantity"></span> <span style="color:red">*</span></label>
									            <input id="txtQuantity" name="txtQuantity"
									            	data-role="numerictextbox" 
													data-format="n" data-min="0"
													data-spinners="false"
									            	data-bind="value: priceList.quantity,
									            				disabled: isBase,
									            				events:{change:changes}"
					            					required data-required-msg="required" style="width: 100%;">
											</div>
					            		</td>
					            		<td><span >Base UOM</span></td>
						            </tr>
						            <tr style="background-color: #D5DBDB;">
						            	<td></td>
						            	<td>
						            		<div class="control-group" style="padding: 5px; float: left;">										
												<label for="txtPrice"><span >Price</span> <span style="color:red">*</span></label>												
												<input id="txtPrice" name="txtPrice"
												   type="number" class="k-textbox"
								                   data-bind="value: priceList.price"
								                   required data-required-msg="required" />																				            
											</div>
						            	</td>
						            	<td></td>
						            	<td >
						            		<div class="control-group" style="padding: 5px; float: left;">								
												<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span><span style="color:red">*</span></label>
									            <input id="ddlCurrency" name="ddlCurrency" 
									               data-role="dropdownlist"
												   data-option-label="(--- Select ---)"
												   data-template="currency-list-tmpl"			                   
								                   data-value-primitive="true"
								                   data-text-field="code"
								                   data-value-field="locale"
								                   data-bind="value: priceList.locale,
								                              source: currencyDS"
								                   required data-required-msg="required" />
											</div>
						            	</td>
						            	<td></td>
						            </tr>
					            </table>
							</div>

							<br>
							<div style="text-align: center;">
								<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i>Save</span>
								<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i><span data-bind="text: lang.lang.close"></span></span> 
							</div> 
						</div>		

						<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i></button>
						<span data-bind="text: lang.lang.set_new_price"></span>
						</br>
						</br>

						<table class="table table-bordered table-primary table-striped table-vertical-center">
					        <thead>
					            <tr>	            	
					            	<th data-bind="text: lang.lang.price"></th>			            		             
					                <th data-bind="text: lang.lang.unit_value"></th>
					                <th data-bind="text: lang.lang.unit_measure"></th>			                
					                <th style="text-align: center;"></th>	                
					            </tr>
					        </thead>
					        <tbody data-template="itemPrice-template"
					        	data-auto-bind="false"			        	
					        	data-bind="source: dataSource"></tbody>
					    </table>

						<br>

						<table class="table table-bordered table-primary table-striped table-vertical-center">
					        <thead>
					            <tr>	            	
					            	<th data-bind="text: lang.lang.date"></th>
					            	<th data-bind="text: lang.lang.type"></th>	                
					                <th data-bind="text: lang.lang.reference"></th>				               
					                <th data-bind="text: lang.lang.quantity"></th>
					                <th data-bind="text: lang.lang.cost"></th>
					                <th data-bind="text: lang.lang.price"></th>			                	             
					            </tr>
					        </thead>
					        <tbody data-template="itemPrice-movement-tmpl"
					        	data-auto-bind="false"
					        	data-pageable="true" 
					        	data-bind="source: recordDS"></tbody>
					    </table>
					    <div id="pager" class="k-pager-wrap"
				             data-role="pager"
				             data-auto-bind="false" 
				             data-bind="source: recordDS"></div>					

					</div>

			    </div>
			</div>
		</div>
	</div>
</script>
<script id="itemPrice-template" type="text/x-kendo-template">
    <tr>
    	<td>#=kendo.toString(price, "c", locale)#</td>    	
    	<td>#=unit_value#</td>
    	<td>#=measurement#</td>    	
    	<td style="text-align: center;">
    		<span style="cursor: pointer;" data-bind="click: edit"><i class="icon-edit"></i> <span data-bind="text: lang.lang.edit"></span></span>
    		
    		#if(banhji.itemPrice.dataSource.indexOf(data)>0){#
    			|
    			<span style="cursor: pointer;" data-bind="click: delete"><i class="icon-remove"></i> <span data-bind="text: lang.lang.delete"></span></span>
    		#}#
    	</td>
    </tr>
</script>
<script id="itemPrice-movement-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(transaction_issued_date), "dd-MM-yyyy")#</td>
    	<td>#=transaction_type#</td>
        <td>
			<a href="\#/#=transaction_type.toLowerCase()#/#=id#">#=transaction_number#</a>
        </td>
    	<td align="center">
    		#=kendo.toString(quantity*movement, "n0")#
    		#=measurement#
    	</td>
    	<td align="right">
    		#if(cost>0){#
    			#=kendo.toString((cost+additional_cost)/rate, "c", locale)#
    		#}#
    	</td>
    	<td align="right">
    		#if(price>0){#
    			#=kendo.toString(price/rate, "c", locale)#
    		#}#
    	</td>  	
    </tr>
</script>

<script id="itemAdjustment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background" style="overflow: hidden;">
			<div class="container-960">					
				<div id="example" class="k-content">

					<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.item_adjustment"></h2>
			        <br>

			        <!-- Upper Part -->
					<div class="row">
						<div class="span4" style="padding-left: 15px;">							
							<div class="box-generic well" style="height: 190px; padding: 15px 15px 6px !important;">
								<div class="widget widget-heading-simple widget-body-primary widget-employees" style="margin-bottom: 0 !important;">		
									<div class="widget-body padding-none">			
										<div class="row-fluid row-merge">
											<div class="listWrapper">
												<div class="innerAll" style="padding: 15px;">
													<form autocomplete="off" class="form-inline">
														<div class="widget-search separator bottom">
															<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
															<div class="overflow-hidden">
																<input type="search" placeholder="Item Number..." data-bind="value: searchText, events:{change: enterSearch}">
															</div>
														</div>
														<div class="select2-container" style="width: 100%;">
															<input id="ddlCategory" name="ddlCategory"
																   data-role="dropdownlist"
												                   data-value-primitive="true"
												                   data-text-field="name"
												                   data-value-field="id"
												                   data-bind="value: category_id,
												                              source: categoryDS"
												                   data-option-label="Select Category..."
												                   style="width: 100%; height: 29px; float: left; margin-bottom: 15px;" />

												            <input id="ddlItemGroup" id="ddlItemGroup"
																   data-role="dropdownlist"
																   data-header-template="item-group-header-tmpl"
																   data-cascade-from="ddlCategory"
																   data-cascade-from-field="category_id"
												                   data-value-primitive="true"
												                   data-auto-bind="false"
												                   data-text-field="name"
												                   data-value-field="id"
												                   data-bind="value: item_group_id,
												                              source: itemGroupDS"
												                   data-option-label="Select Group..."
												                   style="width: 100%;" />
														</div>
													</form>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>					   

						<div class="span8" style="padding-left:0;">							
							<div class=" box-generic-noborder">
							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-6" data-toggle="tab"><i></i> </a>
							            </li>						            
							            <li class="span1 glyphicons pen"><a href="#tab2-6" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-6" data-toggle="tab"><i></i></a>
								        </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-6" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons history"><a href="#tab5-6" data-toggle="tab"><i></i></a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab4-5" data-toggle="tab"><i></i></a></li> -->		            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-6">						            
							            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">
							            	<tr>
												<td><span data-bind="text: lang.lang.date"></span></td>
												<td class="right">
													<input id="issuedDate" name="issuedDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd HH:mm:ss"
															data-bind="value: obj.issued_date, 
																		events:{ change : setRate }" 
															required data-required-msg="required"
															style="width:100%;" />
												</td>
											</tr>											
								            <tr>
												<td>
													<span data-bind="text: lang.lang.staff"></span>
												</td>
												<td>
													<input id="cbbReader" name="cbbReader" 
									    				   data-role="combobox"
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"							                   
										                   data-bind="value: obj.contact_id,
										                              source: contactDS"
										                   data-placeholder="Select ..."
										                   style="width: 100%" />
												</td>
											</tr>										
								            <tr>
								            	<td><span data-bind="text: lang.lang.adjustment_account"></span></td>
								            	<td>
								            		<input id="cbbAccount" name="cbbAccount"
								            			   data-role="combobox"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"							                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"									                   
										                   data-bind="value: obj.account_id,
										                              source: accountDS"
										                   placeholder="Select Account..."
										                   required data-required-msg="required" style="width: 100%;" />
								            	</td>
								            </tr>
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-6">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-6">
							        	
										<table class="table table-borderless table-condensed cart_total">							            					            	
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"								   
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->
							        
							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-6">
							         	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th data-bind="text: lang.lang.file_name"></th>
									                <th data-bind="text: lang.lang.description"></th>
									                <th data-bind="text: lang.lang.date"></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-6">							            	
							            
							            <table style="width: 100%" class="table borderless">
							            	<tr align="right">
							            		<td style="border-top: 0;">
							            			<span data-bind="text: lang.lang.name"></span>
							            		</td>
							            		<td style="border-top: 0;">
							            			<input id="txtRecurringName" name="txtRecurringName"
							            					class="k-textbox" 
							            					data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 43%; " />

							            			<span data-bind="text: lang.lang.start"></span>

									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%; " />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.every"></span>
								            	</td>
							            		<td style="border-top: 0;">
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%; " />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td style="border-top: 0;">
								            		<span data-bind="text: lang.lang.on"></span>
								            	</td>							            	
								            	<td style="border-top: 0;">

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							            <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history" style="float: right; margin-top: -12px;"><i></i> <span data-bind="text: lang.lang.save_recurring"></span></span>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->							        

							        <div class="tab-pane saleSummaryCustomer" id="tab6-6">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>							
							</div>
					    </div>					   
					</div>

					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				            	<th style="width: 70px; vertical-align: top;"><span data-bind="text: lang.lang.no_"></span></th>				                
				                <th style="vertical-align: top;" data-bind="text: lang.lang.item"></th>
				                <th style="width: 20px; vertical-align: top;" data-bind="text: lang.lang.cost"></th>
				                <th style="vertical-align: top;" data-bind="text: lang.lang.qoh"></th>
				                <th style="width: 20px; vertical-align: top;" data-bind="text: lang.lang.quantity_count"></th>
				                <th style="vertical-align: top;" data-bind="text: lang.lang.different"></th>
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"
			                 data-template="itemAdjustment-row-template"
			                 data-bind="source: lineDS"></tbody>				        
				    </table>

				    <div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: lineDS"></div>

					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>						

						<div class="row">
							<div class="span3">
								
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>								
							</div>
						</div>
					</div>
					<!-- // Form actions END -->
				
				</div>				
			</div>			
		</div>
	</div>
</script>
<script id="itemAdjustment-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #"> 
    	<td style="width: 70px;">
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.itemAdjustment.lineDS.indexOf(data)+1#			
		</td>
    	<td>#=description#</td>
    	<td align="right">
    		<input data-role="numerictextbox"
                   data-format="c"
                   data-culture=#:locale#
                   data-min="0"
                   data-spinners="false"                   
                   data-bind="value: cost"
                   style="text-align: right; width: 150px;" #=cost>0?disabled="disabled":""# >    		
    	</td>
    	<td align="right">#=kendo.toString(on_hand, "n2")#</td>
    	<td align="right">
    		<input class="txt#=uid#"
    			   data-role="numerictextbox"
                   data-format="n2"
                   data-min="0"
                   data-spinners="false"                   
                   data-bind="value: quantity_adjusted,
                   			  events:{ change: onChange }"
                   style="text-align: right; width: 100px;">    		
    	</td>
    	<td align="right">
    		<span data-format="n2" data-bind="text: quantity"></span>
    	</td>
    </tr>
</script>
<script id="internalUsage" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2 data-bind="text: lang.lang.internal_usage"></h2>			    		   

				    <br>				   				
					
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 150px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr>
										<td style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></td>
										<td>
											<input id="txtNumber" name="txtNumber" class="k-textbox" 
													data-bind="value: obj.number,
																disabled: obj.is_recurring,
																events:{change:checkExistingNumber}" 
													required data-required-msg="required" 
													placeholder="eg. ABC00001" style="width: 83%; float: left; margin-right: 5px;"" />
											<div style="padding-left: 0; width: 25px; float: left;">
												<a class="glyphicons no-js qrcode" data-bind="click: generateNumber" title="Generate Number" style="float: left; margin: 2px 0 0 0 ;"><i></i></a>
											</div>
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd HH:mm:ss"
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left"><span data-bind="text: lang.lang.total_usage"></span></div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>
						</div>					   

						<div class="span8">
							<div class="box-generic-noborder" style="min-height: 110px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons circle_info active"><a href="#tab1-3" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-3" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab3-3" data-toggle="tab"><i></i></a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab3-4" data-toggle="tab"><i></i></a></li>	 -->				            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-3">						            
							           	<table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">											
											<tr>
												<td><span data-bind="text: lang.lang.segments"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td><span data-bind="text: lang.lang.job"></span></td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"		   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Select job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>	            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-3">
							        	<span data-bind="text: lang.lang.from"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										<span data-bind="text: lang.lang.to"></span>
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-3">
							         	<p><span data-bind="text: lang.lang.file_type"></span> [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th data-bind="text: lang.lang.file_name"></th>
									                <th data-bind="text: lang.lang.description"></th>
									                <th data-bind="text: lang.lang.date"></th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->							        					        								        

							        <div class="tab-pane saleSummaryCustomer" id="tab3-4">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>
					    </div>
					</div>
					
					<!-- To Item / Account -->
					<div class="row-fluid">
						<table width="25%">
            				<tr>
            					<td>
            						<h4 data-bind="text: lang.lang.to"></h4>
            					</td>
            					<td>
			            			<input type="radio" value="Item" class="k-radio"
			            					name="payOption" id="payOption1"
			            					data-bind="checked: type, 
			            								events:{ change: typeChanges }"> 
			            			<label class="k-radio-label" for="payOption1"><span data-bind="text: lang.lang.item"></span></label>
			            		</td>
			            		<td>
						            <input type="radio" value="Account" class="k-radio"
						            		name="payOption" id="payOption2"
						            		data-bind="checked: type, 
						            					events:{ change: typeChanges }"> 
						            <label class="k-radio-label" for="payOption2"><span data-bind="text: lang.lang.account"></span></label>
				            	</td>
				            </tr>
			            </table>

						<!-- To Item List -->
						<table data-bind="visible: isItemType" class="table table-bordered table-primary table-striped table-vertical-center">
					        <thead>
					            <tr>
					                <th style="width: 25%; background: #0B0B3B; "><span data-bind="text: lang.lang.item"></span></th>
					                <th style="background: #0B0B3B;"><span data-bind="text: lang.lang.description"></span></th>
					                <th style="width: 20%; background: #0B0B3B;"><span data-bind="text: lang.lang.qty"></span></th>
					                <th style="width: 20%; background: #0B0B3B;"><span data-bind="text: lang.lang.cost"></span></th>
					                <th style="width: 20%; background: #0B0B3B;"><span data-bind="text: lang.lang.amount"></span></th>               			                
					            </tr> 
					        </thead>
					        <tbody data-role="listview" 
					        		data-template="internalUsage-to-item-line-template" 
					        		data-auto-bind="false"
					        		data-bind="source: toItemLineDS"></tbody>			        
					    </table>

					    <!-- To Account List -->
						<table data-bind="invisible: isItemType" class="table table-bordered table-primary table-striped table-vertical-center">
					        <thead>
					            <tr>			                
					                <th style="width: 25%; background: #0B0B3B;"><span data-bind="text: lang.lang.account"></span></th>
					                <th style="background: #0B0B3B;" data-bind="text: lang.lang.description"></th>
					                <th style="width: 20%; background: #0B0B3B;"><span data-bind="text: lang.lang.amount"></span></th>		                			  
					            </tr> 
					        </thead>
					        <tbody data-role="listview" 
					        		data-template="internalUsage-to-account-line-template" 
					        		data-auto-bind="false"
					        		data-bind="source: toAccountLineDS"></tbody>			        
					    </table>
					</div>

					<h4 data-bind="text: lang.lang.from"></h4>

					<!-- From Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.item"></span></th>
				                <th><span data-bind="text: lang.lang.description"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.qty"></span></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.cost"></span></th>               			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="internalUsage-from-item-line-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>

				    <!-- From Item Add Row part -->
		            <div class="row">
						<div class="span12">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
							  			<span data-bind="text: lang.lang.add_new_item"></span>
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
						  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
						  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
						  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
						  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  				
						  				 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

						</div>
					</div>

					<br>

					<!-- From Account List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
				                <th style="width: 20%;"><span data-bind="text: lang.lang.account"></span></th>
				                <th data-bind="text: lang.lang.description"></th>
				                <th style="width: 20%;"><span data-bind="text: lang.lang.amount"></span></th>		                			  
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="internalUsage-from-account-line-template" 
				        		data-auto-bind="false"
				        		data-bind="source: accountLineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span6 hidden-print">
							
							<button class="btn btn-inverse" data-bind="click: addRowAccount"><i class="icon-plus icon-white"></i></button>												
							
					  		<a href="#/account" class="btn" style="background: #f4f4f4; color: #333; width: 137px;">
					  			<span data-bind="text: lang.lang.add_account"></span>
					  		</a>				
							
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span6">
							<table class="table table-borderless table-condensed cart_total">
								<tbody>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total"></span></td>
										<td class="right strong"><span data-bind="text: total"></span></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>
		           
		            <br>
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.delete"></span></span>				
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="internalUsage-to-item-line-template" type="text/x-kendo-tmpl">
	#if(movement=="1"){#
		<tr data-uid="#: uid #">
			<td>
				<input id="ccbItem" name="ccbItem-#:uid#"
					   data-role="combobox"
					   data-template="item-list-tmpl"
					   data-value-primitive="true"
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: item_id, 
	                   			  source: itemDS,
	                   			  events:{ change: toItemChanges }"
	                   placeholder="Add Item..." 
	                   required data-required-msg="required" style="width: 100%" />			
			</td>		
			<td>
				<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
						type="text" class="k-textbox" 
						data-bind="value: description"
						style="width: 100%; margin-bottom: 0;" />
			</td>
			<td>
				<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
						data-role="numerictextbox" 
						data-format="n" 
						data-min="0"
						data-spinners="false"
						data-bind="value: quantity, events: {change : changes}"
						required data-required-msg="required" style="width: 40%;" />

				<input id="ddlMesurement"
					   data-role="dropdownlist"
					   data-header-template="item-measurement-header-tmpl"
					   data-value-primitive="true"                  
	                   data-text-field="measurement"
	                   data-value-field="measurement_id"
	                   data-bind="value: measurement_id,
	                   			  source: item_prices,
	                   			  events:{ change: measurementChanges }"
	                   data-option-label="UM" style="width: 57%;" />
				
			</td>
			<td class="right">
				<span data-format="n" data-bind="text: cost"></span>
			</td>
			<td class="right">
				<span data-format="n" data-bind="text: amount"></span>
			</td>	
	    </tr>
	#}#   
</script>
<script id="internalUsage-to-account-line-template" type="text/x-kendo-tmpl">
	#if(movement=="1"){#
		<tr data-uid="#: uid #">
			<td>
				<input id="cbbAccounts" name="cbbAccounts-#:uid#"
					   data-role="combobox"
	                   data-header-template="account-header-tmpl"                 
	                   data-template="account-list-tmpl"
	                   data-value-primitive="true"
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: account_id,
	                              source: inventoryFixAssetAccountDS"
	                   data-placeholder="Add Account.."                                     
	                   required data-required-msg="required" style="width: 100%" />	
			</td>
			<td>
				<input type="text" class="k-textbox" 
						data-bind="value: description"					
						style="width: 100%; margin-bottom: 0;" />
			</td>
			<td class="right">
				<span data-format="n" data-bind="text: amount"></span>						
			</td>
	    </tr>
    #}#   
</script>
<script id="internalUsage-from-item-line-template" type="text/x-kendo-tmpl">
	#if(movement=="-1"){#
		<tr data-uid="#: uid #">
			<td>
				<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
				#:banhji.internalUsage.lineDS.indexOf(data)+1#			
			</td>		
			<td>
				<input id="ccbItem" name="ccbItem-#:uid#"
					   data-role="combobox"
					   data-template="item-list-tmpl"
					   data-value-primitive="true"
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: item_id, 
	                   			  source: itemDS,
	                   			  events:{ change: itemChanges }"
	                   placeholder="Add Item..." 
	                   required data-required-msg="required" style="width: 100%" />			
			</td>		
			<td>
				<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
						type="text" class="k-textbox" 
						data-bind="value: description"
						style="width: 100%; margin-bottom: 0;" />
			</td>
			<td>
				<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
						data-role="numerictextbox" 
						data-format="n" 
						data-min="0"
						data-spinners="false"
						data-bind="value: quantity, events: {change : changes}"
						required data-required-msg="required" style="width: 40%;" />

				<input id="ddlMesurement"
					   data-role="dropdownlist"
					   data-header-template="item-measurement-header-tmpl"
					   data-value-primitive="true"                  
	                   data-text-field="measurement"
	                   data-value-field="measurement_id"
	                   data-bind="value: measurement_id,
	                   			  source: item_prices,
	                   			  events:{ change: measurementChanges }"
	                   data-option-label="UM" style="width: 57%;" />
			</td>
			<td class="right">
				<span data-format="n" data-bind="text: cost"></span>
			</td>
	    </tr>
    #}#  
</script>
<script id="internalUsage-from-account-line-template" type="text/x-kendo-tmpl">
	#if(movement=="-1"){#
		<tr data-uid="#: uid #">		
			<td class="center">
				<i class="icon-trash" data-bind="events: { click: removeRowAccount }"></i>
				#:banhji.internalUsage.accountLineDS.indexOf(data)+1#			
			</td>			
			<td>
				<input id="cbbAccounts" name="cbbAccounts-#:uid#"
					   data-role="combobox"
	                   data-header-template="account-header-tmpl"                 
	                   data-template="account-list-tmpl"
	                   data-value-primitive="true"
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: account_id,
	                              source: accountDS"
	                   data-placeholder="Add Account.."                                     
	                   required data-required-msg="required" style="width: 100%" />	
			</td>
			<td>
				<input type="text" class="k-textbox" 
						data-bind="value: description"					
						style="width: 100%; margin-bottom: 0;" />
			</td>
			<td class="right">
				<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
						data-role="numerictextbox" 
						data-format="n"
						data-min="0"
						data-spinners="false"
						data-bind="value: amount, events: {change : changes}" 
						required data-required-msg="required" style="width: 100%; text-align: right;" /> 						
			</td>
	    </tr>
    #}#   
</script>
<script id="itemRecurring" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"><i></i></span>

				    <h2>Inventory Recurring</h2>

				    <br>				    
					                           					
	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
			                <th>TYPE</th>
			                <th>RECURRING NAME</th>
			                <th>START DATE</th>
			                <th class="center">FREQUENCY</th>
			                <th></th>
	            		</thead>
	            		<tbody data-role="listview" 
				        		data-template="itemRecurring-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
			             data-role="pager" 
			             data-auto-bind="false"
			             data-bind="source: dataSource"></div>

	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="itemRecurring-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#=type#</td>
		<td>#=recurring_name#</td>
		<td>#=kendo.toString(new Date(start_date), "dd-MM-yyyy")#</td>
		<td class="center">#=frequency#</td>
		<td class="center">
			<a class="btn btn-warning" data-bind="click: edit"><i></i> Edit</a>
			<a class="btn btn-success" data-bind="click: use"><i></i> Use</a>
		</td>		
    </tr>   
</script>

<script id="itemSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2 data-bind="text: lang.lang.products_services_setting"></h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons bookmark" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.category"></span></span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons tag" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.group"></span></span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons ruller" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.measurement"></span></span></a>
	            </li>
	            <li><a href="#tab4-1" class="glyphicons certificate" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.brand"></span></span></a>
	            </li>
	            <li><a href="#tab5-1" class="glyphicons building" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.prefix_setting"></span></span></a>
	            </li>	        
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">	            

	            <!-- Tab Category content -->
	            <div class="tab-pane active" id="tab1-1">	            	
		            <div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Category Name..." data-bind="value: category_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Category Abbr..." data-bind="value: category_abbr">					    
					    <input class="span2" id="appendedInputButtons"
					    	   data-role="dropdownlist"					    	   
			                   data-value-primitive="true"
			                   data-auto-bind="false"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: category_item_type_id,
			                              source: itemTypeDS" />
					    <button class="btn btn-default" type="button" data-bind="click: addCategory"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_new_category"></span></button>					  
					</div>
		            
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>	
	            				<th data-bind="text: lang.lang.name"></th>	
	            				<th data-bind="text: lang.lang.abbr"></th>
	            				<th data-bind="text: lang.lang.type"></th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-category-template"
				                data-template="itemSetting-category-template"
				                data-auto-bind="false"
				                data-bind="source: categoryDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Category Type content END -->	            

	            <!-- Tab Item Group content -->
	            <div class="tab-pane" id="tab2-1">
		            <div class="input-append">
		            	<input id="appendedInputButtons" class="span4"
		            	   data-role="dropdownlist"
            			   data-option-label="(--- Select Category ---)"            			   			                   
		                   data-value-primitive="true"
		                   data-auto-bind="false"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: item_group_category_id,
		                              source: categoryDS"/>	
					    	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New Group Name..." data-bind="value: item_group_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Group Abbr..." data-bind="value: item_group_abbr">					    
					    <button class="btn btn-default" type="button" data-bind="click: addItemGroup"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_new_group"></span></button>					  
					</div>
		            
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th data-bind="text: lang.lang.name"></th>	
	            				<th data-bind="text: lang.lang.abbr"></th>
	            				<th data-bind="text: lang.lang.category"></th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-item-group-template"
				                data-template="itemSetting-item-group-template"
				                data-bind="source: itemGroupDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Item Group Type content END -->

	            <!-- Tab Measurement content -->
	            <div class="tab-pane" id="tab3-1">
                	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="Measurement..." data-bind="value: measurement_name">					    
					    <button class="btn btn-default" type="button" data-bind="click: addMeasurement"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_measurement"></span></button>		
					</div>
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th data-bind="text: lang.lang.measurement"></th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-measurement-template"
				                data-template="itemSetting-measurement-template"
				                data-bind="source: measurementDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Measurement content END -->

	            <!-- Tab Brand content -->
	            <div class="tab-pane" id="tab4-1">
		            <div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: brand_code">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="New Brand..." data-bind="value: brand_name">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: brand_abbr">					    
					    <button class="btn btn-default" type="button" data-bind="click: addBrand"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_brand"></span></button>					  
					</div>
		            
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr>
	            				<th data-bind="text: lang.lang.code"></th>
	            				<th data-bind="text: lang.lang.name"></th>
	            				<th data-bind="text: lang.lang.abbr"></th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-brand-template"
				                data-template="itemSetting-brand-template"
				                data-bind="source: brandDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Brand Type content END -->
	            <div class="tab-pane" id="tab5-1">
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center" data-bind="text: lang.lang.type"></th>
	            				<th class="center" data-bind="text: lang.lang.abbr"></th>
	            				<th style="text-align: left;padding-left: 5px;" data-bind="text: lang.lang.name"></th>
	            				<th class="center"><span data-bind="text: lang.lang.action"></span></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="accountSetting-prefix-template"
				                 data-bind="source: prefixDS">				            
	            		</tbody>
	            	</table>
	            </div>
	        </div>
	    </div>

	</div>
</script>
<script id="itemSetting-category-template" type="text/x-kendo-tmpl">
    <tr>
   		<td>
    		#:name#
   		</td>
   		<td align="center">
    		#:abbr#
   		</td>
   		<td align="center">
    		#:item_type.length>0 ? item_type[0].name : ""#
   		</td>   		
   		<td align="left">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#

		        #if(id=="4" || id=="5" || id=="6"){#

		        #}else{#
		        	<span class="k-button" data-bind="click: goPattern"><span data-bind="text: lang.lang.pattern"></span></span>
		   		#}#
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-category-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>
            <dd>
            <input data-role="dropdownlist"
                   data-value-primitive="true"
                   data-auto-bind="false"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_type_id,
                              source: itemTypeDS" />
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="itemSetting-item-group-template" type="text/x-kendo-tmpl">
    <tr>   		
   		<td>
    		#:name#
   		</td>
   		<td align="center">
    		#:abbr#
   		</td>
   		<td align="center">
    		#:category.length>0 ? category[0].name : ""#
   		</td>   		
   		<td align="center">	        
        	<div class="edit-buttons">
	        	<a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
	        	<a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
        	</div>	        	   	
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-item-group-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>
        	<dd>
                <input data-role="dropdownlist"
        			   data-option-label="(--- Select ---)"        			   		                   
	                   data-value-primitive="true"
	                   data-auto-bind="false"
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: category_id,
	                              source: categoryDS"/>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="itemSetting-measurement-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td align="center">   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-measurement-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="name" required="required" validationMessage="required" />
                <span data-for="name" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="itemSetting-brand-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:code#
   		</td>
   		<td align="center">
    		 #:name#
   		</td>
   		<td align="center">
    		 #:abbr#
   		</td>
   		<td align="center">
   			<div class="edit-buttons">		        
	        	<a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
	        	<a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>		        
		   	</div>		   
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-brand-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>
        	<dd>
                <input data-role="dropdownlist"
        			   data-option-label="(--- Select ---)"        			   		                   
	                   data-value-primitive="true"	                   
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: sub_of,
	                              source: subBrandDS"/>
            </dd>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="name" required="required" validationMessage="required" />
                <span data-for="name" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>

<script id="serviceSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2 data-bind="text: lang.lang.general_service_setting"></h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons bookmark" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.category"></span></span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons tag" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.group"></span></span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons ruller" data-toggle="tab"><i></i><span class="strong"><span data-bind="text: lang.lang.measurement"></span></span></a>
	            </li>	            	            
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">	            

	            <!-- Tab Category content -->
	            <div class="tab-pane active" id="tab1-1">	            	
		            <div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: category_code">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New..." data-bind="value: category_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: category_abbr">					    
					    <input class="span2" id="appendedInputButtons"
					    	   data-role="dropdownlist"					    	   
			                   data-value-primitive="true"
			                   data-auto-bind="false"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: category_item_type_id,
			                              source: itemTypeDS" />
					    <button class="btn btn-default" type="button" data-bind="click: addCategory"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_new_category"></span></button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>	            				            				
	            				<th data-bind="text: lang.lang.code"></th>	
	            				<th data-bind="text: lang.lang.name"></th>	
	            				<th data-bind="text: lang.lang.abbr"></th>
	            				<th data-bind="text: lang.lang.type"></th>            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="itemSetting-edit-category-template"
				                data-template="itemSetting-category-template"
				                data-bind="source: categoryDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Category Type content END -->	            

	            <!-- Tab Item Group content -->
	            <div class="tab-pane" id="tab2-1">
		            <div class="input-append">
		            	<input id="appendedInputButtons" class="span2"
		            	   data-role="dropdownlist"
            			   data-option-label="(--- Select Category ---)"
            			   data-auto-bind="false"            			   			                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: item_group_category_id,
		                              source: categoryDS"/>	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: item_group_code">	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New Name..." data-bind="value: item_group_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: item_group_abbr">					    
					    <button class="btn btn-default" type="button" data-bind="click: addItemGroup"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_new_group"></span></button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>	            					            				
	            				<th data-bind="text: lang.lang.code"></th>	
	            				<th data-bind="text: lang.lang.name"></th>	
	            				<th data-bind="text: lang.lang.abbr"></th>
	            				<th data-bind="text: lang.lang.type"></th> 	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="itemSetting-edit-item-group-template"
				                data-template="itemSetting-item-group-template"
				                data-bind="source: itemGroupDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Item Group Type content END -->

	            <!-- Tab Measurement content -->
	            <div class="tab-pane" id="tab3-1">
                	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="Measurement..." data-bind="value: measurement_name">					    
					    <button class="btn btn-default" type="button" data-bind="click: addMeasurement"><i class="icon-plus"></i> <span data-bind="text: lang.lang.add_measurement"></span></button>			
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th data-bind="text: lang.lang.measurement"></th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-measurement-template"
				                data-template="itemSetting-measurement-template"
				                data-bind="source: measurementDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Measurement content END -->	                     

	        </div>
	    </div>

	</div>
</script>

<script id="itemReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>INVENTORY POSITION</h2>
				<p>
					The following reports provide summary and detailed reports on the position of inventory. 
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/inventory_position_summary">Inventory Position Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/inventory_sale_item_analysis">Inventory Sale by Item Analysis</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price.  

								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.

								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/inventory_position_detail">Inventory Position Detail</a></h3>
							</td>
							<!-- <td >
								<h3><a href="#/inventory_turnover_list">Inventory Turnover List</a></h3>
							</td> -->
							<td>
								
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for each inventory within a period of time.

								</p>
							</td>
							<td></td>
							<!-- <td >
								<p>
									Provides analysis of inventory turnover days by each inventory.

								</p>
							</td> -->
						</tr>
					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>INVENTORY MOVEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports on the movement of the inventories
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/inventory_movement_summary">Inventory Movement Summary</a></h3>
							</td>
							<!-- <td >
								<h3><a href="#/inventory_movement_detail">Inventory Movement Detail</a></h3>								
							</td>	 -->
							<td >
								<h3><a href="#/purchase_summary_product_services">Purchase by Supplier Summary</a></h3>
							</td>					
						</tr>
						<tr>
							<td >
								<p>
									Shows the movement of each inventory by opening balance, sale, purchase and adjustment. 
								</p>
								
							</td>
							<!-- <td >
								<p>
									Lists of all detailed transactions related to and grouped by each inventory
								</p>
							</td> -->
							<td >
								<p>
									Lists all inventory purchases from each suppliers
								</p>
							</td>
						</tr>
						<tr>
							
							<td >
								<h3><a href="#/purchase_detail_product_services">Purchase by Supplier Detail</a></h3>
							</td>
							<td >
								<h3><a href="#/sale_summary_by_customer">Sale by Customer Summary</a></h3>
							</td>
						</tr>
						<tr>
							
							<td >
								<p>
									Lists of detailed inventory purchase transactions from each suppliers
								</p>
							</td>
							<td >
								<p>
									Lists all inventory sold to each customer
								</p>
							</td>
						</tr>

						<tr>
							
							<td >
								<h3><a href="#/sale_detail_by_customer">Sale by Customer Detail</a></h3>
							</td>
						</tr>
						<tr>
							
							<td >
								<p>
									Lists of detailed inventory sale transactions to each customer
								</p>
							</td>
						</tr>
						
					</table>
				</div>
			</div>
			<!-- <div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<p>
					The following reports provide summary and detailed reports on the movement of the inventories
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 55%; padding-right: 8px !important;">
								<h3><a href="#/inventory_list">Inventory List</a></h3>
							</td>
							<td >
								<h3><a href="#/">Recurring Inventory Template List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 55%; padding-right: 8px !important;">
								<p>
									Lists the products you purchase and sold. The following information is included: name, description, cost, sales price, and quantity on hand.
								</p>								
							</td>
							<td >								
							</td>
							
						</tr>
						
					</table>
				</div>
			</div> -->
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Inventory Balance</h2>
					<div align="center" class="text-large strong" data-bind="text: inventoryBalance"></div>
					<table width="100%">
						<tr align="center">
							<td>
								<span data-bind="text: grossProfitMargin"></span>
								<br>
								<span>Average Margin</span>
							</td>
							<td>
								<span data-bind="text: inventoryTurnOver"></span>
								<br>
								<span>Turnover Days</span>
							</td>
						</tr>
					</table>
				</div>
				<div class="home-chart" >
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                { field: 'purchase', name: 'Monthly Purchase', categoryField:'month', color: '#236DA4' },
	                                { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#A6C9E3' }
	                            ]"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>            
           		</div>

			</div>
		</div>
	</div>
</script>
<script id="inventoryPositionSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											As of:
									        <input data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: as_of" />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Inventory Position Summary</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span2">
								<div class="total-customer">
									<p>Product Items</p>
									<span data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span10">
								<div class="total-customer">
									<p>Total Inventory Value</p>
									<span data-bind="text: total"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th>Item Name</th>
									<th align="right">QOH</th>
									<th align="right">On PO</th>
									<th align="right">On SO</th>
									<th align="right">Average Cost</th>
									<th align="right">Average Price</th>
									<th align="right">Amount</th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="inventoryPositionSummary-row-template"
					                data-bind="source: dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventoryPositionSummary-row-template" type="text/x-kendo-tmpl">
	<tr>
	    <td>#=item#</td>
	    <td align="right">#=onHand#</td>
	    <td align="right">#=po#</td>
	    <td align="right">#=so#</td>
	    <td align="right">#=kendo.toString(cost, 'c2')#</td>
	    <td align="right">#=kendo.toString(price, 'c2')#</td>
	    <td align="right">#=kendo.toString(price, 'c2')#</td>
	</tr>
</script>
<script id="inventoryPositionDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<select data-role="multiselect"
								        		   data-item-template="item-list-tmpl"
												   data-value-primitive="true"
												   data-value-field="id" 
												   data-text-field="name"
												   data-bind="value: itemList, 
												   			source: itemDS"
												   data-placeholder="Add Item..."
												   style="width: 100%" /></select>
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Inventory Position Detail</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span2">
								<div class="total-customer">
									<p>Product Items</p>
									<span data-bind="text: dataSource.total"></span>
								</div>
							</div>
							<div class="span10">
								<div class="total-customer">
									<p>Total </p>
									<span data-bind="text: total"></span>
								</div>
							</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th>TXN Type</th>
									<th align="center">Date</th>								
									<th>REF</th>
									<th align="right">QTY</th>
									<th align="right">Cost</th>
									<th align="right">Price</th>
									<th align="right">On Hand</th>
									<th align="right">Balance</th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="inventoryPositionDetail-row-template"
					                data-bind="source: dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventoryPositionDetail-row-template" type="text/x-kendo-tmpl">
	<tr>
		<td colspan="2" style="font-weight: bold;">#: number # #: name #</td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td class="right strong" style="color: black;">
    		#=kendo.toString(on_hand, "n")#
    	</td>
    	<td class="right strong" style="color: black;">
    		#=kendo.toString(balance_forward, "c", banhji.locale)#
    	</td>
	</tr>
	#var onHand = on_hand;#
	#var balance = balance_forward;#
	#for(var i=0; i<line.length; i++){#
		#onHand += line[i].quantity;#
		#balance += line[i].amount;#
		<tr>
			<td style="color: black;">
				&nbsp;&nbsp; #=line[i].type#
			</td>		
			<td style="color: black;">
				#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#
			</td>
			<td style="color: black;">
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a>
			</td>		
			<td align="right" style="color: black;">
				#=kendo.toString(line[i].quantity, "n2")#
			</td>
			<td align="right" style="color: black;">
				#=kendo.toString(line[i].cost, "c2", banhji.locale)#
			</td>
			<td align="right" style="color: black;">
				#=kendo.toString(line[i].price, "c2", banhji.locale)#
			</td>
			<td class="right" style="color: black;">
				#=kendo.toString(onHand, "n2")#
			</td>
			<td class="right" style="color: black;">
				#=kendo.toString(balance, "c2", banhji.locale)#
			</td> 			
	    </tr>    
    #}# 
    <tr>
    	<td colspan="2" style="font-weight: bold; color: black;">Total #: number # #: name #</td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(balance, "c", banhji.locale)#
    	</td>
    </tr>
    <tr>
    	<td colspan="8">&nbsp;</td>
    </tr>  
</script>
<script id="inventorySaleItemAnalysis" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: inventorySaleDB.search"><i class="icon-search"></i></button>							
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Inventory Sale by Item Analysis</h2>
							<p>From <span data-bind="text: displayDateStart"></span> to <span data-bind="text: displayDateEnd"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span12">
										<p>Sale</p>
										<span data-bind="text: sale"></span>
									</div>	
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Gross profit Margin</p>
									<span data-bind="text: grossProfitMargin"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Type</span></th>
									<th><span>Number</span></th>
									<th><span>QTY</span></th>
									<th><span>Price</span></th>
									<th><span>Amount</span></th>
									<th><span>Cost</span></th>
								
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="inventory-sale-item-analysis-template"
					                data-bind="source: inventorySaleDB.dataSource" >
					        </tbody>
		            	</table>
		            </div>	
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventory-sale-item-analysis-template" type="text/x-kendo-tmpl">
	<tr style="font-weight: bold">
		<td>#=item#</td>
		<td></td>
		<td></td>		
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (transactions.length) {#
		#for(var i= 0; i <transactions.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=transactions[i].type#</td>			
				<td>
					<a href="\#/#=transactions[i].type.toLowerCase()#/#=transactions[i].id#">#=transactions[i].number#</a>
				</td>
				<td>#=transactions[i].qty#</td>	
				<td style="text-align: right;">#=kendo.toString(transactions[i].price, 'c2')#</td>	
				<td style="text-align: right;">#=kendo.toString(transactions[i].amount, 'c2')#</td>	
				<td style="text-align: right;">#=kendo.toString(transactions[i].cost, 'c2')#</td>
				<td style="text-align: right;">#=kendo.toString(transactions[i].gpm, 'p0')#</td>
			</tr>
		#}#
	#}#
</script>
<script id="inventoryTurnoverList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: inventoryTurnoverList.search"><i class="icon-search"></i></button>							
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Inventory Turnover List</h2>
							<p><span data-bind="text: startDate"></span>to<span data-bind="text: endDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Product Items</p>
										<span data-bind="text: count"></span>
									</div>
									<div class="span6">
										<p>Turnover</p>
										<span data-bind="text: turnover"></span>
									</div>	
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Product Items on hand</p>
									<span data-bind="text: onHand"></span>
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Product/Service</span></th>						
									<th><span>Cogs</span></th>
									<th><span>On Hand</span></th>
									<th><span>Turn Over</span></th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="inventory-turnover-list-row-template"
					                data-bind="source: inventoryTurnoverList.dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventory-turnover-list-row-template" type="text/x-kendo-tmpl">  
	<tr>  
	    <td>#=name#</td>
	    <td align="right">#=kendo.toString(cogs, 'c2')#</td>
	    <td align="right">#=onHand#</td>
	    <td align="right">#=kendo.toString(turnover, 'n0')#</td>
	 </tr>
</script>

<script id="inventoryMovementSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: inventoryMovementSummary.search"><i class="icon-search"></i></button>							
									    </div>									        							       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">

					<div class="block-title">

						<h3 data-bind="text: institute.name"></h3>
						<h2>Inventory Movement Summary</h2>
						<p>From <span data-bind="text: displayDateStart"></span> to <span data-bind="text: displayDateEnd"></p>
					</div>

					<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Purcahse In</p>
										<span data-bind="text: count"></span>
									</div>
									<div class="span6">
										<p>Product Items on hand</p>
										<span data-bind="text: onHand"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<p>Sale</p>
									<span data-bind="text: sale"></span>
								</div>
							</div>
					</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>ITEM</span></th>
									<th><span>PURCHASE</span></th>
									<th><span>SALE</span></th>
									<th><span>ON HAND</span></th>
									<th><span>ADJUSTMENT</span></th>
									<th><span>BALANCE</span></th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="inventory-movement-summary-row-template"
					                data-bind="source: inventoryMovementSummary.dataSource" >
					        </tbody>
		            	</table>
	            	</div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventory-movement-summary-row-template" type="text/x-kendo-tmpl"> 
	<tr>   
	    <td>#=name#</td>          
	    <td>#=purchase#</td>
	    <td>#=sale#</td>
	    <td>#=onHand#</td>
	    <td>#=adjustment#</td>
	    <td align="right">#=balance#</td>
	</tr>
</script>
<script id="inventoryMovementDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>								        
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3 data-bind="text: institute.name"></h3>
						<h2>Inventory Movement Detail</h2>
						<p><span data-bind="text: startDate"></span>to<span data-bind="text: endDate"></p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Purcahse In</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Total</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items on hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Gross Profit Margin</p>
									<span data-bind="text: gpm"></span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th><span>Date</span></th>
								<th><span>Type</span></th>
								<th><span>Name</span></th>
								<th><span>Opening</span></th>
								<th><span>Dr</span></th>
								<th><span>Cr</span></th>
								<th><span>Adjustment</span></th>
							</tr>
						</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
				                data-template="inventory-movement-detail-row-template"
				                data-bind="source: inventoryMovementDetail.dataSource" >
				        </tbody>
	            	</table>

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventory-movement-detail-row-template" type="text/x-kendo-tmpl">  
	<tr>  
	    <td>#=date#</td>          
	    <td>#=type#</td>
	    <td>#=name.name#</td>
	    <td>#=opening#</td>
	    <td>#=dr#</td>
	    <td>#=cr#</td>
	    <td>#=adjustment#</td>
	</tr>
</script>
<script id="inventoryList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>								        
								        <div class="tab-pane" id="tab-2">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Inventory List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Qty on S O</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Qty on P O</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Qty on Hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Gross profit magine</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item</th>
							<th>Description</th>
							<th>Type</th>
							<th>Cost</th>
							<th>Price</th>							
							<th>VAT</th>
							<th>Qty on hand</th>
							<th>Qty on P O</th>
							<th>Reorder P</th>
							<th>Qty on S O</th>
							<th>Preferred Vendor</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>

<script id="inventory-position-summary-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=number#</td>
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>        
        <td align="right">#=kendo.toString(on_hand, "n0")#</td>
        <td align="right">#=kendo.toString(on_po, "n0")#</td>
        <td align="right">#=kendo.toString(on_so, "n0")#</td>
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(on_hand*cost, "c", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(price_avg, "c", banhji.institute.locale)#</td>
   </tr>
</script>
<script id="inventory-position-detail-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=kendo.toString(invoice.length>0?invoice[0].issued_date:"", "dd-MM-yyyy")#</td>
        <td><a href="\#/#=invoice.length>0?invoice[0].type:''#/#=id#"><i></i> #=invoice.length>0?invoice[0].number:''#</a></td>        
        <td>#=item[0].number# #=item[0].name#</td>               
        <td align="right">#=unit#</td>
        <td align="right">#=kendo.toString(price, "c", banhji.institute.locale)#</td>
        <td align="right">#=on_hand#</td>         
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(on_hand * cost, "c", banhji.institute.locale)#</td>        
   </tr>
</script>
<script id="inventorySaleByItem" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>

	            <br><br>

	            <div align="center">
					<h3>Inventory Sale By Item Analysis</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"					 
					 data-row-template="inventory-sale-by-item-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_sale_by_item_analysis.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                    { 'title': 'number' },
	                    { 'title': 'Item' },	                    
	                    { 'field': 'item_group_id', 'title': 'Group' },
	                    { 'field': 'category_id','title': 'Category' },
	                    { 'title': 'Qty Sold' },	                    	                    
	                    { 'title': 'W.Avg Price' },	                    	                    
	                    { 'title': 'Sale Revenue' },
	                    { 'title': 'W.Avg Cost' },
	                    { 'title': 'Gross Profit' },
	                    { 'title': 'Margin%' }	                    
	                 ]"></div>
			</div>
		</div>
	</div>
</script>
<script id="inventory-sale-by-item-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=number#</td>          
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>       
        <td align="right">#=kendo.toString(qty, "n0", banhji.institute.locale)#</td>         
        <td align="right">#=kendo.toString(price, "c", banhji.institute.locale)#</td>
        <td align="right">
        	#amount = qty * price#
        	#=kendo.toString(amount, "c", banhji.institute.locale)#
        </td>
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>
        <td align="right">
        	#margin = (price-cost)*qty#
        	#=kendo.toString(margin, "c", banhji.institute.locale)#
        </td>
        <td align="right">#=kendo.toString(margin/amount, "p")#</td>        
   </tr>
</script>
<script id="inventoryList" type="text/x-kendo-template">
	<div class="container-fluid">
		<br>
		<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back();"><i></i></span>

		<h3>Inventory</h3>

		<div class="box-generic">
		    <!-- //Tabs Heading -->
		    <div class="tabsbar">
		        <ul>
		            <li class="glyphicons star active"><a href="#tab1" data-toggle="tab" data-bind="click: searchFavorite"><i></i> Favorite </a>
		            </li>
		            <li class="glyphicons list"><a href="#tab2" data-toggle="tab"><i></i> Category </a>
		            </li>
		            <li class="glyphicons building"><a href="#tab3" data-toggle="tab"><i></i> Vendor </a>
		            </li>		            		            	            
		        </ul>
		    </div>
		    <!-- // Tabs Heading END -->

		    <div class="tab-content">
		        <!-- // FavoriteTab content -->
		        <div class="tab-pane active" id="tab1">
		        		
		        </div>
		        <!-- // Favorite Tab content END -->

		        <!-- // Category Tab content -->
		        <div class="tab-pane" id="tab2">		            
	                <input id="categories" data-bind="value: category_id" />	                
	                <input id="itemGroups" data-bind="value: item_group_id" disabled="disabled" />
            	</div>
		        <!-- // Category Tab content END -->

		        <!-- // Vendor Tab content -->
		        <div class="tab-pane" id="tab3">
		            <div data-role="listview"
		            	 data-auto-bind="false"
		            	 data-selectable="true"			                 
		                 data-template="inventoryList-vendor-template"
		                 data-bind="source: vendorDS, events:{ change: vendorChanges}"></div>
		        </div>
		        <!-- // Vendor Tab content END -->		        
		    </div>

		    <br>

		    <div class="input-append">
			    <input class="col-md-2" id="appendedInputButtons" 
			    	type="text" placeholder="Items ..." 
			    	data-bind="value: searchField, events:{ change: search }">

			    <button class="btn btn-default" data-bind="click: search"><i class="icon-search"></i> Search</button>				    
			</div>
		</div>
		
		<br>

		<table class="table table-bordered">
	        <thead>
	            <tr>
	                <th>number</th>
	                <th>Items</th>
	                <th>Description</th>
	                <th>Qty</th>	                
	                <th>Price</th>	                
	            </tr>
	        </thead>
	        <tbody data-template="inventoryList-template"
	        	data-pageable="true" 
	        	data-bind="source: dataSource"></tbody>
	    </table>
	    <div id="pager" class="k-pager-wrap"
	    	 data-auto-bind="false"
             data-role="pager" data-bind="source: dataSource"></div>        

	</div>
</script>
<script id="inventoryList-template" type="text/x-kendo-template">
    <tr>
    	<td>#=number#</td>
    	<td>#=name#</td>
    	<td>#=description#</td>
    	<td>
    		#if(on_hand<=order_point){#    		
    			<span class="badge badge-danger">#=kendo.toString(on_hand, "n0")#</span>
    		#}else{#
    			<span class="badge badge-info">#=kendo.toString(on_hand, "n0")#</span>
    		#}#

    		#=measurement==null?"":measurement#
    	</td>    	
    	<td>
    		#for(var i=0; i<item_prices.length; i++) {#
    			#if(item_prices[i].price>0){#
    				<span class="badge badge-inverse"> #=kendo.toString(item_prices[i].price, "c", item_prices[i].currency[0].locale)# </span> / #=item_prices[i].measurement# 
    			#}else{#
    				<span class="badge badge-danger"> #=kendo.toString(item_prices[i].price, "c", item_prices[i].currency[0].locale)# </span> / #=item_prices[i].measurement#
    			#}#
    			<br>    			    						 
			#}#
    	</td>    		
    </tr>
</script>
<script id="inventoryList-vendor-template" type="text/x-kendo-template">
    <div class="product-tmpl">
        <img src="#=image_url#" alt="#: company # image" />
        <h3>#:company#</h3>        
    </div>    
</script>
<style>
    #listView {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
    }
    .product-tmpl {
        float: left;
        position: relative;
        width: 111px;
        height: 170px;
        margin: 0 5px;
        padding: 0;
    }
    .product-tmpl img {
        width: 110px;
        height: 110px;
    }
    .product-tmpl h3 {
        margin: 0;
        padding: 3px 5px 0 0;
        max-width: 96px;
        overflow: hidden;
        line-height: 1.1em;
        font-size: .9em;
        font-weight: normal;
        text-transform: uppercase;
        color: #999;
    }
    .product-tmpl p {
        visibility: hidden;
    }
    .product-tmpl:hover p {
        visibility: visible;
        position: absolute;
        width: 110px;
        height: 110px;
        top: 0;
        margin: 0;
        padding: 0;
        line-height: 110px;
        vertical-align: middle;
        text-align: center;
        color: #fff;
        background-color: rgba(0,0,0,0.75);
        transition: background .2s linear, color .2s linear;
        -moz-transition: background .2s linear, color .2s linear;
        -webkit-transition: background .2s linear, color .2s linear;
        -o-transition: background .2s linear, color .2s linear;
    }
    .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
</style>
<script id="inventoryMovementSummary" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>	            

	            <div align="center">
					<h3>Inventory Movement Summary</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"
					 data-sortable="true"					 
					 data-row-template="inventory-movement-summary-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_summary.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                 	{ 'field': 'number', 'title': 'number' },	                    
	                    { 'field': 'name', 'title': 'Item' },
	                    { 'field': 'item_group_id', 'title': 'Group' },
	                    { 'field': 'category_id', 'title': 'Category' },
	                    { 'field': 'begining', 'title': 'Begining' },
	                    { 'field': 'purchase', 'title': 'Purchase' },	                    
	                    { 'field': 'sale', 'title': 'Sale' },
	                    { 'field': 'adjustment', 'title': 'Adjustment' },	                    
	                    { 'field': 'balance', 'title': 'Balance' }              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventory-movement-summary-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=number#</td>        
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>         
        <td align="right">#=kendo.toString(begining, "n0")#</td>         
        <td align="right">#=kendo.toString(purchase, "n0")#</td>
        <td align="right">#=kendo.toString(sale, "n0")#</td>
        <td align="right">#=kendo.toString(adjustment, "n0")#</td>
        <td align="right">#=kendo.toString(((begining + purchase) - sale) + adjustment, "n0")#</td>        
   </tr>
</script>
<script id="inventoryMovementDetail" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>

	            <div align="center">
					<h3>Inventory Movement Detail</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"
					 data-sortable="true"					 
					 data-row-template="inventory-movement-detail-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_detail.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                 	{ 'field': 'invoice[0].issued_date', 'title': 'Date' },
	                 	{ 'field': 'invoice[0].type', 'title': 'Type' },
	                 	{ 'field': 'invoice[0].number', 'title': 'Reference' },	                 	                 
	                    { 'field': 'item[0].number', 'title': 'Item' },	                    	                                  
	                    { 'field': 'unit', 'title': 'Quantity' },
	                    { 'field': 'cost', 'title': 'Cost' },
	                    { 'field': 'price', 'title': 'Price' },              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventory-movement-detail-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=kendo.toString(invoice.length>0?new Date(invoice[0].issued_date):'', "dd-MM-yyyy")#</td>
        <td>#=invoice.length>0?invoice[0].type:''#</td>        
        <td><a href="\#/#=invoice.length>0?invoice[0].type:''#/#=id#"><i></i> #=invoice.length>0?invoice[0].number:''#</a></td>        
        <td>#=item[0].number# #=item[0].name#</td>             
        <td align="right">#=kendo.toString(unit * movement, "n0")#</td>
        <td align="right">
        	#if(invoice.length>0){#	        	
	        	#if(invoice[0].type==='Purchase'){#
	        		#=kendo.toString(price, "c", banhji.institute.locale)#
	        	#}else if(invoice[0].type==='Invoice' || invoice[0].type==='Receipt'){#
	        		#=kendo.toString(cost, "c", banhji.institute.locale)#
	        	#}#
	        #}#
        </td>
        <td align="right">
        	#if(invoice.length>0){#
	        	#if(invoice[0].type==='Invoice'){#
	        		#=kendo.toString(price, "c", banhji.institute.locale)#
	        	#}#
        	#}#
        </td>                
   </tr>
</script>
<script id="inventoryPurchaseByVendorSummary" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>
	            
	            <div align="center">
					<h3>Purchase By Supplier Summary</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"					 
					 data-sortable="true"					 
					 data-row-template="inventoryPurchaseByVendorSummary-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_detail.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[	                 	            
	                    { 'field': 'name', 'title': 'Supplier' },	                                                     
	                    { 'field': 'unit', 'title': 'Quantity' },
	                    { 'field': 'amount', 'title': 'Amount' }              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventoryPurchaseByVendorSummary-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=name#</td>        
        <td align="right">#=kendo.toString(unit, "n0")#</td>
        <td align="right">#=kendo.toString(amount, "c", banhji.institute.locale)#</td>        
   </tr>
</script>
<script id="inventoryPurchaseByVendorDetail" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>
	            
	            <div align="center">
					<h3>Purchase By Supplier Detail</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"					 
					 data-sortable="true"					 
					 data-row-template="inventoryPurchaseByVendorDetail-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_detail.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                 	{ 'field': 'issued_date', 'title': 'Date' },
	                 	{ 'field': 'name', 'title': 'Supplier' },
	                 	{ 'field': 'number', 'title': 'Number' },	                 	             	            
	                   	{ 'field': 'item_id', 'title': 'Item' },
	                   	{ 'field': 'unit', 'title': 'Qty' },
	                   	{ 'field': 'price', 'title': 'Price' },                                                    
	                    { 'field': 'amount', 'title': 'Amount' }              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventoryPurchaseByVendorDetail-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=kendo.toString(issued_date, "dd-MM-yyyy")#</td>
        <td>#=name#</td>
        <td><a href="\#/#=type#/#=id#"><i></i> #=number#</a></td>
        <td>#=item[0].name#</td>        
        <td align="right">#=kendo.toString(unit, "n0", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(price, "c0", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(amount, "c0", banhji.institute.locale)#</td>        
   </tr>
</script>




<!-- ***************************
*	Cash Management            *
**************************** -->
<script id="cashDashboard" type="text/x-kendo-template" >
	<div class="row-fluid">
		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2>CASH MODULE</h2>
			        	<p>
			        		In here, you can manage your cash information, transactions and reports. Cashflow forecast and other treasury management is coming soon..
			        	</p>
			        	<!-- <div class="supplier-icon">
					       	<div class="span4">
						       	<a href="#/employee" class="center">
						       		<img title="Add Employee" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/employees.ico" />
						       	</a>
						       </div>
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div> -->
			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center ">
				<tr>
					<td class="center">
						<a href="#/cash_transaction">
							<img title="Add Cash Transaction" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_transaction.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">C.Transaction</span>
						</a>						
					</td>
					<td class="center">
						<a href="#/cash_receipt">
							<img title="Add Cash Receipt" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_receipt.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">C.Receipt</span>
						</a>
					</td>
					<td class="center">
						<a href="#/cash_payment">
							<img title="Add Cash Payment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_payment.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">C.Payment</span>
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center">
						<a href="#/cash_advance">
							<img title="Add Cash Advance" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_advance.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">C.Advance</span>
						</a>
					</td>
					<td class="center">						
						<a href="#/expense">
							<img title="Add Expense" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/expense.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">Expense</span>
						</a>						
					</td>
					<td class="center">						
						<a href="#/currency_rate">
							<img title="Add Exchange Rate Record" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/currency_record.png" width="110" height="200" />
							<span style="margin-top: 7px; display: inline-block; text-transform: uppercase;">Ex.Rate Record</span>
						</a>						
					</td>										
				</tr>							
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid ">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Cash Balance</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary">	
							<div align="center" class="text-large strong" style="font-size: 22pt;" data-bind="text: balance"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: cashACNumber"></span>
										<br>
										<span>Accounts</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Advance</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info">
							
							<div align="center" class="text-large strong" style="font-size: 22pt;" data-bind="text: totalAdvance"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: open"></span>
										<br>
										<span>Open</span>
									</td>
									<td>
										<span data-bind="text: overDue"></span>
										<br>
										<span>Overdue</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Cash Position</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" style="font-size: 22pt;" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: ar_open"></span>
										<br>
										<span>To be Received</span>
									</td>
									<td>
										<span data-bind="text: ar_customer"></span>
										<br>
										<span>To be Paid</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">				
					<table class="table table-bordered table-primary table-striped table-vertical-center text-table">
				        <thead>
				            <tr>
				                <th colspan="2" style="text-align: center;">Top 5 Cash Balance</th>			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="cashDashBoard-top-customer-template"
			                 data-bind="source: topCashDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">
					<table class="table table-bordered table-primary table-striped table-vertical-center text-table">
				        <thead>
				            <tr>
				                <th colspan="2" style="text-align: center;">Top 5 Cash Advance</th>		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="cashDashBoard-top-ar-template"
			                 data-bind="source: topAdvaDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">
					<table class="table table-bordered table-primary table-striped table-vertical-center text-table">
				        <thead>
				            <tr>
				                <th colspan="2" style="text-align: center;">Top 5 Expense Account</span></th>			                		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="true"                
			                 data-template="cashDashBoard-top-product-template"
			                 data-bind="source: topExpsDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<!-- Graph -->
				<div data-role="chart"
					 data-auto-bind="false"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'cash_in', name: 'Cash In', categoryField:'month', color: '#236DA4' },
	                                 { field: 'cash_out', name: 'Cash Out', categoryField:'month', color: '#A6C9E3' }
	                             ]"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>
	            <!-- End Graph -->      
			</div>
		
		</div>
	</div>
</script>
<script id="cashDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td>#:banhji.cashDashboard.topCashDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="cashDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.cashDashboard.topAdvaDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="cashDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#:banhji.cashDashboard.topExpsDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="cashCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="account ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%; ">								
																
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: dataStore"
						 data-auto-bind="true" 
						 data-row-template="cashCenter-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							        	<li style="font-size: large; color: black; font-weight: bold;">
							            	<span data-bind="text: obj.number"></span>
							            	-
							            	<span data-bind="text: obj.name"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-7"><i></i></span>
							            </li>							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-7" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashTransaction">Cash Transaction</span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashReceipt">Cash Receipt</span>								            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashPayment">Cash Payment</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashAdvance">Cash Advance</span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goExpense">Expense</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goExchange">Exchange Rate Record</span>								            											            			
								            		</td>
								            	</tr>
								            	
							            	</table>
							            	<button data-bind="click: goEdit">Edit</button>
							            </div>
							            <!-- // Transactions Tab content END -->
							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid" >
								<div class="span12" style="margin-bottom: 10px;">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadTransaction" style=" width: 425px; height:114px; background:#424242; margin-left:0;">
										<span class="glyphicons coins"><i></i></span>										
										<span class="txt">
											Balance as of today
											<span data-bind="text: balance"></span>
										</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5">
										<span class="glyphicons adjust_alt"><i></i></span>
										<span class="txt">
											<span data-bind="text: nature"></span>
											Nature Balance
										</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadTransaction">
										<span class="glyphicons random"><i></i></span>										
										<span class="txt">
											<span data-bind="text: totalTxn"></span>
											Transactions											
										</span>										
										<div class="clearfix"></div>
									</div>
								</div>
							</div>																					
						</div>											          	
		          	</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input data-role="datepicker"
							   class="sdate"
							   data-format="dd-MM-yyyy"
					           data-bind="value: sdate,
					           			  max: edate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      min: sdate"
					           placeholder="To ..." >
					    
					    <button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Dr.</th>
								<th>Cr.</th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="cashCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="cashCenter-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				#if(sub_of_id>0){#
					&nbsp;&nbsp;
					<span>
						#=number#				
					</span>
					-
					<span>
						#if(name.length>25){#
							#=name.substring(0, 25)#...
						#}else{#
							#=name#
						#}#
					</span>
				#}else{#
					<span class="strong">
						#=number#				
					</span>
					-
					<span class="strong">
						#if(name.length>25){#
							#=name.substring(0, 25)#...
						#}else{#
							#=name#
						#}#
					</span>
				#}#				
			</div>
		</td>
	</tr>
</script>
<script id="cashCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Invoice" || type=="Cash_Sale" || type=="Quote" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return"){#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>						
			#}else{#
				#=number#
			#}#        	
        </td>
    	<td class="right">
    		#=dr/rate#
    	</td>
    	<td>        	
        	#=cr/rate#		
		</td>   	
    </tr>
</script>
<script id="cashCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				<span class="strong">
					#=number# #=name#				
				</span>
			</div>
		</td>
	</tr>
</script>
<script id="cashCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>
<script id="cash" type="text/x-kendo-template">
	<div class="container-960">	
		<div class="row-fluid">		    
			<div class="span12">			
				<div id="example" class="k-content">

					<!-- Collapsible Widget -->			
					<div class="widget">
					    <div class="widget-head">
					    	<span class="btn btn-primary pull-right" 
									onclick="javascript:window.history.back()">X</span>
					        
					        <h4 class="heading glyphicons circle_info"><i></i> Customer</h4>							        	
					    </div>
					    <div class="widget-body">

					    	<div class="row-fluid">
					    		<div class="span6 well">									
									<div class="row-fluid">
										<div class="span6">														
											<!-- Group -->
											<div class="control-group">										
												<label for="ddlCustomerType"><span data-bind="text: lang.lang.customer_type"></span> <span style="color:red">*</span></label>
												<input id="ddlCustomerType" name="ddlCustomerType"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.contact_type_id,
										                              source: contactTypeDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />																				            
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">							
												<label for="number"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>
						              			<input id="number" name="number" class="k-textbox"
							              				data-bind="value: obj.number, events:{change: checkExistingNumber}" 
							              				placeholder="e.g. ID0001" required data-required-msg="required"
							              				style="width: 100%;" />
							              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
											</div>
											<!-- // Group END -->											
										</div>
									</div>
									
									<div class="row-fluid">
										<div class="span6">						
											<!-- Group -->
											<div class="control-group">
												<label for="surname"><span data-bind="text: lang.lang.surname"></span> <span style="color:red">*</span></label>
							              		<input id="surname" name="surname" class="k-textbox" data-bind="value: obj.surname" 
									              		placeholder="surname ..." required data-required-msg="required"
									              		style="width: 100%;" />
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">								
												<label for="name"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
									            <input id="name" name="name" class="k-textbox" data-bind="value: obj.name" 
									              		placeholder="name ..." required data-required-msg="required"
									              		style="width: 100%;" />
											</div>																		
											<!-- // Group END -->
										</div>
									</div>
									
									<div class="row-fluid" data-bind="visible: isCompany">
										<div class="span6">
											<!-- Group -->
											<div class="control-group">
												<label for="companyName"><span data-bind="text: lang.lang.organization_name"></span> <span style="color:red">*</span></label>
												<input id="companyName" name="companyName" class="k-textbox" data-bind="enabled: isCompany, value: obj.company"									
														placeholder="e.g. PCG & Partner"
														style="width: 100%;" />	
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">
												<label for="vatNo"><span data-bind="text: lang.lang.vat_no"></span></label>								
							            		<input id="vatNo" name="vatNo" class="k-textbox" data-bind="enabled: isCompany, value: obj.vat_no" 
														placeholder="e.g. 01234567897"
														style="width: 100%;" />												
											</div>					
											<!-- // Group END -->
										</div>
									</div>																
								</div>
								<div class="span6">
									<div class="row-fluid">	
										<!-- Map -->
										<div id="map" class="span12" style="height: 130px;"></div>
									</div>

									<div class="separator line bottom"></div>

									<div class="row-fluid">	
										<div class="span6">									
											<!-- Group -->
											<div class="control-group">
								    			<label for="latitute"><span data-bind="text: lang.lang.latitute"></span> </label>
												<div class="input-prepend">
													<span class="add-on glyphicons direction"><i></i></span>
													<input type="text" class="input-large span12" data-bind="value: obj.latitute, events:{change: loadMap}" placeholder="012345.67897">
												</div>
											</div>									
											<!-- // Group END -->
										</div>	
										
										<div class="span6">	
											<!-- Group -->
											<div class="control-group">
								    			<label for="longtitute"><span data-bind="text: lang.lang.longtitute"></span> </label>
								    			<div class="input-prepend">
													<span class="add-on glyphicons google_maps"><i></i></span>
													<input type="text" class="input-large span12" data-bind="value: obj.longtitute, events:{change: loadMap}" placeholder="012345.67897">
												</div>										
											</div>
											<!-- // Group END -->
										</div>										
									</div>
								</div>
							</div>								
									
							<!-- // Inner Tabs -->
							<div class="row-fluid">								
								<div class="box-generic">
								    <!-- //Tabs Heading -->
								    <div class="tabsbar tabsbar-1">
								        <ul class="row-fluid row-merge">						            
								            <li class="span2 glyphicons usd active">
								            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.account"></span></span></a>
								            </li>								            
								            <li class="span2 glyphicons nameplate_alt">
								            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
								            </li>
								            <li class="span2 glyphicons parents">
								            	<a href="#tab3" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.agents"></span></span></a>
								            </li>						            					            
								        </ul>
								    </div>
								    <!-- // Tabs Heading END -->

								    <div class="tab-content">
								        <!-- //ACCOUNTING INFO -->
								        <div class="tab-pane active" id="tab1">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span data-bind="text: lang.lang.account_receiveable"></span> <span style="color:red">*</span></label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span data-bind="text: lang.lang.revenue_account"></span> <span style="color:red">*</span></label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlDepositAccount">Deposit Acccount <span style="color:red">*</span></label>
													<input id="ddlDepositAccount" name="ddlDepositAccount"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.deposit_account_id,
										                              source: depositDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlTradeDiscount">Trade Discount <span style="color:red">*</span></label>
													<input id="ddlTradeDiscount" name="ddlTradeDiscount"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.trade_discount_id,
										                              source: tradeDiscountDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />														
												</div>												
									        </div>

									        <div class="separator line bottom"></div>

									        <div class="row-fluid">
								        		<div class="span3">						
										            <label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
										            <input id="currency" name="currency" 
										            	data-role="dropdownlist"
										            	data-template="currency-list-tmpl"
										            	data-value-primitive="true"
										                data-text-field="code"
										                data-value-field="id"
														data-bind="value: obj.currency_id, source: currencyDS"
														data-option-label="(--- Select ---)" 
														required data-required-msg="required" style="width: 100%;" />
										        </div>
								            	<div class="span3">
													<label for="ddlPaymentTerm"><span data-bind="text: lang.lang.payment_term"></span></label>
													<input id="ddlPaymentTerm" name="ddlPaymentTerm"
														data-role="dropdownlist"
										            	data-value-primitive="true"
										                data-text-field="name"
										                data-value-field="id"
														data-bind="value: obj.payment_term_id, source: paymentTermDS" 
														data-option-label="(--- Select ---)"
														style="width: 100%;" />
												</div>
												<div class="span3">
													<label for="ddlPaymentMethod"><span data-bind="text: lang.lang.payment_method"></span></label>
													<input id="ddlPaymentMethod" name="ddlPaymentMethod"
														data-role="dropdownlist"
										            	data-value-primitive="true"
										                data-text-field="name"
										                data-value-field="id"
														data-bind="value: obj.payment_method_id, source: paymentMethodDS"
														data-option-label="(--- Select ---)" 
														style="width: 100%;" />
												</div>
												<div class="span3">
													<label for="ddlSettlementDiscount">Settlement Discount <span style="color:red">*</span></label>
													<input id="ddlSettlementDiscount" name="ddlSettlementDiscount"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.settlement_discount_id,
										                              source: settlementDiscountDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />														
												</div>												
									        </div>

									        <div class="separator line bottom"></div>

									        <div class="row-fluid">
									        	<div class="span3">
													<label for="ddlTaxItem">Tax </label>
													<input id="ddlTaxItem" name="ddlTaxItem"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.tax_item_id,
										                              source: taxItemDS"
										                   data-option-label="(--- Select ---)"
										                   style="width: 100%;" />
												</div>	
										        <div class="span3">
													<label for="txtCreditLimit"><span data-bind="text: lang.lang.credit_limit"></span> </label>								              		
										            <input data-role="numerictextbox"
										                   data-format="n"
										                   data-min="0"										                   
										                   data-bind="value: obj.credit_limit"										                  
										                   style="width: 100%;">
												</div>																							
											</div>
							        	</div>
								        <!-- //ACCOUNTING INFO END -->								        							       

								        <!-- //GENERAL INFO -->
								        <div class="tab-pane" id="tab2">
							            	<table class="table table-borderless table-condensed cart_total">						            	
							            		<tr>
									                <td><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></td>
									              	<td>
									              		<input id="customerStatus" name="customerStatus" 
									              				data-role="dropdownlist"
											            		data-text-field="name"
								           						data-value-field="id"
								           						data-value-primitive="true" 
											            		data-bind="source: statusList, value: obj.status"
											            		data-option-label="(--- Select ---)"
											            		required data-required-msg="ត្រូវការ ស្ថានភាព" />
									              	</td>							              	
									            	<td><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></td>
									              	<td>
									              		<input id="registered_date" name="registered_date" 
										            		data-role="datepicker"			            		
							            					data-bind="value: obj.registered_date" 
							            					data-format="dd-MM-yyyy"
							            					data-parse-formats="yyyy-MM-dd" 
							            					placeholder="dd-MM-yyyy" required data-required-msg="required" />
									              	</td>
									            </tr>
									            <tr>
									                <td><span data-bind="text: lang.lang.gender"></span></td>
									              	<td><select data-role="dropdownlist" data-bind="source: genders, value: obj.gender"></select></td>							              	
									            	<td><span data-bind="text: lang.lang.phone"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" /></td>
									            </tr>
									            <tr>
									            	<td><span data-bind="text: lang.lang.address"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." />							              	
									            	<td><span data-bind="text: lang.lang.email"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" />
									            </tr>									            
									            <tr>
									            	<td>
									            		<label for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> <i class="icon-share"></i></label>											            
									            	</td>
									            	<td>
									            		<input class="k-textbox" data-bind="value: obj.bill_to" placeholder="bill to ..." />
									            	</td>
									            	<td>
									            		<span data-bind="text: lang.lang.ship_to"></span>										            
									            	</td>
									            	<td>
									            		<input class="k-textbox" data-bind="value: obj.ship_to" placeholder="ship to ..." />
									            	</td>
									            </tr>
									            <tr>									            								              	
									            	<td><span data-bind="text: lang.lang.memo"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." /></td>
									              	<td></td>
									              	<td></td>
									            </tr>							            							            								            								            			            
									        </table>
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //CONTACT PERSON -->
								        <div class="tab-pane" id="tab3">
								        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyContactPerson"><i></i> <span data-bind="text: lang.lang.new_agent"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th><span data-bind="text: lang.lang.department"></span></th>						                
										                <th><span data-bind="text: lang.lang.phone"></span></th>
										                <th><span data-bind="text: lang.lang.email"></span></th>
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"										        						        		 
										        		data-template="contact-person-row-tmpl" 
										        		data-bind="source: contactPersonDS">
										        </tbody>										        						        
										    </table>
							        	</div>
								        <!-- //CONTACT PERSON END -->
								    </div>
								</div>
							</div>

							<br>											
							
							<!-- Form actions -->
							<div align="center">
								<span id="notification"></span>

								<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i><span data-bind="text: lang.lang.save"></span></span>
								<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i><span data-bind="text: lang.lang.delete"></span></span>
								<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
							</div>
							<!-- // Form actions END -->

						</div> <!-- End Widget-Body List -->
					</div>
					<!-- // Collapsible Widget END -->				          					                
			    											
				</div> <!-- // End div example-->  
			</div> <!-- // End div span12-->
		</div> <!-- // End div row-fluid-->	
	</div> 	
</script>
<script id="contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="cashier" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">				
			<div class="span12">
				<div id="example" class="k-content">
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

					<h3><span data-bind="text: lang.lang.cashier"></span></h3>

					<div class="row-fluid">
						<div class="span3">
							<br>

							<input id="ddlContact" data-bind="value: customer_id" style="width: 100%"  />

							<br><br>							
					      					
							<h5><i class="icon-info-sign"></i> <span data-bind="text: lang.lang.customer_info"></span></h5>				
							<table width="100%" style="background-color:Silver; color:black;">
								<tr>
									<td colspan="2">
										<i class="icon-user icon-li icon-fixed-width"></i> 
										<span data-bind="text: customer.fullIdName"></span>										
									</td>																			
								</tr>
								<tr>
									<td colspan="2">								
										<span data-bind="text: lang.lang.balance"></span>: <span data-bind="text: customer.balance"></span>
										<span data-bind="text: customer.currency[0].code">
									</td>
								</tr>
								<tr>
									<td colspan="2">
										<span data-bind="text: lang.lang.deposit"></span>: <span data-bind="text: customer.deposit"></span>
										<span data-bind="text: customer.currency[0].code">
									</td>							
								</tr>
								<tr>
									<td>
										<i class="icon-money icon-li icon-fixed-width"></i> <span data-bind="text: customer.currency[0].code"></span>
									</td>
									<td>
										<i class="icon-phone icon-li icon-fixed-width"></i> <span data-bind="text: customer.phone"></span>
									</td>
								</tr>											
								<tr>
									<td colspan="2">
										<i class="icon-home icon-li icon-fixed-width"></i> <span data-bind="text: customer.address"></span>
									</td>						
								</tr>
							</table>

							<br>			
							
							<h5><i class="icon-list"></i> <span data-bind="text: lang.lang.activities"></span></h5>

							<table class="table table-bordered table-striped table-white">
						        <thead>
						            <tr>
						            	<th><span data-bind="text: lang.lang.date"></span></th>						                
						                <th><span data-bind="text: lang.lang.type"></span></th>						                
						                <th><span data-bind="text: lang.lang.amount"></span></th>						                						                
						            </tr>
						        </thead>
						        <tbody data-role="listview"
						        		data-auto-bind="false"					        		 
						        		data-template="cashier-transaction-row-template" 
						        		data-bind="source: transactionDS"></tbody>						        					        
						    </table>
							
							<div id="pager" class="k-pager-wrap"					    		
				             	data-role="pager"
				             	data-auto-bind="false" 
				             	data-bind="source: transactionDS"></div>
						
						</div> <!-- //End span3 -->

						<div id="exampleValidator" class="span9">
							<div class="row-fluid">
								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a href="javascript:void(0)" class="widget-stats widget-stats-gray widget-stats-4"> 
											<span class="txt"><span data-bind="text: lang.lang.customer"></span></span>
											<span class="count" data-bind="text: total_customer"></span>
											<span class="glyphicons user"><i></i></span>
											<div class="clearfix"></div>
											<i class="icon-play-circle"></i> 
										</a>
									</div>
								</div>

								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a href="#/wPayment_summary" class="widget-stats widget-stats-primary widget-stats-4">
											<span class="txt"><span data-bind="text: lang.lang.today_payment"></span></span>
											<span class="count"><span data-bind="text: total_payment" style="font-size: 35px;"></span></span>
											<span class="glyphicons coins"><i></i></span>
											<div class="clearfix"></div>
											<i class="icon-play-circle"></i>
										</a>
									</div>
								</div>

								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a href="#/reconcile" class="widget-stats widget-stats-inverse widget-stats-5">
											<span class="glyphicons refresh"><i></i></span>
											<span class="txt"><span data-bind="text: lang.lang.reconcile"></span> &<br><br> <span data-bind="text: lang.lang.transfer"></span></span>
											<div class="clearfix"></div>
										</a>
									</div>
								</div>				

							</div> <!-- //End row-fluid -->
														
							<br>

							<table class="table table-bordered table-striped table-white">
						        <thead>
						            <tr>
						                <th></th>
						                <th><span data-bind="text: lang.lang.no"></span></th>						                
						                <th><span data-bind="text: lang.lang.date"></span></th>
						                <th><span data-bind="text: lang.lang.name"></span></th>
						                <th><span data-bind="text: lang.lang.invoice"></span></th>
						                <th class="right"><span data-bind="text: lang.lang.amount"></span></th>
						                <th class="right"><span data-bind="text: lang.lang.pay"></span></th>							                
						            </tr>
						        </thead>
						        <tbody data-role="listview"
						        		data-auto-bind="false"					        		 
						        		data-template="cashier-row-template" 
						        		data-bind="source: invoiceList"></tbody>
						        <tfoot data-template="cashier-footer-template" 
						        		data-bind="source: this"></tfoot>						        
						    </table>						    

							<br>
							
							<span id="notification"></span>

							<div class="row-fluid">
								<div class="span4">						
									<table>
										<tr>
											<td><span data-bind="text: lang.lang.payment_date"></span></td>
						              		<td>
						              			<input id="txtPaymentDate" name="txtPaymentDate" 
						              				data-role="datepicker" 
						              				data-format="dd-MM-yyyy"
						              				data-parse-formats="dd-MM-yyyy"
							              			data-bind="value: payment_date" 
							              			required data-required-msg="ត្រូវការ ថ្ងៃទទួលប្រាក់" />
											</td>
										</tr>										
										<tr>
						                    <td><span data-bind="text: lang.lang.payment_method"></span></td>
						                  	<td>
						                  		<input id="ddlPaymentMethod" id="ddlPaymentMethod"
						                  			   data-role="dropdownlist"
									                   data-auto-bind="false"
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: payment_method_id,
									                              source: paymentMethodDS"									                   
									                   required data-required-msg="ត្រូវការ វីធីបង់ប្រាក់" />						                  					                  		
						                  	</td>
						                <tr>
										<tr>
							                <td><span data-bind="text: lang.lang.cheque"></span></td>
							                <td><input id="check_no" class="k-textbox" data-bind="value: check_no" style="width: 161px;" /></td>
							            <tr>
							            <tr>
											<td><span data-bind="text: lang.lang.cash_account"></span></td>
											<td>
												<input id="ddlCashAccount" name="ddlCashAccount" 
														data-bind="value: account_id" 
														required data-required-msg="required" />												
											</td>
										</tr>										
									</table>							
								</div>																
								<div class="span4">
									<table>	
										<tr>
											<td><span data-bind="text: lang.lang.total_payment"></span>:</td>
											<td align="right"><span data-bind="text: pay_amount"></span></td>
										</tr>									
										<tr>
											<td><span data-bind="text: lang.lang.discount"></span>:</td>
											<td>
												<input data-role="numerictextbox" 
														data-format="c0" data-culture="km-KH" 
														data-bind="value: discount, events: {change : change}" />
											</td>
										</tr>
										<tr>
											<td><span data-bind="text: lang.lang.fine"></span>:</td>							
											<td>
												<input data-role="numerictextbox" 
														data-format="c0" data-culture="km-KH" 
														data-bind="value: fine, events: {change : change}" />
											</td>
										</tr>										
										<tr>
											<td><span data-bind="text: lang.lang.remain"></span>:</td>
											<td align="right"><span data-bind="text: remain"></span></td>
										</tr>
									</table>		          	
								</div>

								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a id="save" name="save" class="widget-stats widget-stats-info widget-stats-4">
											<span class="txt"><span data-bind="text: lang.lang.save"></span></span>
											<span class="count" style="font-size: 35px;" data-bind="text: receive_amount"></span>
											<span class="glyphicons cart_in"><i></i></span>
											<div class="clearfix"></div>
											<i class="icon-play-circle"></i>
										</a>
									</div>								
								</div>
							</div>							

						</div> <!-- //End span9 -->
					</div>
				</div> <!-- //End example -->
			</div>
		</div>
	</div>
</script>
<script id="cashier-transaction-row-template" type="text/x-kendo-tmpl">
    <tr>        
        <td>#:kendo.toString(new Date(issued_date), "dd-MM-yy")#</td>
        <td>#:type# </td>
        <td align="right">#:kendo.toString(kendo.parseFloat(amount), "c", locale)#</td>        
   	</tr>
</script>
<script id="cashier-row-template" type="text/x-kendo-tmpl">
	<tr id="rowGrid-#:id#">
		<td>
			<input type="checkbox" data-bind="checked: isPay, events:{change: checkPay}">			
		</td>
		<td class="sno">1</td>			
		<td>#:kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>		
		<td>#=fullname#</td>
		<td>#:number#</td>				
		<td class="right">#:kendo.toString(amount, "c", locale)#</td>
		<td class="right">
			<input data-role="numerictextbox" 
					data-format="c" data-culture=#:locale#
					data-bind="value: pay_amount, events: {change : change}" 
					style="width: 120px;">
			<i class="icon-trash" data-bind="events: { click: remove "></i>						
		</td>				
    </tr>   
</script>
<script id="cashier-footer-template" type="text/x-kendo-template">
    <tr>    	
        <td class="right" colspan="7" style="font-size:30px;">
            Total: #:total()#
        </td>
    </tr>
</script>

<script id="reconcile" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">	
				<div id="example" class="k-content">						
					
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>							

					<div align="center">
						<h4>Reconcile & Transfer</h4>							
						<span data-bind="text: str_date()"></span>
						<br>
						by
						<span data-bind="text: cashier_name"></span>
					</div>
					<br>
					<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Cash</th>	            				
	            				<th>Dollar Qty</th>
	            				<th>Riel Qty</th>
	            				<th>Dollar Amt</th>
	            				<th>Riel Amt</th>	            				
	            				<th>Dollar Qty Transfer</th>
	            				<th>Riel Qty Transfer</th>
	            				<th>Dollar Amt Transfer</th>
	            				<th>Riel Amt Transfer</th>		            				
	            			</tr>
	            		</thead>
	            		<tbody id="lvReconcileItem" data-role="listview"
	            				data-auto-bind="false"			            			
				                data-template="denominationRowTemplate"
				                data-bind="source: reconcileItemDS">
				        </tbody>
	            	</table>

					<br>

					<div class="row-fluid">
						<!-- //Reconcile -->
						<div class="span6" style="padding-left: 0;">
							<h4 class="heading">Reconcile</h4>

							<table class="table table-condensed">
								<tr>
									<td>Total Paid Today</td>
									<td></td>											
									<td class="right"><span class="count" data-bind="text: obj.received_amount"></span> ៛</td>												
								</tr>
								<tr>
									<td>Remain</td>
									<td></td>											
									<td class="right" style="border-bottom: 1px solid black;"><span class="count" data-bind="text: obj.previous_amount"></span> ៛</td>												
								</tr>
								<tr>
									<td>Cash (A)</td>
									<td></td>												
									<td class="right"><span class="count" data-bind="text: obj.total_cash1"></span> ៛</td>
								</tr>

								<!-- Reconcile -->
								<tr>
									<td>Dollar</td>
									<td>
										$ <span class="count" data-bind="text: obj.usd_amount"></span> x
										<input data-role="numerictextbox" data-format="c0" data-culture="km-KH" data-min="0" data-bind="value: obj.rate, events:{change:change}"  style="width:90px;">
									</td>
									<td class="right"><span class="count" data-bind="text: obj.usd2khr_amount"></span> ៛</td>												
								</tr>
								<tr>
									<td>Riel</td>
									<td></td>
									<td class="right" style="border-bottom: 1px solid black;"><span class="count" data-bind="text: obj.total_cash2"></span> ៛</td>												
								</tr>
								<tr>
									<td>Actual Cash (B)</td>
									<td></td>												
									<td class="right"><span class="count" data-bind="text: obj.reconciled_amount"></span> ៛</td>
								</tr>
								<tr id="reconcileAmount">
									<td>Reconcile(A-B)</td>
									<td></td>												
									<td class="right"><span class="count" data-bind="text: obj.reconciled_amount"></span> ៛</td>
								</tr>																				
							</table>
						</div>

						<!-- //Transfer -->
						<div class="span6" style="padding-right: 0;">								
							<h4 class="heading">Cash Transfer</h4>								
							
							<table class="table table-condensed">
								<tr>
									<td>Dollar Transfer</td>
									<td>
										$ <span class="count" data-bind="text: obj.transfer_usd"></span> x
										<input data-role="numerictextbox" data-format="c0" data-culture="km-KH" data-min="0" data-bind="value: obj.rate, events:{change:change}"  style="width:90px;">												
									</td>
									<td class="right"><span class="count" data-bind="text: obj.usd2khr_transfer_amount"></span> ៛</td>												
								</tr>
								<tr>
									<td>Riel Transfer</td>
									<td></td>
									<td class="right" style="border-bottom: 1px solid black;"><span class="count" data-bind="text: obj.transfer_khr"></span> ៛</td>												
								</tr>
								<tr>
									<td>Total Transfer</td>
									<td></td>												
									<td class="right"><span class="count" data-bind="text: obj.transfered_amount"></span> ៛</td>
								</tr>
								<tr>
									<td>Balance</td>
									<td></td>												
									<td class="right"><span class="count" data-bind="text: obj.balance"></span> ៛</td>
								</tr>
								<tr>
									<td>Transfer Account</td>
									<td>
										<input id="ddlCashAccount" name="ddlCashAccount" 
												data-bind="value: obj.transfer_account_id" 
												required data-required-msg="required" />
									</td>
									<td>
										<!-- Class here -->
					              	</td>
								</tr>
								<tr class="top">
									<td>Memo:</td>
									<td colspan="2">
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%; resize: none;" data-bind="value: obj.memo"></textarea>
									</td>										
								</tr>								
							</table>																																			
						</div>									
					</div>
					<div class="box-generic bg-action-button">
						<!-- Form actions -->
						<div align="right" data-bind="invisible: isExisting">
							<span id="notification"></span>

							<span class="btn btn-icon btn-success glyphicons share" data-bind="click: transferAll"><i></i>Transfer All</span>
							<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i>Save</span>							
							<span style="color: #fff;" class="btn btn-warning btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i>Cancel</span>
						</div>
						<!-- // Form actions END -->
					</div>
				</div><!-- //End div example-->
			</div><!-- //End div span12-->
		</div><!-- //End div row-fluid-->
	</div>
</script>
<script id="denominationRowTemplate" type="text/x-kendo-tmpl">
	<tr>				
		<td class="right">#=denomination#</td>
		<td>
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: usd_qty, events: {change : change}" #: denomination>100 ? disabled="disabled" : "" # >
		</td>
		<td>
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: khr_qty, events: {change : change}" #: denomination<100 ? disabled="disabled" : "" # >
		</td>
		<td class="right">#:kendo.toString(usd_amount,'c')#</td>
		<td class="right">#:kendo.toString(khr_amount,'c0','km-KH')#</td>

		<td bgcolor="silver">
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: usd_transfer, events: {change : change}" #: denomination>100 ? disabled="disabled" : "" # >
		</td>
		<td bgcolor="silver">
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: khr_transfer, events: {change : change}" #: denomination<100 ? disabled="disabled" : "" # >
		</td>
		<td bgcolor="silver" class="right">#:kendo.toString(usd_transfer_amount,'c')#</td>
		<td bgcolor="silver" class="right">#:kendo.toString(khr_transfer_amount,'c0','km-KH')#</td>					
    </tr>   
</script>

<script id="cashReceipt" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2 data-bind="text: lang.lang.cash_receipt"></h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="widget widget-heading-simple widget-body-primary widget-employees">		
								<div class="widget-body padding-none">			
									<div class="row-fluid row-merge">
										<div class="listWrapper">
											<div class="innerAll" style="padding: 15px 15px 19px;">							
												<form autocomplete="off" class="form-inline">
													<div class="widget-search separator bottom">
														<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
														<div class="overflow-hidden">
															<input type="search" placeholder="Invoice Number..." data-bind="value: searchText">
														</div>
													</div>
													<div class="select2-container" style="width: 100%;">								
														<input id="ccbItem" name="cbbContact"
														   	data-role="combobox"
										                   	data-header-template="contact-header-tmpl"
										                   	data-template="contact-list-tmpl"
										                   	data-value-primitive="true"
										                   	data-text-field="name"
										                   	data-value-field="id"
										                   	data-bind="value: contact_id,
										                              source: contactDS,
										                              events:{ change: contactChanges }"
										                   	data-placeholder="Customer..."                    
										                   	style="width: 100%; height: 29px;" />									
													</div>
												</form>					
											</div>
										</div>
									</div>
								</div>
							</div>
							
							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: { backgroundColor: amtDueColor}">
								<div align="left"><span data-bind="text: lang.lang.amount_received"></span></div>
								<h2 data-bind="text: total_received" align="right"></h2>
							</div>												
						</div>					   

						<div class="span8">

							<div class="box-generic-noborder" >

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-1" data-toggle="tab"><i></i> </a>
							            </li>
							            <!-- <li class="span1 glyphicons show_liness"><a href="#tab1-2" data-toggle="tab"><i></i></a></li> -->
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-1">						            
							            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">
							            	<tr>
												<td><span data-bind="text: lang.lang.date"></span></td>
												<td class="right">
													<input id="issuedDate" name="issuedDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd HH:mm:ss"
															data-bind="value: obj.issued_date, 
																		events:{ change : issuedDateChanges }" 
															required data-required-msg="required"
															style="width:100%;" />
												</td>
											</tr>							            
											<tr>
								            	<td>
								            		<span data-bind="text: lang.lang.payment_term"></span>
								            	</td>				
												<td>
													<input id="ddlPaymentMethod" name="ddlPaymentMethod"
															data-role="dropdownlist"								
															data-header-template="customer-payment-method-header-tmpl"
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-bind="value: obj.payment_method_id,
								              							source: paymentMethodDS"
								              				data-option-label="Select Method..."
								              				required data-required-msg="required" 
								              				style="width: 100%" />
												</td>
											</tr>
											<tr>
								            	<td><span data-bind="text: lang.lang.cash_account"></span></td>							            	
							            		<td>
													<input id="ddlCashAccount" name="ddlCashAccount" 
														data-role="dropdownlist"
														data-header-template="account-header-tmpl"
														data-template="account-list-tmpl"
							              				data-value-primitive="true"
														data-text-field="name" 
							              				data-value-field="id"
							              				data-bind="value: obj.account_id,
							              							source: accountDS"
							              				data-option-label="Select Account..."
							              				required data-required-msg="required" 
							              				style="width: 100%" />
												</td>							            	
								            </tr>							            
								            <tr>
												<td><span data-bind="text: lang.lang.segment"></span></td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>											
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <div class="tab-pane saleSummaryCustomer" id="tab1-2">
										<table class="table table-borderless table-condensed">
									        <thead>
									            <tr>
									                <th>NUMBER</th>
									                <th>ACCOUNT</th>                		                
									                <th class="right">DEBITS (Dr)</th>
									                <th class="right">CREDITS (Cr)</th>		                
									            </tr>
									        </thead> 
									        <tbody>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        	<tr>
									        		<td>1</td>
									        		<td>2</td>
									        		<td class="right">3</td>
									        		<td class="right">4</td>
									        	</tr>
									        </tbody>			        
									    </table>
									</div>

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
				                <th><span data-bind="text: lang.lang.date"></span></th>
				                <th><span data-bind="text: lang.lang.name"></span></th>
				                <th><span data-bind="text: lang.lang.reference_no"></span></th>
				                <th data-bind="visible: showReceiptNo">Receipt#</th>
				                <th data-bind="visible: showCheckNo" style="width: 10%"><span data-bind="text: lang.lang.check_number"></span></th>
				                <th style="width: 15%"><span data-bind="text: lang.lang.amount"></span></th>			                
				                <th style="width: 15%"><span data-bind="text: lang.lang.discount"></span></th>
				                <th style="width: 15%">RECEIVE</th>
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="cashReceipt-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span5">
							
							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbCheckNo" class="k-checkbox" data-bind="checked: showCheckNo">
	  									<label class="k-checkbox-label" for="chbCheckNo"><span data-bind="text: lang.lang.check_number"></span></label>
	  								</li>
	  								<li>
	  									<input type="checkbox" id="chbReceiptNo" class="k-checkbox" data-bind="checked: showReceiptNo">
	  									<label class="k-checkbox-label" for="chbReceiptNo">Receipt Number</label>
									</li>															
								</ul>
							</div>

							<br>
							<div class="well" style="overflow: hidden;">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100% !important;" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>												
								<textarea cols="0" rows="2" class="k-textbox" style="width:100% !important;" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
							</div>
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span7">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right"><span data-bind="text: lang.lang.total_received"></span>:</td>
										<td class="right strong"><span data-bind="text: total_received"></span></td>
										<td class="right"><span data-bind="text: lang.lang.subtotal"></span>:</td>
										<td class="right strong" width="40%"><span data-format="n2" data-bind="text: obj.sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right"><span data-bind="text: lang.lang.remaining"></span>:</td>
										<td class="right strong"><span data-format="n2" data-bind="text: obj.remaining"></span></td>
										<td class="right"><span data-bind="text: lang.lang.total_discount"></span>:</td>
										<td class="right strong">
											<span data-format="n2" data-bind="text: obj.discount"></span>
	                   					</td>
									</tr>																
									<tr>
										<td></td>
										<td></td>
										<td class="right"><h4 data-bind="text: lang.lang.total"></h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_new"></span></span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_close"></span></span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i><span data-bind="text: lang.lang.save_print"></span></span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>				
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashReceipt-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.cashReceipt.dataSource.indexOf(data)+1#			
		</td>
		<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
		<td>#=banhji.cashReceipt.getContactName(contact_id)#</td>
		<td>#=reference_no#</td>
		<td data-bind="visible: showReceiptNo">
			<input type="text" class="k-textbox" 
					data-bind="value: number"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showCheckNo">
			<input type="text" class="k-textbox" 
					data-bind="value: check_no"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td class="center">
			<input data-role="numerictextbox" disabled="disabled"
				   data-spinners="false"
				   data-format="c2"
				   data-culture="#:locale#"
                   data-min="0"                   
                   data-bind="value: sub_total"
                   style="width: 100%; padding: 0 !important; text-align: right;">
		</td>		
		<td class="center">
			<input data-role="numerictextbox"
				   data-spinners="false"
				   data-format="c2"
				   data-culture="#:locale#"
                   data-min="0"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%; text-align: right;">			
		</td>
		<td class="center">
			<input data-role="numerictextbox"
				   data-spinners="false"
				   data-format="c2"
				   data-culture="#:locale#"
                   data-min="0"                   
                   data-bind="value: amount,
                              events: { change: changes }"
                   style="width: 100%; text-align: right;">			
		</td>
    </tr>   
</script>
<script id="cashPayment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

		        <h2 data-bind="text: lang.lang.cash_payment"></h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="widget widget-heading-simple widget-body-primary widget-employees">		
							<div class="widget-body padding-none">			
								<div class="row-fluid row-merge">
									<div class="listWrapper">
										<div class="innerAll"  style="padding: 15px 15px 19px;"">							
											<form autocomplete="off" class="form-inline">
												<div class="widget-search separator bottom">
													<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
													<div class="overflow-hidden">
														<input type="search" placeholder="Bill Number..." data-bind="value: searchText">
													</div>
												</div>
												<div class="select2-container" style="width: 100%;">								
													<input id="ccbItem" name="cbbContact"
														   data-role="combobox"
														   data-header-template="vendor-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: contact_id,
										                              source: contactDS,
										                              events:{ change: contactChanges }"
										                   data-placeholder="Supplier..."                    
										                   style="width: 100%; height: 29px;" />									
												</div>
											</form>					
										</div>
									</div>
								</div>
							</div>
						</div>
						
						<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
							data-bind="style: { backgroundColor: amtDueColor}">
							<div align="left"><span data-bind="text: lang.lang.c_amount_paid"></span></div>
							<h2 data-bind="text: total_received" align="right"></h2>
						</div>												
					</div>					   

					<div class="span8">

						<div class="box-generic-noborder">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-1" data-toggle="tab"><i></i> </a>
						            </li>
						            <!-- <li class="span1 glyphicons show_liness"><a href="#tab1-2" data-toggle="tab"><i></i></a></li> -->		            								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- Options Tab content -->
						        <div class="tab-pane active" id="tab1-1">						            
						            <table style="margin-bottom: 0;" class="table table-borderless table-condensed cart_total">
						            	<tr>
											<td><span data-bind="text: lang.lang.date"></span></td>
											<td class="right">
												<input id="issuedDate" name="issuedDate" 
														data-role="datepicker"
														data-format="dd-MM-yyyy"
														data-parse-formats="yyyy-MM-dd HH:mm:ss"
														data-bind="value: obj.issued_date, 
																	events:{ change : issuedDateChanges }" 
														required data-required-msg="required"
														style="width:100%;" />
											</td>
										</tr>							            
										<tr>
							            	<td>
							            		<span data-bind="text: lang.lang.payment_method"></span>					            						            		
							            	</td>				
											<td>
												<input id="ddlPaymentMethod" name="ddlPaymentMethod"
														data-role="dropdownlist"
														data-header-template="vendor-payment-method-header-tmpl"														
							              				data-value-primitive="true"
														data-text-field="name" 
							              				data-value-field="id"						              				 
							              				data-bind="value: obj.payment_method_id,
							              							source: paymentMethodDS"
							              				data-option-label="Select Method..."
							              				required data-required-msg="required" 
							              				style="width: 100%" />
											</td>
										</tr>
										<tr>
							            	<td><span data-bind="text: lang.lang.cash_account"></span></td>							            	
						            		<td>
												<input id="ddlCashAccount" name="ddlCashAccount" 
													data-role="dropdownlist"
													data-header-template="account-header-tmpl"
													data-template="account-list-tmpl"														
						              				data-value-primitive="true"
													data-text-field="name" 
						              				data-value-field="id"						              				 
						              				data-bind="value: obj.account_id,
						              							source: accountDS"
						              				data-option-label="Select Account..."
						              				required data-required-msg="required" 
						              				style="width: 100%" />
											</td>							            	
							            </tr>							            
							            <tr>
											<td><span data-bind="text: lang.lang.segment"></span></td>
											<td>
												<select data-role="multiselect"
													   data-value-primitive="true"	
													   data-header-template="segment-header-tmpl"							   
													   data-item-template="segment-list-tmpl"				    
													   data-value-field="id" 
													   data-text-field="code"
													   data-bind="value: obj.segments, 
													   			source: segmentItemDS,
													   			events:{ change: segmentChanges }"
													   data-placeholder="Add Segment.."				   
													   style="width: 100%" /></select>
											</td>
										</tr>											
						            </table>						            
						        </div>
						        <!-- // Options Tab content END -->					        								        

						        <div class="tab-pane saleSummaryCustomer" id="tab1-2">
									<table class="table table-borderless table-condensed">
								        <thead>
								            <tr>
								                <th>NUMBER</th>
								                <th>ACCOUNT</th>                		                
								                <th class="right">DEBITS (Dr)</th>
								                <th class="right">CREDITS (Cr)</th>		                
								            </tr>
								        </thead> 
								        <tbody>
								        	<tr>
								        		<td>1</td>
								        		<td>2</td>
								        		<td class="right">3</td>
								        		<td class="right">4</td>
								        	</tr>
								        	<tr>
								        		<td>1</td>
								        		<td>2</td>
								        		<td class="right">3</td>
								        		<td class="right">4</td>
								        	</tr>
								        </tbody>			        
								    </table>
								</div>

						    </div>
						</div>

				    </div>
				</div>

				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th class="center" style="width: 50px;"><span data-bind="text: lang.lang.no_"></span></th>			                
			                <th data-bind="text: lang.lang.date"></th>
			                <th data-bind="text: lang.lang.name"></th>
			                <th data-bind="text: lang.lang.reference_no"></th>
			                <th data-bind="visible: showReceiptNo">Receipt#</th>
			                <th data-bind="visible: showCheckNo" style="width: 10%"><span data-bind="text: lang.lang.check_number"></span></th>			                		                
			                <th style="width: 15%"><span data-bind="text: lang.lang.amount"></span></th>
			                <th style="width: 15%"><span data-bind="text: lang.lang.discount"></span></th>         
			                <th style="width: 15%"><span data-bind="text: lang.lang.pay"></span></th>			                			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="cashPayment-template" 
			        		data-auto-bind="false"
			        		data-bind="source: dataSource"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span4">
						
						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" id="chbCheckNo" class="k-checkbox" data-bind="checked: showCheckNo">
  									<label class="k-checkbox-label" for="chbCheckNo"><span data-bind="text: lang.lang.check_number"></span></label>
								</li>
								<li>
									<input type="checkbox" id="chbReceiptNo" class="k-checkbox" data-bind="checked: showReceiptNo">
									<label class="k-checkbox-label" for="chbReceiptNo">Receipt Number</label>
								</li>															
							</ul>
						</div>

						<br>
						
						<div class="well" style="margin-top:10px; overflow:hidden;">
							<textarea cols="0" rows="2" class="k-textbox" style="width:100% !important;" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>												
							<textarea cols="0" rows="2" class="k-textbox" style="width:100% !important;" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
						</div>
					</div>
					<!-- Column END -->

					
					<!-- Column -->
					<div class="span8">
						<table class="table table-condensed table-striped table-white">
							<tbody>
								<tr>
									<td class="right"><span data-bind="text: lang.lang.total_received"></span></td>
									<td class="right strong"><span data-bind="text: total_received"></span></td>
									<td class="right"><span data-bind="text: lang.lang.subtotal"></span></td>
									<td class="right strong" width="40%"><span data-format="n2" data-bind="text: obj.sub_total"></span></td>
								</tr>								
								<tr>
									<td class="right"><span data-bind="text: lang.lang.remaining"></span>:</td>
									<td class="right strong"><span data-format="n2" data-bind="text: obj.remaining"></span></td>
									<td class="right"><span data-bind="text: lang.lang.total_discount"></span></td>
									<td class="right strong">
										<span data-format="n2" data-bind="text: obj.discount"></span>
                   					</td>
								</tr>																
								<tr>
									<td></td>
									<td></td>
									<td class="right"><h4 data-bind="text: lang.lang.total"></h4></td>
									<td class="right strong"><h4 data-bind="text: total"></h4></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>	           
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_new"></span></span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_close"></span></span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.save_print"></span></span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
						</div>
					</div>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashPayment-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.cashPayment.dataSource.indexOf(data)+1#			
		</td>		
		<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
		<td>#=banhji.cashPayment.getContactName(contact_id)#</td>	
		<td>#=reference_no#</td>
		<td data-bind="visible: showReceiptNo">
			<input type="text" class="k-textbox" 
					data-bind="value: number"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showCheckNo">
			<input type="text" class="k-textbox" 
					data-bind="value: check_no"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td class="center">
			<input data-role="numerictextbox" disabled="disabled"
				   data-spinners="false"
				   data-format="c2"
				   data-culture="#:locale#"
                   data-min="0"                   
                   data-bind="value: sub_total"
                   style="width: 100%; padding: 0 !important; text-align: right;">
		</td>
		<td class="center">
			<input data-role="numerictextbox"
				   data-spinners="false"
				   data-culture="#:locale#"
                   data-format="n"
                   data-min="0"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%; text-align: right;">			
		</td>		
		<td class="center">
			<input data-role="numerictextbox"
				   data-spinners="false"
				   data-culture="#:locale#"
                   data-format="n"
                   data-min="0"                   
                   data-bind="value: amount,
                              events: { change: changes }"
                   style="width: 100%; text-align: right;">			
		</td>
    </tr>   
</script>

<script id="cashFlowForecast" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content cashFlow">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>Rolling Cash Flow Forecast</h2>			    		   

				    <br>
				    <div class="row-fluid" style="overflow: hidden;">
				    	<div class="span5">
				    		<p style="color: #bababa;">Please select your scenario</p>
				    		<div class="span12" style="padding:0">
								<span title="" class="k-widget k-dropdown k-header selectType" unselectable="on" role="listbox" aria-haspopup="true" aria-expanded="false" tabindex="0" aria-owns="" aria-disabled="false" aria-readonly="false" aria-busy="false" aria-activedescendant="a88f1fe2-8947-4cbb-bd22-27f7fe9310aa" style="padding:0">
									
									<select style="padding:0;width: 90%" class="span12 selectType k-valid" data-role="dropdownlist" data-value-primitive="true" data-text-field="name" data-value-field="id" data-bind="value: obj.type, 
												source: selectTypeList, 
												events:{change: onChange}" style="display: none;">
										<option value="Quote" selected="selected">Quotation</option>
										<option value="Sale_Order">Sale Order</option>
										<option value="Deposit">Deposit</option>
										<option value="Cash_Sale">Cash Sale</option>
										<option value="Invoice">Invoice</option>
										<option value="Cash_Receipt">Cash Receipt</option>
										<option value="GDN">Delivered Note</option>
									</select>
								</span>
							</div>
				    		<p style="margin-top: 10px;clear: both;color: #bababa;">This is a default scenario generated based on<br>your historical data, patterns, and defined rules.</p>
				    	</div>
				    	<div class="span7">
				    		<div class="row" style="background: #deeaf6;padding:10px 0;">
				    			<div class="span1"></div>
				    			<div class="span3">
				    				<h3>Accounts</h3>
				    				<p style="color: #bababa;margin:0;">to be reconciled</p>
				    			</div>
				    			<div class="span1" style="margin-right: 20px;"><span class="nb-blue">5</span></div>
				    			<div class="span4"><span class="nb-blue">$200,000</span></div>
				    			<div class="span2"><p style="color: #1b507c;">Reconciled<br>cash</p></div>
				    		</div>
				    		<div class="row" style="background: #deeaf6;padding:10px 0;margin-top: 10px;margin-bottom:10px;">
				    			<div class="span1"></div>
				    			<div class="span5">
				    				<h3>liquidity</h3>
				    				<p style="color: #bababa;margin:0;">Position based on this scenario</p>
				    			</div>
				    			<div class="span5"><span class="nb-blue">$30,000</span></div>
				    		</div>
				    		<a style="color: #bababa;cursor: pointer;float:right; margin-bottom: 10px;">Refresh data from Bank <span class="glyphicons no-js refresh"><i></i></span></a>
				    	</div> 
				    </div>
				    <table style="overflow: hidden;position: relative;" class="table table-primary table-striped table-vertical-center">
				    	<thead>
				    		<tr>
				    			<th width="20%"></th>
				    			<th class="old">Sep 2016</th>
				    			<th class="old">Oct 2016</th>
				    			<th class="recent">Nov 2016</th>
				    			<th class="future">Dec 2016</th>
				    			<th class="future">Jan 2017</th>
				    			<th class="future">Feb 2017</th>
				    			<th class="future">Mar 2017</th>
				    			<th class="future">Apr 2017</th>
				    			<th class="future">May 2017</th>			    			
				    		</tr>
				    	</thead>
				        <tbody data-role="listview"
				        		data-auto-bind="false"
				        		data-template="cashFlowForecast-template"
				        		data-bind="source: dataSource"></tbody>			        
				    </table>

				    <!-- Edit Form -->
					<div data-role="window"
		                 data-title="Edit"
		                 data-iframe="true"
		                 data-width="900"
			             data-height="200"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'50%',left:'16%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showEdit"
		                 style="text-align:center;">
								
						<h2 data-bind="text: obj.name"></h2>

						<table>
							<tr>
            					<td colspan="2" align="left">
			            			<input type="radio" value="only" class="k-radio"
			            					name="option" id="option1"
			            					data-bind="checked: month_option"> 
			            			<label class="k-radio-label" for="option1">All only this month</label>
			            		</td>
			            	</tr>
			            	<tr>
			            		<td colspan="2" align="left">
						            <input type="radio" value="all" class="k-radio"
						            		name="option" id="option2"
						            		data-bind="checked: month_option"> 
						            <label class="k-radio-label" for="option2">Apply all future months</label>
				            	</td>
				            </tr>
				            <tr>
				            	<td>&nbsp;</td>
				            	<td>&nbsp;</td>
				            </tr>
							<tr>
								<td>Amount:</td>
								<td>
									<input type="number" class="k-textbox" data-bind="value: amount" />
								</td>
							</tr>
						</table>

						<br>

						<div align="center">
							<span class="btn btn-icon btn-primary glyphicons ok_2" data-bind="click: save" style="width: 80px;"><i></i> Save</span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> <span data-bind="text: lang.lang.cancel"></span></span>
						</div>

		            </div>
		            <!-- // Edit Form -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="cashFlowForecast-template" type="text/x-kendo-tmpl">
	#if(name=="Cash Receipts" || name=="Cash Disbursement" || name=="Liquidlity Position"){#		
		<tr data-uid="#: uid #" style="font-weight: bold;">		
			<td>#=name#</td>		
			<td align="right" data-format="n0" data-bind="text: m0"></td>
			<td align="right" data-format="n0" data-bind="text: m1"></td>
			<td align="right" data-format="n0" class="recent" data-bind="text: m2"></td>		
			<td align="right" data-format="n0" data-bind="text: m3"></td>
			<td align="right" data-format="n0" data-bind="text: m4"></td>
			<td align="right" data-format="n0" data-bind="text: m5"></td>
			<td align="right" data-format="n0" data-bind="text: m6"></td>
			<td align="right" data-format="n0" data-bind="text: m7"></td>
			<td align="right" data-format="n0" data-bind="text: m8"></td>
	    </tr>
    #}else{#
    	<tr data-uid="#: uid #">		
			<td>&nbsp;&nbsp;&nbsp;#=name#</td>		
			<td align="right" data-format="n0" data-bind="text: m0, click: selectedRow0"></td>
			<td align="right" data-format="n0" data-bind="text: m1, click: selectedRow1"></td>
			<td align="right" data-format="n0" class="recent" data-bind="text: m2, click: selectedRow2"></td>		
			<td align="right" data-format="n0" data-bind="text: m3, click: selectedRow3"></td>
			<td align="right" data-format="n0" data-bind="text: m4, click: selectedRow4"></td>
			<td align="right" data-format="n0" data-bind="text: m5, click: selectedRow5"></td>
			<td align="right" data-format="n0" data-bind="text: m6, click: selectedRow6"></td>
			<td align="right" data-format="n0" data-bind="text: m7, click: selectedRow7"></td>
			<td align="right" data-format="n0" data-bind="text: m8, click: selectedRow8"></td>
	    </tr>
    #}#   
</script>

<script id="cashSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>General Setting</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong">Customer Type</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong">Payment Method</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Payment Term</span></a>
	            </li>	                        
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- Tab Branch content -->
	            <div class="tab-pane active" id="tab1-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="type name ..." data-bind="value: contactTypeName">
					    <button class="btn btn-default" type="button" data-bind="click: addContactType"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Type</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
		            			data-edit-template="customerSetting-edit-contact-type-template"
				                data-template="customerSetting-contact-type-template"
				                data-bind="source: contactTypeDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Branch content END -->

	            <!-- Tab Contact Type content -->
	            <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-method-template"
				                data-template="customerSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // Tab Contact Type content END -->

	            <!-- Tab Block content -->
	            <div class="tab-pane" id="tab3-1">
            		<div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="term ..." data-bind="value: paymentTerm">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th>Term</th>
	            				<th>%</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-term-template"
				                data-template="customerSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Block content END -->

	        </div>
	    </div>

	</div>
</script>
<script id="cashSetting-contact-type-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			#if(is_system=="0"){#
	   			<div class="edit-buttons">       
			        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
			   	</div>
		   	#}#
   		</td>
   	</tr>
</script>
<script id="cashSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="cashSetting-payment-method-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="cashSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="cashSetting-payment-term-template" type="text/x-kendo-tmpl">
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
    		 #:term#
   		</td>
   		<td>
    		 #:discount_percentage#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="cashSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="term" required="required" validationMessage="required" />
                <span data-for="term" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="cashList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="container-fluid">
			<div class="row-fluid">
				<div class="span12">
					<div id="example" class="k-content">
						<div class="hidden-print">
							<span class="pull-right glyphicons no-js remove_2" 
								onclick="javascript:window.history.back()"><i></i></span>

							<input data-role="dropdownlist"
							   data-option-label="(--- TYPE ---)"
			                   data-auto-bind="false"
			                   data-value-primitive="true"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: contact_type_id,
			                              source: contactTypeDS" />

							<button id="search" type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
							<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
						</div>

						<h3 align="center"><span data-bind="text: lang.lang.customer_list"></span></h3>
				
						<div id="grid"></div>					
					    					
					</div> <!-- //End div example--> 
				</div><!-- //End div span12-->
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>
<!-- Cash Reports -->
<script id="cashReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>CASH POSITION</h2>
				<p>
					The following reports provide summary and detailed reports on employee related transactions.  
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Cash Position Report</a></h3>
							</td>
							<td >
								<h3><a href="#/">Cash Payment Report</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price.  


								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.


								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/">Cash Receipt Report</a></h3>
							</td>
							<td >
								<h3><a href="#/">Reconciliation Report</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for each inventory within a period of time.


								</p>
							</td>
							<td >
								<p>
									List of all cash related reconciliation reports.
								</p>
							</td>
						</tr>
					</table>					
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Realized Exchange Gains & Losses</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/">Unrealized Exchange Gains & Losses</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									This detailed report lists foreign transactions that are closed (referred to as realized gains and losses) and totals the gains and losses due to changes in exchange rates.


								</p>
								
							</td>
							<td >
								<p>
									This summary report lists your foreign accounts and calculates the potential gain or loss for each account.


								</p>
							</td>							
						</tr>
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Cash Balance</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>0.5</span>
								<br>
								<span>Cash Ratio</span>
							</td>
							<td>
								<span>1.5</span>
								<br>
								<span>Quick Ratio</span>
							</td>
							<td>
								<span>2.1</span>
								<br>
								<span>Current Ratio</span>
							</td>
							<td>
								<span>20 days</span>
								<br>
								<span>Cash Conversion Cycle</span>
							</td>
						</tr>
					</table>
				</div>
				<div id="sale-report-chart">Chart</div>
			</div>
		</div>
	</div>
</script>
<script id="cashPositionReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryCustomer">

					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<div class="block-title">
						<h3 data-bind="text: company.name"></h3>
						<h2>Cash Position Report</h2>
						<p>As of Date: November 30 2016</p>
					</div>	
					<table class="table table-borderless table-condensed" style="width: 80%; margin: 0 auto;">
						<tr>
							<th colspan="4" style="text-align: right;">Cash Account</th>
						</tr>
						<tr>
							<td>Opening Balance</td>
							<td></td>
							<td></td>
							<td style="text-align: right;">210000</td>
						</tr>
						<tr>
							<td>Cash Inflows</td>
							<td></td>
							<td></td>
							<td style="text-align: right;"></td>
						</tr>
						<tr>
							<td></td>
							<td>cash sale</td>
							<td><span data-bind="text: totalCashSale"></span></td>
							<td style="text-align: right;"></td>
						</tr>
						<tr>
							<td></td>
							<td>cash receipt</td>
							<td style="border-bottom: 1px solid #000 !important; "><span data-bind="text: totalCashReceipt"></span></td>
							<td style="border-bottom: 1px solid #000 !important; text-align: right;"></td>
						</tr>
						<tr>
							<td>Total Cash Inflows</td>
							<td></td>
							<td style="border-bottom: 3px double #000 !important; font-size: 20px;"><span data-bind="text: totalSale"></span></td>
							<td style="border-bottom: 3px double #000 !important; text-align: right;"></td>
						</tr>

						<tr>
							<td>Cash Outflows</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td>cash expense</td>
							<td><span data-bind="text: cashExpense"></span></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td>cash payment</td>
							<td><span data-bind="text: cashPayment"></span></td>
						</tr>
						<tr>
							<td></td>
							<td>cash purchase</td>
							<td style="border-bottom: 1px solid #000 !important; "><span data-bind="text: cashPurchase"></span></td>
							<td style="border-bottom: 1px solid #000 !important; text-align: right;"></td>
						</tr>
						<tr>
							<td>Total Cash Outflows</td>
							<td></td>
							<td style="border-bottom: 3px double #000 !important; font-size: 20px;"><span data-bind="text: totalPurchase"></span></td>
							<td style="border-bottom: 3px double #000 !important; text-align: right;"></td>
						</tr>

						<tr>
							<td style="padding-left: 25px !important;">Net Cash Defisit/surplus</td>
							<td></td>
							<td style="border-bottom: 3px solid #000 !important;"><span data-bind="text: total"></span></td>
							<td style="border-bottom: 3px solid #000 !important; text-align: right;"></td>
						</tr>



					</table>


		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="cashMovement" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

										<!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

							        	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 0 !important; width: 96%;">
									            		<span data-bind="text: lang.lang.account"></span>
														<input id="ddlAccount" name="ddlAccount" 
																data-role="dropdownlist"
									              				data-header-template="account-header-tmpl"
									              				data-template="account-list-tmpl"
									              				data-value-primitive="true"
																data-text-field="name" 
									              				data-value-field="id"
									              				data-bind="value: obj.account_id,
									              							source: accountDS"
									              				data-option-label="Select Account..."
									              				required data-required-msg="required" 
									              				style="width: 100%" />
													</td>
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
												<tr>
													<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.segment"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="segment-header-tmpl"
															   data-item-template="segment-list-tmpl"
															   data-value-field="id"
															   data-text-field="code"
															   data-bind="value: obj.segments, 
															   			source: segmentItemDS,
															   			events:{ change: segmentChanges }"
															   data-placeholder="Select Segments.."
															   style="width: 100%" /></select>
													</td>
													<td></td>
												</tr>
											</table>
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-3">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->
					</div>
			    	<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Cash Movement</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<table class="table table-borderless table-condensed">
							<thead>
								<tr>
									<th><span data-bind="text: lang.lang.type"></span></th>
									<th style="width: 10%;"><span data-bind="text: lang.lang.date"></span></th>
									<th style="width: 15%;"><span data-bind="text: lang.lang.reference_no"></span></th>
									<th><span data-bind="text: lang.lang.description"></span></th>
									<th class="right"><span></span>In</th>
									<th class="right"><span></span>Out</th>
									<th class="right"><span data-bind="text: lang.lang.balance"></span></th>
								</tr>
							</thead>
							<tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="cashMovement-template"			        		
					        		data-bind="source: dataSource"></tbody>
					       	<tfoot>
					       		<tr style="font-weight: bold; font-size: large;">
					       			<td colspan="5">TOTAL</td>
					       			<td align="right" data-bind="text: totalAmount"></td>
					       			<td align="right" data-bind="text: totalBalance"></td>
					       		</tr>
					       	</tfoot>
						</table>				  
					</div>
				</div>
			</div>						
		</div>
	</div>
</script>
<script id="cashMovement-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="font-weight: bold;">#: number # #: name #</td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>    	
    	<td class="right strong" style="color: black;">
    		#=kendo.toString(balance_forward, "c", banhji.locale)#
    	</td>
	</tr>
	#var balance = balance_forward;#
	#for(var i=0; i<line.length; i++){#
	#balance += line[i].amount;#
	<tr>
		<td style="color: black;">
			&nbsp;&nbsp; #=line[i].type#
		</td>		
		<td style="color: black;">
			#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#
		</td>
		<td style="color: black;">
			#if(line[i].type=="Cash_Purchase" || line[i].type=="Credit_Purchase"){#
				<a href="\#/purchase/#=line[i].id#"><i></i> #=line[i].number#</a>
			#}else if(line[i].type=="Deposit" || line[i].type=="Witdraw" || line[i].type=="Transfer"){#
				<a href="\#/cash_transaction/#=line[i].id#"><i></i> #=line[i].number#</a>				
			#}else{#
				<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a>
			#}#
		</td>		
		<td style="color: black;">
			#=line[i].memo#
		</td>
		<td class="right" style="color: black;">
			#if(line[i].amount > 0){#
				#=kendo.toString(line[i].amount, "c", banhji.locale)#
			#}else{#
				#=0#
			#}#			
		</td>
		<td class="right" style="color: black;">
			#if(line[i].amount < 0){#
				#=kendo.toString(Math.abs(line[i].amount), "c", banhji.locale)#
			#}else{#
				#=0#
			#}#	
		</td>
		<td class="right" style="color: black;">
			#=kendo.toString(balance, "c", banhji.locale)#
		</td> 			
    </tr>    
    #}# 
    <tr>
    	<td style="font-weight: bold; color: black;">Total #: number # #: name #</td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td></td>
    	<td class="right" style="font-weight: bold; border-top: 1px solid black !important; color: black;">
    		#=kendo.toString(balance, "c", banhji.locale)#
    	</td>
    </tr>  
</script>
<script id="cashCollectionReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: inventoryPositionDetail.search"><i class="icon-search"></i></button>							
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Cash Collection Report</h2>
							<p>From <span data-bind="text: displayDateStart"></span> to <span data-bind="text: displayDateEnd"></p>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Account</span></th>
									<th><span>Date</span></th>								
									<th><span>Type</span></th>
									<th><span>Customer</span></th>
									<th><span>Invoice</span></th>
									<th><span>Cash Receipt</span></th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="cashCollectionReport-row-template"
					                data-bind="source: cashCollection.dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="cashCollectionReport-row-template" type="text/x-kendo-tmpl">  
	<tr>  
	    <td>#=account#</td>      
	    <td>#=date#</td>
	    <td>#=type#</td>
	    <td>#=contact#</td>
	    <td><a href="\#/#=type.toLowerCase()#/#=id#">#=number#</a></td>
	    <td align="right">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="cashPaymentReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>										
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab" data-bind="click: printGrid"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">
								        <div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: inventoryPositionDetail.search"><i class="icon-search"></i></button>							
									    </div>
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Cash Payment Report</h2>
							<p>From <span data-bind="text: displayDateStart"></span> to <span data-bind="text: displayDateEnd"></p>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Account</span></th>
									<th><span>Date</span></th>								
									<th><span>Type</span></th>
									<th><span>Supplier</span></th>
									<th><span>Invoice</span></th>
									<th><span>Cash Payment</span></th>
								</tr>
							</thead>
		            		<tbody data-role="listview"
		            				data-auto-bind="false"
					                data-template="cashPaymentReport-row-template"
					                data-bind="source: cashPaymentReport.dataSource" >
					        </tbody>
		            	</table>
		            </div>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="cashPaymentReport-row-template" type="text/x-kendo-tmpl">  
	<tr>  
	    <td>#=account#</td>      
	    <td>#=date#</td>
	    <td>#=type#</td>
	    <td>#=contact#</td>
	    <td><a href="\#/#=type.toLowerCase()#/#=id#">#=number#</a></td>
	    <td align="right">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>



<!-- Cash Management Dashboard -->
<script id="cashManagementDashboard" type="text/x-kendo-template" >
	<img src="<?php echo base_url();?>/assets/capital.png" class="img-capital">
	<br/>
	<div class="row-fluid">		
		<!-- Left Side -->
		<div class="span6" style="padding-left: 0;">
			<div class="cash-bg">
				<a href="">
					<div class="cash-tables">
						<table class="span12">						
							<tr>
								<td></td>
								<td style="color: #98B6D8;">Forecast</td>
								<td style="color: #98B6D8;">Actual</td>
								<td style="color: #98B6D8;">Variance</td>
								<td></td>
							</tr>					
							<tr>
								<td style="color: #fff;">Cash Receipt</td>
								<td style="color: #fff; text-align: right;">30,000</td>
								<td style="color: #fff; text-align: right;">27,000</td>
								<td style="color: #fff; text-align: right;">(3,000)</td>
								<td style="color: #fff; ">X</td>
							</tr>
							<tr>
								<td style="color: #fff;">Cash Disbursement</td>
								<td style="color: #fff; text-align: right;">20,000</td>
								<td style="color: #fff; text-align: right;">19,000</td>
								<td style="color: #fff; text-align: right;">1,000</td>
								<td style="color: #fff;">X</td>
							</tr>
							<tr>
								<td style="color: #fff;">Net Cash Flow</td>
								<td style="color: #fff; text-align: right;">10,000</td>
								<td style="color: #fff; text-align: right;">8,000</td>
								<td style="color: #fff; text-align: right;">(2,000)</td>
								<td style="color: #fff;">X</td>
							</tr>
							<tr>
								<td style="color: #fff; font-weight: 600;">Liquidity Position</td>
								<td style="color: #fff; font-weight: 600; text-align: right;">40,000</td>
								<td style="color: #fff; font-weight: 600; text-align: right;">30,000</td>
								<td style="color: #fff; font-weight: 600; text-align: right;">10,000</td>
								<td style="color: #fff; font-weight: 600;">X</td>
							</tr>
						</table>
					</div>
				</a>

				<div class="row-fluid" >
					<div class="span6" style="background: #DEEAF6; margin-right: 15px; width: 47%; ">
						<a href="#/customer_balance_summary">
							<div class="widget-body alert-info welcome-nopadding" style="width: 100%;">
								<p style="color: #000;"><span>Expected due</span></p>
						
								<div class="strong" align="center" style="color: #3475AF; font-size: 40px; margin-top: -15px; margin-bottom: 0;">$35,000</div>
							
								<table width="100%" style="color: #8E9EAE;">
									<tbody>
										<tr align="center">
											<td>										
												<span style="font-size: 25px;">15</span>
												<br>
												<span>Invoices</span>
											</td>
											<td>
												<span style="font-size: 25px;">5</span>
												<br>
												<span>Customers</span>
											</td>
											<td>
												<span style="font-size: 25px;">3</span>
												<br>
												<span>Overdue</span>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</a>
					</div>

					<div class="span6" style="background: #DEEAF6;">
						<a href="#/customer_balance_summary">
							<div class="widget-body alert-info welcome-nopadding" style="width: 100%;">
								<p style="color: #000;"><span>Amount to Pay</span></p>
						
								<div class="strong" align="center" style="color: #3475AF; font-size: 40px; margin-top: -15px; margin-bottom: 0;">$17,000</div>
							
								<table width="100%" style="color: #8E9EAE;">
									<tbody>
										<tr align="center">
											<td>										
												<span style="font-size: 25px;">10</span>
												<br>
												<span>Bills</span>
											</td>
											<td>
												<span style="font-size: 25px;">2</span>
												<br>
												<span>Operation</span>
											</td>
											<td>
												<span style="font-size: 25px;">1</span>
												<br>
												<span>Financing</span>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</a>
					</div>
				</div>
			</div>

			<div class="cash-bg" style="padding: 12px;">
				<a href="">
					<div class="cash-position">
						<div class="span5" style="padding-left: 0;">
							<span style="font-size: 24px;">CASH POSITION</span>
							<br>
							Based on your forecast
						</div>
						<div class="span4" style="text-align: center; font-size: 35px; font-weight: 600; padding-left: 0;">
							($100,000)
						</div>
						<div class="span3" style="text-align: center; margin-top: 7px; padding-right: 0;">
							Required in
							<br/>
							January 2017
						</div>
					</div>
				</a>

				<div class="row-fluid">
					<a href="">
						<div class="span6" style="background: #8397B0; text-align: center; font-size: 25px; color: #fff; padding: 10px 0; margin-right: 5px; width: 48%;">
							Banking Financing
						</div>
					</a>
					<a href="">
						<div class="span6" style="padding-left: 0; background: #8397B0; text-align: center; font-size: 25px; color: #fff; padding: 10px 0; width: 51%;">
							Alternative Financing
						</div>
					</a>
				</div>
			</div>
		</div>

		<!-- Right Side -->
		<div class="span6" style="padding-left: 0;">
			<div class="cash-bg">
				<a href="">
					<div class="cash-invoice">
						<div class="span3" style="padding-left: 0;">
							<span style="font-size: 24px; color: #40546C;">INVOICE</span>
							<br>
							<span style="color: #9EA7B8;">to be reviewed</span>
						</div>
						<div class="span5" style="color: #3F73A3; text-align: center; font-size: 35px; font-weight: 600; padding-left: 0;">
							$50,000
						</div>
						<div class="span2" style="color: #3F73A3; text-align: center; font-size: 35px; border-left: 1px solid #9DA9BF; border-right: 1px solid #9DA9BF; ">
							3
						</div>
						<div class="span2" style="text-align: center; margin-top: 7px; padding-right: 0; color: #3A4A61;">
							Attentions
							<br/>
							required
						</div>					
					</div>
				</a>
				<a href="">
					<div class="cash-invoice">
						<div class="span3" style="padding-left: 0;">
							<span style="font-size: 24px; color: #40546C;">BILLS</span>
							<br>
							<span style="color: #9EA7B8;">to be reviewed</span>
						</div>
						<div class="span5" style="color: #3F73A3; text-align: center; font-size: 35px; font-weight: 600; padding-left: 0;">
							$20,000
						</div>
						<div class="span2" style="color: #3F73A3; text-align: center; font-size: 35px; font-weight: 600; border-left: 1px solid #9DA9BF; border-right: 1px solid #9DA9BF; ">
							1
						</div>
						<div class="span2" style="text-align: center; margin-top: 7px; padding-right: 0; color: #3A4A61;">
							Potential
							<br/>
							Saving
						</div>										
					</div>
				</a>

				<div class="row-fluid">
					<a href="">
						<div class="span5" style="background: #D5DCE6;  color: #fff; padding: 10px; margin-right: 5px; ">
							<div class="span9" style="padding-left:0;">
								<span style="font-size: 24px; color: #40546C;">ACCOUNTS</span>
								<br>
								<span style="color: #9EA7B8;">to be reconciled</span>
							</div>
							<div class="span2">
								<span style="color: #3F73A3; text-align: right; font-size: 35px; font-weight: 600; ">5</span>
							</div>
						</div>
					</a>
					<a href="">
						<div class="span7" style="padding-left: 0; background: #D5DCE6; width: 57%;  padding: 10px 0; min-height: 73px;">
							<div class="span8" style="color: #3F73A3; font-size: 35px; font-weight: 600; ">
								$200,000
							</div>
							<div class="span4" style="text-align: left;  color: #3A4A61; margin-top: 6px;">
								Reconciled
								<br/>
								Cash
							</div>
						</div>
					</a>
				</div>
			</div>
			
			<div class="cash-bg" >
				<div class="row-fluid">
					<div class="span6" style="text-align: center; padding: 0;">
						<p style="margin-bottom: 15px; color: #BABABA; ">Your working capital <br> management efficiency</p>
						<a href="#/customer_balance_summary"  style=" width: 47%; ">
							<div class="widget-body alert-info welcome-nopadding" style="width: 100%; background: #D5DCE6;">
								<p style="color: #000;"><span>Cash Conversion Cycle</span></p>
						
								<div class="strong" style="color: #3475AF; font-size: 40px; margin-top: -15px; margin-bottom: 0;" align="center">55 days</div>
							
								<table style="color: #8E9EAE;" width="100%">
									<tbody>
										<tr align="center">
											<td>										
												<span style="font-size: 25px; color: #40546C;">30</span>
												<br>
												<span>Collection Days</span>
											</td>
											<td>
												<span style="font-size: 25px; color: #40546C;">15</span>
												<br>
												<span>Payments Days</span>
											</td>
											<td>
												<span style="font-size: 25px; color: #40546C;">40</span>
												<br>
												<span>Turnover Days</span>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</a>
					</div>

					<div class="span6" style="text-align: center; padding-right: 0;">
						<p style="margin-bottom: 15px; color: #BABABA; ">Your ability to meet <br> present obligation</p>
						<a href="#/customer_balance_summary" >
							<div class="widget-body alert-info welcome-nopadding" style="width: 100%; background: #D5DCE6;">
								<p style="color: #000;"><span>Current Ratio</span></p>
						
								<div class="strong" style="color: #3475AF; font-size: 40px; margin-top: -15px; margin-bottom: 0;" align="center">2x</div>
							
								<table style="color: #8E9EAE;" width="100%">
									<tbody>
										<tr align="center">
											<td>										
												<span style="font-size: 25px; color: #40546C;">0.8x</span>
												<br>
												<span>Quick <br> Ratio</span>
											</td>
											<td>
												<span style="font-size: 25px; color: #40546C;">1.5</span>
												<br>
												<span>Cash <br> Ratio</span>
											</td>
											<td>
												<span style="font-size: 25px; color: #40546C;">130%</span>
												<br>
												<span>WC to <br> Sale Ratio</span>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</a>
					</div>
				</div>
			</div>


		</div>
	</div>
</script>




<!-- ***************************
*	Report Section       *
**************************** -->
<script id="reportDashboard" type="text/x-kendo-template" >
	<div class="row-fluid">
		<div class="span12">
			<div class="span4 report-module">
				<h2 style="font-family: 'Open Sans', sans-serif;margin: 0 0 5px;font-weight: 400; color: #4d4d4d; font-size: 26px;">REPORTS</h2>
				<p style="margin: 0 0 10px; line-height: normal;">					
					This module consolidates different modules report into one place. In addition, ratio analysis is also included in this module
					
				</p>
			</div>
			<div class="span8">				
			</div>
		</div>

		<div class="span12">
			<div class="span4">
				<div class="widget widget-3 customer-border">
					<div class="widget-head header-custome">
						<h4 class="heading">
							How efficient is your working capital management?
						</h4>
					</div>					
					<div class="widget-body alert alert-primary" style="min-height: 178px; background: #203864; color: #fff;">
						<div align="center" class="text-large strong" style="font-size: 35px;">
							<span data-bind="text: ccc"></span>
							<br>
							<p style="font-size: 14px">Cash Conversion Cycle</p>
						</div>
						<table width="100%">
							<tbody>
								<tr align="center" style="vertical-align: top;">
									<td width="33%">										
										<span style="font-size: 18px;" data-bind="text: arCollectionPeriod"></span>
										<br>
										<span style="font-size: 12px;">Receivable Collection Days</span>
									</td>
									<td width="33%">
										<span style="font-size: 18px;" data-bind="text: apPaymentPeriod"></span>
										<br>
										<span style="font-size: 12px;">Payable Payment Days</span>
									</td>
									<td width="33%">
										<span style="font-size: 18px;" data-bind="text: inventoryTurnOver"></span>
										<br>
										<span style="font-size: 12px;">Inventory Turnover Days </span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>									
				</div>				
			</div>
			<div class="span4">				
				<div class="widget widget-3 customer-border">
					<div class="widget-head header-custome">
						<h4 class="heading">
							WHAT IS YOUR ABILITY TO MEET YOUR PRESENT OBLIGATIONS?
						</h4>
					</div>					
					<div class="widget-body alert-info" style="min-height: 178px; background: #0077c5; color: #fff;">
						<div align="center" class="text-large strong" style="font-size: 35px;">
							<span data-bind="text: currentRatio"></span>
							<br>
							<p style="font-size: 14px">Current Ratio</p>
						</div>
						<table width="100%">
							<tbody>
								<tr align="center" style="vertical-align: top;">
									<td width="33%">										
										<span style="font-size: 18px;" data-bind="text: quickRatio"></span>
										<br>
										<span style="font-size: 12px;">Quick Ratio</span>
									</td>
									<td width="33%">
										<span style="font-size: 18px;" data-bind="text: cashRatio"></span>
										<br>
										<span style="font-size: 12px;">Cash Ratio</span>
									</td>
									<td width="33%">
										<span style="font-size: 18px;" data-bind="text: wcSale"></span>
										<br>
										<span style="font-size: 12px;">Working Capital To Sale Ratio</span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>										
				</div>				
			</div>
			<div class="span4">	
				<div class="widget widget-3 customer-border">
					<div class="widget-head header-custome">
						<h4 class="heading">
							How profitable is your business?
						</h4>
					</div>					
					<div class="widget-body alert-info3" style="min-height: 178px; background :#21abf6; color: #fff;">
						<div align="center" class="text-large strong" style="font-size: 35px;">
							<span data-bind="text: roce"></span>
							<br>
							<p style="font-size: 14px">Return on Capital Employed</p>
						</div>						
						<table width="100%">
							<tbody>
								<tr align="center" style="vertical-align: top;">
									<td width="33%">										
										<span style="font-size: 18px;" data-bind="text: grossProfitMargin"></span>
										<br>
										<span style="font-size: 12px;">Gross Margin</span>
									</td>
									<td width="33%">
										<span style="font-size: 18px;" data-bind="text: profitMargin"></span>
										<br>
										<span style="font-size: 12px;">Earning Before interest & Tax</span>
									</td>
									<td width="33%">
										<span style="font-size: 18px;" data-bind="text: returnOnAsset"></span>
										<br>
										<span style="font-size: 12px;">Return on Asset </span>
									</td>
								</tr>
							</tbody>
						</table>
					</div>									
				</div>				
			</div>
		</div>

		<div class="span12" style="margin-top: 20px;">		
			<div class="relativeWrap" data-toggle="source-code">
				<div class="widget widget-tabs widget-tabs-gray report-tab" style="padding-bottom: 20px; background: #fff; overflow: hidden;">
					<div class="widget-head head-custom" style="height: 50px;">
						<ul>
							<li class="active"><a href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.customer"></span></a></li>
							<li><a href="#tab-2" data-toggle="tab"><i></i><span data-bind="text: lang.lang.supplier"></span></a></li>
							<li><a href="#tab-3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.products_services"></span></a></li>
							<li><a href="#tab-4" data-toggle="tab"><i></i><span data-bind="text: lang.lang.cash"></span></a></li>
							<li><a href="#tab-5" data-toggle="tab"><i></i><span data-bind="text: lang.lang.period_end"></span></a></li>
							<li><a href="#tab-6" data-toggle="tab"><i></i><span data-bind="text: lang.lang.financial_statements"></span></a></li>
							<li><a href="#tab-7" data-toggle="tab"><i></i><span data-bind="text: lang.lang.statement_reporting"></span></a></li>
							<li><a href="#tab-8" data-toggle="tab"><i></i><span data-bind="text: lang.lang.job_tracking"></span></a></li>
						</ul>
					</div>

					<div class="widget-body">
						<div class="tab-content">
					        <div class="tab-pane active" id="tab-1">									        	
								<div class="row-fluid">
									<div class="row-fluid sale-report">				
										<h2>SALE MANAGEMENT REPORTS</h2>
										<p>
											The following reports provide summary and detailed reports in 
											different ways to help analyze your revenue performance.
										</p>
										<div class="row-fluid">
											<table class="span12" style="margin-top: 10px;">
												<tr>
													<td class="span4" ><h3><a href="#/deposit_detail_by_customer">Deposit Detail by Customer</a></h3></td>
													<td class="span4" ><h3><a href="#/customer_transaction_list">Customer Transaction List</a></h3></td>
													<td class="span4" ><h3><a href="#/sale_detail_by_customer">Sale Detail by Customer</a></h3></td>
												</tr>												
												<tr>
													<td class="span4" >Provides detailed information about customer deposit for specific order, prepayment, or credit.</td>													
													<td class="span4" >List of all transactions related to and grouped by each customer, including invoice, cash sale</td>
													<td class="span4" >Lists individual sale transactions by date for each customer with a period of time.</td>
												</tr>

												<tr>													
													<td class="span4" ><h3><a href="#/sale_summary_by_customer">Sale Summary by Customer</a></h3></td>
													<td class="span4" ><h3><a href="#/sale_summary_by_product">Sale Summary by Product/ Services</a></h3></td>
													<td class="span4" ><h3><a href="#/sale_detail_by_product">Sale Detail by Product/ Services</a></h3></td>
												</tr>												
												<tr>
													<td class="span4" >Summarizes total sales for each customer within a period of time so you can see which ones generate the most revenue for you.</td>
													<td class="span4" >Summarizes total sales for each product/ service within a period of time. In addition, it also includes gross profit margin, quantity, amount, cost, and average prices.</td>
													<td class="span4" >Lists individual sale transactions by date for each product/ service with a period of time.</td>
												</tr>

												<tr>
													<td class="span4" ><h3><a href="#/sale_job_engagement">Sale by Job/Engagement</a></h3></td>
													<td class="span4" ><h3><a href="#/sale_order_list">Sale Order List</a></h3></td>
												</tr>												
											</table>
										</div>
									</div>

									<div class="row-fluid recevable-report" style="margin-top: 15px; display: inline-block;">
										<h2>RECEIVABLE MANAGEMENT REPORTS</h2>
										<p>
											The following reports provide summary and detailed reports.
										</p>
										<div class="row-fluid">
											<table class="span12" >
												<tr>
													<td class="span4" >
														<h3><a href="#/receivable_aging_detail">Receivable Aging Detail</a></h3>
													</td>
													<td class="span4" >
														<h3><a href="#/collection_report">Cash Collection Report</a></h3>
													</td>													
													<td class="span4" >
														<h3><a href="#/receivable_aging_summary">Receivable Aging Summary</a></h3>
													</td>						
												</tr>
												<tr>
													<td class="span4" >
														Lists individual unpaid invoices, grouped by customer. This includes due date, outstanding days (aging days), and amount.
													</td>
													<td class="span4" >
														Lists of collected invoices for the select period of time, group by method of payment.														
													</td>
													
													<td class="span4" >
														Lists all unpaid invoices for the current period, 30, 60, 90, 
														and more than 90 days, grouped by individual customers.
													</td>
													
												</tr>
												<tr>
													<td class="span4" >
														<h3><a href="#/invoice_list">Invoice List</a></h3>
													</td>
													
													<td class="span4" >
														<h3><a href="#/customer_balance_detail">Customer Balance Detail</a></h3>								
													</td>													
													<td class="span4" >
														<h3><a href="#/collect_invoice">List of invoices to be collected</a></h3>
													</td>
													
												</tr>
												<tr>
													<td class="span4" >
														Shows a chronological list of all your invoices for a selected date range.													
													</td>													
													<td class="span4" >
														Lists all unpaid invoices, grouped by Due today and Overdue.
													</td>
													<td class="span4" >
														Lists individual unpaid invoices for each customer
													</td>
												</tr>

												<tr>
													<td class="span4" >
														<h3><a href="#/customer_balance_summary">Customer Balance Summary</a></h3>
													</td>
													<td class="span4" >
														<h3><a href="#/customer_list">Customer List</a></h3>
													</td>
												</tr>
												<tr>													
													<td class="span4" >
														Show each customer’s total outstanding balances.
													</td>
													<td class="span4" >													
														List of all active customers													
													</td>
												</tr>

											</table>
										</div>
									</div>
									
									<div class=" span12  recevable-report" style="margin-top: 15px; display: inline-block; padding-left: 0;">
										<h2>OTHER REPORTS/ LISTS</h2>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4" >
														<h3><a href="#/customer_recurring">Recurring Customer Template List</a></h3>
													</td>
													<td class="span4" >
														<h3><a href="#/customer_setting">Payment Method & Term List</a></h3>								
													</td>
													<td class="span4"></td>						
												</tr>
												<tr>
													<td class="span4">																				
													</td>
													<td class="span4" >
															List the types of payments and the term that determine due date for payment from customers.
														
													</td>
													<td class="span4"></td>															
												</tr>
											</table>
										</div>
									</div>
								</div>
				        	</div>

				        	<div class="tab-pane" id="tab-2">								        	
					        	<div class="row-fluid">
					        		<div class="row-fluid sale-report">
										<h2>EXPENSE/PURCHASE MANAGEMENT REPORTS</h2>
										<p>
											The following reports provide summary and detailed reports in different ways to help analyze what 
											you spent and their impact on your cash flow and performance. 
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/expenses_purchase_summary_supplier">Expenses/ Purchase Summary by Supplier</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/suppliers_transaction_list">Suppliers Transaction List</a></h3>								
													</td>
													<td class="span4">
														<h3><a href="#/expenses_purchase_detail_supplier">Expenses/Purchase Detail by Supplier</a></h3>
													</td>						
												</tr>
												<tr>
													<td class="span4">
														Summarizes total expenses/ purchase for each suppliers within a period of time.
																												
													</td>
													<td class="span4">
														Lists of all transactions related to and grouped by each suppliers														
													</td>
													<td class="span4">
														Lists individual expenses/ purchase transactions by date for each supplier within a period of time.
														
													</td>													
												</tr>

												<tr>
													<td class="span4">
														<h3><a href="#/deposit_detail_supplier">Deposit Detail by Supplier</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/purchase_summary_product_services">Purchase Summary by Product/ Services</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/open_purchase_order">Open Purchase Order</a></h3>
													</td>
												</tr>
												<tr>
													<td class="span4">
															Summarizes total expenses/ purchase for each product/ service within a period of time. 
														
													</td>
													<td class="span4">
														Lists all the open purchase order grouped by suppliers including the original amount as well.
														
													</td>
													<td class="span4">
														Provides detailed information about supplier deposit for specific order, prepayment, or credit.
														
													</td>
												</tr>
												<tr>
													<td class="span4">
														<h3><a href="#/purchase_detail_product_services">Purchase Detail by Product/ Services</a></h3>
													</td>
													<td class="span4"></td>
													<td class="span4"></td>
												</tr>
												<tr>
													<td class="span4">
														Lists individual sale transactions by date for each product/ service with a period of time.
														
													</td>
													<td class="span4"></td>
													<td class="span4"></td>
												</tr>

											</table>
										</div>
									</div>

									<div class="row-fluid recevable-report" style="margin-top: 15px; display: inline-block;">
										<h2>PAYABLES MANAGEMENT REPORTS</h2>
										<p>
											The following reports provide summary and detailed reports.
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/suppliers_balance_summary">Suppliers Balance Summary</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/suppliers_balance_detail">Suppliers Balance Detail</a></h3>								
													</td>
													<td class="span4">
														<h3><a href="#/payables_aging_summary">Payables Aging Summary</a></h3>
													</td>						
												</tr>
												<tr>
													<td class="span4">
														Show each supplier’s total outstanding balances.														
													</td>
													<td class="span4">
														Lists individual unpaid bill for each supplier														
													</td>
													<td class="span4">
														Lists all unpaid bills for the current period, 30, 60, 90, and more than 90 days, grouped by individual suppliers. 
														
													</td>													
												</tr>
												
												<tr>
													<td class="span4">
														<h3><a href="#/payables_aging_detail">Payables Aging Detail</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/list_bills_paid">List of bills to be paid</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/bill_payment_list">Bill Payment Report</a></h3>
													</td>
												</tr>
												<tr>
													<td class="span4">
														Lists all unpaid invoices, grouped by Due today and Overdue.
													</td>
													<td class="span4">
														Lists of paid bills for the select period of time, group by method of payments.
													
													</td>
													<td class="span4">
														Lists individual unpaid bills, grouped by suppliers. This includes due date, outstanding days (aging days), and amount.
														
													</td>
												</tr>						

											</table>
										</div>
									</div>

									<div class="row-fluid recevable-report">
										<h2>OTHER REPORTS/ LISTS</h2>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<!-- <td class="span4">
														<h3><a href="#/product_service_list">Product/ Service List</a></h3>
													</td> -->
													<td class="span4">
														<h3><a href="#/supplier_list">Supplier List</a></h3>								
													</td>
													<td class="span4">
														<h3><a href="#/customer_recurring">Recurring Supplier Template List</a></h3>								
													</td>
													<td class="span4">
													</td>						
												</tr>
												<tr>
													<!-- <td class="span4">
														Lists the products and services you purchase. The following information is included: name, 
															description, cost, sales price, and quantity on hand.
													</td> -->
													<td class="span4">
														Lists of all active suppliers
													</td>
													<td class="span4">
													</td>
													<td class="span4">
													</td>						
												</tr>												
											</table>
										</div>
									</div>
					        	</div>
				        	</div>

				        	<div class="tab-pane" id="tab-3">								        	
					        	<div class="row-fluid">
					        		<div class="row-fluid sale-report">
										<h2>INVENTORY POSITION</h2>
										<p>
											The following reports provide summary and detailed reports on the position of inventory. 
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/inventory_position_summary">Inventory Position Summary</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/inventory_sale_item_analysis">Inventory Sale by Item Analysis</a></h3>								
													</td>
													<td class="span4">
														<h3><a href="#/inventory_position_detail">Inventory Position Detail</a></h3>
													</td>						
												</tr>
												<tr>
													<td class="span4">
														Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price. 
													</td>
													<td class="span4">
														Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.
													</td>
													<td class="span4">
														Lists individual inventory movement transactions by date for each inventory within a period of time.
													</td>
												</tr>
												<!-- <tr>													
													<td class="span4">
														<h3><a href="#/inventory_turnover_list">Inventory Turnover List</a></h3>
													</td>
												</tr>
												<tr>													
													<td class="span4">
														Provides analysis of inventory turnover days by each inventory.
													</td>
												</tr> -->
											</table>
										</div>
									</div>

									<div class="row-fluid recevable-report" style="margin-top: 15px; display: inline-block;">
										<h2>INVENTORY MOVEMENT REPORTS</h2>
										<p>
											The following reports provide summary and detailed reports on the movement of the inventories
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/inventory_movement_summary">Inventory Movement Summary</a></h3>
													</td>
													<!-- <td class="span4">
														<h3><a href="#/inventory_movement_detail">Inventory Movement Detail</a></h3>								
													</td> -->
													<td class="span4">
														<h3><a href="#/purchase_summary_product_services">Purchase by Supplier Summary</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/purchase_detail_product_services">Purchase by Supplier Detail</a></h3>
													</td>					
												</tr>
												<tr>
													<td class="span4">
														Shows the movement of each inventory by opening balance, sale, purchase and adjustment. 
													</td>
													<!-- <td class="span4">
														Lists of all detailed transactions related to and grouped by each inventory
													</td> -->
													<td class="span4">
														Lists all inventory purchases from each suppliers
													</td>
													<td class="span4">
														Lists all inventory sold to each customer
													</td>
												</tr>
												
												<tr>
													<!-- <td class="span4">
														<h3><a href="#/purchase_detail_product_services">Purchase by Supplier Detail</a></h3>
													</td> -->
													<td class="span4">
														<h3><a href="#/sale_summary_by_customer">Sale by Customer Summary</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/sale_detail_by_customer">Sale by Customer Detail</a></h3>
													</td>
												</tr>
												<tr>
													<!-- <td class="span4">
														Lists all inventory sold to each customer
													</td> -->
													<td class="span4">
														Lists of detailed inventory sale transactions to each customer
													</td>
													<td class="span4">
														Lists of detailed inventory purchase transactions from each suppliers
													</td>
												</tr>
												
											</table>
										</div>
									</div>
									<!-- <div class="span12 recevable-report" style="margin-top: 15px; display: inline-block; padding-left: 0;">
										<h2>OTHER REPORTS/ LISTS</h2>
										<p>
											The following reports provide summary and detailed reports on the movement of the inventories
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/inventory_list">Inventory List</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/">Recurring Inventory Template List</a></h3>
													</td>
													<td class="span4">								
													</td>						
												</tr>
												<tr>
													<td class="span4">
														Lists the products you purchase and sold. The following information is included: name, description, cost, sales price, and quantity on hand.		
													</td>
													<td class="span4">								
													</td>
													<td class="span4">								
													</td>
												</tr>
												
											</table>
										</div>
									</div> -->
					        	</div>
				        	</div>

				        	<div class="tab-pane" id="tab-4">
				        		<!-- <div align="center" style="min-height: 150px;">
				        			<h1 style="font-style: 30px; margin-top: 20px;">Coming Soon</h1>
				        		</div> -->
				        		<div class="row-fluid">
									<div class="row-fluid sale-report" style="margin-top: 15px;">
										<h2>CASH POSITION</h2>
										<p>
											The following reports provide summary and detailed reports on your cash position and related cash transactions.  
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/cash_movement">Cash Movement</a></h3>
													</td>													
													<td class="span4">
														<h3><a href="#/collection_report">Cash Collection Report</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/bill_payment_list">Bill Payment Report</a></h3>
													</td>
												</tr>
												<tr>
													<td class="span4">
														List of detail movement transaction by each Cash & Cash Equivalent accounts 
													</td>
													<td class="span4">
														Lists of collected invoices for the select period of time, group by method of payment.
													</td>
													<td class="span4">
														Lists of paid bills for the select period of time, group by method of payments.
													</td>
													
												</tr>
											</table>					
										</div>
									</div>									
					        	</div>						        	
					        	<!-- <div class="row-fluid">
									<div class="row-fluid sale-report" style="margin-top: 15px;">
										<h2>CASH POSITION</h2>
										<p>
											The following reports provide summary and detailed reports on employee related transactions.  
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/cash_position_report">Cash Position Report</a></h3>
													</td>
													<td class="span4">
														<h3>Cash Payment Report (Coming Soon)</h3>
													</td>
													<td class="span4">
														<h3>Cash Receipt Report (Coming Soon)</h3>
													</td>
												</tr>
												<tr>
													<td class="span4">
														Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price. 
													</td>
													<td class="span4">
														Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.
													</td>
													<td class="span4">
														Lists individual inventory movement transactions by date for each inventory within a period of time.
													</td>
												</tr>
												<tr>													
													<td class="span4">
														<h3>Reconciliation Report (Coming Soon)</h3>
													</td>
												</tr>
												<tr>													
													<td class="span4">
														List of all cash related reconciliation reports.
													</td>
												</tr>
											</table>					
										</div>
									</div>									
					        	</div> -->
				        	</div>

				        	<div class="tab-pane" id="tab-5">								        	
					        	<div class="row-fluid">
					        		<div class="row-fluid sale-report">
										<h2>PERIOD-END CLOSING REPORTS</h2>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/journal_report">Journal Entry Report</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/general_ledger">General Ledger</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/trial_balance">Trial Balance</a></h3>
													</td>					
												</tr>
												<tr>
													<td class="span4">
														Lists all accounting transactions within a period of time into debits and credits and displays them chronologically.
													</td>
													<td class="span4">
														Groups all accounting transactions by each account in your chart of accounts within a period of time into debits, credits, and balances.
													</td>
													<td class="span4">
														Summarizes each account balance on your chart of accounts in the format of debit and credit within a period of time
													</td>
												</tr>

												<!-- <tr>
													<td class="span4">
														<h3><a href="#/transaction_list_date">Transaction List by Date</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/recent_transactions_list">Recent Transactions List</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/">Period-End Closing Checklist</a></h3>
													</td>
												</tr>
												<tr>
													<td class="span4">
														This is similar with journal entry; however, it does not include debit and credit. In addition, it includes not financial transactions, such as sale order or purchase order.
													</td>
													<td class="span4">
														Lists all transaction recorded or edited within the last five days.
													</td>
													<td class="span4">
														
													</td>
												</tr> -->
											</table>
										</div>
									</div>									
					        	</div>

					        	<div class="span12 recevable-report" style="margin-top: 15px; display: inline-block; padding-left: 0;">
										<h2>OTHER REPORTS/ LISTS</h2>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/chart_of_account">Chart of Account </a></h3>
													</td>
													<td class="span4"></td>
													<td class="span4"></td>
													<!-- <td class="span4">
														<h3><a href="#/audit_trial_report">Audit Trial Report</a></h3>								
													</td>
													<td class="span4">
														<h3><a href="#/recurring_journal_list">Recurring Journal List</a></h3>							
													</td>	 -->					
												</tr>
												<tr>
													<td class="span4">
														Lists of all accounts with name, type, and balance.
													</td>
													<td class="span4"></td>
													<td class="span4"></td>
												</tr>
												<!-- <tr>
													<td class="span4">
														<h3><a href="#/">Realized Exchange Gains & Losses</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/">Unrealized Exchange Gains & Losses</a></h3>							
													</td>						
												</tr>
												<tr>
													<td class="span4">
														This detailed report lists foreign transactions that are closed (referred to as realized gains and losses) and totals the gains and losses due to changes in exchange rates.
													</td>
													<td class="span4">
														This summary report lists your foreign accounts and calculates the potential gain or loss for each account.
													</td>							
												</tr>			 -->									
											</table>
										</div>
									</div>

				        	</div>

				        	<div class="tab-pane" id="tab-6">								        	
					        	<div class="row-fluid">

									<div class="row-fluid recevable-report" style="margin-top: 15px;">
										<h2>FINANCIAL STATEMENTS</h2>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/statement_profit_loss">Statement of Profit or Loss</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/statement_financial_position">Statement of Financial Position</a></h3>								
													</td>
													<td class="span4">
														<!-- <h3><a href="#/statement_profit_loss_comparison">Statement of Profit or Loss Comparison</a></h3> -->
													</td>					
												</tr>
												<tr>
													<td class="span4">
														Provides the progress of your company’s financial performance, summarized in a record of income generated and expenses incurred over a given period.
													</td>
													<td class="span4">
														Provides the snapshot of your company’s financial position on value and ownership. It is the relationship of the company’s assets, liabilities and equities as of a specific date.
													</td>
													<td class="span4">
														<!-- Shows a year-over-year comparison of your financial performance. -->
													</td>													
												</tr>
												<!-- <tr>
													<td class="span4">
														<h3><a href="#/statement_financial_position_comparison">Statement of Financial Position Comparison</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/statement_cash_flow">Statement of Cash Flow</a></h3>
													</td>
													<td class="span4">
														<h3><a href="#/statement_changes_equity">Statement of Changes in Equity</a></h3>
													</td>
												</tr>
												<tr>
													<td class="span4">
														Shows cash generated by your company operating activities, cash spent on investing in your company assets long term asset, and cash in or out from your own share or financial institutions.
													</td>
													<td class="span4">
														Shows the movement of your paid-up capital, dividends, the effects of changes in accounting policies and corrections of errors recognized in the period, and the profit or loss for a reporting period
													</td>
													<td class="span4">
														Shows a year-over-year comparison of your financial position.
													</td>
												</tr> -->

											</table>
										</div>
									</div>

									

									
					        	</div>
				        	</div>

				        	<div class="tab-pane" id="tab-7">
				        		<div class="row-fluid">
					        		<div class="row-fluid sale-report">
										<h2>SEGMENT REPORTS</h2>
										<p>
										</p>
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/journal_report_by_segment">Journal Entry Report With Segment</a></h3>
													</td>
													<td class="span4">							
													</td>
													<td class="span4">														
													</td>						
												</tr>
											</table>
										</div>
									</div>									
					        	</div>
				        	</div>

				        	<div class="tab-pane" id="tab-8">
				        		<!-- <div align="center" style="min-height: 150px;">
				        			<h1 style="font-style: 30px;margin-top: 20px;">Coming Soon</h1>
				        		</div> -->

				        		<div class="row-fluid">
									<div class="row-fluid sale-report" style="margin-top: 15px;">
										<h2>Job Tracking Reports</h2>
										<!-- <p>
											The following reports provide summary and detailed reports on your cash position and related cash transactions.  
										</p> -->
										<div class="row-fluid">
											<table class="span12">
												<tr>
													<td class="span4">
														<h3><a href="#/profitability_summary_job">Profitability Summary by Job</a></h3>
													</td>													
													<td class="span4">
														<h3><a href="#/profitability_detail_job">Profitability Detail by Job</a></h3>
													</td>
													<td class="span4">														
													</td>
												</tr>
											</table>					
										</div>
									</div>									
					        	</div>	
				        	</div>

					    </div>
					</div>
				</div>
			</div>		
		</div>
	</div>
</script>
<script id="profitabilitySummaryJob" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>										
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

										<!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

							        	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
													<td style="width: 400px; padding-right: 5px !important">
														<span data-bind="text: lang.lang.customers"></span>
														<input id="cbbContact" name="cbbContact"
														   data-role="combobox"
										                   data-header-template="contact-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.contact_id,
										                              source: contactDS,
										                              events:{ change: contactChanges }"
										                   data-placeholder="Type Name.."                    
										                   required data-required-msg="required" style="width: 100%" />
													</td>
									            	<td>
														<span data-bind="text: lang.lang.job"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="job-header-tmpl"
															   data-item-template="job-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.jobs, 
															   			source: jobDS"
															   data-placeholder="Select Jobs.."
															   style="width: 100%" /></select>
													</td>

													<td style="padding-top: 24px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-3">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>

								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Profitability Summary by Job</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<div class="row-fluid">
							<div class="span5">
								<div class="total-customer">
									<div class="span6">
										<p>Job</p>
										<span data-bind="text: dataSource.total"></span>
									</div>
									<div class="span6">
										<p>Total Reveune</p>
										<span data-bind="text: revenue"></span>
									</div>
								</div>
							</div>
							<div class="span7">
								<div class="total-customer">
									<div class="span6">
										<p>Total Expense</p>
										<span data-bind="text: expense"></span>
									</div>
									<div class="span6">
										<p>Profit</p>
										<span data-bind="text: profit"></span>
									</div>									
								</div>
							</div>
						</div>

						<table class="table table-borderless table-condensed ">
							<thead>
								<tr>
									<th><span>Job</span></th>
									<th><span>Type</span></th>
									<th><span>Reference</span></th>
									<th style="text-align: right;"><span>Revenue</span></th>
									<th style="text-align: right;"><span>Expense</span></th>
									<th style="text-align: right;"><span>Profit</span></th>
									<th style="text-align: right;"><span>Margin</span></th>
								</tr>
							</thead>
					        <tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="profitabilitySummaryJob-template"
					        		data-bind="source: dataSource"></tbody>				        	
		            	</table>
		            </div>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="profitabilitySummaryJob-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#=name#</td>
		<td>#=type#</td>
		<td>#=number#</td>
		<td style="text-align: right;">#=kendo.toString(revenue, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(expense, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(revenue-expense, "c2", banhji.locale)#</td>
		<td style="text-align: right;">#=kendo.toString(expense/revenue, "p2")#</td>
	</tr>
</script>
<script id="profitabilityDetailJob" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i><span data-bind="text: lang.lang.date"></span></a></li>										
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i><span data-bind="text: lang.lang.print_export"></span></a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->								
								<div class="widget-body">
									<div class="tab-content">

										<!-- Date -->
								        <div class="tab-pane active" id="tab-1">									        	
											
											<input data-role="dropdownlist"
												   class="sorter"                  
										           data-value-primitive="true"
										           data-text-field="text"
										           data-value-field="value"
										           data-bind="value: sorter,
										                      source: sortList,                              
										                      events: { change: sorterChanges }" />

											<input data-role="datepicker"
												   class="sdate"
												   data-format="dd-MM-yyyy"
										           data-bind="value: sdate,
										           			  max: edate"
										           placeholder="From ..." >

										    <input data-role="datepicker"
										    	   class="edate"
										    	   data-format="dd-MM-yyyy"
										           data-bind="value: edate,
										                      min: sdate"
										           placeholder="To ..." >

										  	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>

							        	<!-- Filter -->
								        <div class="tab-pane" id="tab-2">
											<table class="table table-condensed">
												<tr>
									            	<td style="padding: 8px 0 0 0 !important; ">
														<span data-bind="text: lang.lang.job"></span>
														<select data-role="multiselect"
															   data-value-primitive="true"
															   data-header-template="job-header-tmpl"
															   data-item-template="job-list-tmpl"
															   data-value-field="id"
															   data-text-field="name"
															   data-bind="value: obj.jobs, 
															   			source: jobDS"
															   data-placeholder="Select Jobs.."
															   style="width: 100%" /></select>
													</td>													
													<td style="padding-top: 23px !important; float: left;">
										  				<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
													</td>
												</tr>
											</table>
							        	</div>

							        	<!-- PRINT/EXPORT  -->
								        <div class="tab-pane" id="tab-3">								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: printGrid" style="width: 80px;"><i></i> Print</span>
								        	<!-- <span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span> -->
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: ExportExcel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>

								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
			    	<div id="invFormContent">
						<div class="block-title">
							<h3 data-bind="text: company.name"></h3>
							<h2>Profitability Detail By Job</h2>
							<p data-bind="text: displayDate"></p>
						</div>

						<table class="table table-borderless table-condensed">
							<thead>
								<tr>
									<th><span data-bind="text: lang.lang.type"></span></th>
									<th style="width: 10%;"><span data-bind="text: lang.lang.date"></span></th>
									<th style="width: 15%;"><span data-bind="text: lang.lang.reference_no"></span></th>
									<th><span data-bind="text: lang.lang.description"></span></th>
									<th class="right">Revenue</th>
									<th class="right">Expense</th>
								</tr>
							</thead>
							<tbody data-role="listview"
					        		data-auto-bind="false"
					        		data-template="profitabilityDetailJob-template"
					        		data-bind="source: dataSource"></tbody>
						</table>				  
					</div>
				</div>
			</div>						
		</div>
	</div>
</script>
<script id="profitabilityDetailJob-template" type="text/x-kendo-tmpl">
	<tr>
		<td colspan="6" style="font-weight: bold; color: black;">#: name #</td>
	</tr>
	#var totalRevenue = 0;#
	#var totalExpense = 0;#
	#for(var i=0; i<line.length; i++){#
	#totalRevenue += line[i].revenue;#
	#totalExpense += line[i].expense;#
	<tr>
		<td style="padding-left: 20px !important;">
			<a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].type#</a>
		</td>
		<td>#=kendo.toString(new Date(line[i].issued_date), "dd-MM-yyyy")#</td>
		<td><a href="\#/#=line[i].type.toLowerCase()#/#=line[i].id#"><i></i> #=line[i].number#</a></td>
		<td>#=line[i].description#</td>
		<td style="text-align: right;">
			#=kendo.toString(line[i].revenue, "c2", banhji.locale)#
		</td>
		<td style="text-align: right;">
			#=kendo.toString(line[i].expense, "c2", banhji.locale)#
		</td>
	</tr>
    #}# 
    <tr>
		<td colspan="4" style="text-align: right; color: black; font-weight: bold;">Total</td>
		<td style="text-align: right; color: black; font-weight: bold; border-top: 1px solid black !important;">
			#=kendo.toString(totalRevenue, "c2", banhji.locale)#
		</td>
		<td style="text-align: right; color: black; font-weight: bold; border-top: 1px solid black !important;">
			#=kendo.toString(totalExpense, "c2", banhji.locale)#
		</td>
	</tr>
	<tr>
		<td colspan="4" style="text-align: right; color: black; font-weight: bold;">Profit</td>
		<td></td>
		<td style="text-align: right; color: black; font-weight: bold;">
			#=kendo.toString(totalRevenue-totalExpense, "c2", banhji.locale)#
		</td>
	</tr>
	<tr>
		<td colspan="4" style="text-align: right; color: black; font-weight: bold;">Margin</td>
		<td></td>
		<td style="text-align: right; color: black; font-weight: bold;">
		#=kendo.toString(totalExpense/totalRevenue, "p2")#
		</td>
	</tr>
    <tr>
    	<td colspan="6">&nbsp;</td>
    </tr>  
</script>




<!-- ***************************
*	Template List Section     *
**************************** -->
<script id="contact-list-tmpl" type="text/x-kendo-tmpl">
	<span>#=abbr##=number#</span>	
	<span>#=name#</span>	
</script>
<script id="contact-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer">+ Add New Customer</a></li>
    </strong>
</script>
<script id="supplier-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor">+ Add New Supplier</a></li>
    </strong>
</script>
<script id="currency-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=code# - #=country#
	</span>
</script>
<script id="segment-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/segment">+ Add New Segment</a>
    </strong>
</script>
<script id="segment-list-tmpl" type="text/x-kendo-tmpl">
	<span>#=code#</span> <span>#=name#</span>
</script>
<script id="job-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/job">+ Add New Job</a>
    </strong>
</script>
<script id="job-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# #=name#
	</span>
</script>

<script id="customer-type-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer_setting">+ Add New Customer Type</a>
    </strong>
</script>
<script id="customer-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer">+ Add New Customer</a>
    </strong>
</script>
<script id="customer-payment-method-header-tmpl" type="text/x-kendo-tmpl">
	<strong>
    	<a href="\#/customer_setting">+ Add New Payment Method</a>
    </strong>	
</script>
<script id="customer-term-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer_setting">+ Add New Term</a>
    </strong>
</script>

<script id="employee-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="<?php echo base_url(); ?>admin\#employeelist">+ Add New Employee</a>
    </strong>
</script>

<script id="item-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item">+ Add New Item</a> &nbsp;&nbsp;
    	<a href="\#/item_service">+ Add New Service</a>
    </strong>
</script>
<script id="item-list-tmpl" type="text/x-kendo-tmpl">
	<span style="width:65%; float: left">
		#=abbr##=number# #=name#
	</span>
	<span class="pull-right">#=category#</span>	
</script>
<script id="item-group-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Group</a>
    </strong>
</script>
<script id="item-category-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Category</a>
    </strong>
</script>
<script id="item-brand-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Brand</a>
    </strong>
</script>
<script id="item-measurement-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Measurement</a>
    </strong>
</script>

<script id="vendor-type-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor_setting">+ Add New Supplier Type</a>
    </strong>
</script>
<script id="vendor-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor">+ Add New Supplier</a>
    </strong>
</script>
<script id="vendor-payment-method-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor_setting">+ Add New Payment Method</a>
    </strong>
</script>
<script id="vendor-payment-term-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor_setting">+ Add New Payment Term</a>
    </strong>
</script>

<script id="cash-payment-method-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/cash_seting">+ Add New Payment Method</a>
    </strong>
</script>
<script id="cash-payment-term-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/cash_seting">+ Add New Payment Term</a>
    </strong>
</script>

<script id="account-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/account">+ Add New Account</a>
    </strong>
</script>
<script id="account-list-tmpl" type="text/x-kendo-tmpl">	
	<span>
		#=number#				
	</span>
	-
	<span>#=name#</span>
</script>
<script id="account-type-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer_setting">+ Add New Customer Type</a>
    </strong>
</script>
<script id="account-type-list-tmpl" type="text/x-kendo-tmpl">	
	<span>
		#=number#				
	</span>
	-
	<span>#=name#</span>
</script>

<script id="tax-header-tmpl" type="text/x-kendo-tmpl">
	<strong>
    	<a href="\#/tax">+ Add New Tax</a>
    </strong>	
</script>

<script id="reference-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# :
		#if(type=="GDN" || type=="GRN"){# 
			#=kendo.toString(amount, "n")#
		#}else{#
			#=kendo.toString(amount - amount_paid, "c", locale)#
		#}#
	</span>
	<span class="pull-right">
		#if(type=="GDN" || type=="GRN"){# 
			#if(status==1){#
				Used			
			#}else{#
				Open
			#}#
		#}else{#
			#if(status==1){#
				Paid
			#}else if(status==2){#
				Partially Paid
			#}else{#
				Open
			#}#
		#}#		
	</span>
</script>
<script id="attachment-rith-list-tmpl" type="text/x-kendo-tmpl">
	<tr>
		<td>
			<input id="txtName-#:uid#" name="txtName-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: name" />
		</td>
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>#=kendo.toString(created_at, "dd-MM-yyyy")#</td>
		<td>
			#if(id){#
				<a href="#=url#" target="_blank" class="btn-action glyphicons download btn-default"><i></i></a>
			#}#
			<span class="btn-action glyphicons remove_2 btn-danger" data-bind="click: onRemove"><i></i></span>			
		</td>
	</tr>
</script>
<script id="attachment-list-tmpl" type="text/x-kendo-tmpl">
	<tr>
		<td>
			<input id="txtName-#:uid#" name="txtName-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: name" />
		</td>
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>#=kendo.toString(created_at, "dd-MM-yyyy")#</td>
		<td>
			#if(id){#
				<a href="#=url#" target="_blank" class="btn-action glyphicons download btn-default"><i></i></a>
			#}#
			<span class="btn-action glyphicons remove_2 btn-danger" data-bind="click: removeFile"><i></i></span>			
		</td>
	</tr>
</script>
<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong-pass">
        <img style="float: left; cursor: pointer;" src="http://demos.telerik.com/kendo-ui/content/web/notification/error-icon.png" />        
        <h3>#= message #</h3>
    </div>
</script>
<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="http://demos.telerik.com/kendo-ui/content/web/notification/success-icon.png" />
        <h3>#= message #</h3>
    </div>
</script>

<!-- ***************************
*	Import Section      	  *
**************************** -->
<script id="importView" type="text/x-kendo-template">	
	<div  class="row-fluid saleSummaryCustomer">
		<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

        <h2 data-bind="">Imports</h2>
	    <br>		
		<!-- Tabs -->
		<div class="relativeWrap" data-toggle="source-code">
			<div class="widget widget-tabs widget-tabs-double-2 widget-tabs-gray">
			
				<!-- Tabs Heading -->
				<div class="widget-head">
					<ul style="padding-left: 1px;">
						<li class="active"><a class="glyphicons user" href="#tabContact" data-toggle="tab"><i></i><span style="line-height: 55px;">Contact</span></a></li>
						<li><a class="glyphicons list" href="#tabInventery" data-toggle="tab"><i></i><span style="line-height: 55px;">Inventory</span></a></li>
						<li><a class="glyphicons credit_card" href="#tabJournal" data-toggle="tab"><i></i><span style="line-height: 55px;">Journal</span></a></li>
						<!-- <li><a class="glyphicons notes" href="#tabChartAccount" data-toggle="tab"><i></i><span style="line-height: 55px;">Chart of Account</span></a></li> -->
					</ul>
				</div>
				<!-- // Tabs Heading END -->
				
				<div class="widget-body">
					<div class="tab-content">
						<div id="loadImport" style="display:none;text-align: center;position: absolute;width: 100%; height: 70%;background: rgba(142, 159, 167, 0.8);z-index: 9999;">
							<i class="fa fa-circle-o-notch fa-spin" style="font-size: 50px;color: #fff;position: absolute; top: 35%;left: 45%"></i>
						</div>
						<!-- Tab content -->
						<div id="tabContact" style="border: 1px solid #ccc" class="tab-pane active widget-body-regular">
							
							<h4 class="separator bottom" style="margin-top: 10px;">Please upload contacts file</h4>
							<a href="<?php echo base_url(); ?>assets/imports/contact_import_form_excel.xlsx" download>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons download" style="width: 200px!important;position: absolute;top: 85px;right: 10px;">
									<i></i> 
									<span >Download file example</span>
								</span>
							</a>
							<div class="fileupload fileupload-new margin-none" data-provides="fileupload">
							  	<input type="file"  data-role="upload" data-show-file-list="true" data-bind="events: {select: contact.onSelected}" id="myFile"  class="margin-none" />
							</div>
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 160px!important;"><i></i>
							<span data-bind="click: contact.save, text: lang.lang.import_contact">Import Contact</span></span>
							

						</div>
						<!-- // Tab content END -->
					
						<!-- Tab content -->
						<div id="tabInventery" style="border: 1px solid #ccc" class="tab-pane widget-body-regular">
							
							<h4 class="separator bottom" style="margin-top: 10px;">Please upload Inventory file</h4>
							<a href="<?php echo base_url(); ?>assets/imports/items_import_form_excel.xlsx" download>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons download" style="width: 200px!important;position: absolute;top: 85px;right: 10px;">
									<i></i> 
									<span >Download file Example</span>
								</span>
							</a>
							<div class="fileupload fileupload-new margin-none" data-provides="fileupload">
							  	<input type="file"  data-role="upload" data-show-file-list="true" data-bind="events: {select: item.onSelected}" id="myFile"  class="margin-none" />
							</div>
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 160px!important;"><i></i>
							<span data-bind="click: item.save, text: lang.lang.import_inventory">Import Inventory</span></span>
						</div>
						<!-- // Tab content END -->
						
						<!-- Tab content -->
						<div id="tabJournal" style="border: 1px solid #ccc" class="tab-pane widget-body-regular">
							
							<h4 class="separator bottom" style="margin-top: 10px;">Please upload Journal file</h4>
							<a href="<?php echo base_url(); ?>assets/imports/journal_import_form_excel.xlsx" download>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons download" style="width: 200px!important;position: absolute;top: 85px;right: 10px;">
									<i></i> 
									<span >Download file Example</span>
								</span>
							</a>
							<div class="fileupload fileupload-new margin-none" data-provides="fileupload">
							  	<input type="file"  data-role="upload" data-show-file-list="true" data-bind="events: {select: journal.onSelected}" id="myFile"  class="margin-none" />
							</div>
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 160px!important;"><i></i>
							<button style="background: none;border: none;" data-bind="disabled: journal.enabled, click: journal.save, text: lang.lang.import_journal">Import Journal</button></span><br>

							<span id="printG" class="btn btn-icon btn-primary glyphicons print" style="width: 100px!important; display: none;background: #a22314;right: 11px;top: 194px;position: absolute;border: none;" data-bind="visible: journal.enabled"><i></i>
							<button style="background: none;border: none;" data-bind="click: printGrid, text: lang.lang.print">Print</button></span>
							<div id="invFormContent">
								<p style="margin-top: 10px;" data-bind="visible: journal.enabled"><b>Please check the following account numbers. Make sure they corresponse to account number in the system.</b></p>
								<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs" style="margin-top: 10px;" data-bind="visible: journal.enabled">
									<thead>
										<tr class="widget-head">
											<th width="100" data-bind="text: lang.lang.line">line</th>
											<th width="120" data-bind="text: lang.lang.trans_no">trans_no</th>
											<th width="130" data-bind="text: lang.lang.date">date</th>
											<th width="130" data-bind="text: lang.lang.number">number</th>
											<th data-bind="text: lang.lang.memo">memo</th>
											<th data-bind="text: lang.lang.account_number">account_number</th>
											<th>dr</th>
											<th>cr</th>
										</tr>
									</thead>
									<tbody style="margin-top: 10px;border: none;" 
										data-role="listview"
										data-template="importJournalErrorList" 
										data-bind="source: journal.noneAccount"
										></tbody>
								</table>
							</div>
						</div>
						<!-- // Tab content END -->
						
						<!-- Tab content -->
						<!-- <div id="tabChartAccount" style="border: 1px solid #ccc" class="tab-pane widget-body-regular">
							
							<h4 class="separator bottom" style="margin-top: 10px;">Please upload Inventory file</h4>
							<a href="<?php echo base_url(); ?>assets/imports/items_import_form_excel.xlsx" download>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons download" style="width: 200px!important;position: absolute;top: 85px;right: 10px;">
									<i></i> 
									<span >Download file Example</span>
								</span>
							</a>
							<div class="fileupload fileupload-new margin-none" data-provides="fileupload">
							  	<input type="file"  
							  		data-role="upload" 
							  		data-show-file-list="true" 
							  		data-bind="events: {select: caccount.onSelected}" id="myFile"  class="margin-none" />
							</div>
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 160px!important;"><i></i>
							<span data-bind="click: caccount.save">Import Chart of Account</span></span>
						</div> -->
						<!-- // Tab content END -->
						
					</div>
				</div>
				<div id="ntf1" data-role="notification"></div>
			</div>
		</div>
		<!-- // Tabs END -->
	</div>
</script>
<script id="importJournalErrorList" type="text/x-kendo-template">
 <tr>
 	<td>#=line#</td>
 	<td>#=trans_no#</td>
	<td>#=date#</td>
	<td>#=number#</td>
	<td>#=memo#</td>
	<td>#=account_number#</td>
	<td>
		# if(typeof dr != 'undefined') {#
			#=dr#
		#}#
	</td>
	<td>
		# if(typeof cr != 'undefined') {#
			#=cr#
		#}#
	</td>
 </tr>
</script>



<!-- ***************************
*	Menu Section         	  *
**************************** -->
<script id="accountingMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/accounting' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/accounting_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/txn_item'><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>  	
  				<li><a href='#/account'><span data-bind="text: lang.lang.add_account"></span></a></li>
  				<li><a href='#/segment'><span data-bind="text: lang.lang.add_segment"></span></a></li>
  				<!-- <li><a href='#/fixed_assets_list'><span >Add New Fixed Assets List</span></a></li>  	
  				<li><a href='#/txn_item_list'><span >Add New Transaction Item List</span></a></li> -->
  				<li> <span class="li-line"></span></li>
  				<li><a href='#/journal'><span data-bind="text: lang.lang.make_journal"></span></a></li>
  				<li><a href='#/cash_transaction'><span data-bind="text: lang.lang.make_cash_transaction"></span></a></li>
  				<li><a href='#/cash_advance'><span data-bind="text: lang.lang.make_cash_advance"></span></a></li>
  				<li><a href='#/expense'><span data-bind="text: lang.lang.make_expense"></span></a></li>
  				<li> <span class="li-line"></span></li> 		
  				<li><a href='#/currency_rate'><span data-bind="text: lang.lang.set_exchange_rate"></span></a></li>
  				<li><a href='#/accounting_recurring'><span data-bind="text: lang.lang.accounting_recurring_list"></span></a></li>
  				<li><a href='#/chart_of_account'><span data-bind="text: lang.lang.chart_of_account"></span></a></li>
  				<li><a href='#/imports'><span ></span>Imports</a></li> 			  				 		
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/accounting_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/accounting_setting' class='glyphicons settings'><i></i></a></li>	  				
	</ul>
</script>
<script id="employeeMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/employees' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/employee_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/employee'>New Employee</a></li>  				  				
  				<li><a href='#/cash_advance'>Cash Advance</a></li>
  				<li><a href='#/expense'>Expense</a></li>  				 				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/employee_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/employees_setting' class='glyphicons settings'><i></i></a></li>	  	
	</ul>
</script>
<script id="vendorMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/vendors' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/vendor_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/vendor'><span data-bind="text: lang.lang.add_supplier"></span></a></li>
  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory"></span></a></li>
  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>
  				<li><a href="#/txn_item"><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>
  				<li> <span class="li-line"></span></li>			  				
  				<li  style="padding-top: 10px;"><a href='#/purchase_order'><span data-bind="text: lang.lang.make_purchase_order"></span></a></li>
  				<li><a href='#/vendor_deposit'><span data-bind="text: lang.lang.make_vendor_deposit"></span></a></li>
  				<li><a href='#/grn'><span data-bind="text: lang.lang.make_goods_received_note"></span></a></li> 
  				<li><a href='#/purchase'><span data-bind="text: lang.lang.make_purchase"></span></a></li>  		
  				<li><a href='#/purchase_return'><span data-bind="text: lang.lang.make_purchase_return"></span></a></li>  		
  				<li><a href='#/cash_payment'><span data-bind="text: lang.lang.make_cash_payment"></span></a></li>
  				<li> <span class="li-line"></span></li> 		
  				<li><a href='#/vendor_recurring'><span data-bind="text: lang.lang.supplier_recurring_list"></span></a></li>  			 				  				 				
  				<li><a href='#/imports'><span ></span>Imports</a></li>
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/vendor_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/vendor_setting' class='glyphicons settings'><i></i></a></li>	  	
	</ul>
</script>
<script id="customerMenu" type="text/x-kendo-template">
	<ul class="topnav">
	  	<li><a href='#/customers' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/customer_center'><span data-bind="text: lang.lang.center"></span></a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/customer'><span data-bind="text: lang.lang.add_customer"></span></a></li> 
  				<li ><a href='#/job'><span data-bind="text: lang.lang.add_job"></span></a></li>
  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory"></span></a></li>
  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
  				<li ><a href="#/txn_item"><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>
  				<li> <span class="li-line"></span></li>
  				<li style="padding-top: 10px;"><a href='#/quote'><span data-bind="text: lang.lang.create_quotation"></span></a></li>  				
  				<li><a href='#/sale_order'><span data-bind="text: lang.lang.create_sale_order"></span></a></li>
  				<li><a href='#/gdn'><span data-bind="text: lang.lang.create_goods_delivery_note"></span></a></li>
  				<li><a href='#/customer_deposit'><span data-bind="text: lang.lang.create_customer_deposit"></span></a></li>
  				<li><a href='#/cash_sale'><span data-bind="text: lang.lang.create_cash_sale"></span></a></li>  
  				<li><a href='#/invoice'><span data-bind="text: lang.lang.create_invoice"></span></span></a></li>
  				<li><a href='#/cash_receipt'><span data-bind="text: lang.lang.create_cash_receipt"></span></span></a></li>
  				<li><a href='#/sale_return'><span data-bind="text: lang.lang.create_sale_return"></span></a></li>
  				<li><a href='#/statement'><span data-bind="text: lang.lang.create_statement"></span></a></li> 
  				<li> <span class="li-line"></span></li> 				
  				<li><a href='#/customer_recurring'><span data-bind="text: lang.lang.customer_recurring_list"></span></a></li>  				 				  				 				
  				<li><a href='#/imports'><span ></span>Imports</a></li>
  			</ul>
	  	</li>	  	  	
	  	<li><a href="#/customer_report_center">Reports</a></li>	  	
	  	<li><a href='#/customer_setting' class='glyphicons settings'><i></i></a></li>
	</ul>
</script>
<script id="cashMenu" type="text/x-kendo-template">
	<ul class="topnav">
	  	<li><a href='#/cashs' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/cash_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>  				  				
  				<li><a href='#/quote'>Add Quote</a></li>  				
  				<li><a href='#/sale_order'>Add Sale Order</a></li>
  				<li><a href='#/gdn'>Add Goods Delivery Note</a></li>
  				<li><a href='#/customer_deposit'>Deposit</a></li>
  				<li><a href='#/cash_sale'>Cash Sale</a></li>  				
  				<li><a href='#/invoice'><span data-bind="text: lang.invoice"></span></a></li>
  				<li><a href='#/statement'>Statement</a></li>
  				<li><a href='#/cash_receipt'>Receive Payment</a></li>
  				<li><a href="#/customerInvoiceSent">Invoice Sent To</a></li>
  				<li><a href='#/customer'>Add <span data-bind="text: lang.new_customer"></span></a></li>
  				<li><a href='#/imports'><span ></span>Imports</a></li>				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/cash_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/cash_setting' class='glyphicons settings'><i></i></a></li>	  		  	
	</ul>
</script>
<script id="inventoryMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/inventories' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/item_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/item'><span data-bind="text: lang.lang.add_inventory_for_sale"></span></a></li>
  				<li><a href='#/non_inventory_part'><span data-bind="text: lang.lang.add_noninventory_for_sale"></span></a></li>
  				<li><a href='#/item_service'><span data-bind="text: lang.lang.add_services"></span></a></li>
  				<li ><a href="#/txn_item"><span data-bind="text: lang.lang.add_transaction_item"></span></a></li>
  				<li><a href='#/item_assembly'><span data-bind="text: lang.lang.build_assembly"></span></a></li>  
  				<li><a href='#/item_catalog'><span data-bind="text: lang.lang.add_new_catalog"></span></a></li>
  				<li><a href='#/fixed_assets'><span data-bind="text: lang.lang.add_fixed_assets"></span></a></li>  		
  				<li> <span class="li-line"></span></li> 
  				<li><a href='#/grn'><span data-bind="text: lang.lang.add_received_note"></span></a></li>
  				<li><a href='#/gdn'><span data-bind="text: lang.lang.add_delivery_note"></span></a></li>
  				<li><a href='#/item_adjustment'><span data-bind="text: lang.lang.create_item_adjustment"></span></a></li>  				
  				<li><a href='#/internal_usage'><span data-bind="text: lang.lang.create_internal_usage"></span></a></li>	
  				<li><span class="li-line"></span></li> 	
  				<li><a href='#/item_recurring'>Inventory Recurring List</a></li>
  				<li><a href='#/imports'><span ></span>Imports</a></li>
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/item_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/item_setting' class='glyphicons settings'><i></i></a></li>	  	
	</ul>	
</script>
<script id="taxMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/tax' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>				 				  				
  				<li><a href='#/journal'>Journal</a></li>  				
  				<li><a href='#/tax'>Tax</a></li>
  				<li><a href='#/imports'><span ></span>Imports</a></li> 				  				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/tax_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/' class='glyphicons settings'><i></i></a></li>	  				
	</ul>
</script>
<script id="saleMenu" type="text/x-kendo-template">
	<ul class="topnav">
	  	<li><a href='#/sales' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/sale_center'><span data-bind="text: lang.lang.center"></span></a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/customer'><span data-bind="text: lang.lang.add_customer"></span></a></li> 
  				<li ><a href='#/job'><span data-bind="text: lang.lang.add_job"></span></a></li>	
  				<li><a href='#/item_catalog'><span data-bind="text: lang.lang.add_new_catalog"></span></a></li>
  				<li><a href='#/item_assembly'><span data-bind="text: lang.lang.build_assembly"></span></a></li>
  				<li> <span class="li-line"></span></li>
  				<li ><a href='#/sale'>Mobile Sale</a></li>
  				<li ><a href='#/quote'><span data-bind="text: lang.lang.create_quotation"></span></a></li>  				
  				<li><a href='#/sale_order'><span data-bind="text: lang.lang.create_sale_order"></span></a></li>  				
  				<li> <span class="li-line"></span></li> 				
  				<li><a href='#/sale_recurring'>Recurring</a></li>
  				<li><a href='#/imports'><span ></span>Imports</a></li>			 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href="#/sale_report_center">Reports</a></li>
	</ul>
</script>




<script src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/components/js/libs/localforage.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.js"></script>
<script src="https://maps.googleapis.com/maps/api/js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js"></script>
<script>
	localforage.config({
		driver: localforage.LOCALSTORAGE,
		name: 'userData'
	});	
	var banhji = banhji || {};
	var baseUrl = "<?php echo base_url(); ?>";
	var apiUrl = baseUrl + 'api/';
	banhji.s3 = "https://banhji.s3.amazonaws.com/";	
	banhji.token = null;
	banhji.no_image = "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/no_image.jpg";

	// custom widget for min and max
	kendo.data.binders.widget.max = kendo.data.Binder.extend({
		init: function(widget, bindings, options) {//call the base constructor
            kendo.data.Binder.fn.init.call(this, widget.element[0], bindings, options);
        },
        refresh: function() {
            var that = this,
            value = that.bindings["max"].get(); //get the value from the View-Model
            $(that.element).data("kendoDatePicker").max(value); //update the widget
        }
    });

    kendo.data.binders.widget.min = kendo.data.Binder.extend({
        init: function(widget, bindings, options) {
            //call the base constructor
            kendo.data.Binder.fn.init.call(this, widget.element[0], bindings, options);
        },
        refresh: function() {
            var that = this,
            value = that.bindings["min"].get(); //get the value from the View-Model
            $(that.element).data("kendoDatePicker").min(value); //update the widget
        }
    });
	// end of custom widget
	banhji.fileManagement = kendo.observable({
        dataSource: new kendo.data.DataSource({
          transport: {
            read  : {
              url: baseUrl + 'api/attachments',
              type: "GET",
              dataType: 'json',
              headers: { Institute: JSON.parse(localStorage.getItem('userData/user')).institute.id }
            },
            create  : {
              url: baseUrl + 'api/attachments',
              type: "POST",
              dataType: 'json',
              headers: { Institute: JSON.parse(localStorage.getItem('userData/user')).institute.id }
            },
            update  : {
              url: baseUrl + 'api/attachments',
              type: "PUT",
              dataType: 'json',
              headers: { Institute: JSON.parse(localStorage.getItem('userData/user')).institute.id }
            },
            destroy  : {
              url: baseUrl + 'api/attachments',
              type: "DELETE",
              dataType: 'json',
              headers: { Institute: JSON.parse(localStorage.getItem('userData/user')).institute.id }
            },
            parameterMap: function(options, operation) {
              if(operation === 'read') {
                return {
                  limit: options.take,
                  page: options.page,
                  filter: options.filter
                };
              } else {
                return {models: kendo.stringify(options.models)};
              }
            }
          },
          schema  : {
            model: {
              id: 'id'
            },
            data: 'results',
            total: 'count'
          },
          batch: true,
          serverFiltering: true,
          serverPaging: true,
          pageSize: 50
        }),
        fileArray     : [],
        onRemove      : function(e) {
          banhji.fileManagement.dataSource.remove(e.data);
        },
        onSelected    : function(e) {
          var files = e.files;
          var key = 'ATTACH_' + JSON.parse(localStorage.getItem('userData/user')).institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ files[0].name;
          banhji.fileManagement.dataSource.add({
            transaction_id  : 0,
            type            : "Transaction",
            name            : files[0].name,
            contact_id      : null,
            description     : "",
            key             : key,
            url             : "https://s3-ap-southeast-1.amazonaws.com/banhji/"+key,
            created_at      : new Date(),
            file            : files[0].rawFile
          });
        },
        allowSize	  : 0,
        transactionSize: 0,
        contactSize   : 0,
        totalSize 	  : 0,
        transactionNu : 0,
        contactNu 	  : 0,
        save                : function(contact_id){
          $.each(banhji.fileManagement.dataSource.data(), function(index, value){ 
            banhji.fileManagement.dataSource.at(index).set("transaction_id", contact_id);
            if(!value.id){
              var params = { 
                Body: value.file, 
                Key: value.key
              };
              bucket.upload(params, function (err, data) {                    
                  // console.log(err, data);
                  // var url = data.Location;
              });
            }
          });

          banhji.fileManagement.dataSource.sync();
          var saved = false;
          banhji.fileManagement.dataSource.bind("requestEnd", function(e){
            //Delete File
            if(e.type=="destroy"){
              if(saved==false && e.response){
                saved = true;
                var response = e.response.results;
                $.each(response, function(index, value){                  
                  var params = {
                    Delete: { /* required */
                      Objects: [ /* required */
                        {
                          Key: value.data.key
                        }
                      ]
                    }
                  };
                  bucket.deleteObjects(params, function(err, data) {
                    //console.log(err, data);
                  });
                });
              }
            }
            banhji.fileManagement.dataSource.data([]);
          });
        }
    });
	banhji.pageLoaded = {};
	// Initializing AWS Cognito service
	var userPool = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(poolData);
	// Initializing AWS S3 Service
	var bucket = new AWS.S3({params: {Bucket: 'banhji'}});
	banhji.accessMod = new kendo.data.DataSource({
      transport: {
        read  : {
          url: baseUrl + 'api/users/access',
          type: "GET",
          dataType: 'json'
        },
        parameterMap: function(options, operation) {
          if(operation === 'read') {
            return {
              limit: options.pageSize,
              page: options.page,
              filter: options.filter
            };
          } else {
            return {models: kendo.stringify(options.models)};
          }
        }
      },
      schema  : {
        model: {
          id: 'id'
        },
        data: 'results',
        total: 'count'
      },
      batch: true,
      serverFiltering: true,
      serverPaging: true,
      filter: {field: 'username', value: userPool.getCurrentUser() == null ? '': userPool.getCurrentUser().username},
      pageSize: 1
    });
    banhji.allowed;
	function checkRole(arg) {
		var dfd = $.Deferred();
		// var roleName = $(location).attr('hash').substr(2);
		// loop through roles if this has in the role list
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
				if(banhji.accessMod.data().length > 0) {
					for(var i = 0; i < banhji.accessMod.data().length; i++) {
						if(arg == banhji.accessMod.data()[i].name.toLowerCase()) {
							dfd.resolve(true);
							break;
						}
					}
				}
			}
		);
	}
	banhji.companyDS = new kendo.data.DataSource({
      transport: {
        read  : {
          url: baseUrl + 'api/profiles/company',
          type: "GET",
          dataType: 'json'
        },
        update  : {
          url: baseUrl + 'api/profiles/company',
          type: "PUT",
          dataType: 'json'
        },
        parameterMap: function(options, operation) {
          if(operation === 'read') {
            return {
              limit: options.pageSize,
              page: options.page,
              filter: options.filter
            };
          } else {
            return {models: kendo.stringify(options.models)};
          }
        }
      },
      schema  : {
        model: {
          id: 'id'
        },
        data: 'results',
        total: 'count'
      },
      batch: true,
      serverFiltering: true,
      serverPaging: true,
      filter: {field: 'username', value: userPool.getCurrentUser() == null ? '': userPool.getCurrentUser().username},
      pageSize: 1
    });
	banhji.profileDS = new kendo.data.DataSource({
      transport: {
        read  : {
          url: baseUrl + 'api/profiles',
          type: "GET",
          dataType: 'json',
          headers: banhji.header,
        },
        parameterMap: function(options, operation) {
          if(operation === 'read') {
            return {
              limit: options.pageSize,
              page: options.page,
              filter: options.filter
            };
          } else {
            return {models: kendo.stringify(options.models)};
          }
        }
      },
      schema  : {
        model: {
          id: 'id'
        },
        data: 'results',
        total: 'count'
      },
      batch: true,
      serverFiltering: true,
      serverPaging: true,
      filter: {field: 'username', value: userPool.getCurrentUser() == null ? '':userPool.getCurrentUser().username},
      pageSize: 100
    });
	banhji.aws = kendo.observable({
        password: null,
        confirm: null,
        email: null,
        verificationCode: null,
        cognitoUser: null,
        newPass: null,
        oldPass: null,
        image: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/blank.png",
        getImage: function() {
          banhji.profileDS.fetch(function(e){
            banhji.aws.set('image', banhji.profileDS.data()[0].profile_photo);
          });
        },
        signUp: function() {
          // e.preventDefault();
          if(this.get('password') != this.get('confirm')) {
            alert('Passwords do not match');
          } else {
            // using cognito to sign up
            var attributeList = [];

            var dataEmail = {
                Name : 'email',
                Value : this.get('email')
            };

            var attributeEmail = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute(dataEmail);

            attributeList.push(attributeEmail);

            userPool.signUp(this.get('email'), this.get('password'), attributeList, null, function(err, result){
                if (err) {
                    alert(err);
                    return;
                }
                // update attribute
                // 2. move to admin page
                // banhji.awsCognito.set('cognitoUser', result.user);
                banhji.router.navigate('confirm');
            });
          }
        },
        comfirmCode: function(e) {
           e.preventDefault();
            // confirm user verification code after signed up
            var userData = {
                Username : userPool.getCurrentUser().username,
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.confirmRegistration(this.get('verificationCode'), true, function(err, result) {
                if (err) {
                    alert(err);
                    return;
                }
                banhji.router.navigate('index');
            });
        },
        resendCode: function(e) {
          e.preventDefault();
          alert('code resent');
        },
        signIn: function() {
            var authenticationData = {
                Username : this.get('email'),
                Password : this.get('password'),
            };
            var authenticationDetails = new AWSCognito.CognitoIdentityServiceProvider.AuthenticationDetails(authenticationData);
            
            var userData = {
                Username : this.get('email'),
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.authenticateUser(authenticationDetails, {
                onSuccess: function (result) {
                    banhji.awsCognito.set('cognitoUser', cognitoUser);
                },

                onFailure: function(err) {
                    alert(err);
                },

            });
        },
        signOut: function(e){
          e.preventDefault();
          var userData = {
              Username : userPool.getCurrentUser().username,
              Pool : userPool
          };
          var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
          if(cognitoUser != null) {
              cognitoUser.signOut();
              localforage.clear().then(function(){
              	window.location.replace("<?php base_url(); ?>login");
              });              
          } else {
              console.log('No user');
          }
        },
        changePassword: function() {
            var userData = {
                Username : this.get('email'),
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.changePassword('oldPassword', 'newPassword', function(err, result) {
                if (err) {
                    alert(err);
                    return;
                }
                console.log('call result: ' + result);
            });
        },
        forgotPassword: function(e) {
            e.preventDefault();
            var userData = {
                Username : this.get('email'),
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.forgotPassword({
                onSuccess: function (result) {
                    console.log('call result: ' + result);
                },
                onFailure: function(err) {
                    alert(err);
                },
                inputVerificationCode() {
                    var verificationCode = prompt('Please input verification code ' ,'');
                    var newPassword = prompt('Enter new password ' ,'');
                    cognitoUser.confirmPassword(verificationCode, newPassword, this);
                }
            });
        },
        getCurrentUser: function() {
            var cognitoUser = null;
            if (userPool.getCurrentUser() != null) {
                cognitoUser = userPool.getCurrentUser();
            }
            return cognitoUser;
        }
    });
	// Check if user is logged and authenticated via cognito service
	if(userPool.getCurrentUser() == null) {
		// if not login return to login page		
	  	//window.location.replace('http://localhost/aws/login.html');
	} else {
	  	var cognitoUser = userPool.getCurrentUser();
	  	if(cognitoUser !== null) {
	    	// banhji.aws.getImage();
	    	cognitoUser.getSession(function(err, result) {
	      		if(result) {
	        		AWS.config.credentials = new AWS.CognitoIdentityCredentials({
	          			IdentityPoolId: 'us-east-1:35445541-da4c-4dbb-b83f-d1d0301a26a9',
	          			Logins: {
	            			'cognito-idp.us-east-1.amazonaws.com/us-east-1_56S0nUDS4' : result.getIdToken().getJwtToken()
	          			}
	        		});
	     		}
	    	});
	  	}
	}	
	var langVM = kendo.observable({
		lang 		: null,		
		localeCode 	: null,		
		changeToEn 	: function() {
			localforage.setItem("lang", "EN").then(function(value){
				location.reload(false);
			});
		},
		changeToKh 	: function() {
			localforage.setItem("lang", "KH").then(function(value){
				location.reload(false);
			});
		}
	});
	banhji.userData = JSON.parse(localStorage.getItem('userData/user')) ? JSON.parse(localStorage.getItem('userData/user')) : "";
	if(banhji.userData == "") {
		banhji.companyDS.fetch(function() {
			banhji.profileDS.fetch(function(){
				var data = banhji.companyDS.data();
				var id = 0;
				id = banhji.profileDS.data()[0].id;
				if(data.length > 0) {
					var user = {
						id: id,
						username: userPool.getCurrentUser().username,
						institute: data
					};
					localforage.setItem('user', user);
				}
				banhji.userData = JSON.parse(localStorage.getItem('userData/user'));
			});
		});
	}
	banhji.institute = banhji.userData ? banhji.userData.institute : "";
	banhji.locale = banhji.institute.currency.locale;
	banhji.localeReport = banhji.institute.reportCurrency.locale;
	banhji.header = { Institute: banhji.institute.id };	
	var dataStore = function(url) {
		var o = new kendo.data.DataSource({
			transport: {
				read 	: {
					url: url,
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: url,
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: url,
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: url,
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page: 1,
			pageSize: 100
		});
		return o;
	};
	banhji.userManagement = kendo.observable({
		lang : langVM,
		multiTaskList 		: [],
		searchText : "",
		searchType : "contacts",
		checkRole  : function(e) {
			e.preventDefault();
		if(JSON.parse(localStorage.getItem('userData/user')).role == 1) {
            banhji.router.navigate("");
          } else {
           	window.location.replace("<?php echo base_url(); ?>admin");
          }
		},
		searchContact: function() {
			this.set("searchType", "contacts");

			$("#search-placeholder").attr('placeholder', "Search Contact");
		},
		searchTransaction: function() {
			this.set("searchType", "transactions");

			$("#search-placeholder").attr('placeholder', "Search Transaction");
		},
		searchItem: function() {
			this.set("searchType", "items");

			$("#search-placeholder").attr('placeholder', "Search Item");
		},
		search: function(e) {
			e.preventDefault();
			
			banhji.searchAdvanced.set("searchText", this.get("searchText"));
			banhji.searchAdvanced.set("searchType", this.get("searchType"));
			banhji.searchAdvanced.search();
			banhji.router.navigate('/search_advanced');
		},
		removeLink 			: function(e){
			e.preventDefault();

			var data = e.data,
			index = this.multiTaskList.indexOf(data);
			
			if(data.vm!==null){				
				data.vm.cancel();
			}			

			this.multiTaskList.splice(index, 1);
		},
		removeMultiTask		: function(url){
			var self = this;

			$.each(this.multiTaskList, function(index, value){
				if(value.url==url){
					self.multiTaskList.splice(index, 1);

					return false;
				}
			});
		},
		addMultiTask 		: function(name, url, vm){
			var isExisting = false;
			$.each(this.multiTaskList, function(index, value){
				if(value.url==url){
					isExisting = true;

					return false;
				}
			});

			if(isExisting==false){
				this.multiTaskList.push({ name:name, url:url, vm:vm });
			}
		},				
		auth : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'authentication',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'authentication',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'authentication',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'authentication',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),		
		inst 	 : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/company',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'banhji/company',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'banhji/company',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'banhji/company',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		industry : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/industry',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		countries: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/countries',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		provinces: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/provinces',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		types 	 : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/types',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		instMod 	: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'admin/modules_institute',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'admin/modules_institute',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'admin/modules_institute',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'admin/modules_institute',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			filter: {field: 'id', value: 1}
			// pageSize: 100
		}),
		onSuccessUpload: function(e){
			var logo = e.response.results.url;
			this.get('newInst').set('logo', logo);
			this.saveIntitute();
			// console.log(logo);
		},	 
		close 		: function() {
			window.history.back(-1);
			if(this.inst.hasChanges()) {
				this.inst.cancelChanges();
			}
			if(this.auth.hasChanges()) {
				this.auth.cancelChanges();
			}
		},
		getUsername : function() {
			var x = banhji.userData.username.substring(0,2);
			return x.toUpperCase();
		},
		taxRegimes: [
			{ code: 'small', type: 'ខ្នាតតូច'},
			{ code: 'medium', type: 'ខ្នាតមធ្យម'},
			{ code: 'large', type: 'ខ្នាតធំ'}
		],
		currency : [
			{ code: 'KHR', locale: 'km-KH'},
			{ code: 'USD', locale: 'us-US'},
			{ code: 'VND', locale: 'vn-VN'}
		],
		username : null,
		password : null,
		_password: null,
		pwdDS 	 : new kendo.data.DataSource({
			transport: {
				create 	: {
					url: apiUrl + 'banhji/password',
					type: "POST",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 100
		}),
		validateEmail: function() {
			var sQtext = '[^\\x0d\\x22\\x5c\\x80-\\xff]';
		  	var sDtext = '[^\\x0d\\x5b-\\x5d\\x80-\\xff]';
		  	var sAtom = '[^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+';
		  	var sQuotedPair = '\\x5c[\\x00-\\x7f]';
		  	var sDomainLiteral = '\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\x5d';
		  	var sQuotedString = '\\x22(' + sQtext + '|' + sQuotedPair + ')*\\x22';
		  	var sDomain_ref = sAtom;
		  	var sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';
		  	var sWord = '(' + sAtom + '|' + sQuotedString + ')';
		  	var sDomain = sSubDomain + '(\\x2e' + sSubDomain + ')*';
		  	var sLocalPart = sWord + '(\\x2e' + sWord + ')*';
		  	var sAddrSpec = sLocalPart + '\\x40' + sDomain; // complete RFC822 email address spec
		  	var sValidEmail = '^' + sAddrSpec + '$'; // as whole string

		  	var reValidEmail = new RegExp(sValidEmail);

		  	if(!reValidEmail.test(this.get('username'))){
		  		alert("Please enter valid address");
				this.set('passed', false);
		  	}
		  	this.set('passed', false);
		},
		loginBtn : function() {
			banhji.view.layout.showIn('#content', banhji.view.loginView);
		},
		login  	 : function() {
			this.auth.query({
				filter: [
					{field: 'username', value: banhji.userManagement.get('username')},
					{field: 'password', value: banhji.userManagement.get('password')}
				]
			}).done(function(e){
				var data = banhji.userManagement.auth.data();
				if(data.length > 0) {
					var user = banhji.userManagement.auth.data()[0];
					localforage.setItem('user', user);
					if(user.institute.length === 0) {
						banhji.router.navigate('/no-page');
					} else {
						banhji.router.navigate('/');
					}
				} else {
					console.log('bad');
				}
			});
		},
		registerBtn: function() {
			banhji.view.layout.showIn('#content', banhji.view.signupView);	
		},
		logout 		: function(e) {
			e.preventDefault();
			var userData = {
              	Username : userPool.getCurrentUser().username,
              	Pool : userPool
	        };
          	var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
          	if(cognitoUser != null) {
              	cognitoUser.signOut();
              	localforage.removeItem('user').then(function() {
				    // Run this code once the key has been removed.
				    console.log('Key is cleared!');
				}).catch(function(err) {
				    // This code runs if there were any errors
				    console.log(err);
				});
              	window.location.replace("<?php echo base_url(); ?>login");
          	} else {
              	console.log('No user');
          	}
		},
		setCurrent : function(current) {
			this.set('current', current);
		},
		changePwd  : function() {
			if(this.get('password') !== this.get('_password')) {
				alert("Password does not match");
			} else {
				this.pwdDS.sync();
			}
		},
		getLogin 	: function() {
			return JSON.parse(localStorage.getItem('userData/user'));
		},
		page 	 : function() {
			if(banhji.userManagement.getLogin()) {
				if(banhji.userManagement.getLogin().perm === 1) {
					return 'admin';
				}
			} else {
				return 'home';
			}
			// if(this.getLogin()) {
			// 	return '\#/page';
			// } else {
			// 	return '\#/page/';
			// }
			
		},
		createComp : function() {
			banhji.router.navigate('/create_company');
		},
		setInstitute: function(newIns) {
			this.set('newInst', newIns);
		},
		addInst    : function() {
			this.inst.insert(0, {
				name: "",
				email: "",
				address: "",
				description: "",
				industry: {id: null, name: null},
				type: {id: null, name: null},
				country: {id: null, code: null, name: null},
				province: {id: null, local: null, english: null},
				vat_no: null,
				fiscal_date: null,
				tax_regime: null,
				locale : null,
				legal_name: null,
				date_founded: null,
				logo: ""
			});
			this.setInstitute(this.inst.at(0));
		},
		cancelInst : function() {
			this.inst.cancelChanges();
		},
		saveIntitute: function() {
			if(this.get('newInst').industry.id !== null || this.get('newInst').province.id || this.get('newInst').country.id) {
				this.inst.sync();
				this.inst.bind('requestEnd', function(e){
					var type = e.type, res = e.response.results;
					if(e.response.error === false) {
						if(e.type === 'create') {
							$('#createComMessage').text("created. Please wait till site admin created database for you.");
						} else {
							localforage.removeItem('company', function(err){
								//
							});
							localforage.setItem('company', res);
							$('#createComMessage').text("Updated");
						}
					} else {
						$('#createComMessage').text("error creating company.");
					}
				});
			} else {
				alert('filling all fields');
			}
		},
		signup 	   : function() {
			this.auth.add({username: this.get('username'), password: this.get('password')});
			this.sync();
			this.auth.bind('requestEnd', function(e){
				if(e.type === 'create' && e.response.error === false) {
					alert("អ្នកបានចុះឈ្មោះរួច");
					banhji.router.route('')
				}
			});
		},
		onFileSelect: function(e) {
			console.log(e.files[0]);
		},
		sync: function() {
			this.auth.sync();
			this.auth.bind('requestEnd', function(e){
				var type = e.type;
				var result = e.response.results;
				if(type === "read" && e.error !== true) {
					// get login info
					console.log('true');
				} else if(type === "create") {
					if(e.response.error === true) {
						banhji.userManagement.auth.cancelChanges();
						alert('មានរួចហើយ');
					} else {
						var user = banhji.userManagement.auth.data()[0];
						localforage.setItem('user', user);
						if(!user.institute) {
							banhji.router.navigate('/page', false);
						} else {
							banhji.router.navigate('/app', false);
						}
					}
				}
			});
		}
	});	
	function getDB() {
		var entity = null;
		if(banhji.userManagement.getLogin()) {
			if(banhji.userManagement.getLogin().institute) {
				if(banhji.userManagement.getLogin().institute.length > 0) {
					entity = banhji.userManagement.getLogin().institute.name
				}
				
			} else {
				entity = false
			}
		}
		return entity;
	}
	banhji.currency = kendo.observable({
		dataSource 			: dataStore(apiUrl + 'currencies'),
		getCurrencyID 		: function(locale){
			var currency_id = 0;

			$.each(this.dataSource.data(), function(index, value){
				if(value.locale===locale){
					currency_id = value.id;
					return false;
				}
			});

			return currency_id;
		}
	});
	banhji.users = kendo.observable({
		dataStore	: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/users',
					type: "GET",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'banhji/users',
					type: "POST",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'banhji/users',
					type: "PUT",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'banhji/users',
					type: "DELETE",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 100
		}),
		roleDS 		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/roles',
					type: "GET",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 100
		}),
		add 		: function() {
			banhji.view.pageAdmin.showIn('#col2', banhji.view.addUserView);
			this.dataStore.insert(0, {username: '', password: null, permission: {id: null, name: null}});
			this.setCurrent(this.dataStore.at(0));
		},
		remove 		: function(e) {
			var user = confirm('Are you sure you want to remove this user?');
			if(user === true) {
				this.dataStore.remove(e.data);
				this.sync();
			}
		},
		editRight 	: function(e) {
			banhji.view.pageAdmin.showIn('#col2', banhji.view.editRoleView);
			this.setCurrent(e.data);
		},
		cancelAdd 	: function() {
			banhji.view.pageAdmin.showIn('#col2', banhji.view.userListView);
			this.dataStore.cancelChanges();
		},
		setCurrent 	: function(current) {
			this.set('current', current);
		},
		sync 		: function() {
			this.dataStore.sync();
			this.dataStore.bind('requestEnd', function(e){
				var type = e.type;
				var data = e.response.results;
				if(type !== 'read') {
					console.log('data recorded');
				}
			});
		}
	});
	banhji.people = kendo.observable({
		dataSource : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "people",
					type: "GET",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institute.name:""
					},
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "people",
					type: "POST",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institute.name:""
					},
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "people",
					type: "PUT",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institutename:""
					},
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + "people",
					type: "DELETE",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institute.name:""
					},
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							offset: options.skip,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count',
				errors: 'error'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 20
		}),
		filterBy   : function() {},
		save 	   : function() {}
	});
	// end TEst offline
	var obj = function(url) {
		var o = kendo.observable({
			dataStore: new kendo.data.DataSource({
				transport: {
					read 	: {
						url: url,
						type: "GET",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					create 	: {
						url: url,
						type: "POST",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					update 	: {
						url: url,
						type: "PUT",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					destroy : {
						url: url,
						type: "DELETE",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					parameterMap: function(options, operation) {
						if(operation === 'read') {
							return {
								limit: options.pageSize,
								offset: options.skip,
								filter: options.filter
							};
						} else {
							return {models: kendo.stringify(options.models)};
						}
					}
				},
				schema 	: {
					model: {
						id: 'id'
					},
					data: 'results',
					total: 'count',
					errors: 'error'
				},
				batch: true,
				serverFiltering: true,
				serverPaging: true,
				pageSize: 20
			}),
			findById: function(id) {},
			findBy 	: function(arr) {},
			insert 	: function(data) {},
			remove 	: function(model) {
				this.dataStore.remove(model);
				this.save();
			},
			save 	: function() {
				this.dataStore.sync();
				this.dataStore.bind('requestEnd', function(e){
					var type = e.type, res = e.response.results;
					console.log(type + " operation is successful.");
				});
			}
		});
		return o;
	}	
	banhji.Layout = kendo.observable({
		locale: "km-KH",
		menu 	: [],
		// isShown : true,
		// isAdmin : auth.isAdmin(),
		// logout 	: function(e) {
		// 	e.preventDefault();
		// 	auth.logout();
		// },
		// isLogin : function(){
		// 	if(banhji.userManagement.getLogin()) {
		// 		return true;
		// 	} else {
		// 		return false;
		// 	}
		// },
		// init: function() {
		// 	// initialize when the whole page load
		// },
		// ui: function() {
		// 	// get UI information from source base on locale
		// }
	});	
	var role = kendo.observable({
		dataStore 	: new kendo.data.DataSource({
			transport: {
				read: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				create: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				update: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				destroy: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				parameterMap: function(data, operation) {
					if(operation === 'read') {
						return {
							limit: data.pageSize,
							offset: data.skip,
							filter: data.filter
						};
					}
					return {models: kendo.stringify(data.models)};
				}
			},
			schema: {
	        	model: {
	        		id: "id"
	        	},
	        	data: "results"
	        },
			pageSize: 20,
			serverPaging: true,
			serverFiltering: true,
			batch: true
		}),
		roleUserDs 	: new kendo.data.DataSource({
			transport: {
				read: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				create: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'POST'
				},
				update: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'PUT'
				},
				destroy: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'DELETE'
				},
				parameterMap: function(data, operation) {
					if(operation === 'read') {
						return {
							limit: data.pageSize,
							offset: data.skip,
							filter: data.filter
						};
					}
					return {models: kendo.stringify(data.models)};
				}
			},
			schema: {
	        	model: {
	        		id: "id"
	        	},
	        	data: "results"
	        },
			pageSize: 20,
			serverPaging: true,
			serverFiltering: true,
			batch: true
		}),
		find 		: function(arg) {},
		setCurrent 	: function(currentRole) {},
		save 		: function() {}
	});

	//DBS
	banhji.store = banhji.store || {};
	banhji.dbsUrl = "https://developers.dbs.com:10443/api/sg/v1/accounts/1018260032/accountHolders?productType=CA";
	banhji.dbsApiKey = "9c976436-9f86-42b1-965c-3a6d15c73d66";
	banhji.dbsToken = "bPIIqpDNbR14tBI0X+DbkVWa0Ao=";
	banhji.dbsHeaders = {
		'apiKey' 		: banhji.dbsApiKey,
		'uuid' 	 		: banhji.dbsApiKey,
		'Authorization' : banhji.dbsToken == "" ? banhji.authorization : banhji.dbsToken
	};
	banhji.store.dbsDataSource = new kendo.data.DataSource({
		transport: {
		    read: {
		    	url: banhji.dbsUrl,
		    	headers: banhji.dbsHeaders,
				type: "GET",
		        dataType: "json",
		        contentType: 'application/json'
		    }
		},
		batch: false,
		schema: {
			data: function(response) {
				var data = [];
				data.push(response);
				return data;
			}
		}
	});

	//Home Page
	banhji.index = kendo.observable({
		lang 				: langVM,
		dataSource			: dataStore(apiUrl+"dashboards/home"),
		summaryDS			: dataStore(apiUrl+"accounting_reports/financial_snapshot"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/home_graph",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),		
		companyLogo 		: '',
		modules 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'admin/modules',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'admin/modules',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'admin/modules',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'admin/modules',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		companyName 		: null,
		companyInf 			: function() {
			var company = JSON.parse(localStorage.getItem('userData/user'));
			return company;
		},
		getLogo   			: function() {
			banhji.companyDS.fetch(function(){
				if(banhji.companyDS.data().length > 0) {
					banhji.index.set('companyLogo', banhji.companyDS.data()[0].logo);
				}
			});
		},
		today 				: new Date(),
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,
		ap 					: 0,
		ap_open 			: 0,
		ap_vendor 			: 0,
		ap_overdue 			: 0,
		income 				: 0,
		expense 			: 0,
		net_income 			: 0,
		asset 				: 0,
		liability 	 		: 0,
		equity 	 			: 0,
		pageLoad 			: function(){
			var self = this;

			this.graphDS.fetch();

			this.dataSource.query({
				filter: [],
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.dataSource.view();
				
				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));

				self.set("ap", kendo.toString(view[0].ap, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ap_open", kendo.toString(view[0].ap_open, "n0"));
				self.set("ap_vendor", kendo.toString(view[0].ap_vendor, "n0"));
				self.set("ap_overdue", kendo.toString(view[0].ap_overdue, "n0"));
			});

			this.summaryDS.query({
				filter: [],
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("income", kendo.toString(view[0].income, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("expense", kendo.toString(view[0].expense, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("net_income", kendo.toString(view[0].net_income, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				
				self.set("asset", kendo.toString(view[0].asset, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("liability", kendo.toString(view[0].liability, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("equity", kendo.toString(view[0].equity, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
			});
		}
	});
	banhji.searchAdvanced =  kendo.observable({
    	lang 				: langVM,
    	contactDS 			: dataStore(apiUrl+"contacts"),
    	contactTypeDS 		: dataStore(apiUrl+"contacts/type"),
    	transactionDS 		: dataStore(apiUrl+"transactions"),
    	itemDS 				: dataStore(apiUrl+"items"),
    	accountDS 			: dataStore(apiUrl+"accounts"),
    	searchType 			: "",
    	searchText 			: "",
    	found 				: 0,
    	pageLoad 			: function(){
		},
		search 				: function(){
			var self = this, 
			searchText = this.get("searchText");
			this.set("found", 0);

			if(searchText){
				this.contactDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText },
						{ field:"surname", operator:"or_like", value: searchText },
						{ field:"name", operator:"or_like", value: searchText },
						{ field:"company", operator:"or_like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.contactDS.total();
					self.set("found", found);
				});

				this.transactionDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.transactionDS.total();
					self.set("found", found);
				});

				this.itemDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText },
						{ field:"name", operator:"or_like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.itemDS.total();
					self.set("found", found);
				});

				this.accountDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText },
						{ field:"name", operator:"or_like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.accountDS.total();
					self.set("found", found);
				});
			}
		},
		selectedContact 	: function(e){
			e.preventDefault();

			var data = e.data, 
			type = this.contactTypeDS.get(data.contact_type_id);
			
			if(type.parent_id==1){
				banhji.customerCenter.loadContact(data.id);
				banhji.router.navigate('/customer_center', false);
			}else{
				banhji.vendorCenter.loadContact(data.id);
				banhji.router.navigate('/vendor_center', false);
			}
		},
		selectedTransaction : function(e){
			e.preventDefault();

			var data = e.data;
			banhji.router.navigate('/'+data.type.toLowerCase()+'/'+data.id);
		},
		selectedItem 		: function(e){
			e.preventDefault();

			var data = e.data;
			banhji.router.navigate('/item_center/'+e.data.id);
		},
		selectedAccount 		: function(e){
			e.preventDefault();

			var data = e.data;
			banhji.router.navigate('/accounting_center/'+e.data.id);
		}
    });	


	//DAWINE -----------------------------------------------------------------------------------------
	banhji.source = kendo.observable({
		lang 						: langVM,
		countryDS					: dataStore(apiUrl + "countries"),
		//Contact
		customerList 				: [],
		supplierList 				: [],
		employeeList 				: [],
		contactDS					: dataStore(apiUrl + "contacts"),
		customerDS					: dataStore(apiUrl + "contacts"),
		supplierDS					: dataStore(apiUrl + "contacts"),
		employeeDS					: dataStore(apiUrl + "contacts"),
		//Contact Type
		contactTypeList 			: [],
		contactTypeDS				: dataStore(apiUrl + "contacts/type"),
		//Job
		jobList 					: [],
		jobDS						: dataStore(apiUrl + "jobs"),
		//Currency
		currencyList 				: [],
		currencyDS					: dataStore(apiUrl + "currencies"),
		currencyRateDS				: dataStore(apiUrl + "currencies/rate"),
		//Item
		itemList 					: [],
		itemDS						: dataStore(apiUrl + "items"),
		itemTypeDS					: dataStore(apiUrl + "item_types"),
		itemGroupList 				: [],
		itemGroupDS					: dataStore(apiUrl + "items/group"),
		brandDS						: dataStore(apiUrl + "brands"),
		categoryList 				: [],
		categoryDS					: dataStore(apiUrl + "categories"),		
		itemPriceList 				: [],
		itemPriceDS					: dataStore(apiUrl + "item_prices"),
		measurementList 			: [],
		measurementDS				: dataStore(apiUrl + "measurements"),
		//Tax
		taxList 					: [],
		taxItemDS					: dataStore(apiUrl + "tax_items"),
		//Accounting
		accountList 				: [],
		accountDS					: dataStore(apiUrl + "accounts"),
		accountTypeDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts/type",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field:"id >", value:9 },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Payment Term, Method, Segment
		paymentTermDS				: dataStore(apiUrl + "payment_terms"),
		paymentMethodDS				: dataStore(apiUrl + "payment_methods"),
		//Segment
		segmentItemList 			: [],
		segmentItemDS				: dataStore(apiUrl + "segments/item"),
		//Txn Template
		txnTemplateList 			: [],
		txnTemplateDS				: dataStore(apiUrl + "transaction_templates"),
		//Prefixes
		prefixList 					: [],
		prefixDS					: dataStore(apiUrl + "prefixes"),
		frequencyList 				: [
			{ id: 'Daily', name: 'Day' },
			{ id: 'Weekly', name: 'Week' },
			{ id: 'Monthly', name: 'Month' },
			{ id: 'Annually', name: 'Annual' }
		],
		monthOptionList 			: [
			{ id: 'Day', name: 'Day' },
			{ id: '1st', name: '1st' },
			{ id: '2nd', name: '2nd' },
			{ id: '3rd', name: '3rd' },
			{ id: '4th', name: '4th' }
		],
		monthList 					: [
			{ id: 0, name: 'January' },
			{ id: 1, name: 'February' },
			{ id: 2, name: 'March' },
			{ id: 3, name: 'April' },
			{ id: 4, name: 'May' },
			{ id: 5, name: 'June' },
			{ id: 6, name: 'July' },
			{ id: 7, name: 'August' },
			{ id: 8, name: 'September' },
			{ id: 9, name: 'October' },
			{ id: 10, name: 'November' },
			{ id: 11, name: 'December' }
		],
		weekDayList 				: [
			{ id: 0, name: 'Sunday' },
			{ id: 1, name: 'Monday' },
			{ id: 2, name: 'Tuesday' },
			{ id: 3, name: 'Wednesday' },
			{ id: 4, name: 'Thurday' },
			{ id: 5, name: 'Friday' },
			{ id: 6, name: 'Saturday' }
		],
		dayList 					: [
			{ id: 1, name: '1st' },
			{ id: 2, name: '2nd' },
			{ id: 3, name: '3rd' },
			{ id: 4, name: '4th' },
			{ id: 5, name: '5th' },
			{ id: 6, name: '6th' },
			{ id: 7, name: '7th' },
			{ id: 8, name: '8th' },
			{ id: 9, name: '9th' },
			{ id: 10, name: '10th' },
			{ id: 11, name: '11st' },
			{ id: 12, name: '12nd' },
			{ id: 13, name: '13rd' },
			{ id: 14, name: '14th' },
			{ id: 15, name: '15th' },
			{ id: 16, name: '16th' },
			{ id: 17, name: '17th' },
			{ id: 18, name: '18th' },
			{ id: 19, name: '19th' },
			{ id: 20, name: '20th' },
			{ id: 21, name: '21st' },
			{ id: 22, name: '22nd' },
			{ id: 23, name: '23rd' },
			{ id: 24, name: '24th' },
			{ id: 25, name: '25th' },
			{ id: 26, name: '26th' },
			{ id: 27, name: '27th' },
			{ id: 28, name: '28th' },
			{ id: 0, name: 'Last' }
		],
		sortList					: [
	 		{ text:"All", value: "all" },
	 		{ text:"Today", value: "today" },
	 		{ text:"This Week", value: "week" },
	 		{ text:"This Month", value: "month" },
	 		{ text:"This Year", value: "year" }
		],
		statusList 					: [
			{ "id": 1, "name": "Active" },
			{ "id": 0, "name": "Inactive" },
			{ "id": 2, "name": "Void" }
        ],
        customerFormList 			: [
	    	{ id: "Quote", name: "Quotation" },
			{ id: "Sale_Order", name: "Sale Order" },
			{ id: "Deposit", name: "Deposit" },
			{ id: "Cash_Sale", name: "Cash Sale" },
			{ id: "Invoice", name: "Invoice" },
			{ id: "Cash_Receipt", name: "Cash Receipt" },
			//{ id: "Sale_Return", name: "Sale Return" },
			{ id: "GDN", name: "Delivered Note" }
	    ],
	    vendorFormList 				: [
	    	{ id: "Purchase_Order", name: "Purchase Order" },
	    	{ id: "GRN", name: "GRN" },
			// { id: "Deposit", name: "Deposit" },
			// { id: "Purchase", name: "Purchase" },
			// { id: "Pur_Return", name: "Pur.Return" },
			{ id: "Cash_Payment", name: "Cash Payment" }
	    ],
	    cashFormList 				: [
	    	{ id: "Cash_Transfer", name: "Cash Transaction" },
	    	{ id: "Cash_Receipt", name: "Cash Receipt" },
			{ id: "Cash_Payment", name: "Cash Payment" },
			{ id: "Cash_Advance", name: "Cash Advance" },
			{ id: "Reimbursement", name: "Reimbursement" },
			{ id: "Advance_Settlement", name: "Advance Settlement" }
	    ],
	    cashMGTFormList				: [
	    	{ id: "Cash_Transfer", name: "Transfer" },
	    	{ id: "Deposit", name: "Deposit" },
			{ id: "Withdraw", name: "Withdraw" },
			{ id: "Cash_Advance", name: "Advance" },
			{ id: "Cash_Payment", name: "Payment" },
			{ id: "Reimbursement", name: "Reimbursement" },
			{ id: "Journal", name: "Journal" }
	    ],
		genderList					: ["M", "F"],
		typeList 					: ['Invoice','Commercial_Invoice','Vat_Invoice','Electricity_Invoice','Water_Invoice','Cash_Sale','Commercial_Cash_Sale','Vat_Cash_Sale','Receipt_Allocation','Sale_Order','Quote','GDN','Sale_Return','Purchase_Order','GRN','Cash_Purchase','Credit_Purchase','Purchase_Return','Payment_Allocation','Deposit','Electricty_Deposit','Water_Deposit','Customer_Deposit','Vendor_Deposit','Withdraw','Transfer','Journal','Item_Adjustment','Cash_Advance','Reimbursement','Direct_Expense','Advance_Settlement','Additional_Cost','Cash_Payment','Cash_Receipt','Credit_Note','Debit_Note','Offset_Bill','Offset_Invoice','Cash_Transfer','Internal_Usage'],
		user_id						: banhji.userData.id,
		amtDueColor 				: "#D5DBDB",
		acceptedSrc					: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/accepted.ico",
		approvedSrc					: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/approved.ico",
		cancelSrc					: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/cancel.ico",
		openSrc 					: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/open.ico",
		paidSrc 					: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/paid.ico",
		partialyPaidSrc 			: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/partialy_paid.ico",
		usedSrc 					: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/used.ico",
		receivedSrc 				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/received.ico",
		deliveredSrc 				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/delivered.ico",
		successMessage 				: "Saved Successful!",
		errorMessage 				: "Warning, please review it again!",
		confirmMessage 				: "Are you sure, you want to delete it?",
		requiredMessage 			: "Required",
		duplicateNumber 			: "Duplicate Number!",
		duplicateInvoice 			: "Duplicate Invoice!",
		selectCustomerMessage 		: "Please select a customer.",
		selectSupplierMessage 		: "Please select a supplier.",
		selectItemMessage 			: "Please select an item.",
		duplicateSelectedItemMessage: "You already selected this item.",
		pageLoad 					: function(){
			this.loadCurrencies();
			this.loadRates();
			this.loadPrefixes();
			this.loadTxnTemplates();
			this.loadTaxes();
			this.loadJobs();
			this.loadSegmentItems();
			this.loadAccounts();
			this.loadCategories();
			this.loadItemGroups();
			this.loadItems();
			this.itemTypeDS.read();
			this.loadItemPrices();
			this.loadMeasurements();
			this.loadContactTypes();
			this.loadCustomers();
			this.loadSuppliers();
			this.loadEmployees();
			this.accountTypeDS.read();
		},
		getFiscalDate 				: function(){
			var today = new Date(),	
			fDate = new Date(today.getFullYear() +"-"+ banhji.institute.fiscal_date);

			if(today < fDate){
				fDate.setFullYear(today.getFullYear()-1);
			}		

			return fDate;
		},
		loadPrefixes 				: function(){
			var self = this, raw = this.get("prefixList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.prefixDS.query({
				filter: [],
			}).then(function(){
				var view = self.prefixDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadTxnTemplates 			: function(){
			var self = this, raw = this.get("txnTemplateList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.txnTemplateDS.query({
				filter:[]
			}).then(function(){
				var view = self.txnTemplateDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadCurrencies 					: function(){
			var self = this, raw = this.get("currencyList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.currencyDS.query({
				filter:[]
			}).then(function(){
				var view = self.currencyDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadRates 					: function(){
			this.currencyRateDS.query({
				filter:[],
				sort:{ field:"date", dir:"desc"}
			});
		},
		getRate						: function(locale, date){
			var rate = 0, lastRate = 1;
			$.each(this.currencyRateDS.data(), function(index, value){
				if(value.locale == locale){
					lastRate = kendo.parseFloat(value.rate);

					if(date >= new Date(value.date)){
						rate = kendo.parseFloat(value.rate);

						return false;
					}
				}
			});

			//If no rate, use the last rate
			if(rate==0){
				rate = lastRate;
			}

			return rate;
		},
		loadTaxes 					: function(){
			var self = this, raw = this.get("taxList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.taxItemDS.query({
				filter:[]
			}).then(function(){
				var view = self.taxItemDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadJobs 					: function(){
			var self = this, raw = this.get("jobList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.jobDS.query({
				filter:[]
			}).then(function(){
				var view = self.jobDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadSegmentItems 			: function(){
			var self = this, raw = this.get("segmentItemList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.segmentItemDS.query({
				filter:{ field:"segment_id >", value: 0 }
			}).then(function(){
				var view = self.segmentItemDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadAccounts 				: function(){
			var self = this, raw = this.get("accountList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.accountDS.query({
				filter: { field:"status", value:1 }
			}).then(function(){
				var view = self.accountDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadCategories 				: function(){
			var self = this, raw = this.get("categoryList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.categoryDS.query({
				filter:[]
			}).then(function(){
				var view = self.categoryDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadItemGroups 				: function(){
			var self = this, raw = this.get("itemGroupList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.itemGroupDS.query({
				filter:[]
			}).then(function(){
				var view = self.itemGroupDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadItems 					: function(){
			var self = this, raw = this.get("itemList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.itemDS.query({
				filter:{ field:"status", value:1 }
			}).then(function(){
				var view = self.itemDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadItemPrices 				: function(){
			var self = this, raw = this.get("itemPriceList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.itemPriceDS.query({
				filter:[
					{ field:"assembly_id", value:0 },
					{ field:"status", operator:"where_related_item", value:1 }
				]
			}).then(function(){
				var view = self.itemPriceDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadMeasurements 			: function(){
			var self = this, raw = this.get("measurementList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.measurementDS.query({
				filter:[],
			}).then(function(){
				var view = self.measurementDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadContactTypes			: function(){
			var self = this, raw = this.get("contactTypeList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.contactTypeDS.query({
				filter:[]
			}).then(function(){
				var view = self.contactTypeDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadCustomers 				: function(){
			var self = this, raw = this.get("customerList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.customerDS.query({
				filter:[
					{ field:"parent_id", operator:"where_related_contact_type", value:1 },
					{ field:"status", value:1 }
				]
			}).then(function(){
				var view = self.customerDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadSuppliers 				: function(){
			var self = this, raw = this.get("supplierList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.supplierDS.query({
				filter:[
					{ field:"parent_id", operator:"where_related_contact_type", value:2 },
					{ field:"status", value:1 }
				]
			}).then(function(){
				var view = self.supplierDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		loadEmployees 				: function(){
			var self = this, raw = this.get("employeeList");

			//Clear array
			if(raw.length>0){
				raw.splice(0,raw.length);
			}

			this.employeeDS.query({
				filter:[
					{ field:"parent_id", operator:"where_related_contact_type", value:3 },
					{ field:"status", value:1 }
				]
			}).then(function(){
				var view = self.employeeDS.view();

				$.each(view, function(index, value){
					raw.push(value);
				});
			});
		},
		getPaymentTerm 				: function(id){
			var data = this.paymentTermDS.get(id);
			return data.name;
		},
		getPrefixAbbr 				: function(type){
			var abbr = "";
			$.each(this.prefixList, function(index, value){
				if(value.type==type){
					abbr = value.abbr;

					return false;
				}
			});

			return abbr;
		}
	});


	/*********************
	*  Accounting Section  *
	**********************/	
	banhji.accountingDashboard = kendo.observable({
		lang 				: langVM,
		dataSource			: dataStore(apiUrl+"accounting_reports/ratio_analysis"),
		reportCurrency 		: banhji.institute.reportCurrency.code,
		income 				: 0,
		expense 			: 0,
		net_income 			: 0,
		asset 				: 0,
		liability 	 		: 0,
		equity 	 			: 0,
		quickRatio			: 0,
		currentRatio 		: 0,
		cashRatio  			: 0,
		wcSale 				: 0,
		grossProfitMargin 	: 0,
		profitMargin 		: 0,
		returnOnAsset 		: 0,
		roce 				: 0,
		arCollectionPeriod 	: 0,
		apPaymentPeriod 	: 0,
		inventoryTurnOver 	: 0,
		ccc 				: 0,
		txnRecorded 		: 0,
		user_id 			: banhji.source.user_id,
		pageLoad 			: function(){
			var self = this;

			this.dataSource.query({
				filter: [],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.dataSource.view();
				
				self.set("income", kendo.toString(view[0].income, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("expense", kendo.toString(view[0].expense, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("net_income", kendo.toString(view[0].net_income, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				
				self.set("asset", kendo.toString(view[0].asset, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("liability", kendo.toString(view[0].liability, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("equity", kendo.toString(view[0].equity, banhji.locale=="km-KH"?"c0":"c", banhji.locale));

				self.set("quickRatio", kendo.toString(view[0].quickRatio, "n"));
				self.set("currentRatio", kendo.toString(view[0].currentRatio, "n"));
				self.set("cashRatio", kendo.toString(view[0].cashRatio, "n"));
				
				self.set("wcSale", kendo.toString(view[0].wcSale, "p"));
				self.set("grossProfitMargin", kendo.toString(view[0].grossProfitMargin, "p"));
				self.set("profitMargin", kendo.toString(view[0].profitMargin, "p"));
				self.set("returnOnAsset", kendo.toString(view[0].returnOnAsset, "n"));
				
				self.set("roce", kendo.toString(view[0].roce, "p"));
				self.set("arCollectionPeriod", kendo.toString(view[0].arCollectionPeriod, "n"));
				self.set("apPaymentPeriod", kendo.toString(view[0].apPaymentPeriod, "n"));
				self.set("inventoryTurnOver", kendo.toString(view[0].inventoryTurnOver, "n"));
				self.set("ccc", kendo.toString(view[0].ccc, "n"));
				
				self.set("txnRecorded", kendo.toString(view[0].txnRecorded, "n"));
			});
		}
	});
	banhji.accountingCenter = kendo.observable({
		lang 				: langVM,
		dataSource			: dataStore(apiUrl + "accounts"),
		accountTypeDS 		: banhji.source.accountTypeDS,
		summaryDS  			: dataStore(apiUrl + 'centers/accounting_summary'),
		transactionDS  		: dataStore(apiUrl + 'centers/accounting_txn'),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		searchText 			: "",
		balance 			: 0,
		totalTxn 			: 0,
		subName 			: "",
		typeName 			: "",
		nature 				: "",
		user_id 			: banhji.source.user_id,
		pageLoad 			: function(id){
			this.search();

			if(id){
				this.loadObj(id);
			}
			//Refresh
			if(this.dataSource.total()>0){
				this.dataSource.fetch();
				this.loadSummary();
				this.searchTransaction();
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
			if(obj!==null){
		        // Check the extension of each file and abort the upload if it is not .jpg
		        $.each(files, function(index, value){
		            if (value.extension.toLowerCase() === ".jpg"
		            	|| value.extension.toLowerCase() === ".jpeg"
		            	|| value.extension.toLowerCase() === ".tiff"
		            	|| value.extension.toLowerCase() === ".png" 
		            	|| value.extension.toLowerCase() === ".gif"
		            	|| value.extension.toLowerCase() === ".pdf"){

		            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

		            	self.attachmentDS.add({
		            		user_id 		: self.get("user_id"),
		            		account_id 		: obj.id,
		            		type 			: "Account",
		            		name 			: value.name,
		            		description 	: "",
		            		key 			: key,
		            		url 			: banhji.s3 + key,
		            		size 			: value.size,
		            		created_at 		: new Date(),

		            		file 			: value.rawFile
		            	});
		            }else{
		            	alert("This type of file is not allowed to attach.");
		            }
		        });
	    	}else{
	    		alert("Please select an account!");
	    	}
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    		this.attachmentDS.sync();
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":
					this.set("sdate", today);
					this.set("edate", "");

				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");
			}
		},
		loadObj 			: function(id){
			var self = this;

			this.dataSource.bind("requestEnd", function(e){
				if(e.type=="read"){
					var data = e.response.results;
					
					$.each(data, function(index, value){
						if(value.id==id){
							if(value.sub_of_id>0){
								self.set("subName", value.name);
							}else{
								self.set("subName", "");
							}

							self.set("obj", value);
							self.loadSummary();
							self.searchTransaction();

							return false;
						}
					});

					//Sub Account
					var obj = self.get("obj");
					if(obj.sub_of_id>0){
						$.each(data, function(index, value){
							if(value.id==obj.sub_of_id){
								self.set("subName", value.name);

								return false;
							}
						});
					}else{
						self.set("subName", "");
					}

					var type = self.accountTypeDS.get(obj.account_type_id);
					self.set("typeName", type.name);
					self.set("nature", type.nature);
				}
			});
		},
		loadSummary 		: function(){
			var self = this, obj = this.get("obj");

			this.summaryDS.query({
			  	filter: [
			  		{ field:"account_id", value: obj.id }
			  	],
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();
				
				if(view.length>0){
					self.set("balance", kendo.toString(view[0].balance, view[0].locale=="km-KH"?"c0":"c", view[0].locale));					
					self.set("totalTxn", self.summaryDS.total());
				}else{
					self.set("balance", 0);
					self.set("totalTxn", 0);
				}
			});
		},
		selectedRow			: function(e){
			var data = e.data,
			sub = this.dataSource.get(data.sub_of_id),
			type = this.accountTypeDS.get(data.account_type_id);
			
			if(sub && data.sub_of_id>0){
				this.set("subName", sub.name);
			}else{
				this.set("subName", "");
			}

			this.set("typeName", type.name);
			this.set("nature", type.nature);

			this.set("obj", data);
			this.loadSummary();
			this.searchTransaction();

			this.attachmentDS.filter({ field:"account_id", value: data.id });
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
			account_type_id = this.get("account_type_id"),
      		txtSearch = this.get("searchText");
      		
      		if(txtSearch){
      			para.push(
      				{ field: "number", operator: "like", value: txtSearch },
					{ field: "name", operator: "or_like", value: txtSearch }
      			);
      		}

      		if(account_type_id){
      			para.push({ field:"account_type_id", value:account_type_id });
      		}

      		para.push({ field:"status", value:1 });      		

      		this.dataSource.query({
      			filter:para,
      			sort:[
      				{ field:"account_type_id", dir:"asc" },
      				{ field:"number", dir:"asc" }
      			],
      			page:1,
      			pageSize:100
      		});
      		
			//Clear search filters
      		this.set("searchText", "");
      		this.set("account_type_id", "");
		},
		searchTransaction	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	if(obj.id){
        		para.push({ field:"account_id", value: obj.id });
        	}

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: start });
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: end });            	            	
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related_transaction", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: end });
            }else{
            	
            }                        

            this.transactionDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 10
            });            
		},
		showActive 			: function(){
			this.dataSource.filter({ field:"status", value: 1 });
		},
		showInactive 		: function(){
			this.dataSource.filter({ field:"status", value: 0 });
		},
		loadTransaction	 	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				today = new Date(),
				start = kendo.toString(banhji.source.getFiscalDate(), "yyyy-MM-dd"),
				end = kendo.toString(today, "yyyy-MM-dd");
				
        	if(obj.id){
        		para.push({ field:"account_id", value: obj.id });
        	}
    	
        	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: start });
        	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: end });            	            	
            
            this.transactionDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 100
            });            
		},
		goEdit 				: function(){
			var obj = this.get("obj");
			banhji.router.navigate('/account/'+obj.id);
		},
		checkIsSub 			: function(sub_of_id){
			var isSub = false, data = this.dataSource.get(sub_of_id);

			if(data){	
				if(data.sub_of_id>0){
					isSub = true;
				}
			}
			
			return isSub;
		}
	});
	banhji.account =  kendo.observable({
    	lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "accounts"),
    	deleteDS 				: dataStore(apiUrl + "account_lines"),
    	numberDS 				: dataStore(apiUrl + "accounts"),
    	accountTypeDS 			: banhji.source.accountTypeDS,
    	currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		subAccountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"status", value: 1 },
		  	sort: { field: "number", dir: "asc" }
		}),
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 					: null,
    	isEdit 					: false,
    	isProtected 			: false,
        saveClose 				: false,
		showConfirm 			: false,
		notDuplicateNumber 		: true,
    	showBank 				: false,
    	pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");			
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}				
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"account_type_id", value: obj.account_type_id });
				
				this.numberDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.numberDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}		
		},
		generateNumber 			: function(){
			var self = this, para = [],
			obj = this.get("obj");

			if(obj.sub_of_id>0){
				para.push({ field:"sub_of_id", value: obj.sub_of_id });
				para.push({ field:"id", operator:"or_where", value: obj.sub_of_id });
			}else{
				para.push({ field:"account_type_id", value:obj.account_type_id });
			}

			this.numberDS.query({
				filter: para,
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		//Obj
    	loadObj 				: function(id){
    		var self = this;

    		this.dataSource.query({
				filter: { field:"id", value: id },
				page:1,
				pageSize:1
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);

		    	if(view[0].account_type_id==10){
    				self.set("showBank", true);
    			}else{
    				self.set("showBank", false);
    			}
			});
    	},
    	typeChanges 			: function(){    		
    		var obj = this.get("obj");
    		this.set("showBank", false);
    		
    		if(obj.account_type_id){
    			if(obj.account_type_id==10){
    				this.set("showBank", true);
    			}
    			this.generateNumber();
    		}
    	},    	 	   	
      	addEmpty 				: function(){
      		this.dataSource.data([]);
			
			this.set("isEdit", false);
			this.set("notDuplicateNumber", true);

      		this.dataSource.insert(0, {
      			account_type_id 		: 0,
      			sub_of_id 				: 0,
      			number 					: "",
      			name 					: "",
      			name_2 					: "",
      			description				: "",
      			bank_name 				: "",
      			bank_account_number 	: "",
      			locale 					: banhji.locale,
      			is_taxable 				: 0,
      			status 					: 1,
      			is_system				: 0
			});      		

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
      	},
	    objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },			
		save 					: function(){			
			var self = this, obj = this.get("obj");
			
			//Save Obj
			this.objSync()
			.then(function(data){ //Success

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh all account
				banhji.source.loadAccounts();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.dataSource.data([]);

			banhji.userManagement.removeMultiTask("account");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);
			
			if(obj.is_system!=="1"){
				this.deleteDS.query({
		        	filter:[
		        		{ field:"account_id", value:obj.id },
		        	],
		        	page:1,
		        	pageSize:1
		        }).then(function(){
		        	var view = self.deleteDS.view();

		        	if(view.length>0){
		        		alert("Sorry, you can not delete it.");
		        	}else{
		        		var data = self.dataSource.get(obj.id);
		        		self.dataSource.remove(data);
				        self.dataSource.sync();
				        self.dataSource.bind("requestEnd", function(e){
				        	if(e.type==="destroy"){
				        		//Refresh all account
						        banhji.source.loadAccounts();
						        window.history.back();
				        	}
				        });
		        	}
		        });
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });

	banhji.journal =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "journal_lines"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactDS 			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
		  	sort: { field: "number", dir: "asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),		
		accountDS 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	sort: [
			  	{ field: "account_type_id", dir: "asc" },
			  	{ field: "number", dir: "asc" }
			]
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Journal" }
		}),
		types 				: [
			{id: 'Journal', name: 'General Journal'},
			{id: 'Adjustment', name: 'Adjustment'},
			{id: 'Opening_Balance', name: 'Opening Balance'},
			{id: 'Closing_Entry', name: 'Closing Entry'},
			{id: 'Reclassification', name: 'Reclassification'},
			{id: 'Accrual', name: 'Accrual'},
			{id: 'Depreciation_amortization', name: 'Depreciation/Amortization'},
			{id: 'Others', name: 'Others'}
		],
		confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		showRef 			: true,
		showName 			: false,
		showJob 			: false,
		showSegment 		: false,
		notDuplicateNumber 	: true,
		recurring 			: "",
		recurring_validate 	: false,
		dr 					: 0,
		cr 					: 0,
		isValid 			: true,			
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});						
		},
		//Segment
		segmentChanges  	: function(e) {					
			var dataArr = e.data.segments;
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id <>", value: obj.id });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.dataSource.view();
						       
					self.set("obj", view[0]);
					self.set("dr", kendo.toString(view[0].amount, "c", view[0].locale));
			        self.set("cr", kendo.toString(view[0].amount, "c", view[0].locale));

					self.lineDS.filter({ field: "transaction_id", value: id });								
				});
			}				
		},
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("dr", 0);
			this.set("cr", 0);				

			this.dataSource.insert(0, {
				recurring_id 		: "",
				transaction_template_id : 13,
				user_id 			: this.get("user_id"), 	    			    		
			   	type				: "Journal", //required
			   	journal_type 		: "Journal",
			   	number 				: "",			   				   		   					   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),			   	   	
			   	memo 				: "",
			   	memo2 				: "",
			   	is_journal 			: 1,
			   	//Recuring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);			

			this.setRate();
			this.addRow();
			this.addRow();
			this.generateNumber();						
		},
		addRow 				: function(){				
			var obj = this.get("obj");
				
			this.lineDS.add({					
				transaction_id 		: obj.id,
				account_id 			: "",				
				contact_id 			: "",				
				description 		: "",
				reference_no 		: "",
				job_id 				: "",
				segments 	 		: [],								
				dr 	 				: 0,
				cr 					: 0,				
				rate				: obj.rate,
				locale				: obj.locale
			});																	
		},		
		remove 				: function(e){						
			var data = e.data;
			if(this.lineDS.total()>2){				
				this.lineDS.remove(data);
	        	this.changes();
	        }		        
		},
		checkDr 			: function(e){
			var data = e.data;

			if(data.dr>0 && data.cr>0){
				data.set("cr", 0);
			}

			this.changes();
		},
		checkCr 			: function(e){
			var data = e.data;

			if(data.dr>0 && data.cr>0){
				data.set("dr", 0);
			}

			this.changes();
		},
		accountChanges 		: function(e){
			var data = e.data,
			index = this.lineDS.indexOf(data),
			beforeLine = this.lineDS.at(index-1);

			if(beforeLine){
				data.set("description", beforeLine.description);

				if(index==1){
					if(beforeLine.dr>0){
						data.set("dr", 0);
						data.set("cr", beforeLine.dr);
					}else{
						data.set("dr", beforeLine.cr);
						data.set("cr", 0);
					}

					this.changes();
				}
			}
		},
		changes				: function(){
			var obj = this.get("obj"), dr = 0, cr = 0;
			this.set("isValid", true);								
			
			$.each(this.lineDS.data(), function(index, value) {
				value.set("rate", obj.rate);
				
				dr += kendo.parseFloat(value.dr);
				cr += kendo.parseFloat(value.cr);				
	        });

	        obj.set("amount", dr);

	        dr = kendo.toString(dr, 'n');
	        cr = kendo.toString(cr, 'n');

			if(dr!==cr){
				this.set("isValid", false);
			}		       	

	        this.set("dr", kendo.toString(kendo.parseFloat(dr), "c", obj.locale));
	        this.set("cr", kendo.toString(kendo.parseFloat(cr), "c", obj.locale));
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});
					
					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("journal");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
					self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("journal_type", view[0].journal_type);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({
						transaction_id 		: 0,					
						account_id 			: value.account_id,				
						contact_id 			: value.contact_id,
						job_id 				: value.job_id,				
						description 		: value.description,
						reference_no 		: value.reference_no,						
						segments 	 		: value.segments,								
						dr 	 				: value.dr,
						cr 					: value.cr,				
						rate				: value.rate,
						locale				: value.locale
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.cashTransaction =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "account_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		contactDS 			: banhji.source.contactDS,
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		paymentMethodDS		: banhji.source.paymentMethodDS,
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		accountDS 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Deposit" },
			      	{ field: "type", value: "Withdraw" },
			      	{ field: "type", value: "Transfer" }
			    ]
			}
		}),
		types 				: [
			{id: 'Deposit', name: 'Deposit'},
			{id: 'Withdraw', name: 'Withdraw'},
			{id: 'Transfer', name: 'Transfer'}
		],
		confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		fileMan 			: banhji.fileManagement,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		recurring 			: "",
		recurring_validate 	: false,
		total				: 0,
		original_total 		: 0,
		fromToTop 			: "TO",
		fromToBottom 		: "FROM",
		uer_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);
			
			$.each(this.lineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});						
		},
		//Segment
		transactionSegmentChanges  	: function() {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		segmentChanges  	: function(e) {		
			var dataArr = e.data.segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.dataSource.view();

					if(view.length>0){	       
						self.set("obj", view[0]);
						self.set("total", kendo.toString(view[0].amount, "c2", view[0].locale));

						self.lineDS.filter({ field: "transaction_id", value: id });
						self.journalLineDS.filter({ field: "transaction_id", value: id });
						self.attachmentDS.filter({ field: "transaction_id", value: id });
					}								
				});
			}				
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				transaction_template_id : 0,
				recurring_id 		: "",
				account_id 			: "",
				user_id 			: this.get("user_id"),
			   	type				: "Deposit", //required	
			   	number 				: "",
			   	amount				: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.typeChanges();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				payment_method_id 	: 0,
				account_id 			: "",
				contact_id 			: "",
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		remove 				: function(e){
			var data = e.data;
			
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
        		this.changes();
        	}
		},
		changes				: function(){
			var obj = this.get("obj"),
			sum = 0;								
			
			$.each(this.lineDS.data(), function(index, value) {
				value.set("rate", obj.rate);

				sum += value.amount;
	        });		       	

	        this.set("total", kendo.toString(sum, "c2", obj.locale));		        
	        obj.set("amount", sum);
		},
		typeChanges 		: function(){
			var obj = this.get("obj");

			this.txnTemplateDS.filter({ field:"type", value:obj.type });

			switch(obj.type) {
			    case "Deposit":
			        this.set("fromToTop", "TO");
			        this.set("fromToBottom", "FROM");
			        break;
			    default:
			        this.set("fromToTop", "FROM");
			        this.set("fromToBottom", "TO");
			}
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            if(data[0].is_recurring==0){
		            	self.addJournal(data[0].id);
		            }
				}

				self.lineDS.sync();

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		clear 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("cash_transaction");
		},
		cancel 				: function(){
			this.clear();
			history.back();
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id }
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();
					self.dataSource.bind("requestEnd", function(e){
						if(e.type==="update"){
							window.history.back();
						}
					});
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj");
			
			var debit = 0, credit = 0;
			if(obj.type=="Deposit"){
				debit = obj.amount;
			}else{
				credit = obj.amount;
			}

			//Add Journal
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: obj.segments,								
				dr 	 				: debit,
				cr 					: credit,				
				rate				: obj.rate,
				locale				: obj.locale
			});

			$.each(this.lineDS.data(), function(index, value){				
				var dr = 0, cr = 0;
				if(obj.type=="Deposit"){
					cr = value.amount;
				}else{
					dr = value.amount;
				}

				//Add Journal
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,				
					contact_id 			: value.contact_id,				
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segments,								
					dr 	 				: dr,
					cr 					: cr,				
					rate				: value.rate,
					locale				: value.locale
				});						
			});			

			this.journalLineDS.sync();
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("type", view[0].type);
				obj.set("locale", view[0].locale);
				obj.set("account_id", view[0].account_id);
				obj.set("segments", view[0].segments);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						payment_method_id 	: value.payment_method_id,
						account_id 			: value.account_id,
						contact_id 			: value.contact_id,
						description 		: value.description,
						reference_no 		: value.reference_no,
						segments 	 		: value.segments,
						amount 	 			: value.amount,
						rate				: value.rate,
						locale				: value.locale
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.cashAdvance =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactDS 			: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	sort: { field:"number", dir:"asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		paymentMethodDS		: banhji.source.paymentMethodDS,
		accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),
		cashAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field:"account_type_id", value: 10 },//Cash Account
			      	{ field:"account_type_id", value: 34 }//Retained Earning
			    ],
			    sort:[
			    	{ field:"account_type_id", dir:"asc" },
			    	{ field:"number", dir:"asc" }
			    ]
			}
		}),
		advAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 11 },
		  	sort: { field:"number", dir:"asc" }
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter: { field: "type", value:"Cash_Advance" }
		}),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		total				: 0,
		original_total 		: 0,
		notDuplicateNumber  : true,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
	    //Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});
		},
		//Segment
		segmentChanges  	: function(e) {
			var dataArr = e.data.segments;
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		transactionSegmentChanges  	: function() {
			dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
	    //Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.dataSource.view();
					
					self.set("obj", view[0]);
					self.set("original_total", view[0].amount);		       		

					self.lineDS.filter({ field: "transaction_id", value: id });
					self.journalLineDS.filter({ field: "transaction_id", value: id });
					self.attachmentDS.filter({ field: "transaction_id", value: id });								
				});
			}
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				recurring_id 		: "",
				account_id 			: 1,
				payment_method_id 	: 1,
				user_id 			: this.get("user_id"),
			   	type				: "Cash_Advance", //required
			   	number 				: "",
			   	amount				: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			
			this.generateNumber();
			this.setRate();
			this.addRow();
		},
		addRow 				: function(){
			var obj = this.get("obj");
			this.lineDS.add({
				transaction_id 		: obj.id,
				account_id 			: "",
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		remove 				: function(e){
			var data = e.data;
			
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
	        	this.changes();
        	}	        	        
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){			
				var sum = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {
					value.set("rate", obj.rate);

					sum += value.amount;
		        });		       	

		        this.set("total", kendo.toString(sum, "c0", obj.locale));		        
		        obj.set("amount", sum);		       								    	
	    	}else{
	    		this.set("total", 0);		        
		        obj.set("amount", 0);				
	    	}   	
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    			    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});
					
					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Add Journal
		            if(data[0].is_recurring==0){
		            	self.addJournal(data[0].id);
		        	}
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("expense");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Journal
		addJournal 			: function(transaction_id){
			var self = this, obj = this.get("obj");			

			$.each(self.lineDS.data(), function(index, value){
				//Add Cash Advance Account on Dr
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,											
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segments,								
					dr 	 				: value.amount,
					cr 					: 0,				
					rate				: value.rate,
					locale				: value.locale
				});						
			});

			//Add Cash Account on Cr
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,										
				description 		: "",
				reference_no 		: "",
				segments 	 		: obj.segments,								
				dr 	 				: 0,
				cr 					: obj.amount,				
				rate				: obj.rate,
				locale				: obj.locale
			});

			this.journalLineDS.sync();
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("contact_id", view[0].contact_id);
				obj.set("locale", view[0].locale);
				obj.set("payment_method_id", view[0].payment_method_id);
				obj.set("account_id", view[0].account_id);
				obj.set("segments", view[0].segments);
				obj.set("memo", view[0].memo);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,				
						account_id 			: value.account_id,								
						description 		: value.description,
						reference_no 		: value.reference_no,
						segments 	 		: value.segments,								
						amount 	 			: value.amount,							
						rate				: value.rate,
						locale				: value.locale
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.expense =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS  	: dataStore(apiUrl + "account_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		existingInvoiceDS 	: dataStore(apiUrl + "account_lines"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactDS 			: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	sort: { field:"number", dir:"asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		supplierDS  		: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		accountDS 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 36 },
			      	{ field: "account_type_id", value: 37 },
			      	{ field: "account_type_id", value: 38 },
			      	{ field: "account_type_id", value: 40 },
			      	{ field: "account_type_id", value: 41 },
			      	{ field: "account_type_id", value: 42 },
			      	{ field: "account_type_id", value: 43 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		cashAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Direct_Expense" },
			      	{ field: "type", value: "Reimbursement" },
			      	{ field: "type", value: "Advance_Settlement" }
			    ]
			}
		}),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		isExistingInvoice 	: false,
		showJob 			: false,
		showSegment 		: false,
		showCashAdvance 	: false,
		notDuplicateNumber 	: true,		
		sub_total 			: 0,
		tax 				: 0,
		total				: 0,
		credit 		 		: 0,
		remain 				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);
			
			$.each(this.lineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});						
		},
		//Contact
		loadContact 		: function(id){
			var self = this, obj = self.get("obj");

			obj.set("contact_id", id);
		    this.contactChanges();
		},		
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    			    	
		    	this.setRate();
		    	this.loadReference();
	    	}
	    },
	    typeChanges 		: function(){
	    	var obj = this.get("obj");

	    	switch(obj.type) {			    
			    case "Advance_Settlement":
			        this.set("showCashAdvance", true);
			        break;
			    default:			         
			        this.set("showCashAdvance", false);
			        obj.set("reference_id", 0);
			        obj.set("deposit", 0);
			        obj.set("received", 0);
			}

			this.generateNumber();
	    },
	    //Segment
		segmentChanges  	: function(e) {
			var dataArr = e.data.segments;
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		transactionSegmentChanges  	: function() {
			dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
	    //Obj
	    checkExistingInvoice: function(){
	    	var self = this, contactIDs = [], referenceNos = [];

		    $.each(this.lineDS.data(), function(index, value){
		    	if(value.contact_id>0 && value.reference_no!==""){
		    		contactIDs.push(value.contact_id);
		    		referenceNos.push(value.reference_no);
		    	}
		    });
	    	
	    	this.existingInvoiceDS.query({
	    		filter:[
	    			{ field:"contact_id", operator:"where_in", value: contactIDs },
	    			{ field:"reference_no", operator:"where_in", value: referenceNos }
	    		],
	    		page:1,
	    		pageSize:1
	    	}).then(function(){
	    		var view = self.existingInvoiceDS.view();

	    		if(view.length>0){
	    			self.set("isExistingInvoice", true);
	    		}else{
	    			self.set("isExistingInvoice", false);
	    		}
	    	});
	    },
	    loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.dataSource.view();
					       
					// self.set("obj", view[0]);

					self.lineDS.filter({ field: "transaction_id", value: id });
					self.journalLineDS.filter({ field: "transaction_id", value: id });
					self.attachmentDS.filter({ field: "transaction_id", value: id });					
					self.referenceLineDS.filter({ field: "transaction_id", value: view[0].reference_id });
					self.referenceDS.query({
						filter:{ field: "id", value: view[0].reference_id }
					}).then(function(){
						self.set("obj", view[0]);
					});

					switch(view[0].type) {			    
					    case "Advance_Settlement":
					        self.set("showCashAdvance", true);
					        break;
					    default:			         
					        self.set("showCashAdvance", false);
					}
				});
			}
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("tax", 0);
			this.set("total", 0);
			this.set("showCashAdvance", false);

			this.dataSource.insert(0, {
				recurring_id 		: 0,
				reference_id 		: 0,
				account_id 			: 1,
				job_id 				: 0,
				contact_id 			: "",
				user_id 			: this.get("user_id"),
			   	type				: "Direct_Expense", //required
			   	number 				: "",			   	
			   	sub_total 			: 0,
			   	tax 				: 0,
			   	deposit 			: 0,
			   	amount				: 0,
			   	remaining 			: 0,
			   	received 			: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			
			this.generateNumber();
			this.setRate();
			this.addRow();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				job_id 				: "",
				contact_id 			: "",
				account_id 			: "",
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				reference_date 		: new Date()
			});
		},		
		remove 				: function(e){
			var data = e.data;
					
			this.lineDS.remove(data);
        	this.changes();
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), 
			subTotal = 0, total = 0, tax = 0, remaining = 0;								
			
			$.each(this.lineDS.data(), function(index, value) {
				value.set("rate", obj.rate);

				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					tax += value.amount * taxItem.rate;
				}

				subTotal += value.amount;
	        });

	        total = subTotal + tax;

	        if(obj.deposit>0){
	        	remaining = obj.deposit - (total + obj.received);
	        }	        

	        obj.set("sub_total", subTotal);
	        obj.set("tax", tax);
	        obj.set("amount", total);
	        obj.set("remaining", remaining);

	        this.set("total", kendo.toString(total, "c", obj.locale));
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
	    		if(obj.remaining<1){
	    			ref.set("status", 1);
	    		}else{
					ref.set("status", 2);
				}

				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});
					
					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Add Journal
		            if(data[0].is_recurring==0){
		            	self.addJournal(data[0].id);
		        	}
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.clear();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		clear 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("expense");
		},
		cancel 				: function(){
			this.clear();
			history.back();
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
					self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Journal
		addJournal 			: function(transaction_id){
			var self = this, obj = this.get("obj"),
			sum = 0, sumExpense = 0, taxList = {};

			//Expense on Dr
    		$.each(this.lineDS.data(), function(index, value){
    			sumExpense += value.amount;

				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					contact_id 			: value.contact_id,
					account_id 			: value.account_id,
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segments,
					dr 	 				: value.amount,
					cr 					: 0,
					rate				: value.rate,
					locale				: value.locale
				});
			});
			sum += sumExpense;

			//Tax accounts
			if(obj.tax>0){				
				$.each(this.lineDS.data(), function(index, value){
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id),
						taxAmount = value.amount * taxItem.rate;
						sum += taxAmount;

						if(taxItem.account_id>0){
							if(taxList[taxItem.account_id]===undefined){
								taxList[taxItem.account_id]={"id": taxItem.account_id, "amount":taxAmount};						
							}else{											
								if(taxList[taxItem.account_id].id===taxItem.account_id){
									taxList[taxItem.account_id].amount += taxAmount;
								}else{
									taxList[taxItem.account_id]={"id": taxItem.account_id, "amount": taxAmount};
								}
							}
						}
					}
				});

				//Tax account on Dr
				if(!jQuery.isEmptyObject(taxList)){				
					$.each(taxList, function(index, value){
						self.journalLineDS.add({					
							transaction_id 		: transaction_id,
							account_id 			: value.id,				
							contact_id 			: value.contact_id,				
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],								
							dr 	 				: value.amount,
							cr 					: 0,				
							rate				: obj.rate,
							locale				: obj.locale
						});										
					});
				}
			}

			if(obj.type=="Advance_Settlement") {
				var reference = this.referenceDS.get(obj.reference_id),
				advance_account_id = this.referenceLineDS.at(0).account_id,
				sumExpense = 0;

				//Cash on Dr
				if(obj.received>0){
					sum += obj.received;

					this.journalLineDS.add({
						transaction_id 		: transaction_id,
						contact_id 			: obj.contact_id,
						account_id 			: obj.account_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: obj.segments,
						dr 	 				: obj.received,
						cr 					: 0,
						rate				: obj.rate,
						locale				: obj.locale
					});
				}				

				//Over Expense
				if(obj.remaining<0){
					sum += obj.remaining;

					//Cash on Cr
					this.journalLineDS.add({
						transaction_id 		: transaction_id,
						contact_id 			: obj.contact_id,
						account_id 			: obj.account_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: obj.segments,
						dr 	 				: 0,
						cr 					: Math.abs(obj.remaining),
						rate				: obj.rate,
						locale				: obj.locale
					});
				}			

				//Advance Account on Cr
	    		this.journalLineDS.add({
					transaction_id 		: transaction_id,
					contact_id 			: reference.contact_id,
					account_id 			: advance_account_id,
					description 		: reference.memo,
					reference_no 		: reference.number,
					segments 	 		: reference.segments,
					dr 	 				: 0,
					cr 					: sum,
					rate				: reference.rate,
					locale				: reference.locale
				});
			}else{//Direct Expense & Reimbursement
			    //Cash on Cr
				this.journalLineDS.add({
					transaction_id 		: transaction_id,
					contact_id 			: obj.contact_id,
					account_id 			: obj.account_id,										
					description 		: "",
					reference_no 		: "",
					segments 	 		: obj.segments,								
					dr 	 				: 0,
					cr 					: sum,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}
			
			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var self = this, obj = this.get("obj");

			if(obj.contact_id>0){
				this.referenceDS.filter([
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Cash_Advance" },
					{ field:"status", operator:"where_in", value:[0,2] }
				]);
			}
		},
		referenceChanges 	: function(){
			var obj = this.get("obj");
			if(obj.reference_id){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("reference_no", data.number);
				obj.set("deposit", data.amount - data.amount_paid);
				this.referenceLineDS.filter({ field:"transaction_id", value: obj.reference_id});
			}
		},
		//Recurring	
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("contact_id", view[0].contact_id);
				obj.set("type", view[0].type);
				obj.set("locale", view[0].locale);
				obj.set("account_id", view[0].account_id);
				obj.set("segments", view[0].segments);
				obj.set("job_id", view[0].job_id);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						job_id 				: value.job_id,
						contact_id 			: value.contact_id,				
						account_id 			: value.account_id,								
						description 		: value.description,
						reference_no 		: value.reference_no,
						segments 	 		: value.segments,								
						amount 	 			: value.amount,							
						rate				: value.rate,
						locale				: value.locale,
						reference_date 		: value.reference_date
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});

	banhji.currencyRate =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "currencies/rate"),
		currencyDS  		: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		currencyAllDS  		: new kendo.data.DataSource({
		  	data: banhji.source.currencyList
		}),
		obj 				: null,
		isEdit 				: false,
		baseCode 			: banhji.institute.currency.country +' - '+ banhji.institute.currency.code,
		reportCode 			: banhji.institute.reportCurrency.country +' - '+ banhji.institute.reportCurrency.code,
		windowVisible 		: false,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(){
		},
		getCode             : function(id){
            var raw = banhji.source.currencyDS.get(id);
            if(raw){
                return raw.code;
            }else{
                return "";
            }
        },
        getCountry             : function(id){
            var raw = banhji.source.currencyDS.get(id);
            if(raw){
                return raw.country;
            }else{
                return "";
            }
        },
		openWindow			: function(){
      		this.addEmpty();

         	this.set("windowVisible", true);
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();

      		this.set("windowVisible", false);
      	},
		addEmpty 		 	: function(){
			this.dataSource.insert(0, {
				user_id 	: this.get("user_id"),
				currency_id : 0,
 	    		rate 		: 1,
 	    		locale 		: "",
			   	source		: "",
			   	method 		: "Manual",
			   	date 		: new Date(),

			   	currency 	: []
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
		},
		save 				: function(){
			var obj = this.get("obj"),
			currency = this.currencyAllDS.get(obj.currency_id);
			obj.set("locale", currency.locale);

      		this.dataSource.sync();
      		this.dataSource.bind("requestEnd", function(e){
      			if(e.type==="create" || e.type==="update"){
      				banhji.source.loadCurrencies();
      				banhji.source.loadRates();
      			}
      		});
      		
      		this.set("windowVisible", false); 		
      	},
      	edit 				: function(e){
      		var data = e.data;
      		
      		this.set("obj", data);

      		this.set("windowVisible", true);
      	},
      	cancel 				: function(){
      		banhji.userManagement.removeMultiTask("currency_rate");
      	}
	});
	banhji.recurring =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		user_id				: banhji.source.user_id,
		referenceTypes 		: [
			{ id:"Estimate", name:"Estimate" },
			{ id:"SO", name:"Sale Order" },
			{ id:"GDN", name:"GDN" }
		],
		pageLoad 			: function(){
			if(this.dataSource.total()>0){
				this.dataSource.fetch();
			}
		},
		goToTemplate 		: function(e){
			var data = e.data;			

			banhji.router.navigate('/'+data.type.toLowerCase()+"/"+data.id+"/"+true);			
		},		   	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();		        
	    	}	    	
	    }
	});
	banhji.journalReport =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/journal"),
		exdataSource 			: dataStore(apiUrl + "accounting_reports/journal"),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		company 			: banhji.institute,
		displayDate 		: "",
		showDescription 	: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		dr 					: 0,
		cr 					: 0,
		totalTxn 			: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter: para,
            	sort: [
			  		{ field: "issued_date", operator:"order_by_related_transaction", dir: "desc" },
			  		{ field: "number", operator:"order_by_related_transaction", dir: "desc" }
			  	]
            });
            var saved = false;
            this.dataSource.bind("requestEnd", function(e){
            	if(e.type==="read" && saved==false){
            		saved = true;
            		var response = e.response;
            		self.set("dr", kendo.toString(response.dr, "c", banhji.locale));
	            	self.set("cr", kendo.toString(response.cr, "c", banhji.locale));
	            }
	        });
			                          
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block>.span4 * {color: #fff!important;}' +
		            	'.journal_block>.span4:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block>.span4:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block>.span4 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.pcg .mid-header {' +
		            		'background-color: #dce6f2!important; ' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}'+
		            	'.inv1 span.total-amount { ' +
		            		'color:#fff!important;' +
		            	'}</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
			$("#loadImport").css("display","block");
			var self = this, para = [],
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";
    	
        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

            	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else{
            	
            }
            
            this.set("displayDate", displayDate);

            this.exdataSource.query({
            	filter: para,
            	sort: [
			  		{ field: "issued_date", operator:"order_by_related_transaction", dir: "desc" },
			  		{ field: "number", operator:"order_by_related_transaction", dir: "desc" }
			  	]
            })
            .then(function(e){
            	var sumDR = 0, sumCR = 0;
            	self.exArray = [];
            	self.exArray.push({
            		cells: [
            			{ value: self.company.name, textAlign: "center", colSpan: 7 }
            		]
            	});
            	self.exArray.push({
            		cells: [
            			{ value: "JOURNAL ENTRY REPORTS",bold: true, fontSize: 20, textAlign: "center", colSpan: 7 }
            		]
            	});
            	if(self.displayDate){
	            	self.exArray.push({
	            		cells: [
	            			{ value: self.displayDate, textAlign: "center", colSpan: 7 }
	            		]
	            	});
	            }
            	self.exArray.push({
            		cells: [
            			{ value: "", colSpan: 7 }
            		]
            	});
            	self.exArray.push(
            		{ cells: [
						{ value: "Type", background: "#496cad", color: "#ffffff" },
						{ value: "Date", background: "#496cad", color: "#ffffff" },
						{ value: "TXN#", background: "#496cad", color: "#ffffff" },
						{ value: "TXN Description", background: "#496cad", color: "#ffffff" },
						{ value: "Account", background: "#496cad", color: "#ffffff" },
						{ value: "Debits(DR)", background: "#496cad", color: "#ffffff" },
						{ value: "Credits(CR)", background: "#496cad", color: "#ffffff" }
					]}
				);
            	for (var i = 0; i < self.exdataSource.data().length; i++){
            	  var RATE = self.exdataSource.data()[i].rate;
            	  var DR = self.exdataSource.data()[i].line[0].dr / RATE;
		          var CR = self.exdataSource.data()[i].line[0].cr / RATE;
		          self.exArray.push({
		            cells: [
		              { value: self.exdataSource.data()[i].type},
		              { value: kendo.toString(new Date(self.exdataSource.data()[i].issued_date), "dd-MMMM-yyyy")},
		              { value: self.exdataSource.data()[i].number },
		              { value: self.exdataSource.data()[i].memo },
		              { value: self.exdataSource.data()[i].line[0].account },
		              { value: self.exdataSource.data()[i].line[0].dr ? DR : "",  },
		              { value: self.exdataSource.data()[i].line[0].cr ? CR : "" }
		            ]
		          });
		          sumDR = kendo.parseFloat(self.exdataSource.data()[i].line[0].dr);
		          sumCR = kendo.parseFloat(self.exdataSource.data()[i].line[0].cr);
		          for(var j = 1; j < self.exdataSource.data()[i].line.length; j++){
		          	var DR = self.exdataSource.data()[i].line[j].dr / RATE;
		          	var CR = self.exdataSource.data()[i].line[j].cr / RATE;
			          self.exArray.push({
			          	cells: [
			          	  { value: ""},	
			          	  { value: ""},
			          	  { value: ""},
			          	  { value: ""},
			              { value: self.exdataSource.data()[i].line[j].account },
			              { value: self.exdataSource.data()[i].line[j].dr ? DR : "" },
			              { value: self.exdataSource.data()[i].line[j].cr ? CR : "" }
			            ]
			          });
			        sumDR += kendo.parseFloat(self.exdataSource.data()[i].line[j].dr);
			        sumCR += kendo.parseFloat(self.exdataSource.data()[i].line[j].cr);
			      }
			      self.exArray.push({
		          	cells: [
		          	  { value: "Total", bold: true, background: "#bbbbbb" },
		              { value: "", background: "#bbbbbb" },
		              { value: "", background: "#bbbbbb" },
		              { value: "", background: "#bbbbbb" },
		              { value: "", background: "#bbbbbb" },
		              { value: kendo.parseFloat(sumDR), bold: true, background: "#bbbbbb" },
		              { value: kendo.parseFloat(sumCR), bold: true, background: "#bbbbbb" }
		            ]
		          });
		        }
            });
            this.exdataSource.bind("requestEnd", function(e){
            	//if(e.type==="read"){
            		$("#loadImport").css("display","none");
            		var workbook = new kendo.ooxml.Workbook({
			          sheets: [
			            {
			              columns: [
			                { autoWidth: true },
			                { autoWidth: true },
			                { autoWidth: true },
			                { autoWidth: true },
			                { autoWidth: true },
			                { autoWidth: true },
			                { autoWidth: true }
			              ],
			              title: "Journal Entry Reports",
			              rows: self.exArray
			            }
			          ]
			        });
			        //save the file as Excel file with extension xlsx
			        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "JournalEntryReports.xlsx"});
	            //}
	        });
	        
		}
	});
	banhji.journalReportBySegment =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/journal_by_segment"),
		exdataSource 		: dataStore(apiUrl + "accounting_reports/journal_by_segment"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		company 			: banhji.institute,
		displayDate 		: "",
		showDescription 	: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		dr 					: 0,
		cr 					: 0,
		totalTxn 			: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";
    	
        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

            	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else{
            	
            }
            
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter: para,
            	sort: [
			  		{ field: "issued_date", operator:"order_by_related_transaction", dir: "desc" },
			  		{ field: "number", operator:"order_by_related_transaction", dir: "desc" }
			  	]
            });
            var saved = false;
            this.dataSource.bind("requestEnd", function(e){
            	if(e.type==="read" && saved==false){
            		saved = true;
            		var response = e.response;
            		self.set("dr", kendo.toString(response.dr, "c", banhji.locale));
	            	self.set("cr", kendo.toString(response.cr, "c", banhji.locale));
	            }
	        });
			                           
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block>.span4 * {color: #fff!important;}' +
		            	'.journal_block>.span4:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block>.span4:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block>.span4 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.pcg .mid-header {' +
		            		'background-color: #dce6f2!important; ' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}'+
		            	'.inv1 span.total-amount { ' +
		            		'color:#fff!important;' +
		            	'}</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
								// $("#loadImport").css("display","block");
								// var self = this, para = [],
								// 	start = this.get("sdate"),
					   //      		end = this.get("edate"),
					   //      		displayDate = "";
					    	
					   //      	//Dates
					   //      	if(start && end){
					   //          	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
					   //          	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

					   //          	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
					   //          }else if(start){
					   //          	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

					   //          	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
					   //          }else if(end){
					   //          	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

					   //          	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
					   //          }else{
					            	
					   //          }
					            
					   //          this.set("displayDate", displayDate);

					   //          this.exdataSource.query({
					   //          	filter: para,
					   //          	sort: [
								//   		{ field: "issued_date", operator:"order_by_related_transaction", dir: "desc" },
								//   		{ field: "number", operator:"order_by_related_transaction", dir: "desc" }
								//   	]
					   //          })
					   //          .then(function(e){
					   //          	var sumDR = 0, sumCR = 0;
					   //          	self.exArray = [];
					   //          	self.exArray.push({
					   //          		cells: [
					   //          			{ value: self.company.name, textAlign: "center", colSpan: 7 }
					   //          		]
					   //          	});
					   //          	self.exArray.push({
					   //          		cells: [
					   //          			{ value: "JOURNAL ENTRY REPORTS",bold: true, fontSize: 20, textAlign: "center", colSpan: 7 }
					   //          		]
					   //          	});
					   //          	if(self.displayDate){
						  //           	self.exArray.push({
						  //           		cells: [
						  //           			{ value: self.displayDate, textAlign: "center", colSpan: 7 }
						  //           		]
						  //           	});
						  //           }
					   //          	self.exArray.push({
					   //          		cells: [
					   //          			{ value: "", colSpan: 7 }
					   //          		]
					   //          	});
					   //          	self.exArray.push(
					   //          		{ cells: [
								// 			{ value: "Type", background: "#496cad", color: "#ffffff" },
								// 			{ value: "Date", background: "#496cad", color: "#ffffff" },
								// 			{ value: "TXN#", background: "#496cad", color: "#ffffff" },
								// 			{ value: "TXN Description", background: "#496cad", color: "#ffffff" },
								// 			{ value: "Account", background: "#496cad", color: "#ffffff" },
								// 			{ value: "Debits(DR)", background: "#496cad", color: "#ffffff" },
								// 			{ value: "Credits(CR)", background: "#496cad", color: "#ffffff" }
								// 		]}
								// 	);
					   //          	for (var i = 0; i < self.exdataSource.data().length; i++){
					   //          	  var RATE = self.exdataSource.data()[i].rate;
					   //          	  var DR = self.exdataSource.data()[i].line[0].dr / RATE;
							 //          var CR = self.exdataSource.data()[i].line[0].cr / RATE;
							 //          self.exArray.push({
							 //            cells: [
							 //              { value: self.exdataSource.data()[i].type, rowSpan: self.exdataSource.data()[i].line.length, verticalAlign: "center" },
							 //              { value: kendo.toString(new Date(self.exdataSource.data()[i].issued_date), "dd-MMMM-yyyy"), rowSpan: self.exdataSource.data()[i].line.length, verticalAlign: "center" },
							 //              { value: self.exdataSource.data()[i].number, rowSpan: self.exdataSource.data()[i].line.length, verticalAlign: "center" },
							 //              { value: self.exdataSource.data()[i].memo, rowSpan: self.exdataSource.data()[i].line.length, verticalAlign: "center" },
							 //              { value: self.exdataSource.data()[i].line[0].account },
							 //              { value: self.exdataSource.data()[i].line[0].dr ? DR : "",  },
							 //              { value: self.exdataSource.data()[i].line[0].cr ? CR : "" }
							 //            ]
							 //          });
							 //          sumDR = kendo.parseFloat(self.exdataSource.data()[i].line[0].dr);
							 //          sumCR = kendo.parseFloat(self.exdataSource.data()[i].line[0].cr);
							 //          for(var j = 1; j < self.exdataSource.data()[i].line.length; j++){
							 //          	var DR = self.exdataSource.data()[i].line[j].dr / RATE;
							 //          	var CR = self.exdataSource.data()[i].line[j].cr / RATE;
								//           self.exArray.push({
								//           	cells: [
								//               { value: self.exdataSource.data()[i].line[j].account },
								//               { value: self.exdataSource.data()[i].line[j].dr ? DR : "" },
								//               { value: self.exdataSource.data()[i].line[j].cr ? CR : "" }
								//             ]
								//           });
								//         sumDR += kendo.parseFloat(self.exdataSource.data()[i].line[j].dr);
								//         sumCR += kendo.parseFloat(self.exdataSource.data()[i].line[j].cr);
								//       }
								//       self.exArray.push({
							 //          	cells: [
							 //          	  { value: "Total", bold: true, background: "#bbbbbb" },
							 //              { value: "", background: "#bbbbbb" },
							 //              { value: "", background: "#bbbbbb" },
							 //              { value: "", background: "#bbbbbb" },
							 //              { value: "", background: "#bbbbbb" },
							 //              { value: kendo.parseFloat(sumDR), bold: true, background: "#bbbbbb" },
							 //              { value: kendo.parseFloat(sumCR), bold: true, background: "#bbbbbb" }
							 //            ]
							 //          });
							 //        }
					   //          });
					   //          this.exdataSource.bind("requestEnd", function(e){
					   //          	//if(e.type==="read"){
					   //          		$("#loadImport").css("display","none");
					   //          		var workbook = new kendo.ooxml.Workbook({
								//           sheets: [
								//             {
								//               columns: [
								//                 { autoWidth: true },
								//                 { autoWidth: true },
								//                 { autoWidth: true },
								//                 { autoWidth: true },
								//                 { autoWidth: true },
								//                 { autoWidth: true },
								//                 { autoWidth: true }
								//               ],
								//               title: "Journal Entry Reports",
								//               rows: self.exArray
								//             }
								//           ]
								//         });
								//         //save the file as Excel file with extension xlsx
								//         kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "JournalEntryReports.xlsx"});
						  //           //}
						  //       });
	        
		}
	});
	banhji.generalLedger =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/general_ledger"),
		accountDS  		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	sort: { field:"number", dir:"asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: { account_id: 0, segments: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		segmentChanges 		: function() {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Account
            if(obj.account_id>0){
	            para.push({ field:"account_id", value:obj.account_id });
	        }

	        //Segment
            if(obj.segments.length>0){
            	var segments = [];
            	$.each(obj.segments, function(index, value){
            		segments.push(value);
            	});          	
	            para.push({ field:"segments", operator:"like_related_transaction", value:"%"+segments.toString()+"%" });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);
            
            this.dataSource.query({
            	filter:para,
            	sort:[
            		{ field:"account_type_id", operator:"order_by_related_account", dir:"asc" },
            		{ field:"number", operator:"order_by_related_account", dir:"asc" },
            		{ field:"issued_date", operator:"order_by_related_transaction", dir:"asc" },
            		{ field:"number", operator:"order_by_related_transaction", dir:"asc" }            		
            	]
            });
            this.dataSource.bind("requestEnd", function(e){				
				if(e.type=="read"){
					var response = e.response, balanceCal = 0;
					self.exArray = [];
					self.set("totalAmount", kendo.toString(response.totalAmount, "c", banhji.locale));
					self.set("totalBalance", kendo.toString(response.totalBalance, "c", banhji.locale));

					self.exArray.push({
	            		cells: [
	            			{ value: self.company.name, textAlign: "center", colSpan: 6 }
	            		]
	            	});
	            	self.exArray.push({
	            		cells: [
	            			{ value: "General Ledger",bold: true, fontSize: 20, textAlign: "center", colSpan: 6 }
	            		]
	            	});
	            	if(self.displayDate){
		            	self.exArray.push({
		            		cells: [
		            			{ value: self.displayDate, textAlign: "center", colSpan: 6 }
		            		]
		            	});
		            }
	            	self.exArray.push({
	            		cells: [
	            			{ value: "", colSpan: 6 }
	            		]
	            	});
	            	self.exArray.push({ 
	            		cells: [
							{ value: "Type", background: "#496cad", color: "#ffffff" },
							{ value: "Date", background: "#496cad", color: "#ffffff" },
							{ value: "Reference No", background: "#496cad", color: "#ffffff" },
							{ value: "Description", background: "#496cad", color: "#ffffff" },
							{ value: "Amount", background: "#496cad", color: "#ffffff" },
							{ value: "Balance", background: "#496cad", color: "#ffffff" }
						]
					});
					for (var i = 0; i < response.results.length; i++){
						self.exArray.push({
					        cells: [
					          	{ value: response.results[i].number + " " + response.results[i].name, bold: true, },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: kendo.parseFloat(response.results[i].balance_forward), bold: true },
					        ]
					    });
					    balanceCal = response.results[i].balance_forward;
					    for(var j = 0; j < response.results[i].line.length; j++){
					    	balanceCal += response.results[i].line[j].amount;
				          	self.exArray.push({
				          		cells: [
				          	  		{ value: "    "+response.results[i].line[j].type },
				              		{ value: kendo.toString(new Date(response.results[i].line[j].issued_date), "dd-MM-yyyy")  },
				              		{ value: response.results[i].line[j].number },
				              		{ value: response.results[i].line[j].memo },
				              		{ value: kendo.parseFloat(response.results[i].line[j].amount)},
				              		{ value: kendo.parseFloat(balanceCal)}
				            	]
				          	});
				        }
				        self.exArray.push({
					        cells: [
					          	{ value: "Total " + response.results[i].number + " " + response.results[i].name, bold: true, },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: kendo.parseFloat(balanceCal), bold: true, borderTop: { color: "#000000", size: 1 }  },
					        ]
					    });
					    self.exArray.push({
					        cells: [
					          	{ value: "", colSpan: 6 }
					        ]
					    });
					}
					self.exArray.push({
				        cells: [
				          	{ value: "TOTAL", bold: true,fontSize: 16 },
				            { value: "" },
				            { value: "" },
				            { value: "" },
				            { value: kendo.parseFloat(response.totalAmount), bold: true, fontSize: 16 },
				            { value: kendo.parseFloat(response.totalBalance), bold: true, fontSize: 16 },
				        ]
				    });
				}
			});            
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.statementProfitLoss =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/income_statement"),		
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		company 			: banhji.institute,
		displayDate 		: "",
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		exArray 			: [],
		search				: function(){
			var self = this, para = [], displayDate = "",
				start = this.get("sdate"),
        		end = this.get("edate");
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            });
            this.dataSource.bind("requestEnd", function(e){				
				if(e.type=="read"){
					var response = e.response;
					self.exArray = [];
	            	self.exArray.push({
	            		cells: [
	            			{ value: self.company.name, textAlign: "center", colSpan: 3 }
	            		]
	            	});
	            	self.exArray.push({
	            		cells: [
	            			{ value: "Statement of Profit or Loss",bold: true, fontSize: 20, textAlign: "center", colSpan: 3 }
	            		]
	            	});
	            	if(self.displayDate){
		            	self.exArray.push({
		            		cells: [
		            			{ value: self.displayDate, textAlign: "center", colSpan: 3 }
		            		]
		            	});
		            }
	            	self.exArray.push({
	            		cells: [
	            			{ value: "", colSpan: 3 }
	            		]
	            	});
					for (var i = 0; i < response.results.length; i++){
						
					    if(response.results[i].line){
					    	self.exArray.push({
						        cells: [
						          	{ value: response.results[i].type, bold: true, },
						            { value: "" },
						            { value: "" }
						        ]
						    });
						    for(var j = 0; j < response.results[i].line.length; j++){
					          	self.exArray.push({
					          		cells: [
					          	  		{ value: response.results[i].line[j].number + " - " + response.results[i].line[j].name },
					              		{ value: kendo.parseFloat(response.results[i].line[j].amount)  },
					              		{ value: "" }
					            	]
					          	});
					        }
					        self.exArray.push({
						        cells: [
						          	{ value: "Total " + response.results[i].type, bold: true, },
						            { value: "" },
						            { value: kendo.parseFloat(response.results[i].amount), bold: true, borderTop: { color: "#000000", size: 1 }  },
						        ]
						    });
						}else{
							self.exArray.push({
						        cells: [
						          	{ value: response.results[i].name, bold: true, },
						            { value: "" },
						            { value: kendo.parseFloat(response.results[i].amount), bold: true, borderTop: { color: "#000000", size: 1 }  },
						        ]
						    });
						}
					}
					
				}
			});
		}, 
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Statement of Profit or Loss",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "StatementOfProfitOrLoss.xlsx"});
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		}
	});
	banhji.statementProfitLossBySegment =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/income_statement"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		company 			: banhji.institute,
		displayDate 		: "",
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		exArray 			: [],
		search				: function(){
			var self = this, para = [], displayDate = "",
				start = this.get("sdate"),
        		end = this.get("edate");
    	
        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

            	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else{
            	
            }

            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            });
            this.dataSource.bind("requestEnd", function(e){				
				if(e.type=="read"){
					var response = e.response;
					self.exArray = [];
	            	self.exArray.push({
	            		cells: [
	            			{ value: self.company.name, textAlign: "center", colSpan: 3 }
	            		]
	            	});
	            	self.exArray.push({
	            		cells: [
	            			{ value: "Statement of Profit or Loss",bold: true, fontSize: 20, textAlign: "center", colSpan: 3 }
	            		]
	            	});
	            	if(self.displayDate){
		            	self.exArray.push({
		            		cells: [
		            			{ value: self.displayDate, textAlign: "center", colSpan: 3 }
		            		]
		            	});
		            }
	            	self.exArray.push({
	            		cells: [
	            			{ value: "", colSpan: 3 }
	            		]
	            	});
					for (var i = 0; i < response.results.length; i++){
						
					    if(response.results[i].line){
					    	self.exArray.push({
						        cells: [
						          	{ value: response.results[i].type, bold: true, },
						            { value: "" },
						            { value: "" }
						        ]
						    });
						    for(var j = 0; j < response.results[i].line.length; j++){
					          	self.exArray.push({
					          		cells: [
					          	  		{ value: response.results[i].line[j].number + " - " + response.results[i].line[j].name },
					              		{ value: kendo.parseFloat(response.results[i].line[j].amount)  },
					              		{ value: "" }
					            	]
					          	});
					        }
					        self.exArray.push({
						        cells: [
						          	{ value: "Total " + response.results[i].type, bold: true, },
						            { value: "" },
						            { value: kendo.parseFloat(response.results[i].amount), bold: true, borderTop: { color: "#000000", size: 1 }  },
						        ]
						    });
						}else{
							self.exArray.push({
						        cells: [
						          	{ value: response.results[i].name, bold: true, },
						            { value: "" },
						            { value: kendo.parseFloat(response.results[i].amount), bold: true, borderTop: { color: "#000000", size: 1 }  },
						        ]
						    });
						}
					}
					
				}
			});
		}, 
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Statement of Profit or Loss",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "StatementOfProfitOrLoss.xlsx"});
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		}
	});
	banhji.statementProfitLossComparison =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/income_statement"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		company 			: banhji.institute,
		displayDate 		: "",
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [], displayDate = "",
				start = this.get("sdate"),
        		end = this.get("edate");
    	
        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else if(start){
            	para.push({ field:"issued_date", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

            	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
            }else if(end){
            	para.push({ field:"issued_date <=", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else{
            	
            }

            this.set("displayDate", displayDate);

            this.dataSource.filter(para);
		}
	});
	banhji.trialBalance =  kendo.observable({
		lang 				: langVM,
		dataSource			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounting_reports/trial_balance",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,			
			page:1,
			pageSize: 100
		}),
		as_of 				: new Date(),
		displayDate 		: "",
		company 			: banhji.institute,
		dr 					: 0,
		cr 					: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sort 				: function(e){
			var col = "",
			target = e.currentTarget.innerText;

			if(this.get("currentSort")=="asc"){
				this.set("currentSort", "desc");
			}else{
				this.set("currentSort", "asc");
			}

			switch(target) {
			    case "TYPE":
			        col = "type";
			        break;
			    case "DATE":
			        col = "issued_date";
			        break;
			    case "ACCOUNT":
			        col = "account_id";
			        break;
			    default:
			        //default code block
			}			

			this.dataSource.sort({ field:col, dir:this.get("currentSort") });
		},
		search 				: function(){
			var as_of = this.get("as_of"), self = this, totalDR = 0, totalCR = 0;

			if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				// as_of.setDate(as_of.getDate()+1);

				this.dataSource.filter({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });

				this.dataSource.bind("requestEnd", function(e){				
					if(e.type=="read"){
						var response = e.response;
							self.exArray.push({
		            		cells: [
		            			{ value: self.company.name, textAlign: "center", colSpan: 5 }
		            		]
		            	});
		            	self.exArray.push({
		            		cells: [
		            			{ value: "Trial Balance",bold: true, fontSize: 20, textAlign: "center", colSpan: 5 }
		            		]
		            	});
		            	if(self.displayDate){
			            	self.exArray.push({
			            		cells: [
			            			{ value: self.displayDate, textAlign: "center", colSpan: 5 }
			            		]
			            	});
			            }
		            	self.exArray.push({
		            		cells: [
		            			{ value: "", colSpan: 5 }
		            		]
		            	});
		            	self.exArray.push({ cells: [
							{ value: "Code", background: "#496cad", color: "#ffffff" },
							{ value: "Name", background: "#496cad", color: "#ffffff" },
							{ value: "Type", background: "#496cad", color: "#ffffff" },
							{ value: "Debit", background: "#496cad", color: "#ffffff" },
							{ value: "Credit", background: "#496cad", color: "#ffffff" }
							]
						});
						for (var i = 0; i < response.results.length; i++){
							self.exArray.push({
						        cells: [
						          	{ value: response.results[i].number },
						            { value: response.results[i].name },
						            { value: response.results[i].type },
						            { value: response.results[i].dr ? kendo.parseFloat(response.results[i].dr) : "" },
						            { value: response.results[i].cr ? kendo.parseFloat(response.results[i].cr) : "" }
						        ]
						    });
							totalDR += kendo.parseFloat(response.results[i].dr);
							totalCR += kendo.parseFloat(response.results[i].cr);
						}
						self.exArray.push({
					        cells: [
					          	{ value: "TOTAL:", color: "#ffffff", background: "#333333", bold: true, fontSize: 16 },
					            { value: "",background: "#333333" },
					            { value: "",background: "#333333" },
					            { value: kendo.parseFloat(totalDR), color: "#ffffff", background: "#333333", bold: true, fontSize: 16 },
					            { value: kendo.parseFloat(totalCR), color: "#ffffff", background: "#333333", bold: true, fontSize: 16 }
					        ]
					    });
					}
				});
			}
		},
		totalDr 			: function() {
	        var sum = 0;

	        $.each(this.dataSource.data(), function(index, value) {
	            sum += kendo.parseFloat(value.dr);
	        });

	        this.set("dr", kendo.toString(sum, "c", banhji.locale));

	        return kendo.toString(sum, "c", banhji.locale);
	    },
	    totalCr 			: function() {
	        var sum = 0;

	        $.each(this.dataSource.data(), function(index, value) {
	            sum += kendo.parseFloat(value.cr);
	        });

	        this.set("cr", kendo.toString(sum, "c", banhji.locale));

	        return kendo.toString(sum, "c", banhji.locale);
	    },
	    printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Trial Balance",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "TrialBalance.xlsx"});
		}
	});
	banhji.statementFinancialPosition =  kendo.observable({
		lang 				: langVM,
		dataSource			: dataStore(apiUrl + "accounting_reports/balance_sheet_asset"),
		liabilityDS			: dataStore(apiUrl + "accounting_reports/balance_sheet_liability"),
		equityDS			: dataStore(apiUrl + "accounting_reports/balance_sheet_equity"),
		as_of 				: new Date(),
		displayDate 		: "",
		company 			: banhji.institute,
		totalAsset 			: 0,
		totalLiability 		: 0,
		totalEquity 		: 0,
		totalLiabilityEquity: 0,
		pageLoad 			: function(){
			this.search();
		},
		exArray 			: [],
		liArray 			: [],
		eqArray 			: [],
		search 				: function(){
			var self = this, as_of = this.get("as_of");
			this.set("totalLiabilityEquity", 0);
			var totalAll = 0, totalCurrent = 0, totalLi = 0, totalEq = 0, totalAsCu = 0, totalBlock = 0;
			if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				// as_of.setDate(as_of.getDate()+1);

				this.dataSource.filter([
					{ field:"issued_date", value:kendo.toString(as_of, "yyyy-MM-dd") },
					{ field:"account_type_id", value:[10,11,12,13,14,15,16,17,18,19,20,21,22] }
				]);
				var unReadAsset = true;
				this.dataSource.bind("requestEnd", function(e){				
					if(e.type=="read" && unReadAsset){
						unReadAsset = false;
						var response = e.response.totalAmount;

						self.set("totalAsset", kendo.toString(response, "c", banhji.locale));

						var response = e.response;
						self.exArray = [];
		            	self.exArray.push({
		            		cells: [
		            			{ value: self.company.name, textAlign: "center", colSpan: 3 }
		            		]
		            	});
		            	self.exArray.push({
		            		cells: [
		            			{ value: "Statement of Financial Position",bold: true, fontSize: 20, textAlign: "center", colSpan: 3 }
		            		]
		            	});
		            	if(self.displayDate){
			            	self.exArray.push({
			            		cells: [
			            			{ value: self.displayDate, textAlign: "center", colSpan: 3 }
			            		]
			            	});
			            }
		            	self.exArray.push({
		            		cells: [
		            			{ value: "", colSpan: 3 }
		            		]
		            	});
						self.exArray.push({
					        cells: [
					          	{ value: "ASSETS", bold: true, fontSize: 16 },
					            { value: "" },
					            { value: "" }
					        ]
					    });
						for (var i = 0; i < response.results.length; i++){
							self.exArray.push({
						        cells: [
						          	{ value: response.results[i].name, bold: true, italic: true },
						            { value: "" },
						            { value: "" }
						        ]
						    });
						    for(var j = 0; j < response.results[i].typeLine.length; j++){
						    	self.exArray.push({
							        cells: [
							          	{ value: response.results[i].typeLine[j].type, bold: true },
							            { value: "" },
							            { value: "" }
							        ]
							    });
							    for(var k = 0; k < response.results[i].typeLine[j].line.length; k++){
							    	self.exArray.push({
								        cells: [
								          	{ value: response.results[i].typeLine[j].line[k].number + " " + response.results[i].typeLine[j].line[k].name },
								            { value: kendo.parseFloat(response.results[i].typeLine[j].line[k].amount) },
								            { value: "" }
								        ]
								    });

								    totalCurrent += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    	totalAll += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    	totalAsCu += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    	totalBlock += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    }
							    self.exArray.push({
							        cells: [
							          	{ value: "Total " + response.results[i].typeLine[j].type, bold: true },
							            { value: totalBlock, bold: true, borderTop: { color: "#000000", size: 1 } },
							            { value: "" }
							        ]
							    });
							    totalBlock = 0;
							    self.exArray.push({
							        cells: [
							          	{ value: "" },
							            { value: "" },
							            { value: "" }
							        ]
							    });
						    }
						    self.exArray.push({
						        cells: [
						          	{ value: "Total " + response.results[i].name, bold: true, italic: true },
						            { value: "" },
						            { value: totalCurrent , bold: true, borderTop: { color: "#000000", size: 1 } }
						        ]
						    });
						    totalCurrent = 0;
						}
						self.exArray.push({
					        cells: [
					          	{ value: "TOTAL ASSETS", bold: true, color: "#ffffff", background: "#1E4E78", fontSize: 20 },
					            { value: "", background: "#1E4E78" },
					            { value: totalAsCu, bold: true, color: "#ffffff", background: "#1E4E78", fontSize: 20 }
					        ]
					    });
					    self.exArray.push({
					        cells: [
					          	{ value: "", colSpan: 3 },
					        ]
					    });
					}
				});
				totalAll = 0;
				//Liability
				this.liabilityDS.filter([
					{ field:"issued_date", value:kendo.toString(as_of, "yyyy-MM-dd") },
					{ field:"account_type_id", value:[23,24,25,26,27,28,29,30,31] }
				]);
				var unReadLiability = true;
				this.liabilityDS.bind("requestEnd", function(e){
					if(e.type=="read" && unReadLiability){
						unReadLiability = false;
						var response = e.response.totalAmount;
						var total = self.get("totalLiabilityEquity");
						total += response;
						self.set("totalLiabilityEquity", total);
						self.set("totalLiability", kendo.toString(response, "c", banhji.locale));
						//Excel Export

						var response = e.response;
						self.liArray = [];
						self.liArray.push({
					        cells: [
					          	{ value: "LIABILITIES", bold: true, fontSize: 16 },
					            { value: "" },
					            { value: "" }
					        ]
					    });
						for (var i = 0; i < response.results.length; i++){
							self.liArray.push({
						        cells: [
						          	{ value: response.results[i].name, bold: true, italic: true },
						            { value: "" },
						            { value: "" }
						        ]
						    });
						    for(var j = 0; j < response.results[i].typeLine.length; j++){
						    	self.liArray.push({
							        cells: [
							          	{ value: response.results[i].typeLine[j].type, bold: true },
							            { value: "" },
							            { value: "" }
							        ]
							    });
							    for(var k = 0; k < response.results[i].typeLine[j].line.length; k++){
							    	self.liArray.push({
								        cells: [
								          	{ value: response.results[i].typeLine[j].line[k].number + " " + response.results[i].typeLine[j].line[k].name },
								            { value: kendo.parseFloat(response.results[i].typeLine[j].line[k].amount) },
								            { value: "" }
								        ]
								    });
								    totalBlock += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
								    totalLi += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    	totalAll += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    }
							    self.liArray.push({
							        cells: [
							          	{ value: "Total " + response.results[i].typeLine[j].type, bold: true },
							            { value: totalBlock, bold: true, borderTop: { color: "#000000", size: 1 } },
							            { value: "" }
							        ]
							    });
							    totalBlock = 0;
							    self.liArray.push({
							        cells: [
							          	{ value: "" },
							            { value: "" },
							            { value: "" }
							        ]
							    });
						    }
						    self.liArray.push({
						        cells: [
						          	{ value: "Total " + response.results[i].name, bold: true, italic: true },
						            { value: "" },
						            { value: totalLi, bold: true, borderTop: { color: "#000000", size: 1 } }
						        ]
						    });
						}
						self.liArray.push({
					        cells: [
					          	{ value: "TOTAL LIABILITIES", bold: true, color: "#000000", fontSize: 20 },
					            { value: "" },
					            { value: totalLi, bold: true, color: "#000000", fontSize: 20 }
					        ]
					    });
					    self.liArray.push({
					        cells: [
					          	{ value: "", colSpan: 3 },
					        ]
					    });
					}
				});

				//Equity
				this.equityDS.filter({ field:"issued_date", value:kendo.toString(as_of, "yyyy-MM-dd") });
				var unReadEquity = true;
				this.equityDS.bind("requestEnd", function(e){
					if(e.type=="read" && unReadEquity){
						unReadEquity = false;
						var response = e.response.totalAmount;
						var total = self.get("totalLiabilityEquity");
						total += response;
						self.set("totalLiabilityEquity", total);
						self.set("totalEquity", kendo.toString(response, "c", banhji.locale));
						//export Excel
						var response = e.response;
						self.eqArray = [];
						self.eqArray.push({
					        cells: [
					          	{ value: "EQUITY", bold: true, fontSize: 16 },
					            { value: "" },
					            { value: "" }
					        ]
					    });
						for (var i = 0; i < response.results.length; i++){
							self.eqArray.push({
						        cells: [
						          	{ value: response.results[i].name, bold: true, italic: true },
						            { value: "" },
						            { value: "" }
						        ]
						    });
						    for(var j = 0; j < response.results[i].typeLine.length; j++){
						    	self.eqArray.push({
							        cells: [
							          	{ value: response.results[i].typeLine[j].type, bold: true },
							            { value: "" },
							            { value: "" }
							        ]
							    });
							    for(var k = 0; k < response.results[i].typeLine[j].line.length; k++){
							    	self.eqArray.push({
								        cells: [
								          	{ value: response.results[i].typeLine[j].line[k].number + " " + response.results[i].typeLine[j].line[k].name },
								            { value: response.results[i].typeLine[j].line[k].amount },
								            { value: "" }
								        ]
								    });
								    totalBlock += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
								    totalEq += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    	totalAll += kendo.parseFloat(response.results[i].typeLine[j].line[k].amount);
							    }
							    self.eqArray.push({
							        cells: [
							          	{ value: "Total " + response.results[i].typeLine[j].type, bold: true },
							            { value: totalBlock, bold: true, borderTop: { color: "#000000", size: 1 } },
							            { value: "" }
							        ]
							    });
							    totalBlock = 0;
							    self.eqArray.push({
							        cells: [
							          	{ value: "" },
							            { value: "" },
							            { value: "" }
							        ]
							    });
						    }
						    self.eqArray.push({
						        cells: [
						          	{ value: "Total " + response.results[i].name, bold: true, italic: true },
						            { value: "" },
						            { value: totalEq, bold: true, borderTop: { color: "#000000", size: 1 } }
						        ]
						    });
						}
						self.eqArray.push({
					        cells: [
					          	{ value: "TOTAL LIABILITIES & EQUITY", bold: true, color: "#ffffff", background: "#1E4E78", fontSize: 20 },
					            { value: "", background: "#1E4E78" },
					            { value: totalAll, bold: true, color: "#ffffff", background: "#1E4E78", fontSize: 20 }
					        ]
					    });
					}
				});
			}
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
			var row = this.exArray.concat(this.liArray.concat(this.eqArray));
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Statement Financial Position",
	              rows: row
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "StatementFinancialPosition.xlsx"});
		}
	});
	banhji.chartOfAccount =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounts"),
		as_of 				: new Date(),
		currentSort 		: "asc",
		exArray 			: [{ cells: [{ value: "Number", background: "#496cad" },{ value: "Name", background: "#496cad" },{ value: "Type", background: "#496cad" }]}],	
		pageLoad 			: function(){
			var self = this;
			this.dataSource.query({
				filter: [],
				sort: [
					{ field:"account_type_id", dir:"asc" },
					{ field:"number", dir:"asc" }
				],
				page:1,
				pageSize: 1000
			}).then(function(e){
				for (var i = 0; i < self.dataSource.data().length; i++){
		          self.exArray.push({
		            cells: [
		              { value: self.dataSource.data()[i].number },
		              { value: self.dataSource.data()[i].name },
		              { value: self.dataSource.data()[i].account_type_name  }
		            ]
		          });
		        }
			});
		},	
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Chart Of Account",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "ChartOfAccount.xlsx"});
		},
		sort 				: function(e){
			var col = "",
			target = e.currentTarget.innerText;

			if(this.get("currentSort")=="asc"){
				this.set("currentSort", "desc");
			}else{
				this.set("currentSort", "asc");
			}

			switch(target) {
			    case "TYPE":
			        col = "type";
			        break;
			    case "DATE":
			        col = "issued_date";
			        break;
			    case "ACCOUNT":
			        col = "account_id";
			        break;
			    default:
			        //default code block
			}			

			this.dataSource.sort({ field:col, dir:this.get("currentSort") });
		}
	});
	banhji.tax =  kendo.observable({
		lang 				: langVM,
        dataSource 			: dataStore(apiUrl + "tax_types"),
        itemDS 	 			: dataStore(apiUrl + "tax_items"),
        deleteDS 			: dataStore(apiUrl + "tax_items"),
        itemDeleteDS 		: dataStore(apiUrl + "item_lines"),
        accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),
        typeList			: [ 
	 		{ id:"Invoice Based", name: "Invoice Based" },
	 		{ id:"Payment Based", name: "Payment Based" },
	 		{ id:"No Tax", name: "No Tax" }
		],
		obj 				: null,
		item 				: null,
		taxName 			: "",
		windowVisible 		: false,
		windowItemVisible 	: false,
		pageLoad 			: function() {
        },
        addType 			: function(){
        	this.dataSource.add({
        		number 				: "",
        		name 				: "",
        		agency 				: "",
        		tax_system 			: "Invoice Based",
        		end_date 			: new Date(),
        		submission_date 	: new Date(),
        		is_system 			: 0
        	});
        	var data = this.dataSource.data();
			var obj = data[data.length-1];
			this.set("obj", obj);
        },
        openWindow			: function(){
      		this.addType();

         	this.set("windowVisible", true);
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();

      		this.set("windowVisible", false);
      	},
        save 				: function(){
        	var self = this;
        	this.dataSource.sync();
        	this.dataSource.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			self.set("windowVisible", false); 
        		}
        	});
        },
        edit 				: function(e){
      		var data = e.data;      		
      		this.set("obj", data);

      		this.set("windowVisible", true);       		
      	},
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
		        var self = this, data = e.data;

		        this.deleteDS.query({
		        	filter: { field:"tax_type_id", value:data.id},
		        	page:1,
		        	pageSize:1
		        }).then(function(){
		        	var view = self.deleteDS.view();

		        	if(view.length>0){
		        		this.dataSource.remove(data);
		        		this.dataSource.sync();
		        	}else{
		        		alert("Sorry, this item can not be deleted.");
		        	}
		        });
	    	}	    	
	    },
	    view 				: function(e){
	    	var data = e.data;
	    	this.set("taxName", data.name);
	    	this.itemDS.filter({ field: "tax_type_id", value: data.id});
	    },
	    openWindowItem		: function(){
         	this.set("windowItemVisible", true);
      	},
      	closeWindowItem 	: function(){
      		this.itemDS.cancelChanges();

      		this.set("windowItemVisible", false);
      	},
      	loadItem 			: function(e){
	        var d = e.data;

	        this.set("selectedType", true);
	        this.set("tax_type_id", d.id);
	        this.set("selectedTypeName", d.name);
	        
	        this.itemDS.query({
	        	filter: { field:"tax_type_id", value: d.id },
	        	page: 1,
	        	pageSize: 100
	        });  	
        },
      	addItem				: function(e){
		    var data = e.data;

        	this.itemDS.add({
        		tax_type_id 		: data.id,
        		account_id 			: 0,
        		name 				: "",
        		description 		: "",
        		rate 				: "",
        		is_system 			: "",
        		account 			: [{name: ""}]
        	});
        	var data = this.itemDS.data();
			var obj = data[data.length-1];
			this.set("item", obj);
			this.openWindowItem();
        },
      	saveItem 				: function(){
        	var self = this;
        	this.itemDS.sync();
        	this.itemDS.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){
        			banhji.source.loadTaxes(); 
        			self.set("windowItemVisible", false);
        		}
        	});
        },
        editItem 				: function(e){
      		var data = e.data;      		
      		this.set("item", data);

      		this.set("windowItemVisible", true);
      	}, 
      	deleteItem 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var self = this, data = e.data;

		        this.deleteDS.query({
		        	filter: { field:"tax_item_id", value:data.id},
		        	page:1,
		        	pageSize:1
		        }).then(function(){
		        	var view = self.deleteDS.view();

		        	if(view.length>0){
		        		this.itemDS.remove(data);
		        		this.itemDS.sync();
		        		this.itemDS.bind("requestEnd", function(e){
			        		if( e.type == "delete"){ 
			        			self.set("windowItemVisible", false);
			        			banhji.source.loadTaxes();
			        		}
			        	});
		        	}else{
		        		alert("Sorry, this item can not be deleted.");
		        	}
		        });
	    	}	    	
	    }
    });
	banhji.segment =  kendo.observable({
		lang 				: langVM,
        dataSource 			: dataStore(apiUrl + "segments"),
        itemDS 	 			: dataStore(apiUrl + "segments/item"),
        deleteDS 			: dataStore(apiUrl + "segments/item"),
        itemDeleteDS 		: dataStore(apiUrl + "transactions"),
        statusList 			: banhji.source.statusList,
		obj 				: null,
		item 				: null,
		objName 			: "",
		windowVisible 		: false,
		windowItemVisible 	: false,
		pageLoad 			: function() {
        },        
        addObj 				: function(){
        	this.dataSource.add({
        		code_length			: "",
        		name 				: "",
        		is_system			: 0
        	});
        	var data = this.dataSource.data();
			var obj = data[data.length-1];
			this.set("obj", obj);
        },
        openWindow			: function(){
      		this.addObj();

         	this.set("windowVisible", true);
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();

      		this.set("windowVisible", false);
      	},
        save 				: function(){
        	var self = this;
        	this.dataSource.sync();
        	this.dataSource.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			self.set("windowVisible", false);
        		}
        	});
        },
        edit 				: function(e){
      		var data = e.data;
      		this.set("obj", data);

      		this.set("windowVisible", true);
      	},      	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
		        var self = this, data = e.data;

		        this.deleteDS.query({
		        	filter: { field:"segment_id", value:data.id},
		        	page:1,
		        	pageSize:1
		        }).then(function(){
		        	var view = self.deleteDS.view();

		        	if(view.length>0){
		        		alert("Sorry, this item can not be deleted.");
		        	}else{		        		
		        		self.dataSource.remove(data);
		        		self.dataSource.sync();		        	
		        	}
		        });		        		        
	    	}	    	
	    },
	    view 				: function(e){
	    	var data = e.data;
	    	this.set("objName", data.name);
	    	this.itemDS.filter({ field: "segment_id", value: data.id});
	    },
	    openWindowItem		: function(){
         	this.set("windowItemVisible", true);
      	},
      	closeWindowItem 	: function(){
      		this.itemDS.cancelChanges();

      		this.set("windowItemVisible", false);
      	},
      	loadItem 			: function(e){
	        var d = e.data;

	        this.set("selectedType", true);
	        this.set("tax_type_id", d.id);
	        this.set("selectedTypeName", d.name);
	        
	        this.itemDS.query({
	        	filter: { field:"segment_id", value: d.id },
	        	page: 1,
	        	pageSize: 100
	        });  	
        },
      	addItem				: function(e){
		    var data = e.data;

        	this.itemDS.add({
        		segment_id 		: data.id,
        		code 			: "",
        		is_system		: 0,        		
        		segment 		: [{name: ""}]
        	});
        	var data = this.itemDS.data();
			var obj = data[data.length-1];
			this.set("item", obj);
			this.openWindowItem();	            	
        },
      	saveItem 			: function(){
        	var self = this;
        	this.itemDS.sync();
        	this.itemDS.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){
        			banhji.source.loadSegmentItems(); 
        			self.set("windowItemVisible", false);        			
        		}
        	});
        },
        editItem 			: function(e){
      		var data = e.data;
      		this.set("item", data);

      		this.set("windowItemVisible", true);
      	}, 
      	deleteItem 			: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
		        var self = this, data = e.data;

		        this.itemDeleteDS.query({
		        	filter: { field:"segments", operator:"like", value:data.id},
		        	page:1,
		        	pageSize:1
		        }).then(function(){
		        	var view = self.itemDeleteDS.view();

		        	if(view.length>0){
		        		alert("Sorry, this item can not be deleted.");
		        	}else{		        		
		        		self.itemDS.remove(data);
		        		self.itemDS.sync();
		        		self.itemDS.bind("requestEnd", function(e){
		        			if(e.type=="destroy"){
		        				banhji.source.loadSegmentItems();
		        			}
		        		});
		        	}
		        });
	    	}
	    }
    });
	banhji.accountingReportCenter = kendo.observable({
		lang 				: langVM,
		dataSource			: dataStore(apiUrl+"accounting_reports/financial_snapshot"),
		income 				: 0,
		expense 			: 0,
		net_income 			: 0,
		asset 				: 0,
		liability 	 		: 0,
		equity 	 			: 0,
		pageLoad 			: function(){
			var self = this;
			
			this.dataSource.query({
				filter: [],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.dataSource.view();				
				
				self.set("income", kendo.toString(view[0].income, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("expense", kendo.toString(view[0].expense, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("net_income", kendo.toString(view[0].net_income, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				
				self.set("asset", kendo.toString(view[0].asset, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("liability", kendo.toString(view[0].liability, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("equity", kendo.toString(view[0].equity, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
			});										
		}
	});
	banhji.accountingSetting =  kendo.observable({
		lang 				: langVM,
        contactTypeDS 		: banhji.source.contactTypeDS,
        patternDS			: dataStore(apiUrl + "contacts"),
        txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),
        prefixDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "prefixes",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "prefixes",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "prefixes",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "prefixes",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"type", operator:"where_not_in", value:["Electricity_Invoice", "Water_Invoice", "Journal", "Cash_Advance", "Reimbursement","Direct_Expense", "Advance_Settlement"] },			
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
        contactTypeName 	: "",
        contactTypeAbbr 	: "",
        contactTypeCompany 	: 0,
        paymentMethodName 	: "",
        paymentTermName 	: "",
        paymentTermNetDue	: "",
        paymentTermPeriod 	: "",
        paymentTermPercentage 	: "",
        pageLoad 			: function() {
        	this.txnTemplateDS.filter({ field: "moduls", value : "customer_mg" });
        },	    
        addContactType 		: function(){
        	var name = this.get("contactTypeName");

        	if(name!==""){
	        	this.contactTypeDS.add({
	        		parent_id 	: 1,
	        		name 		: name,
	        		abbr 		: this.get("contactTypeAbbr"),
	        		description : "",
	        		is_company 	: this.get("contactTypeCompany"),
	        		is_system 	: 0
	        	});

	        	this.contactTypeDS.sync();
	        	this.contactTypeDS.bind("requestEnd", function(e){
	        		if(e.type==="create" || e.type==="update"){
	        			var response = e.response.results[0];
    					self.addPattern(response.id);
	        			banhji.source.loadContactTypes();
	        		}
	        	});

	        	this.set("contactTypeName", "");
	        	this.set("contactTypeAbbr", "");
	        	this.set("contactTypeCompany", 0);
        	}
        },
        addPattern 			: function(id){
			this.patternDS.insert(0, {
				"contact_type_id" 		: id,
				"number"				: "",
				"locale" 				: banhji.locale,					
				"is_pattern" 			: 1,
				"status"				: 1								
			});
			this.patternDS.sync();
		},
        addPaymentMethod 		: function(){
        	var name = this.get("paymentMethodName");

        	if(name!==""){
	        	this.paymentMethodDS.add({	        		
	        		name 		: name,
	        		description : "",
	        		is_system 	: 0
	        	});

	        	this.paymentMethodDS.sync();

	        	this.set("paymentMethodName", "");
        	}
        },
        addPaymentTerm 		: function(){
        	var name = this.get("paymentTermName");

        	if(name!==""){
	        	this.paymentTermDS.add({	        		
	        		name 				: name,
	        		net_due 			: this.get("paymentTermNetDue"),
	        		discount_period 	: this.get("paymentTermPeriod"),
	        		discount_percentage : this.get("paymentTermPercentage"),
	        		is_system 			: 0
	        	});

	        	this.paymentTermDS.sync();

	        	this.set("paymentTermName", "");
	        	this.set("paymentTermNetDue", "");
	        	this.set("paymentTermPeriod", "");
	        	this.set("paymentTermPercentage", "");
        	}
        },
        goPattern 	: function(e){
        	var data = e.data;        	        	

        	if(kendo.parseInt(data.contact_id)>0){        		        	
	        	banhji.router.navigate('/customer/'+data.contact_id+'/1');   	
        	}else{
        		banhji.router.navigate('/customer');
        		banhji.customer.set("contact_type_id",data.id);
        	}
        },
        deleteForm 		: function(e){
        	var data = e.data;
        	if(confirm("Do you want to delete it?") == true) {
        		this.txnTemplateDS.remove(data);
        		this.txnTemplateDS.sync();
        	}
        },
        goInvoiceCustom : function(){

		    banhji.invoiceCustom.set("selectTypeList", banhji.source.customerFormList);
		    banhji.invoiceCustom.set("formShow", banhji.view.invoiceForm10);
		    banhji.router.navigate('/invoice_custom');
        }
    });
    banhji.accountingRecurring = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		pageLoad 			: function(){
			this.search();
		},
		search 				: function(){
			this.dataSource.filter([
				{ field:"type", operator:"where_in", value:["Deposit","Withdraw","Transfer","Cash_Advance","Journal","Direct_Expense","Reimbursement","Advance_Settlement"] },
				{ field:"is_recurring", value: 1 }
			]);
		},
		edit 				: function(e){
			var data = e.data;
			
			switch(data.type) {
			    case "Journal":
			        banhji.journal.set("recurring", "edit");
			        banhji.router.navigate('/journal/' + data.id);
			        break;
			    case "Deposit":
			        banhji.cashTransaction.set("recurring", "edit");
			        banhji.router.navigate('/cash_transaction/' + data.id);

			        break;
			    case "Withdraw":
			        banhji.cashTransaction.set("recurring", "edit");
			        banhji.router.navigate('/cash_transaction/' + data.id);

			        break;
			    case "Transfer":
			        banhji.cashTransaction.set("recurring", "edit");
			        banhji.router.navigate('/cash_transaction/' + data.id);

			        break;
			    case "Cash_Advance":
			        banhji.cashAdvance.set("recurring", "edit");
			        banhji.router.navigate('/cash_advance/' + data.id);

			        break;
			    case "Direct_Expense":
			        banhji.expense.set("recurring", "edit");
			        banhji.router.navigate('/expense/' + data.id);

			        break;
			    case "Reimbursement":
			        banhji.expense.set("recurring", "edit");
			        banhji.router.navigate('/expense/' + data.id);

			        break;
			    case "Advance_Settlement":
			        banhji.expense.set("recurring", "edit");
			        banhji.router.navigate('/expense/' + data.id);

			        break;
			    default:
			        // default code block
			}
		},
		use 				: function(e){
			var data = e.data;
			
			switch(data.type) {
			    case "Journal":
			        banhji.journal.set("recurring", "use");
			        banhji.router.navigate('/journal/' + data.id);
			        break;
			    case "Deposit":
			        banhji.cashTransaction.set("recurring", "use");
			        banhji.router.navigate('/cash_transaction/' + data.id);

			        break;
			    case "Withdraw":
			        banhji.cashTransaction.set("recurring", "use");
			        banhji.router.navigate('/cash_transaction/' + data.id);

			        break;
			    case "Transfer":
			        banhji.cashTransaction.set("recurring", "use");
			        banhji.router.navigate('/cash_transaction/' + data.id);

			        break;
			    case "Cash_Advance":
			        banhji.cashAdvance.set("recurring", "use");
			        banhji.router.navigate('/cash_advance/' + data.id);

			        break;
			    case "Direct_Expense":
			        banhji.expense.set("recurring", "use");
			        banhji.router.navigate('/expense/' + data.id);

			        break;
			    case "Reimbursement":
			        banhji.expense.set("recurring", "use");
			        banhji.router.navigate('/expense/' + data.id);

			        break;
			    case "Advance_Settlement":
			        banhji.expense.set("recurring", "use");
			        banhji.router.navigate('/expense/' + data.id);

			        break;
			    default:
			        // default code block
			}
		}
	});
    banhji.addAccountingprefix =  kendo.observable({
		lang 				: langVM,		
		selectTypeList 		: banhji.source.typeList,
		Type 				: "Invoice",
        dataSource			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "prefixes",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "prefixes",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "prefixes",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "prefixes",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"type", operator:"where_not_in", value:["Electricity_Invoice", "Water_Invoice"] },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
        pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{	
				this.cancel;
			}
		},
		loadObj 			: function(id){
			var self = this;	
			this.dataSource.query({    			
				filter: { field:"id", value: id },
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.dataSource.view();
				self.set("obj", view[0]);
				
			});	
		},	
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });
		    return dfd;	    		    	
	    }, 	    
		save 				: function(){
	    	var self = this, obj = this.get("obj");
			//Save Obj
			this.objSync()
			.then(function(data){ //Success	
				banhji.accountingSetting.prefixDS.fetch();	
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					//window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();		
			window.history.back();
		}
    });


	/*********************
	*   Employee Section   *
	**********************/
	banhji.employeeDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/customer_summary"),
		topCustomerDS 		: dataStore(apiUrl + "dashboards/top_customer"),
		topARDS 			: dataStore(apiUrl + "dashboards/top_ar"),
		topProductDS 		: dataStore(apiUrl + "dashboards/top_product"),
		graphDS 			: dataStore(apiUrl + 'dashboards/monthly_sale'),
		sale 				: 0,
		sale_customer 		: 0,
		sale_product 		: 0,
		sale_order 			: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			// this.summaryDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],								
			// 	page: 1,
			// 	pageSize: 5
			// }).then(function(){
			// 	var view = self.summaryDS.view();

			// 	self.set("sale", kendo.toString(view[0].sale, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));
			// 	self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
			// 	self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
			// 	self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

			// 	self.set("order", kendo.toString(view[0].order, "n0"));
			// 	self.set("order_avg", kendo.toString(view[0].order_avg, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));				
			// 	self.set("order_open", kendo.toString(view[0].order_open, "n0"));

			// 	self.set("ar", kendo.toString(view[0].ar, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));
			// 	self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
			// 	self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
			// 	self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));
			// });

			// this.topCustomerDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],								
			// 	page: 1,
			// 	pageSize: 5
			// });

			// this.topARDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],							
			// 	page: 1,
			// 	pageSize: 5
			// });

			// this.topProductDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", operator:"where_related_transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],							
			// 	page: 1,
			// 	pageSize: 5
			// });

			// this.loadGraph();								
		},
		loadGraph 			: function(){
			var self = this, 
			today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.graphDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],
				page: 1,
				pageSize: 100
			}).then(function(e) {
			    var view = self.graphDS.view();
			    
				$('#graph').kendoChart({
					dataSource: {data: view},												
					series: [
						{field: 'sale', categoryField:'month', type: 'line', axis: 'order'}
					],
					valueAxes: [
						{
		                    name: "order",
		                    color: "#007eff",
		                    min: 0,
		                    majorUnit: 500000,
		                    max: 1000000
		                }
	                ],
	                categoryAxis: {
	                    //categories: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],		                    
	                    axisCrossingValues: [0, 13],
	                    justified: true
	                },
	                tooltip: {
	                    visible: true,
	                    format: "{0}",
	                    template: "#= series.field #: #= value #"
	                }
				});
			});		
		}
	});
	banhji.employeeCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		contactDS 			: dataStore(apiUrl + 'contacts'),
		noteDS 				: dataStore(apiUrl + 'notes'),
		summaryDS 			: dataStore(apiUrl + "transactions"),
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 2 }//Supplier
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		note 				: "",
		searchText 			: "",
		contact_type_id 	: 0,
		currency_id 		: 0,
		user_id 			: banhji.source.user_id,
		balance 			: 0,
		po 					: 0,
		openInvoice 		: 0,
		overInvoice 		: 0,
		pageLoad 			: function(){
		},
		loadSummary 		: function(id){
			var self = this, obj = this.get("obj");

			this.summaryDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Cash_Purchase","Credit_Purchase", "Purchase_Order"] },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view(),
				balance = 0, open = 0, over = 0, po = 0, today = new Date();

				$.each(view, function(index, value){
					if(value.type=="Purchase_Order"){
						po++;
					}else{
						balance += kendo.parseFloat(value.amount);
						open++;

						if(new Date(value.due_date)<today){						
							over++;
						}
					}									
				});
				
				self.set("balance", kendo.toString(balance, "c", obj.locale));
				self.set("po", kendo.toString(po, "n0"));
				self.set("openInvoice", kendo.toString(open, "n0"));
				self.set("overInvoice", kendo.toString(over, "n0"));
			});
		},
		loadTransaction 	: function(id){
			this.transactionDS.query({
			  	filter: { field:"contact_id", value: id },
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadBalance 		: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value:["Purchase","Expense"] },			  		
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadPO 				: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"PO" },			  		
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadOverInvoice 	: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Purchase","Expense"] },
			  		{ field:"due_date <", value: new Date() },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadNote 			: function(id){
			this.noteDS.query({
				filter: { field:"contact_id", value: id },
				sort: { field:"noted_date", dir:"desc" },
				page: 1,
				pageSize: 100
			});
		},
		selectedRow			: function(e){
			var id = e.data.id,
			data = e.data;			
			
			this.set("obj", data);			
			this.loadSummary(id);
			this.loadTransaction(id);			
			this.loadNote(id);
		},
		sorterChanges 		: function(){
			var value = this.get("sorter");

			switch(value){
			case "today":
				var today = new Date();
				
				this.set("sdate", today);
				this.set("edate", today);
			  					
			  	break;
			case "week":
			  	var thisWeek = new Date;
				var first = thisWeek.getDate() - thisWeek.getDay(); 
				var last = first + 6;

				var firstDayOfWeek = new Date(thisWeek.setDate(first));
				var lastDayOfWeek = new Date(thisWeek.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":
				var thisMonth = new Date;				  	
				var firstDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth(), 1);
				var lastDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":
				var thisYear = new Date();
			  	var firstDayOfYear = new Date(thisYear.getFullYear(), 0, 1);
				var lastDayOfYear = new Date(thisYear.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
	  		txtSearch = this.get("searchText"),       		
	  		contact_type_id = this.get("contact_type_id"),
	  		currency_id = this.get("currency_id");      		
	  		
	  		if(txtSearch){
	  			para.push(      				
	  				{ field: "number", operator: "like", value: txtSearch },
	  				{ field: "surname", operator: "or_like", value: txtSearch },
					{ field: "name", operator: "or_like", value: txtSearch },
					{ field: "company", operator: "or_like", value: txtSearch }
	  			);
	  		}      		

	  		if(contact_type_id){
	  			para.push({ field: "contact_type_id", value: contact_type_id });
	  		}else{
	  			para.push({ field: "parent_id", operator:"where_related_contact_type", value: 2 });
	  		}

	  		if(currency_id){
	  			para.push({ field: "currency_id", value: currency_id });
	  		}      		

	  		this.contactDS.filter(para);
	  		var loaded = false;
	  		this.contactDS.bind("requestEnd", function(){
	  			if(loaded==false){
	  				loaded = true;

	  				//Clear search filters
		      		self.set("searchText", "");		      		
		      		self.set("contact_type_id", 0);
		      		self.set("currency_id", 0);
	  			}
	  		});      			
		},
		searchTransaction	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
	    		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

	    	//Dates
	    	if(start && end){
	        	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
	        	para.push({ field:"issued_date <=", value: kendo.toString(end, "yyyy-MM-dd") });            	            	
	        }else if(start){
	        	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
	        }else if(end){
	        	para.push({ field:"issued_date <=", value: kendo.toString(end, "yyyy-MM-dd") });
	        }else{
	        	
	        }

	        para.push({ field:"contact_id", value: obj.id });            

	        this.transactionDS.query({
	        	filter: para,
	        	sort: { field: "issued_date", dir: "desc" },
	        	page: 1,
	        	pageSize: 100
	        });            
		},
		goEditContact 		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/vendor/'+obj.id);
		},
		goCashadvance		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/cash_advance');
			banhji.cashAdvance.loadContact(obj.id);			
		},
		goExpense			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/expense');
			banhji.expense.loadContact(obj.id);
		},
		saveNote 			: function(){
			var self = this;

			if(this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: this.get("obj").id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});
				var saved = false;
				this.noteDS.sync();
				this.noteDS.bind("requestEnd", function(){
					if(saved==false){
						saved = true;

						self.set("note", "");
					}
				});
			}else{
				alert("memo is required");
			}
		}
	});
	banhji.employee = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "contacts"),
		patternDS 				: dataStore(apiUrl + "contacts"),
		deleteDS 				: dataStore(apiUrl + "transactions"),
		existingDS 				: dataStore(apiUrl + "contacts"),
		businessTypeDS			: dataStore(apiUrl + "businesstypes"),
		contactTypeDS  			: banhji.source.employeeTypeDS,
		contactPersonDS			: dataStore(apiUrl + "contact_persons"),
		adDS  					: banhji.source.ADAcountDS,
		saDS  					: banhji.source.SAAcountDS,
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		genders					: banhji.source.genderList,
		statusList 				: banhji.source.statusList,
	    obj 					: null,
		originalNo				: null,
		isDuplicateNumber 		: false,
		isCompany 				: false,
		isEdit 					: false,
		pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
				this.loadContactPerson(id);				
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
										
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}else{
					var obj = this.get("obj");

					obj.set("is_pattern", false);	
				}								
			}			
		},
		setPattern 				: function(id){
			var obj = this.get("obj");

			obj.set("contact_type_id", id);
			obj.set("is_pattern", true);
		},
		loadPattern 			: function(id){
			var self = this;

			this.patternDS.query({
				filter: [
					{ field:"contact_type_id", value: id },
					{ field:"is_pattern", value: true }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view(),
				obj = self.get("obj");

				if(view.length>0){
					obj.set("account_id", view[0].account_id);
					obj.set("discount_account_id", view[0].discount_account_id);
					obj.set("deposit_account_id", view[0].deposit_account_id);
					obj.set("tax_item_id", view[0].tax_item_id);
					obj.set("currency_id", view[0].currency_id);
					obj.set("credit_limit", view[0].credit_limit);

					obj.set("payment_term_id", view[0].payment_term_id);
					obj.set("payment_method_id", view[0].payment_method_id);
					obj.set("business_type_id", view[0].business_type_id);
				}else{
					obj.set("account_id", 0);
					obj.set("discount_account_id", 0);
					obj.set("deposit_account_id", 0);
					obj.set("tax_item_id", 0);
					obj.set("currency_id", 0);
					obj.set("credit_limit", 0);

					obj.set("payment_term_id", 0);
					obj.set("payment_method_id", 0);
					obj.set("business_type_id", 0);
				}
			});
		},
		loadObj 				: function(id){
			var self = this;

			this.dataSource.query({
				filter:{ "field":"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();

				if(view[0].contact_type_id=="6" || view[0].contact_type_id=="7" || view[0].contact_type_id=="8"){
					self.set("isCompany", true);
				}else{
					self.set("isCompany", false);
				}

				self.set("obj", view[0]);
				self.loadMap();
				self.set("originalNo", view[0].number);											
			});
		},
		loadPatternEdit			: function(id){
			var self = this;

			this.dataSource.query({
				filter:[
					{ "field":"id", value: id },
					{ "field":"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("obj", view[0]);														
			});
		},
		loadContactPerson		: function(id){
			this.contactPersonDS.query({
				filter: { "field":"contact_id", value: id },
				page: 1,
				pageSize: 100
			});
		},
		copyBillTo 				: function(){
			var obj = this.get("obj");

			obj.set("ship_to", obj.bill_to);
		},
		contactTypeChanges 		: function(){
			var obj = this.get("obj");

			if(obj.contact_type_id>0){
				this.loadPattern(obj.contact_type_id);
			}
		},
		checkExistingNumber 	: function(){
			var self = this;	
			
			var number = this.get("obj").number;
			var originalNo = this.get("originalNo");
			
			if(number.length>0 && number!==originalNo){
				this.existingDS.query({
					filter: { field:"number", value: number },
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("isDuplicateNumber", true);						
					}else{
						self.set("isDuplicateNumber", false);
					}
				});							
			}else{
				this.set("isDuplicateNumber", false);
			}			
		},
		addEmptyContactPerson 	: function(){
			var contact_id = 0;
			if(this.get("isEdit")){
				contact_id = this.get("obj").id;
			}

			this.contactPersonDS.add({					 			
				contact_id 			: contact_id,
	  			prefix 				: "",      			
				name 				: "",
				department			: "",
				phone				: "",
				email				: ""
			});								
		},
		deleteContactPerson 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.contactPersonDS.getByUid(d.uid);

				this.contactPersonDS.remove(obj);
			}
		},
	  	addEmpty 				: function(){
	  		this.dataSource.data([]);
	  		this.set("obj", null);

			this.dataSource.add({
				"company_id" 			: 0,
				"ebranch_id" 			: 0,
				"elocation_id"			: 0,
				"wbranch_id" 			: 0,
				"wlocation_id" 			: 0,			
				"currency_id" 			: 0,
				"user_id" 				: 0,
				"contact_type_id" 		: 0,							
				"number"				: "",
				"enumber"				: "",
				"wnumber"				: "",
				"surname"				: "",
				"name"					: "",
				"gender"				: "M",
				"dob"					: "",
				"pob"					: "",
				"latitute" 				: "",
				"longtitute" 			: "",
				"credit_limit"			: 0,				
				"id_number"				: "",
				"phone" 				: "",
				"email" 				: "",
				"website" 				: "",			
				"job"					: "",				
				"vat_no"				: "",
				"family_member"			: "",
				"address" 				: "",
				"bill_to" 				: "",
				"ship_to" 				: "",
				"memo"					: "",				
				"image_url"				: "",
				"company"				: "",
				"company_en"			: "",		
				"bank_name"				: "",
				"bank_address"			: "",
				"bank_account_name"		: "",
				"bank_account_number"	: "",
				"name_on_cheque"		: "",				
				"business_type_id"		: 0,
				"payment_term_id"		: 0,
				"payment_method_id"		: 0,
				"deposit_account_id"	: 0,
				"discount_account_id"	: 0,				
				"account_id"			: 0,
				"salary_account_id"		: 0,
				"ra_id"					: 0,
				"tax_item_id"			: 0,				
				"phase_id"				: 0,
				"voltage_id"			: 0,
				"ampere_id"				: 0,
				"registered_date" 		: new Date(),			
				"use_electricity"		: 0,
				"use_water"				: 0,
				"is_local" 				: 0,
				"is_pattern" 			: 0,				
				"status"				: 1							
			});			

			var data = this.dataSource.data();			
			var obj = data[data.length - 1];			
			this.set("obj", obj);	
		},
		contactSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, saved = false;

			if(this.get("isEdit")){
				this.dataSource.sync();
				this.contactPersonDS.sync();
			}else{
				this.contactSync().then(function(data){
					self.saveContactPerson(data[0].id);

					if(data[0].is_pattern){
						self.savePattern(data[0].contact_type_id, data[0].id);
					}
				}).then(function(){
					self.contactPersonDS.data([]);

					self.addEmpty();
				});
			}
		},
		delete 					: function(){
			var self = this,
			obj = this.get("obj"),
			id = obj.id;

			if (confirm("Are you sure, you want to delete it?")) {				
				this.deleteDS.query({
				  	filter: { field: "contact_id", value: id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						var data = self.dataSource.get(id);
				        self.dataSource.remove(data);
				        self.save();

				        window.history.back();
					}
				});
	    	}
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.contactPersonDS.cancelChanges();

			window.history.back();
		},
		saveContactPerson 		: function(id){
			$.each(this.contactPersonDS.data(), function(index, value) {
				value.set("contact_id", id);
			});

			this.contactPersonDS.sync();
		},
		savePattern 			: function(contact_type_id, contact_id){
			var data = this.contactTypeDS.get(contact_type_id);
			data.set("contact_id", contact_id);
			this.contactTypeDS.sync();

			banhji.vendorSetting.contactTypeDS.fetch();
			window.history.back();
		}
	});


	/*********************
	*   Vendor Section   *
	**********************/
	banhji.vendorDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/supplier_dashboard_summary"),
		topContactDS 		: dataStore(apiUrl + "dashboards/top_supplier"),
		topAPDS 			: dataStore(apiUrl + "dashboards/top_ap"),
		topProductDS 		: dataStore(apiUrl + "dashboards/top_purchase_product"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/monthly_purchase",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		purchase 			: 0,
		purchase_supplier 	: 0,
		purchase_product 	: 0,
		purchase_order 		: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ap 					: 0,
		ap_open 			: 0,
		ap_customer 		: 0,
		ap_overdue 			: 0,
		pageLoad 			: function(){
			var self = this;

			this.graphDS.read();

			this.summaryDS.query({
				filter: [],								
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("purchase", kendo.toString(view[0].purchase, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("purchase_supplier", kendo.toString(view[0].purchase_supplier, "n0"));
				self.set("purchase_product", kendo.toString(view[0].purchase_product, "n0"));
				self.set("purchase_order", kendo.toString(view[0].purchase_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ap", kendo.toString(view[0].ap, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ap_open", kendo.toString(view[0].ap_open, "n0"));
				self.set("ap_customer", kendo.toString(view[0].ap_customer, "n0"));
				self.set("ap_overdue", kendo.toString(view[0].ap_overdue, "n0"));
			});

			this.topContactDS.query({
				filter: [],								
				page: 1,
				pageSize: 5
			});

			this.topAPDS.query({
				filter: [],							
				page: 1,
				pageSize: 5
			});

			this.topProductDS.query({
				filter: [],							
				page: 1,
				pageSize: 5
			});										
		}
	});
	banhji.vendorCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		contactDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field:"parent_id", operator:"where_related_contact_type", value:2 },
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 2 }//Supplier
		}),
		noteDS 				: dataStore(apiUrl + 'notes'),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		summaryDS 			: dataStore(apiUrl + "transactions"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		note 				: "",
		searchText 			: "",
		contact_type_id 	: null,
		balance 			: 0,
		po 					: 0,
		openInvoice 		: 0,
		overInvoice 		: 0,
		currencyCode 		: "",
		user_id 			: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.loadObj(id);
			}

			//Refresh
			if(this.contactDS.total()>0){
				this.contactDS.fetch();
				this.searchTransaction();
				this.loadSummary();
			}							
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		setCurrencyCode 	: function(){
			var code = "", obj = this.get("obj");

			$.each(banhji.source.currencyDS.data(), function(index, value){				
				if(value.locale == obj.locale){
					code = value.code;					

					return false;					
				}
			});

			this.set("currencyCode", code);
		},
		loadObj 			: function(id){
			var self = this;

			this.contactDS.query({
				filter: { field:"id", value:id },
				page:1,
				pageSize:100
			}).then(function(){
				var view = self.contactDS.view();

				if(view.length>0){
					self.set("obj", view[0]);
					self.loadData();
				}
			});
		},
		loadData 			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.searchTransaction();
				this.loadSummary();
				this.setCurrencyCode();
				
				this.attachmentDS.filter({ field:"contact_id", value: obj.id });
				this.noteDS.query({
					filter: { field:"contact_id", value: obj.id },
					sort: { field:"noted_date", dir:"desc" },
					page: 1,
					pageSize: 10
				});
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
			if(obj!==null){
		        // Check the extension of each file and abort the upload if it is not .jpg
		        $.each(files, function(index, value){
		            if (value.extension.toLowerCase() === ".jpg"
		            	|| value.extension.toLowerCase() === ".jpeg"
		            	|| value.extension.toLowerCase() === ".tiff"
		            	|| value.extension.toLowerCase() === ".png" 
		            	|| value.extension.toLowerCase() === ".gif"
		            	|| value.extension.toLowerCase() === ".pdf"){

		            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

		            	self.attachmentDS.add({
		            		user_id 		: self.get("user_id"),
		            		contact_id 		: obj.id,
		            		type 			: "Contact",
		            		name 			: value.name,
		            		description 	: "",
		            		key 			: key,
		            		url 			: banhji.s3 + key,
		            		size 			: value.size,
		            		created_at 		: new Date(),

		            		file 			: value.rawFile
		            	});	            			            		            
		            }else{
		            	alert("This type of file is not allowed to attach.");
		            }
		        });
	    	}else{
	    		alert("Please select a supplier!");
	    	}
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    		this.attachmentDS.sync();
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
	    //Obj
		loadContact 		: function(id){
			var self = this;			
			
			this.contactDS.query({
			  	filter:[
			  		{ field:"id", value:id }
			  	],
			  	page: 1,
			  	pageSize: 50
			}).then(function(e) {
			    var view = self.contactDS.data();
			    
			    if(view.length>0){
			    	self.set("obj", view[0]);				    	
			    	self.loadData();		    	
			    }
			});			
		},
		loadSummary 		: function(){
			var self = this, obj = this.get("obj");

			if(obj!==null){
				this.summaryDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", operator:"where_in", value: ["Credit_Purchase", "Purchase_Order"] },
				  		{ field:"status", operator:"where_in", value: [0,2] }
				  	],
				  	sort: { field: "issued_date", dir: "desc" },
				  	page: 1,
				  	pageSize: 1000
				}).then(function(){
					var view = self.summaryDS.view(),
					balance = 0, open = 0, over = 0, po = 0, today = new Date();

					$.each(view, function(index, value){
						if(value.type=="Purchase_Order"){
							po++;
						}else{
							balance += kendo.parseFloat(value.amount) - (kendo.parseFloat(value.deposit) + value.amount_paid);
							open++;

							if(new Date(value.due_date)<today){						
								over++;
							}
						}									
					});
					
					self.set("balance", kendo.toString(balance, "c", obj.locale));
					self.set("po", kendo.toString(po, "n0"));
					self.set("openInvoice", kendo.toString(open, "n0"));
					self.set("overInvoice", kendo.toString(over, "n0"));
				});
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		loadBalance 		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.transactionDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", value:"Credit_Purchase" },			  		
				  		{ field:"status", operator:"where_in", value: [0,2] }
				  	],
				  	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
				  	page: 1,
				  	pageSize: 10
				});
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		loadPO 				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.transactionDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", value:"Purchase_Order" },			  		
				  		{ field:"status", value: 0 }
				  	],
				  	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
				  	page: 1,
				  	pageSize: 10
				});
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		loadOverInvoice 	: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.transactionDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", operator:"where_in", value: ["Cash_Purchase","Credit_Purchase"] },
				  		{ field:"due_date <", value: new Date() },
				  		{ field:"status", value: 0 }
				  	],
				  	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
				  	page: 1,
				  	pageSize: 10
				});
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		selectedRow			: function(e){
			var data = e.data;
			
			this.set("obj", data);
			this.loadData();
		},
		//Search
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
      		searchText = this.get("searchText"),
      		contact_type_id = this.get("contact_type_id");
      		
      		if(searchText){
      			var textParts = searchText.replace(/([a-z]+)/i, "$1 ").split(/[^0-9a-z]+/ig);

      			para.push(
      				{ field: "abbr", value: textParts[0] },
      				{ field: "number", value: textParts[1] },
					{ field: "name", operator: "or_like", value: searchText }
      			);
      		}

      		if(contact_type_id){
      			para.push({ field: "contact_type_id", value: contact_type_id });
      		}else{
      			para.push({ field: "parent_id", operator:"where_related_contact_type", value: 2 });
      		}

      		this.contactDS.filter(para);
			
			//Clear search filters
      		self.set("searchText", "");
      		self.set("contact_type_id", 0);
		},
		searchTransaction	: function(){
			var self = this,
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd"),
        		para = [], obj = this.get("obj");

        	if(obj!==null){
        		para.push({ field:"contact_id", value: obj.id });        	

	        	//Dates
	        	if(start && end){
	            	para.push({ field:"issued_date >=", value: start });
	            	para.push({ field:"issued_date <=", value: end });
	            }else if(start){
	            	para.push({ field:"issued_date", value: start });
	            }else if(end){
	            	para.push({ field:"issued_date <=", value: end });
	            }else{
	            	
	            }

	            this.transactionDS.query({
	            	filter: para,
	            	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
	            	page: 1,
	            	pageSize: 10
	            });
            }            
		},
		//Links	
		goEdit 		 		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/vendor/'+obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		goPO				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/purchase_order');
				banhji.purchaseOrder.loadContact(obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		goDeposit			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/vendor_deposit');
				banhji.vendorDeposit.loadContact(obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		goPurchase			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/purchase');
				banhji.purchase.loadContact(obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		goPurchaseReturn	: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/purchase_return');
				banhji.purchaseReturn.loadContact(obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		goGRN				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/grn');
				banhji.grn.loadContact(obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		goCashPayment		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/cash_payment');
				banhji.cashPayment.loadContact(obj.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		payBill 			: function(e){
			var data = e.data;

			if(obj!==null){
				banhji.router.navigate('/cash_payment');
				banhji.cashPayment.loadInvoice(data.id);
			}else{
				alert(banhji.source.selectSupplierMessage);
			}
		},
		//Note
		saveNoteEnter 		: function(e){
			e.preventDefault();
			this.saveNote();
		},
		saveNote 			: function(){
			var obj = this.get("obj");

			if(obj!==null && this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: obj.id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});

				this.noteDS.sync();
				this.set("note", "");					
			}else{
				alert("Please select a supplier and Memo is required");
			}
		}
	});
	banhji.vendor = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "contacts"),
		patternDS 				: dataStore(apiUrl + "contacts"),
		numberDS 				: dataStore(apiUrl + "contacts"),
		deleteDS 				: dataStore(apiUrl + "transactions"),		
		existingDS 				: dataStore(apiUrl + "contacts"),		
		contactPersonDS			: dataStore(apiUrl + "contact_persons"),		
		paymentTermDS			: banhji.source.paymentTermDS,
		paymentMethodDS			: banhji.source.paymentMethodDS,
		countryDS 				: banhji.source.countryDS,
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 2 }//Supplier
		}),
		apDS 		  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 23 },
			      	{ field: "account_type_id", value: 24 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),		
		prepaidAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 14 },
			      	{ field: "account_type_id", value: 21 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		tradeDiscountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 36 },
		  	sort: { field:"number", dir:"asc" }
		}),
		settlementDiscountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"id", value: 109 },
		  	sort: { field:"number", dir:"asc" }
		}),
		taxItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		genders					: banhji.source.genderList,
		statusList 				: banhji.source.statusList,
		confirmMessage 			: banhji.source.confirmMessage,
		isEdit 					: false,
		isProtected 			: false,
        obj 					: null,
        saveClose 				: false,
		showConfirm 			: false,
		notDuplicateNumber 		: true,
		phFullname 				: "Supplier Name ...",
		contact_type_id 		: 0,
		pageLoad 				: function(id, contact_type_id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id, contact_type_id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}	
		},
		//Contact Person
		addEmptyContactPerson 	: function(){
			var obj = this.get("obj");
			
			this.contactPersonDS.add({					 			
				contact_id 			: obj.id,
      			prefix 				: "",      			
				name 				: "",
				department			: "",
				phone				: "",
				email				: ""
			});								
		},
		deleteContactPerson 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.contactPersonDS.getByUid(d.uid);

				this.contactPersonDS.remove(obj);
			}
		},
		//Map
		loadMap 				: function(){
			var obj = this.get("obj"), lat = kendo.parseFloat(obj.latitute),
			lng = kendo.parseFloat(obj.longtitute);
			
			if(lat && lng){
				var myLatLng = {lat:lat, lng:lng};
				var mapOptions = {
					zoom: 17,					
					center: myLatLng,
					mapTypeControl: false,
					zoomControl: false,
					scaleControl: false,
					streetViewControl: false
				};
				var map = new google.maps.Map(document.getElementById('map'),mapOptions);
				var marker = new google.maps.Marker({
					position: myLatLng,
					map: map,
					title: obj.number
				});
			} 
		},
		copyBillTo 				: function(){
			var obj = this.get("obj");

			obj.set("ship_to", obj.bill_to);
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");			
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"contact_type_id", value: obj.contact_type_id });
				
				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);						
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}			
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"contact_type_id", value:obj.contact_type_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		checkExistingTxn		: function(){
			var self = this, obj = this.get("obj");
			
			this.deleteDS.query({
				filter: { field:"contact_id", value: obj.id },
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.deleteDS.view();
				
				if(view.length>0){
					self.set("isProtected", true);
				}else{
					self.set("isProtected", false);
				}								
			});
		},
		//Obj
		loadObj 				: function(id, contact_type_id){
			var self = this, para = [];

			if(id>0){
				para.push({ field:"id", value: id });
			}

			if(contact_type_id){
				para.push({ field:"contact_type_id", value: contact_type_id });
				para.push({ field:"is_pattern", value: 1 });
			}

			this.dataSource.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();			

				self.set("obj", view[0]);
				self.loadMap();
				self.checkExistingTxn();								
			});
		},
      	addEmpty 				: function(){
      		this.dataSource.data([]);
      		this.contactPersonDS.data([]);

      		this.set("isEdit", false);
      		this.set("isProtected", false);
      		this.set("notDuplicateNumber", true);
      		this.set("obj", null);      		

  			this.dataSource.insert(0, {				
				"country_id" 			: 0,			
				"user_id" 				: 0,
				"contact_type_id" 		: 6,							
				"abbr"					: "",
				"number"				: "",				
				"surname"				: "",
				"name"					: "",
				"gender"				: "",					
				"phone" 				: "",
				"email" 				: "",					
				"company"				: "",
				"vat_no"				: "",					
				"memo"					: "",
				"city"					: "",
				"post_code"				: "",
				"address" 				: "",
				"bill_to" 				: "",
				"ship_to" 				: "",
				"latitute" 				: "",
				"longtitute" 			: "",
				"credit_limit"			: 0,
				"locale" 				: banhji.locale,														
				"payment_term_id"		: 0,
				"payment_method_id"		: 0,									
				"registered_date" 		: new Date(),
				"account_id"			: 0,
				"ra_id"					: 0,
				"tax_item_id"			: 0,
				"deposit_account_id"	: 0,
				"trade_discount_id"		: 0,
				"settlement_discount_id": 0,					
				"is_pattern" 			: 0,
				"status"				: 1								
			});

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			this.typeChanges();
		},
		objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Edit Mode
	    	if(this.get("isEdit")){
	    		//Contact Person has changes
		    	if(this.contactPersonDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Contact Person
					$.each(self.contactPersonDS.data(), function(index, value) {
						value.set("contact_id", data[0].id);
					});
				}
				self.contactPersonDS.sync();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				banhji.source.loadSuppliers();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.contactPersonDS.cancelChanges();
			this.dataSource.data([]);
			this.contactPersonDS.data([]);
			this.set("contact_type_id", 0);

			banhji.userManagement.removeMultiTask("vendor");
		},
		delete 					: function(){
			var obj = this.get("obj");
			this.set("showConfirm",false);

			if(!obj.is_system==1){
				if(this.get("isProtected")){
					alert("Sorry, this data is protected!");
				}else{
					obj.set("deleted", 1);
			        this.dataSource.sync();

			        window.history.back();
				}
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		},
		//Pattern		
		typeChanges 			: function(){
			var obj = this.get("obj");

			if(obj.contact_type_id && obj.isNew()){
				this.applyPattern();
				this.generateNumber();
			}
		},
		applyPattern 			: function(){
			var self = this, obj = self.get("obj");
			
			this.patternDS.query({
				filter: [
					{ field:"contact_type_id", value: obj.contact_type_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view(),
				type = self.contactTypeDS.get(view[0].contact_type_id);				

				if(view.length>0){
					obj.set("country_id", view[0].country_id);
					obj.set("abbr", type.abbr);					
					obj.set("gender", view[0].gender);
					obj.set("company", view[0].company);
					obj.set("vat_no", view[0].vat_no);
					obj.set("memo", view[0].memo);
					obj.set("city", view[0].city);
					obj.set("post_code", view[0].post_code);
					obj.set("address", view[0].address);
					obj.set("bill_to", view[0].bill_to);
					obj.set("ship_to", view[0].ship_to);									
					obj.set("payment_term_id", view[0].payment_term_id);
					obj.set("payment_method_id", view[0].payment_method_id);
					obj.set("credit_limit", view[0].credit_limit);
					obj.set("locale", view[0].locale);					
					obj.set("account_id", view[0].account_id);
					obj.set("ra_id", view[0].ra_id);
					obj.set("tax_item_id", view[0].tax_item_id);
					obj.set("deposit_account_id", view[0].deposit_account_id);
					obj.set("trade_discount_id", view[0].trade_discount_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);					
				}
			});
		}
	});
	banhji.purchaseOrder =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		txnDS  				: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Purchase_Order" }
		}),		
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: { field:"is_assembly", operator:"neq", value: 1 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 1 },//Supplier Tax
			      	{ field: "tax_type_id", value: 2 },
			      	{ field: "tax_type_id", value: 3 },
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm   		: false,
		notDuplicateNumber 	: true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		showDeposit 		: false,
		showDiscount 		: false,
		showRequiredDate 	: false,
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		total 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");
			
	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadBalance();	    			    	
	    	}else{
	    		this.set("total_credit", 0);
	    	}

	    	this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, 
			obj = this.get("obj"),
			contact = this.contactDS.get(obj.contact_id),
			balance = 0, creditAllowed = 0;			

			this.txnDS.query({    			
				filter:[
					{ field:"amount", operator:"select_sum", value:"amount" },
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Credit_Purchase" },
					{ field:"status", operator:"where_in", value:[0,2] }
				]
			}).then(function(){
				var view = self.txnDS.view();

				balance += view[0].amount;

		    	return self.txnDS.query({
		    		filter:[
						{ field:"contact_id", value:obj.contact_id },
						{ field:"type", value:"Credit_Purchase" },
						{ field:"status", value:2 }
					]
		    	});	
			}).then(function(){
				var view = self.txnDS.view();				

				var idList = [0];
				$.each(view, function(index, value){
					idList.push(value.id);
				});

		    	return self.txnDS.query({
		    		filter:[
		    			{ field:"amount", operator:"select_sum", value:"amount" },
						{ field:"reference_id", operator:"where_in", value: idList },
						{ field:"type", value:"Cash_Payment" }
					]
		    	});
		    }).then(function(){
		    	var view = self.txnDS.view();

		    	balance -= view[0].amount;

		    	if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}

		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);
			});				
		},
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				
				value.set("rate", itemRate);
			});						
		},
		//Item
		itemChanges 		: function(e){
			var self = this, data = e.data, obj = this.get("obj");

			// var notDuplicate = true, existingList = {};
			// $.each(this.lineDS.data(), function(index, value){
			// 	if(existingList[value.item_id]===undefined){
			// 		existingList[value.item_id]=value.item_id;											
			// 	}else{
			// 		notDuplicate = false;

			// 		return false;
			// 	}
			// });
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id);

		        if(item.is_catalog=="1"){
	        		this.lineDS.remove(data);

	        		$.each(item.catalogs, function(ind, val){
	        			var cat = self.itemDS.get(val);

						if(cat){
							var itemPriceList = [],
							rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date));

				        	$.each(banhji.source.itemPriceList, function(index, value){
				        		if(value.item_id==cat.id){
				        			itemPriceList.push(value);
				        		}
				        	});

							self.lineDS.add({					
								transaction_id 		: obj.id,
								tax_item_id 		: 0,
								item_id 			: cat.id,
								measurement_id 		: cat.measurement_id,								
								description 		: cat.purchase_description,				
								quantity 	 		: 1,
								unit_value 			: 1,
								cost 				: cat.cost*rate,												
								amount 				: cat.cost*rate,
								discount 			: 0,
								rate				: rate,
								locale				: cat.locale,
								movement 			: 1,								

								item_prices 		: itemPriceList
							});
						}								
	        		});

	        		this.changes();
		        }else{
		        	var itemPriceList = [],
		        	rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

		        	$.each(banhji.source.itemPriceList, function(index, value){
		        		if(value.item_id==data.item_id){
		        			itemPriceList.push(value);
		        		}
		        	});

		    		data.set("measurement_id", item.measurement_id);
		    		data.set("description", item.purchase_description);
		    		data.set("quantity", 1);
		    		data.set("unit_value", 1);
			        data.set("cost", item.cost*rate);
			        data.set("rate", rate);	
			        data.set("locale", item.locale);
			        data.set("item_prices", itemPriceList);			        

			        this.changes();
		    	}
	        }else{
	        	data.set("item_id", "");
	        	alert(banhji.source.duplicateSelectedItemMessage);
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});
	        }
		},
		//Segment
		segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();
					
					self.set("obj", view[0]);

					self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));

					if(view[0].status=="1"){
						self.set("statusSrc", banhji.source.approvedSrc);
					}else{
						self.set("statusSrc", banhji.source.openSrc);
					}

					if(view[0].discount>0){
						self.set("showDiscount", true);
					}
					
					self.loadLines(id);
					self.attachmentDS.filter({ field: "transaction_id", value: id });
				});
			}				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: { field: "transaction_id", value: id }
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, tax = 0;											

			$.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.cost;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);					
				subTotal += amt;
	        });

	    	//Total
	        total = subTotal + tax;		        

	        //Warning over credit allowed
	        if(obj.credit_allowed>0 && total>obj.credit_allowed){
	        	this.set("amtDueColor", "Gold");		        	
	        }else{
	        	this.set("amtDueColor", banhji.source.amtDueColor);
	        }

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);

			this.set("total", kendo.toString(total, "c", obj.locale));
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);

			this.dataSource.insert(0, {
				transaction_template_id : 11,
				contact_id 			: "",
				recurring_id 		: "",
				job_id 				: "",
				user_id 			: this.get("user_id"),
			   	type				: "Purchase_Order",//Required
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	amount				: 0,
			   	deposit 			: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	check_no 			: "",
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	due_date 			: duedate,
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.generateNumber();
			this.setRate();
			this.addRow();
		},
		addRow 				: function(){
			var obj = this.get("obj");
									
			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 1,
				cost 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: 1,
				required_date 		: new Date(),

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}
	    	
    		//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("purchase_order");
		},
	    delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("contact_id", view[0].contact_id);
				obj.set("job_id", view[0].job_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						item_id 			: value.item_id,
						measurement_id 		: value.measurement_id,
						description 		: value.description,
						quantity 	 		: value.quantity,
						cost 				: value.cost,
						amount 				: value.amount,
						discount 			: value.discount,
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,
						required_date 		: new Date(),

						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.grn =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_linese"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "GRN" }
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: { field:"is_assembly", operator:"neq", value: 1 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm   		: false,
		notDuplicateNumber	: true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		total 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");
			
	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadReference();
	    	}
	    	
		    this.changes();
	    },
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				
				value.set("rate", itemRate);
			});						
		},
		//Item		
		itemChanges 		: function(e){
			var self = this, 
			data = e.data,
			obj = this.get("obj");

			// var notDuplicate = true, existingList = {};
			// $.each(this.lineDS.data(), function(index, value){
			// 	if(existingList[value.item_id]===undefined){
			// 		existingList[value.item_id]=value.item_id;											
			// 	}else{
			// 		notDuplicate = false;

			// 		return false;
			// 	}
			// });
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id);

		        if(item.is_catalog=="1"){
		        	this.lineDS.remove(data);

	        		$.each(item.catalogs, function(ind, val){
	        			var cat = self.itemDS.get(val);

						if(cat){
							var itemPriceList = [],
							rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date));

				        	$.each(banhji.source.itemPriceList, function(index, value){
				        		if(value.item_id==cat.id){
				        			itemPriceList.push(value);
				        		}
				        	});

							self.lineDS.add({					
								transaction_id 		: obj.id,
								tax_item_id 		: 0,
								item_id 			: cat.id,
								measurement_id 		: cat.measurement_id,								
								description 		: cat.purchase_description,				
								quantity 	 		: 1,
								unit_value 			: 1,
								cost 				: cat.cost*rate,												
								amount 				: cat.cost*rate,
								discount 			: 0,
								rate				: rate,
								locale				: cat.locale,
								movement 			: 1,								

								item_prices 		: itemPriceList
							});
						}								
	        		});

	        		this.changes();
		        }else{
					var itemPriceList = [],
					rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

		        	$.each(banhji.source.itemPriceList, function(index, value){
		        		if(value.item_id==data.item_id){
		        			itemPriceList.push(value);
		        		}
		        	});

		    		data.set("measurement_id", item.measurement_id);
		    		data.set("description", item.purchase_description);
		    		data.set("quantity", 1);
		    		data.set("unit_value", 1);
			        data.set("cost", item.cost*rate);
			        data.set("rate", rate);	
			        data.set("locale", item.locale);
			        data.set("item_prices", itemPriceList);			        

			        this.changes();
		    	}
	        }else{
	        	data.set("item_id", "");
	        	alert(banhji.source.duplicateSelectedItemMessage);
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});
	        }
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();
					
					self.set("obj", view[0]);
					self.set("total", kendo.toString(view[0].amount, "n0"));
					
					self.set("statusSrc", banhji.source.receivedSrc);

					self.loadLines(id);
					self.attachmentDS.filter({ field: "transaction_id", value: id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });
				});
			}
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: { field: "transaction_id", value: id }
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), total = 0;										

			$.each(this.lineDS.data(), function(index, value) {				
				total += value.quantity;
	        });
			
			obj.set("amount", total);
			this.set("total", kendo.toString(total, "n0"));
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				transaction_template_id : 5,
				contact_id 			: "",
				reference_id 		: "",
				recurring_id 		: "",
				user_id 			: this.get("user_id"),
			   	type				: "GRN",//Required
			   	number 				: "",
			   	sub_total 			: 0,
			   	amount				: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 1,
				cost 				: 0,
				amount 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: 1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var d = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(d);
		        this.changes();
	        }		        
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
    		//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("grn");
		},
	    delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Reference					
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", value: "Purchase_Order" },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("employee_id", data.employee_id);
				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
								
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: 0,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							cost 				: value.cost,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});
		 	}
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("contact_id", view[0].contact_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						item_id 			: value.item_id,
						measurement_id 		: value.measurement_id,
						description 		: value.description,
						quantity 	 		: value.quantity,
						cost 				: value.cost,
						amount 				: value.amount,
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,

						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.vendorDeposit =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "account_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "account_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		paymentMethodDS		: dataStore(apiUrl + "payment_methods"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Deposit" }
		}),
		accountDS 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 10 },//Cash
			      	{ field: "account_type_id", value: 34 },//Retained Earning
			      	{ field: "account_type_id", value: 36 },//Expense
			      	{ field: "account_type_id", value: 37 },
			      	{ field: "account_type_id", value: 38 },
			      	{ field: "account_type_id", value: 40 },
			      	{ field: "account_type_id", value: 41 },
			      	{ field: "account_type_id", value: 42 },
			      	{ field: "account_type_id", value: 43 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		depositAccountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 14 },
			      	{ field: "account_type_id", value: 21 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthList 			: banhji.source.monthList,	
		monthOptionList 	: banhji.source.monthOptionList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		total				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("account_id", contact.deposit_account_id);
		    	obj.set("locale", contact.locale);
		    	this.setRate();
		    	this.loadReference();
	    	}
	    	
		    this.changes();
	    },
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});
		},
		//Segment
		segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);
			this.journalLineDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				transaction_template_id : 7,
				recurring_id 		: "",
				contact_id 			: "",
				account_id 			: "",
				user_id 			: this.get("user_id"), 	
				reference_id	 	: "",
			   	type				: "Vendor_Deposit", //required
			   	number 				: "",
			   	amount				: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			
			this.setRate();
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				payment_method_id 	: 0,
				account_id 			: "",
				contact_id 			: "",
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		remove 				: function(e){
			var d = e.data;
			this.lineDS.remove(d);
        	this.changes();
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){			
				var sum = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {
					sum += value.amount;
		        });		       	

		        this.set("total", kendo.toString(sum, "c", obj.locale));		        
		        obj.set("amount", sum);		       								    	
	    	}else{
	    		this.set("total", 0);		        
		        obj.set("amount", 0);				
	    	}   	
		},
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.dataSource.view();

					if(view.length>0){	       
						self.set("obj", view[0]);
			        }

					self.lineDS.filter({ field: "transaction_id", value: id });
					self.journalLineDS.filter({ field: "transaction_id", value: id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });
				});
			}				
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(this.lineDS.hasChanges() && obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});
					
					this.addJournal(obj.id);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				ref.set("deposit", obj.amount);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Add Journal
		            if(data[0].is_recurring==0){
		            	self.addJournal(data[0].id);
		        	}
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("vendor_deposit");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id }
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();
					self.dataSource.bind("requestEnd", function(e){
						if(e.type==="update"){
							window.history.back();
						}
					});
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Journal
		addJournal 			: function(transaction_id){
	    	var self = this,
	    	sum =0,
	    	obj = this.get("obj");			

			//Cash account on CR
			$.each(this.lineDS.data(), function(index, value){
				sum += value.amount;
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,				
					contact_id 			: value.contact_id,				
					description 		: "",
					reference_no 		: value.reference_no,
					segments 	 		: [],								
					dr 	 				: 0,	
					cr 					: value.amount,			
					rate				: value.rate,
					locale				: value.locale
				});
			});

			//Deposit on DR
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: obj.segments,								
				dr 	 				: sum,	
				cr 					: 0,			
				rate				: obj.rate,
				locale				: obj.locale
			});

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "deposit", value: 0 },
					{ field: "type", value: "Purchase_Order" },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
				obj.set("amount", data.amount);

				this.lineDS.data([]);
				this.lineDS.add({
					transaction_id 		: obj.id,
					account_id 			: "",
					description 		: "",
					reference_no 		: data.number,
					amount 	 			: data.amount,
					rate				: data.rate,
					locale				: data.locale
				});
			 	this.set("total", kendo.toString(data.amount, "c", data.locale));
		 	}
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("contact_id", view[0].contact_id);
				obj.set("account_id", view[0].account_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({
						transaction_id 		: 0,
						payment_method_id 	: value.payment_method_id,
						account_id 			: value.account_id,
						contact_id 			: value.contact_id,
						description 		: value.description,
						reference_no 		: value.reference_no,
						segments 	 		: value.segments,
						amount 	 			: value.amount,
						rate				: value.rate,
						locale				: value.locale
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.purchase =  kendo.observable({
		lang 						: langVM,
		dataSource 					: dataStore(apiUrl + "transactions"),
		lineDS  					: dataStore(apiUrl + "item_lines"),
		txnDS 						: dataStore(apiUrl + "transactions"),
		accountLineDS  				: dataStore(apiUrl + "account_lines"),
		journalLineDS				: dataStore(apiUrl + "journal_lines"),
		additionalCostDS 			: dataStore(apiUrl + "transactions"),
		recurringDS 				: dataStore(apiUrl + "transactions"),
		recurringLineDS 			: dataStore(apiUrl + "item_lines"),
		recurringAccountLineDS 		: dataStore(apiUrl + "account_lines"),
		recurringAdditionalCostDS 	: dataStore(apiUrl + "transactions"),
		referenceDS					: dataStore(apiUrl + "transactions"),
		referenceLineDS				: dataStore(apiUrl + "item_lines"),
		contactDS  					: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		jobDS 						: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 				: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		additionalContactDS  		: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		accountDS  					: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),
		expenseAccountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 13 },//Inventory
			      	{ field: "account_type_id", value: 16 },//Fixed Asset
			      	{ field: "account_type_id", value: 17 },//Intangible Assets
			      	{ field: "account_type_id", value: 36 },//Expense
			      	{ field: "account_type_id", value: 37 },
			      	{ field: "account_type_id", value: 38 },
			      	{ field: "account_type_id", value: 40 },
			      	{ field: "account_type_id", value: 41 },
			      	{ field: "account_type_id", value: 42 },
			      	{ field: "account_type_id", value: 43 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  					: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: { field:"is_assembly", operator:"neq", value: 1 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		txnTemplateDS 				: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Cash_Purchase" },
			      	{ field: "type", value: "Credit_Purchase" }
			    ]
			}
		}),
		depositDS  					: dataStore(apiUrl + "transactions"),
		depositSumDS  				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transactions/amount_sum",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,								
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		taxItemDS 					: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 1 },//Supplier Tax
			      	{ field: "tax_type_id", value: 2 },
			      	{ field: "tax_type_id", value: 3 },
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		paymentTermDS 				: banhji.source.paymentTermDS,
		paymentMethodDS 			: banhji.source.paymentMethodDS,
		attachmentDS	 			: dataStore(apiUrl + "attachments"),
		referenceTypes 				: [
			{ id:"Purchase_Order", name:"Purchase Order" },
			{ id:"GRN", name:"Goods Received Note" }
		],
		typeList 					: [
			{ id:"Cash_Purchase", name:"Cash" },
			{ id:"Credit_Purchase", name:"Credit" }
		],
		statusList 					: [
			{ id:1, name:"Cash" },
			{ id:0, name:"Credit" }
		],
		additionalCostAccountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),
		amtDueColor 				: banhji.source.amtDueColor,
	    confirmMessage 				: banhji.source.confirmMessage,
		frequencyList 				: banhji.source.frequencyList,
		monthOptionList 			: banhji.source.monthOptionList,
		monthList 					: banhji.source.monthList,
		weekDayList 				: banhji.source.weekDayList,
		dayList 					: banhji.source.dayList,
		showMonthOption 			: false,
		showMonth 					: false,
		showWeek 					: false,
		showDay 					: false,
		obj 						: null,
		isEdit 						: false,
		saveClose 					: false,
		savePrint 					: false,
		saveRecurring 				: false,
		showConfirm 				: false,
		notDuplicateNumber 			: true,
		statusSrc 					: "",
		recurring 					: "",
		recurring_validate 			: false,
		enableRef 	 				: false,
		isCash 						: true,
		showDiscount 				: false,
		showAdditionalCost 			: false,
		showRef 					: true,
		showName 					: false,
		showSegment 				: false,
		showDueDateColumn			: false,
		showDescriptionColumn 		: false,
		sub_total 					: 0,
		tax 						: 0,
		discount 					: 0,
		balance 					: 0,
		total 						: 0,
		remaining 					: 0,
		amount_due 					: 0,
		additional_cost 			: 0,
		original_deposit			: 0,
		user_id						: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Deposit
		loadDeposit 		: function(){
			var self = this, obj = this.get("obj");

			if(this.get("isEdit")){
				this.depositDS.filter([
					{ field:"type", value:"Vendor_Deposit" },
					{ field:"reference_id", value:obj.id }
				]);
			}

			this.depositSumDS.query({
				filter:[
					{ field:"type", value:"Vendor_Deposit" },
					{ field:"contact_id", value:obj.contact_id }
				],
				page: 1,
				pageSize: 1000
			}).then(function(){
				var view = self.depositSumDS.view(),
				total_deposit = view[0].amount + obj.deposit;

				self.set("total_deposit", total_deposit);
			});
		},
		addDeposit 			: function(id){
			var obj = this.get("obj");
			
			this.depositDS.data([]);

			if(obj.deposit>0){				
				this.depositDS.add({				
					contact_id 			: obj.contact_id,								
					reference_id 		: id,				
					user_id 			: this.get("user_id"),				    		
				   	type				: "Vendor_Deposit",
				   	amount				: obj.deposit*-1,			   	
				   	rate				: obj.rate,			   	
				   	locale 				: obj.locale,			   	
				   	issued_date 		: obj.issued_date			   	
		    	});
			}
		},
		saveDeposit 		: function(id){
			var obj = this.get("obj");
			
    		if(this.get("isEdit")){
    			if(this.depositDS.total()>0){
					var deposit = this.depositDS.at(0);
					deposit.set("amount", obj.deposit*-1);
				}else{
					this.addDeposit(id);
				}
    		}else{
				this.addDeposit(id);
    		}

			this.depositDS.sync();
		},
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");
			
	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);		    	
		    	
		    	obj.set("account_id", contact.account_id);
		    	obj.set("payment_term_id", contact.payment_term_id);
		    	obj.set("payment_method_id", contact.payment_method_id);		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();		    	
		    	this.loadDeposit();
		    	this.loadBalance();
		    	this.loadReference();
	    	}
	    	
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, 
			obj = this.get("obj"),
			contact = this.contactDS.get(obj.contact_id),
			balance = 0, creditAllowed = 0;			

			this.txnDS.query({    			
				filter:[
					{ field:"amount", operator:"select_sum", value:"amount" },
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Credit_Purchase" },
					{ field:"status", operator:"where_in", value:[0,2] }
				]
			}).then(function(){
				var view = self.txnDS.view();

				balance += view[0].amount;

		    	return self.txnDS.query({
		    		filter:[
						{ field:"contact_id", value:obj.contact_id },
						{ field:"type", value:"Credit_Purchase" },
						{ field:"status", value:2 }
					]
		    	});	
			}).then(function(){
				var view = self.txnDS.view();				

				var idList = [0];
				$.each(view, function(index, value){
					idList.push(value.id);
				});

		    	return self.txnDS.query({
		    		filter:[
		    			{ field:"amount", operator:"select_sum", value:"amount" },
						{ field:"reference_id", operator:"where_in", value: idList },
						{ field:"type", value:"Cash_Payment" }
					]
		    	});
		    }).then(function(){
		    	var view = self.txnDS.view();

		    	balance -= view[0].amount;

		    	if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}

		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);
			});				
		},
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				
				value.set("rate", itemRate);
			});

			$.each(this.accountLineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});							
		},
		//Item
		itemChanges 		: function(e){
			var self = this, 
			data = e.data,
			obj = this.get("obj");

			// var notDuplicate = true, existingList = {};
			// $.each(this.lineDS.data(), function(index, value){
			// 	if(existingList[value.item_id]===undefined){
			// 		existingList[value.item_id]=value.item_id;											
			// 	}else{
			// 		notDuplicate = false;

			// 		return false;
			// 	}
			// });
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id);

		        if(item.is_catalog=="1"){
		        	this.lineDS.remove(data);

	        		$.each(item.catalogs, function(ind, val){
	        			var cat = self.itemDS.get(val);

						if(cat){
							var itemPriceList = [],
							rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date));

				        	$.each(banhji.source.itemPriceList, function(index, value){
				        		if(value.item_id==cat.id){
				        			itemPriceList.push(value);
				        		}
				        	});

							self.lineDS.add({					
								transaction_id 		: obj.id,
								tax_item_id 		: 0,
								item_id 			: cat.id,
								measurement_id 		: cat.measurement_id,								
								description 		: cat.purchase_description,				
								quantity 	 		: 1,
								unit_value 			: 1,
								cost 				: cat.cost*rate,												
								amount 				: cat.cost*rate,
								discount 			: 0,
								rate				: rate,
								locale				: cat.locale,
								movement 			: 1,								

								item_prices 		: itemPriceList
							});
						}								
	        		});

	        		this.changes();
		        }else{
					var itemPriceList = [],
					rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

		        	$.each(banhji.source.itemPriceList, function(index, value){
		        		if(value.item_id==data.item_id){
		        			itemPriceList.push(value);
		        		}
		        	});

		    		data.set("measurement_id", item.measurement_id);
		    		data.set("description", item.purchase_description);
		    		data.set("quantity", 1);
		    		data.set("unit_value", 1);
			        data.set("cost", item.cost*rate);
			        data.set("rate", rate);	
			        data.set("locale", item.locale);
			        data.set("item_prices", itemPriceList);			        

			        this.changes();
		    	}
	        }else{
	        	data.set("item_id", "");
	        	alert(banhji.source.duplicateSelectedItemMessage);
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});
	        }
		},
		addRowAccount		: function(){
			var obj = this.get("obj");
					
			this.accountLineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				account_id 			: "",
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		removeRowAccount	: function(e){
			var d = e.data;
			if(this.lineDS.total()==0 && this.accountLineDS.total()==0){

			}else{
				this.accountLineDS.remove(d);
		        this.changes();
	        }
		},
		//Additional Cost
		addRowAdditionalCost: function(){
			var self = this, obj = this.get("obj");
			
			this.additionalCostAccountDS.filter({ field:"account_type_id", value:10 });

			this.additionalCostDS.add({				
				contact_id 			: "",
				account_id 			: 1,
				payment_term_id		: 0,				
				reference_id 		: obj.id,
				recurring_id 		: "",
				tax_item_id 		: "",				
				user_id 			: this.get("user_id"),
				reference_no 		: "",	    		
			   	type				: "Cash_Purchase",//Required
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	tax 				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});

			// Apply additional cost to item line
	    	$.each(this.lineDS.data(), function(index, value) {	    		
	    		if(value.item_id>0){
	    			var item = self.itemDS.get(value.item_id);

	    			if(item.item_type_id==1){
	    				value.set("additional_applied", true);
	    			}
	    		}
	    	});					
		},
		removeRowAdditionalCost: function(e){
			var d = e.data;
			this.additionalCostDS.remove(d);
	        this.changes();
		},
		contactColumnChanges: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.contact_id>0){
				var contact = this.additionalContactDS.get(data.contact_id),
				rate = banhji.source.getRate(contact.locale, new Date(data.issued_date)) / obj.rate;

				data.set("rate", rate);
				data.set("locale", contact.locale);
			}
		},
		typeColumnChanges 	: function(e){
			var data = e.data;
			if(data.type=="Cash_Purchase"){
				data.set("status", 1);
				this.set("showDueDateColumn", false);

				//Cash Account
				this.additionalCostAccountDS.filter({ field:"account_type_id", value:10 });
			}else{
				data.set("status", 0);
				this.set("showDueDateColumn", true);

				//AP Account
				this.additionalCostAccountDS.filter({
			        logic: "or",
			        filters: [
			            { field: "account_type_id", value: 23 },
      					{ field: "account_type_id", value: 24 }
			        ]
				});
			}

			data.set("account_id", 0);
		},
		typeChanges 		: function(){
			var obj = this.get("obj");			

			if(obj.type=="Cash_Purchase"){
				this.set("isCash", true);				

				this.accountDS.filter({ field:"account_type_id", value: 10 });
			}else{
				this.set("isCash", false);
				
				this.accountDS.filter({
				    logic: "or",
				    filters: [
				      { field: "account_type_id", value: 23 },
				      { field: "account_type_id", value: 24 }
				    ]
				});
			}

			obj.set("account_id", 0);
			this.generateNumber();			
		},
		loadTypeChanges 	: function(){
			var obj = this.get("obj");			

			if(obj.type=="Cash_Purchase"){
				this.set("isCash", true);				

				this.accountDS.filter({ field:"account_type_id", value: 10 });
			}else{
				this.set("isCash", false);
				
				this.accountDS.filter({
			        logic: "or",
			        filters: [
			            { field: "account_type_id", value: 23 },
      					{ field: "account_type_id", value: 24 }
			        ]
				});
			}
		},
		//Segment
		segmentChanges 		: function() {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}			

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();

					self.set("obj", view[0]);

			        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
			        self.set("amount_due", kendo.toString(view[0].amount - view[0].deposit, "c", view[0].locale));
			        self.set("additional_cost", kendo.toString(view[0].additional_cost, "c", view[0].locale));

					self.loadLines(id);
					self.accountLineDS.filter({ field: "transaction_id", value: view[0].id });
					self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });

					var additionalCostPara = [];
					if(view[0].is_recurring=="1"){
						additionalCostPara.push({ field: "is_recurring", value: 1 });
					}
					additionalCostPara.push({ field: "reference_id", value: view[0].id });
					additionalCostPara.push({ field: "type", operator:"where_in", value: ["Cash_Purchase","Credit_Purchase"] });
					self.additionalCostDS.filter(additionalCostPara);				

					if(view[0].status=="1" || view[0].type=="Cash_Purchase"){
						self.set("statusSrc", banhji.source.paidSrc);
					}else if(view[0].status=="2"){
						self.set("statusSrc", banhji.source.partialyPaidSrc);
					}else{
						self.set("statusSrc", banhji.source.openSrc);
					}

					if(view[0].discount>0){
						self.set("showDiscount", true);
					}

					if(view[0].additional_cost>0){
						self.set("showAdditionalCost", true);
					}				

					self.loadDeposit();
					self.loadTypeChanges();				
				});
			}				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: { field: "transaction_id", value: id }
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, tax = 0, 
			countAdditCheck = 0, amountAdditCheck = 0, additionalCost = 0, 
			remaining = 0, amount_due = 0;
				
			//Item
			$.each(this.lineDS.data(), function(index, value) {
				var amt = value.quantity * value.cost;

				//Discount by line
				if(value.discount>0){
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					tax += amt * taxItem.rate;
				}

				//Count additional cost and check
				if(value.additional_applied){
					amountAdditCheck += amt;
					countAdditCheck++;
				}

				subTotal += amt;
				value.set("amount", amt);
	        });

			//Account
	        $.each(this.accountLineDS.data(), function(index, value) {
				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					tax += value.amount * taxItem.rate;
				}

				subTotal += value.amount;
	        });

	        //Additional Cost
	        $.each(this.additionalCostDS.data(), function(index, value) {
	        	var additionalTax = 0;
	        	//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					additionalTax += value.sub_total * taxItem.rate;
					tax += additionalTax;
				}

				additionalCost += value.sub_total / value.rate;

				value.set("amount", value.sub_total + additionalTax);
	        });

	        //Apply additional cost
	        if(additionalCost>0){
	        	this.set("showAdditionalCost", true);

	        	if(countAdditCheck>0){
			        $.each(this.lineDS.data(), function(index, value) {
						if(value.additional_applied){
				        	if(obj.additional_apply=="Equal"){
				        		//subTotal += singleAdditionalCost;
				        		var singleAdditionalCost = additionalCost / countAdditCheck;
				        		value.set("additional_cost", singleAdditionalCost);
				        	}else{
				        		var percentageAdditionalCheck = value.amount / amountAdditCheck;
				        		var weightedAdditionalCost = additionalCost * percentageAdditionalCheck;

				        		//subTotal += weightedAdditionalCost;
				        		value.set("additional_cost", weightedAdditionalCost);
			        		}
			        	}else{
			        		value.set("additional_cost", 0);
			        	}			        			        	
			        });
		    	}
	        }else{
	        	this.set("showAdditionalCost", false);

	        	$.each(this.lineDS.data(), function(index, value) {
	        		value.set("additional_cost", 0);
	        		value.set("additional_applied", false);
	        	});
	        }	

	    	//Total
	        total = subTotal + tax;
	        amount_due = total - obj.deposit;

	        //Apply Deposit
	        if(obj.deposit>0){
	        	if(obj.deposit <= this.get("total_deposit")){
		        	if(obj.deposit <= total){
		        		remaining = total - obj.deposit;
		        	}else{
		        		obj.set("deposit", total);
		        	}
		        }else{
	        		alert("Over deposit to apply!");
	        		obj.set("deposit", 0);
	        	}

	        	//Status
		        if(remaining==0){
		    		obj.set("status", 1);
		    	}else if(remaining==total){
		    		obj.set("status", 0);
		    	}else{
		    		obj.set("status", 2);
		    	}
	        }

	        //Warning over credit allowed
	        if(obj.credit_allowed>0 && total>obj.credit_allowed){
	        	this.set("amtDueColor", "Gold");		        	
	        }else{
	        	this.set("amtDueColor", banhji.source.amtDueColor);
	        }

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);
			obj.set("additional_cost", additionalCost);
			obj.set("remaining", remaining);

			this.set("total", kendo.toString(total, "c", obj.locale));
	        this.set("additional_cost", kendo.toString(additionalCost, "c", obj.locale));
	        this.set("amount_due", kendo.toString(amount_due, "c", obj.locale));
		},
		discountChanges 	: function(){
			var obj = this.get("obj");

			var total = (obj.sub_total + obj.tax) - obj.discount;
	        var remaining = total - obj.deposit;

	        this.set("total", kendo.toString(total, "c", obj.locale));
	        this.set("remaining", kendo.toString(remaining, "c", obj.locale));

	        obj.set("amount", total);
	        obj.set("remaining", remaining);
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.accountLineDS.data([]);
			this.journalLineDS.data([]);
			this.additionalCostDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);
			this.set("amount_due", 0);
			this.set("additional_cost", 0);
			this.set("amtDueColor", banhji.source.amtDueColor);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);

			this.dataSource.insert(0, {
				transaction_template_id : 0,
				account_id 			: 1,
				contact_id 			: "",
				payment_term_id		: 0,
				payment_method_id	: 0,
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,
				user_id 			: this.get("user_id"),
			   	type				: "Cash_Purchase", //Required
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	amount				: 0,
			   	deposit 			: 0,
			   	remaining 			: 0,
			   	credit_allowed 		: 0,
			   	additional_cost 	: 0,
			   	additional_apply 	: "Equal",
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	bill_date 			: new Date(),
			   	due_date 			: duedate,
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	reference_no 		: "",
			   	check_no 			: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			this.setRate();
			this.addRow();
			this.typeChanges();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 1,
				cost 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				additional_cost 	: 0,
				additional_applied 	: false,
				movement 			: 1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var d = e.data;
			if(this.lineDS.total()==0 && this.accountLineDS.total()==0){

			}else{
				this.lineDS.remove(d);
		        this.changes();
	        }
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Warning over credit allowed
	        if(obj.credit_limit>0 && obj.amount>obj.credit_allowed){
	        	alert("Over credit allowed!");
	        }

	        //Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);

    			$.each(this.additionalCostDS.data(), function(index, value){
    				value.set("is_recurring", 1);
    			});
	    	}

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(this.lineDS.hasChanges() && obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});
					
					this.addJournal(obj.id);
		    	}
	    	}

	        //Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Account line
					$.each(self.accountLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Additional Cost line
					$.each(self.additionalCostDS.data(), function(index, value){
						value.set("reference_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Journal
					if(data[0].is_recurring==0){
		            	self.addJournal(data[0].id);
		        	}
				}

				self.lineDS.sync();
				self.accountLineDS.sync();
				self.additionalCostDS.sync();
				self.saveDeposit(data[0].id);
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.clear();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		clear 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.accountLineDS.cancelChanges();
			this.additionalCostDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.accountLineDS.data([]);
			this.additionalCostDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("purchase");
		},
		cancel 				: function(){
			this.clear();
			history.back();
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	taxList = {},
	    	inventoryList = {},
	    	additionalList = {};			
			
			//Item line
			$.each(this.lineDS.data(), function(index, value){										
				var item = self.itemDS.get(value.item_id);

				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;
					
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}	

				//Add Service Account to Inventory list
				if(item.item_type_id=="4"){
					var serviceID = kendo.parseInt(item.expense_account_id),
					serviceAmount = (value.quantity*value.cost) + value.additional_cost,
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(inventoryList[serviceID]===undefined){
						inventoryList[serviceID]={"id": serviceID, "amount": serviceAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[serviceID].id===serviceID){
							inventoryList[serviceID].amount += serviceAmount;
						}else{
							inventoryList[serviceID]={"id": serviceID, "amount": serviceAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = (value.quantity*value.unit_value*value.cost) + value.additional_cost,
					itemRate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}					  	
			});

			//Account line
			$.each(this.accountLineDS.data(), function(index, value){
				//Add tax list
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;
					
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};
					}else{
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}
			});

			//Additional Cost line
			$.each(this.additionalCostDS.data(), function(index, value){				
				if(value.amount>0){
					additionalAccountID = value.account_id;
					additionalAmt = value.amount / value.rate;

					if(additionalList[additionalAccountID]===undefined){
						additionalList[additionalAccountID]={"id": additionalAccountID, "amount": additionalAmt, "contact_id": value.contact_id };						
					}else{											
						if(additionalList[additionalAccountID].id===additionalAccountID){
							additionalList[additionalAccountID].amount += additionalAmt;
						}else{
							additionalList[additionalAccountID]={"id": additionalAccountID, "amount": additionalAmt, "contact_id": value.contact_id };
						}
					}
				}

				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.sub_total*taxItem.rate;
					
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}
			});

			//Start journal
			//Inventory on Dr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					
					if(value.amount>0){
						self.journalLineDS.add({					
							transaction_id 		: transaction_id,
							account_id 			: value.id,				
							contact_id 			: obj.contact_id,				
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],								
							dr 	 				: value.amount,
							cr 					: 0,				
							rate				: value.rate,
							locale				: value.locale
						});
					}						
				});
			}

			//Expense Account on Dr
			$.each(this.accountLineDS.data(), function(index, value){
				self.journalLineDS.add({
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,
					contact_id 			: obj.contact_id,
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segments,
					dr 	 				: value.amount,
					cr 					: 0,
					rate				: obj.rate,
					locale				: obj.locale
				});
			});			

			//Tax account on Dr
			if(!jQuery.isEmptyObject(taxList)){				
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}
			
			//Add Obj Account
			var objAccountID = obj.account_id, objAmount = obj.amount;
			if(additionalList[objAccountID]===undefined){
				additionalList[objAccountID]={"id": objAccountID, "amount": objAmount };						
			}else{											
				if(additionalList[objAccountID].id===objAccountID){
					additionalList[objAccountID].amount += objAmount;
				}else{
					additionalList[objAccountID]={"id": objAccountID, "amount": objAmount };
				}
			}

			//Cash OR A/P on Cr
			if(!jQuery.isEmptyObject(additionalList)){
				$.each(additionalList, function(index, value){				
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount - obj.deposit,				
						rate				: obj.rate,
						locale				: obj.locale
					});
				});				
			}			

			//Discount on Cr			
			if(obj.discount > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.discount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Deposit on Cr			
			if(obj.deposit > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.deposit,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}			

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", operator:"where_in", value: ["Purchase_Order","GRN"] },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);		
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);

				//Deposit
				if(obj.discount>0){
					this.set("showDiscount", true);
				}else{
					this.set("showDiscount", false);
				}
				
				obj.set("reference_no", ref.number);
				obj.set("sub_total", ref.sub_total);
				obj.set("discount", ref.discount);
				obj.set("tax", ref.tax);
				obj.set("deposit", ref.deposit);				
								
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							cost 				: value.cost,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,
							additional_cost 	: value.additional_cost,
							additional_applied 	: value.additional_applied,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
				this.set("showDeposit", false);
			}								
		},
		//Recurring	
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("contact_id", view[0].contact_id);
				obj.set("account_id", view[0].account_id);
				obj.set("payment_method_id", view[0].payment_method_id);
				obj.set("job_id", view[0].job_id);
				obj.set("type", view[0].type);
				obj.set("additional_cost", view[0].additional_cost);
				obj.set("additional_apply", view[0].additional_apply);
				obj.set("check_no", view[0].check_no);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
				self.typeChanges();
			});

			//Item Line
			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						item_id 			: value.item_id,
						measurement_id 		: value.measurement_id,
						description 		: value.description,
						quantity 	 		: value.quantity,
						cost 				: value.cost,
						amount 				: value.amount,
						discount 			: value.discount,
						rate				: value.rate,
						locale				: value.locale,
						additional_cost 	: value.additional_cost,
						additional_applied 	: value.additional_applied,
						movement 			: value.movement,

						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});

			//Account Line
			this.recurringAccountLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringAccountLineDS.view();
				self.accountLineDS.data([]);

				$.each(view, function(index, value){
					self.accountLineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						account_id 			: value.account_id,
						description 		: value.description,
						reference_no 		: value.reference_no,
						segments 	 		: value.segments,
						amount 	 			: value.amount,
						rate				: value.rate,
						locale				: value.locale
					});
				});

				self.changes();
			});

			//Additional Cost Line
			this.recurringAdditionalCostDS.query({
				filter: [
					{ field:"reference_id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringAdditionalCostDS.view();
				self.additionalCostDS.data([]);

				$.each(view, function(index, value){
					self.additionalCostDS.add({					
						contact_id 			: value.contact_id,
						payment_term_id		: value.payment_term_id,				
						reference_id 		: value.reference_id,
						recurring_id 		: value.recurring_id,
						tax_item_id 		: value.tax_item_id,				
						user_id 			: value.user_id,
						reference_no 		: value.reference_no,	    		
					   	type				: value.type,//Required
					   	sub_total 			: value.sub_total,				   		   					   				   	
					   	amount				: value.amount,
					   	tax 				: value.tax,
					   	rate				: value.rate,			   	
					   	locale 				: value.locale,			   	
					   	issued_date 		: new Date(),
					   	due_date 			: new Date(),			   	
					   	bill_to 			: value.bill_to,
					   	ship_to 			: value.ship_to,
					   	memo 				: value.memo,
					   	memo2 				: value.memo2,
					   	status 				: value.status,
					   	segments 			: value.segments
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.purchaseReturn =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_lines"),
		returnDS			: dataStore(apiUrl + "transactions"),
		invoiceDS			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: { field:"is_assembly", operator:"neq", value: 1 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		taxItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 1 },//Supplier Tax
			      	{ field: "tax_type_id", value: 2 },
			      	{ field: "tax_type_id", value: 3 },
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Purchase_Return" }
		}),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		optionList 			: [
			{ id:"Offset_Bill", name:"Charge Against Bill" },
			{ id:"Deposit", name:"Add To Deposit" },
			{ id:"Debit_Note", name:"Cash Refund" }
		],
		amtDueColor 		: banhji.source.amtDueColor,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		enableRef 			: false,
		showReturn 			: true,
		showDiscount 		: false,
		sub_total 			: 0,
		discount 			: 0,
		tax 				: 0,
		total 				: 0,
		remaining 			: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");
			
	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);   	
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadReference();		    		    			    	
	    	}
	    },
	    //Currency Rate
	    setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				
				value.set("rate", itemRate);
			});						
		},
		//Segment
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item
		itemChanges 		: function(e){
			var self = this, 
			data = e.data,
			obj = this.get("obj");

			// var notDuplicate = true, existingList = {};
			// $.each(this.lineDS.data(), function(index, value){
			// 	if(existingList[value.item_id]===undefined){
			// 		existingList[value.item_id]=value.item_id;											
			// 	}else{
			// 		notDuplicate = false;

			// 		return false;
			// 	}
			// });
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id);

		        if(item.is_catalog=="1"){
		        	this.lineDS.remove(data);

	        		$.each(item.catalogs, function(ind, val){
	        			var cat = self.itemDS.get(val);

						if(cat){
							var itemPriceList = [],
							rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date));

				        	$.each(banhji.source.itemPriceList, function(index, value){
				        		if(value.item_id==cat.id){
				        			itemPriceList.push(value);
				        		}
				        	});

							self.lineDS.add({					
								transaction_id 		: obj.id,
								tax_item_id 		: 0,
								item_id 			: cat.id,
								measurement_id 		: cat.measurement_id,								
								description 		: cat.purchase_description,				
								quantity 	 		: 1,
								unit_value 			: 1,
								cost 				: cat.cost*rate,												
								amount 				: cat.cost*rate,
								discount 			: 0,
								rate				: rate,
								locale				: cat.locale,
								movement 			: 1,								

								item_prices 		: itemPriceList
							});
						}								
	        		});

	        		this.changes();
		        }else{
					var itemPriceList = [],
					rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

		        	$.each(banhji.source.itemPriceList, function(index, value){
		        		if(value.item_id==data.item_id){
		        			itemPriceList.push(value);
		        		}
		        	});

		    		data.set("measurement_id", item.measurement_id);
		    		data.set("description", item.purchase_description);
		    		data.set("quantity", 1);
		    		data.set("unit_value", 1);
			        data.set("cost", item.cost*rate);
			        data.set("rate", rate);	
			        data.set("locale", item.locale);
			        data.set("item_prices", itemPriceList);			        

			        this.changes();
		    	}
	        }else{
	        	data.set("item_id", "");
	        	alert(banhji.source.duplicateSelectedItemMessage);
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});
	        }
		},
		//Return Option
		addRowOption 		: function(){
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}

			var account_id = 0;
			if(this.accountDS.total()>0){
				account_id = this.accountDS.at(0).id;
			}
			this.returnDS.add({
				return_id 		: transaction_id,
				reference_id 	: "",
				account_id 		: account_id,
				type 			: "",
				amount 			: 0,
				rate			: obj.rate,
				locale			: obj.locale,
				issued_date 	: obj.issued_date,
				
				showInvoice 	: false,
				showAccount 	: false
			});
		},
		removeRowOption 	: function(e){
			var d = e.data;
			
			if(this.returnDS.total()>1){
				this.returnDS.remove(d);
		        this.changes();
	        }
		},
		invoiceChanges 		: function(e){
			var data = e.data;
			
			if(data.reference_id>0){
				var inv = this.invoiceDS.get(data.reference_id);
				data.set("amount", inv.amount - inv.amount_paid);

				this.changes();
			}else{
				data.set("amount", 0);
			}							
		},
		optionChanges 		: function(e){
			var data = e.data, obj = this.get("obj");

			switch(data.type) {
			    case "Offset_Bill": //Invoice		    	
			        data.set("showInvoice", true);
			        data.set("showAccount", false);

			        if(obj.contact_id>0){
			        	var para = [
					 			{ field:"contact_id", value: obj.contact_id },
					 			{ field:"status", operator:"where_in", value:[0,2] },
					 			{ field:"type", value:"Credit_Purchase" },
					 	];

					 	if(obj.reference_id>0){
					 		para.push({ field:"id", operator:"where_not_in", value:[obj.reference_id] });
					 	} 

				        this.invoiceDS.filter(para);
				 	}

			        break;
			    case "Debit_Note": //Refund		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", true);
			        break;
			    default: //Credit		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", false);
			}			
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("obj", view[0]);
				self.set("original_total", view[0].amount);

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));				
		        self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));				
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
		        self.set("remaining", kendo.toString(view[0].remaining, "c", view[0].locale));						
						
				self.loadLines(id);
				self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });
				self.referenceDS.filter({ field: "id", value: view[0].reference_id });
			});				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: { field: "transaction_id", value: id }
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), 
			subTotal = 0, discount = 0, tax = 0, returnAmount = 0, remaining = 0;
			
	        $.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.cost;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);
				subTotal += amt;
	        });

	        total = subTotal + tax;

	        //Return
	        $.each(this.returnDS.data(), function(index, value) {								
				returnAmount += value.amount;					
	        });
	       
	        remaining = obj.amount_paid - returnAmount;	        

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);
			obj.set("remaining", remaining);

			this.set("total", kendo.toString(total, "c", obj.locale));
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.returnDS.data([]);
			this.referenceDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("discount", 0);
			this.set("tax", 0);
			this.set("total", 0);
			this.set("remaining", 0);

			this.dataSource.insert(0, {
				contact_id 			: "",
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,
				user_id 			: this.get("user_id"),
			   	type				: "Purchase_Return", //Require
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	amount				: 0,
			   	deposit 			: 0,
			   	amount_paid 		: 0,
			   	remaining 			: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.addRowOption();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 1,
				cost 				: 0,
				amount 				: 0,
				discount 			: 0,
				fine 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var d = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(d);
		        this.changes();
	        }		        
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

			//Mode
	    	if(obj.isNew()==false){
	    		//Journal
		    	$.each(this.journalLineDS.data(), function(index, value){
					value.set("deleted", 1);
				});
				
				this.addJournal(obj.id);
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 3);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Return
					$.each(self.returnDS.data(), function(index, value){
						value.set("return_id", data[0].id);

						if(value.type=="Offset_Invoice" && value.reference_id>0){
							var inv = self.invoiceDS.get(value.reference_id),
							amountPaid = inv.amount_paid + value.amount;

							inv.set("amount_paid", amountPaid);

							if(amountPaid>=inv.amount){
								inv.set("status", 1); //Paid
							}else{
								inv.set("status", 2); //Partially Paid
							}
						}
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.returnDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("purchase_return");
		},
	    //Journal
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	taxList = {},	    	
	    	inventoryList = {},
	    	cashList = {},
	    	sumInvoice = 0,
	    	sumCredit = 0;			
			
			//Group Account from lineDS
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.cost;

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amount * value.discount;
					amount -= discount_amount;																						
				}

				//TAX Account																								
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = amount * taxItem.rate;

					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}

				//Add Service Account to Inventory list
				if(item.item_type_id=="4"){
					var serviceID = kendo.parseInt(item.expense_account_id),
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(inventoryList[serviceID]===undefined){
						inventoryList[serviceID]={"id": serviceID, "amount": amount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[serviceID].id===serviceID){
							inventoryList[serviceID].amount += amount;
						}else{
							inventoryList[serviceID]={"id": serviceID, "amount": amount, "rate": itemRate, "locale": item.locale};
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date)),
					inventoryAmount = amount*value.unit_value;

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}					  	
			});

			//Group Account from returnDS
			$.each(this.returnDS.data(), function(index, value){
				//Offset Invoice
				if(value.type=="Offset_Bill"){
					sumInvoice += value.amount;
				}

				//Credit
				if(value.type=="Deposit"){ 
					sumCredit += value.amount;
				}

				//Refund
				if(value.type=="Debit_Note"){
					var cashID = value.account_id,
					cashAmt = value.amount;

					if(cashList[cashID]===undefined){
						cashList[cashID]={"id": cashID, "amount": cashAmt};						
					}else{											
						if(cashList[cashID].id===cashID){
							cashList[cashID].amount += cashAmt;
						}else{
							cashList[cashID]={"id": cashID, "amount": cashAmt};
						}
					}
				}
			});		

			//Start journal
			//Cash on Dr
			if(!jQuery.isEmptyObject(cashList)){
				$.each(cashList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//A/P on Dr
			var ap = (obj.amount - obj.amount_paid) + sumInvoice;
			if(ap>0){						
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: ap,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Deposit on Dr
			if(sumCredit>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: sumCredit,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Inventory on Cr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: value.rate,
						locale				: value.locale
					});						
				});
			}

			//Tax on Cr
			if(!jQuery.isEmptyObject(taxList)){
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}			

			//Discount on Cr
			if(obj.discount>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.discount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status <>", value: 3 },
					{ field: "type", operator:"where_in", value:["Cash_Purchase", "Credit_Purchase"] }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(e){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);

				obj.set("reference_no", ref.number);

				if(ref.type=="Cash_Purchase"){
					this.set("showReturn", true);
					obj.set("amount_paid", ref.amount - ref.deposit);
				}else{
					obj.set("amount_paid", ref.amount_paid);

					if(ref.status==0){
						this.set("showReturn", false);

						this.returnDS.data([]);
						this.addRowOption();
					}else{
						this.set("showReturn", true);
					}
				}				
									
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							cost 				: value.cost,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,													

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				this.returnDS.data([]);
				this.addRowOption();
			}							
		}
	});
	banhji.vendorReportCenter = kendo.observable({
		lang 				: langVM,	
		summaryDS 			: dataStore(apiUrl + "dashboards/supplier_dashboard_summary"),
		dataSource 			: dataStore(apiUrl + "vendorReports/over_view"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		pageLoad 			: function(){
			var self = this;

			this.summaryDS.query({
				filter: [],								
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("purchase", kendo.toString(view[0].purchase, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("purchase_supplier", kendo.toString(view[0].purchase_supplier, "n0"));
				self.set("purchase_product", kendo.toString(view[0].purchase_product, "n0"));
				self.set("purchase_order", kendo.toString(view[0].purchase_order, "n0"));


				self.set("ap", kendo.toString(view[0].ap, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ap_open", kendo.toString(view[0].ap_open, "n0"));
				self.set("ap_supplier", kendo.toString(view[0].ap_supplier, "n0"));
				self.set("ap_overdue", kendo.toString(view[0].ap_overdue, "n0"));
				self.set("collection_day", kendo.toString(view[0].collection_day, "n0"));
			});										
		}
	});
	banhji.vendorSetting =  kendo.observable({
		lang 				: langVM,
        paymentMethodDS		: banhji.source.paymentMethodDS,
        paymentTermDS		: banhji.source.paymentTermDS,          
        txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),
        contactTypeDS 		: dataStore(apiUrl + "contacts/type"),
        patternDS			: dataStore(apiUrl + "contacts"),
        contactTypeName 	: "",
        contactTypeAbbr 	: "",
        contactTypeCompany 	: 0,
        paymentMethodName 	: "",
        paymentTermName 	: "",
        paymentTermNetDue	: "",
        paymentTermPeriod 	: "",
        paymentTermPercentage 	: "",
        prefixDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "prefixes",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "prefixes",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "prefixes",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "prefixes",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"type", operator:"where_in", value:["Purchase_Order", "GRN", "Cash_Payment", "Deposit", "Purchase_Return", "Cash_Purchase", "Credit_Purchase", "Cash_Payment"] },			
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
        pageLoad 			: function() {
        	this.txnTemplateDS.filter({ field: "moduls", value : "vendor_mg" });
        },	    
        addContactType 		: function(){
        	var name = this.get("contactTypeName");

        	if(name!==""){
	        	this.contactTypeDS.add({
	        		parent_id 	: 2,
	        		name 		: name,
	        		abbr 		: this.get("contactTypeAbbr"),
	        		description : "",
	        		is_company 	: this.get("contactTypeCompany"),
	        		is_system 	: 0
	        	});

	        	this.contactTypeDS.sync();
	        	this.contactTypeDS.bind("requestEnd", function(e){
	        		if(e.type==="create"){
	        			var response = e.response.results[0];
	        			self.addPattern(response.id);
	        			banhji.source.loadContactTypes();
	        		}
	        	});

	        	this.set("contactTypeName", "");
	        	this.set("contactTypeAbbr", "");
	        	this.set("contactTypeCompany", 0);
        	}
        },
        addPattern 			: function(id){
        	this.patternDS.insert(0, {
				"contact_type_id" 		: id,
				"number"				: "",
				"locale" 				: banhji.locale,					
				"is_pattern" 			: 1,
				"status"				: 1								
			});
			this.patternDS.sync();
        },
        addPaymentMethod 		: function(){
        	var name = this.get("paymentMethodName");

        	if(name!==""){
	        	this.paymentMethodDS.add({	        		
	        		name 		: name,
	        		description : "",
	        		is_system 	: 0
	        	});

	        	this.paymentMethodDS.sync();

	        	this.set("paymentMethodName", "");
        	}
        },
        addPaymentTerm 		: function(){
        	var name = this.get("paymentTermName");

        	if(name!==""){
	        	this.paymentTermDS.add({	        		
	        		name 				: name,
	        		net_due 			: this.get("paymentTermNetDue"),
	        		discount_period 	: this.get("paymentTermPeriod"),
	        		discount_percentage : this.get("paymentTermPercentage"),
	        		is_system 			: 0
	        	});

	        	this.paymentTermDS.sync();

	        	this.set("paymentTermName", "");
	        	this.set("paymentTermNetDue", "");
	        	this.set("paymentTermPeriod", "");
	        	this.set("paymentTermPercentage", "");
        	}
        },
        deleteForm 		: function(e){
        	var data = e.data;
        	if(confirm("Do you want to delete it?") == true) {
        		this.txnTemplateDS.remove(data);
        		this.txnTemplateDS.sync();
        	}
        },
        goInvoiceCustom : function(){

		    banhji.invoiceCustom.set("selectTypeList", banhji.source.vendorFormList);
		    banhji.invoiceCustom.set("selectCustom", "vendor_mg");
		    banhji.invoiceCustom.set("formShow", banhji.view.invoiceForm35);
		    banhji.invoiceCustom.set("formTitle", "Purchase Order");
		    banhji.invoiceCustom.set("formType", "Purchase_Order");
		    var obj= banhji.invoiceCustom.get("obj");
		    obj.set("type", "Purchase_Order");
		    banhji.router.navigate('/invoice_custom');
        }
    });
    banhji.vendorRecurring = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		contact_id 			: "",
		pageLoad 			: function(){
			this.search();
		},
		search 				: function(){
			var para = [],
			contact_id = this.get("contact_id");

			if(contact_id){
				para.push({ field:"contact_id", value: contact_id });
			}

			para.push({ field:"type", operator:"where_in", value:["Purchase_Order","Vendor_Deposit","Cash_Purchase","Credit_Purchase","GRN"] });
			para.push({ field:"reference_id", value: 0 });
			para.push({ field:"is_recurring", value: 1 });
			
			this.dataSource.filter(para);

			this.set("contact_id", "");
		},
		edit 				: function(e){
			var data = e.data;
			
			switch(data.type) {
			    case "Purchase_Order":
			        banhji.purchaseOrder.set("recurring", "edit");
			        banhji.router.navigate('/purchase_order/' + data.id);
			        break;
			    case "GRN":
			        banhji.grn.set("recurring", "edit");
			        banhji.router.navigate('/grn/' + data.id);

			        break;
			    case "Vendor_Deposit":
			        banhji.vendorDeposit.set("recurring", "edit");
			        banhji.router.navigate('/vendor_deposit/' + data.id);

			        break;
			    case "Cash_Purchase":
			        banhji.purchase.set("recurring", "edit");
			        banhji.router.navigate('/purchase/' + data.id);

			        break;
			    case "Credit_Purchase":
			        banhji.purchase.set("recurring", "edit");
			        banhji.router.navigate('/purchase/' + data.id);

			        break;
			    default:
			        // default code block
			}
		},
		use 				: function(e){
			var data = e.data;
			
			switch(data.type) {
			    case "Purchase_Order":
			        banhji.purchaseOrder.set("recurring", "use");
			        banhji.router.navigate('/purchase_order/' + data.id);
			        break;
			    case "GRN":
			        banhji.grn.set("recurring", "use");
			        banhji.router.navigate('/grn/' + data.id);

			        break;
			    case "Vendor_Deposit":
			        banhji.vendorDeposit.set("recurring", "use");
			        banhji.router.navigate('/vendor_deposit/' + data.id);

			        break;
			    case "Cash_Purchase":
			        banhji.purchase.set("recurring", "use");
			        banhji.router.navigate('/purchase/' + data.id);

			        break;
			    case "Credit_Purchase":
			        banhji.purchase.set("recurring", "use");
			        banhji.router.navigate('/purchase/' + data.id);

			        break;
			    default:
			        // default code block
			}
		},
		getContactName      : function(id){
            var raw = banhji.source.supplierDS.get(id);
            if(raw){
                return raw.name;
            }else{
                return "";
            }
        }
	});

    //Report Vendor
    banhji.supplierList = kendo.observable({
		lang 					: langVM,
		institute 				: banhji.institute,
		contact 				: dataStore(apiUrl + "vendorReports/supplier"),
		dataSource 				: dataStore(apiUrl + "contacts/supplier"),
		statusList 				: banhji.source.statusList,
		contact_type_id 		: null,
		status 					: null,		
		pageLoad 				: function(){
		},
		search 					: function(){
			var para = [],
			status = this.get("status"),
			contact_type_id = this.get("contact_type_id");

			if(status!==null){
				para.push({ field:"status", value: status });
			}

			if(contact_type_id){
				para.push({ field:"contact_type_id", value: contact_type_id });
			}

			this.dataSource.filter(para);
			this.set("status", null);
			this.set("contact_type_id", null);
		}, 
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=900, height=700'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="<?php echo base_url(); ?>assets/responsive.css" rel="stylesheet" >' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            '*{  } html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: landscape; margin:0mm; } .saleSummaryCustomer .total-customer, .saleSummaryCustomer .total-sale { background-color: #DDEBF7!important; -webkit-print-color-adjust:exact; }.saleSummaryCustomer .table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;-webkit-print-color-adjust:exact;}.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ color: #fff!important; }.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td {  background-color: #fff!important; -webkit-print-color-adjust:exact;} .saleSummaryCustomer .table.table-borderless.table-condensed tr td { background-color: #F2F2F2!important;-webkit-print-color-adjust:exact; } </style>' +
		            '</head>' +
		            '<body><div id="example" class="k-content saleSummaryCustomer" style="padding: 30px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
	});

	banhji.expensesSummarySupplier =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/expense_summary_by_supplier"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){ 
            		amount += value.amount;
            	});
            	
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.expensesDetailSupplier =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/expense_detail_by_supplier"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){ 
            		amount += value.amount;
            	});
            	
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.supplierTransaction =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/transaction_vendor"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalCustomer		: 0,
		totalSale 			: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.filter(para);
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.purchaseSummaryProductServices =  kendo.observable({
		lang 				: langVM,
		dataSource 		: dataStore(apiUrl + "vendorReports/purchase_summary_by_product"),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: {
		  		logic: "and",
			    filters: [
			    	{ field: "is_catalog", operator: "neq", value: 1 },
			        { field: "is_assembly", operator: "neq", value: 1 },
			      	{
			      		logic: "or",
					    filters: [
					      	{ field: "item_type_id", value: 1 },//Inventory For Sale
				      		{ field: "item_type_id", value: 4 }//Service
					    ]
					}
			    ]
			},
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { itemIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		avg_sale 			: 0,
		total_sale 			: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.itemIds.length>0){
            	var itemIds = [];
            	$.each(obj.itemIds, function(index, value){
            		itemIds.push(value);
            	});          	
	            para.push({ field:"item_id", operator:"where_in", value:itemIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var txnCount = 0, amount = 0;
            	$.each(view, function(index, value){ 
            		txnCount += value.txn_count;
            		amount += value.amount;
            	});
            	
            	self.set("avg_sale", kendo.toString(amount/txnCount, "c2", banhji.locale));
            	self.set("total_sale", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.purchaseOrderList =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/purchase_order_list"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		orderCount 			: 0,
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0, orderCount = 0;
            	$.each(view, function(index, value){ 
            		$.each(value.line, function(ind, val){
            			orderCount++; 
	            		amount += val.amount;
	            	});
            	});
            	
            	self.set("orderCount", kendo.toString(orderCount, "n0"));
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.purchaseDetailProductServices =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/purchase_detail_by_product"),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: {
		  		logic: "and",
			    filters: [
			    	{ field: "is_catalog", operator: "neq", value: 1 },
			        { field: "is_assembly", operator: "neq", value: 1 },
			      	{
			      		logic: "or",
					    filters: [
					      	{ field: "item_type_id", value: 1 },//Inventory For Sale
				      		{ field: "item_type_id", value: 4 }//Service
					    ]
					}
			    ]
			},
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { itemIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		product_sale 		: 0,
		total_sale 			: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.itemIds.length>0){
            	var itemIds = [];
            	$.each(obj.itemIds, function(index, value){
            		itemIds.push(value);
            	});          	
	            para.push({ field:"item_id", operator:"where_in", value:itemIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var txnCount = 0, amount = 0, sale = 0;
            	$.each(view, function(index, value){
            		$.each(value.line, function(ind, val){ 
	            		txnCount++;
	            		amount += val.amount;
	            		sale += val.total;
            		});
            	});
            	
            	self.set("product_sale", kendo.toString(amount/txnCount, "c2", banhji.locale));
            	self.set("total_sale", kendo.toString(sale, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.depositDetailSupplier =  kendo.observable({
		lang 				: langVM,
		dataSource 		: dataStore(apiUrl + "vendorReports/deposit_detail_by_supplier"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Contact
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){ 
            		$.each(value.line, function(ind, val){ 
	            		amount += val.amount;
	            	});
            	});
            	
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.supplierBalance = kendo.observable({
		lang 					: langVM,
		dataSource 		: dataStore(apiUrl + "vendorReports/summary_balance"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.supplierBalance.dataSource.filter({
				logic: banhji.supplierBalance.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.supplierBalance.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.suppliersBalanceSummary =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/balance_summary"),
		obj 				: null,
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalTxn 			: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [],
				as_of = this.get("as_of"),
        		displayDate = "";
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);

				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0, txnCount = 0;
            	$.each(view, function(index, value){
            		txnCount += value.txn_count;
            		balance += value.amount;
            	});

            	self.set("total_txn", kendo.toString(txnCount, "n0"));
            	self.set("total_balance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.suppliersBalanceDetail =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/balance_detail"),
		obj 				: null,
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalTxn 			: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);
				
				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para,
            	sort:[
            		{ field:"issued_date", dir:"asc" },
            		{ field:"number", operator:"order_by_related_contact", dir:"asc" }
            	]
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0, txnCount = 0;
            	$.each(view, function(index, value){
            		txnCount += value.line.length;
            		$.each(value.line, function(ind, val){
            			balance += val.amount;
            		});
            	});

            	self.set("total_txn", kendo.toString(txnCount, "n0"));
            	self.set("total_balance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.payablesAgingSummary =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/aging_summary"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);

				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0;
            	$.each(view, function(index, value){
            		balance += value.total;
            	});

            	self.set("totalBalance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.payablesAgingDetail =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/aging_detail"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";

	        //Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);
				
				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para,
            	sort:[
            		{ field:"issued_date", dir:"asc" },
            		{ field:"number", operator:"order_by_related_contact", dir:"asc" }
            	]
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0;
            	$.each(view, function(index, value){
            		$.each(value.line, function(ind, val){
            			balance += val.amount;
            		});
            	});

            	self.set("totalBalance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.listBillsPaid =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "vendorReports/bill_topay"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);

				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){
            		amount += value.amount;
            	});

            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.billPaymentList =  kendo.observable({
		lang 				: langVM,
		dataSource 		: dataStore(apiUrl + "vendorReports/bill_list"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		total_txn 			: 0,
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0, txn_count = 0;
            	$.each(view, function(index, value){            		
            		$.each(value.line, function(indexx, x){
            			txn_count++;
            			$.each(x.payments, function(indexy, y){
            				amount += y.amount;
            			});
            		});
            	});

            	self.set("total_txn", kendo.toString(txn_count, "n0"));
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.vendorSale = kendo.observable({
		lang 				: langVM,
		locale 				: banhji.locale,
		// purchaseSummary 		: dataStore(apiUrl + "vendorReports/expense_summary"),	
		count 				: 0,
		total_avg 			: 0,
		supplierCount 		: 0,
		saleNumber 			: 0,
		gpm 				: 0,
		total_sale 			: 0,
		companyName 		: null,
		startDate 			: "<?php echo date("d-m-y"); ?>",
		endDate				: new Date(),
		sorter				: '',
		openInvoice 		: 0,	
		company 			: banhji.institute,		
		sortList			: banhji.source.sortList, 
		//line to sale summary
		purchaseSummary     	: banhji.expensesPurchaseSummarySupplier,
		purchaseDetail      	: banhji.expenseDetailSupplier,
		summaryProduct 			: banhji.summaryProductSuppplier,
		purchaseOrder 			: banhji.purchaseOrderReport,
		detailProduct 			: banhji.detailProductSupplier,
		supplierTransaction 	: banhji.supplierTransaction,
		depositDetail  			: banhji.depositDetailSupplier,
		supplierBalance 		: banhji.supplierBalance,
		balanceDetailSupplier	: banhji.balanceDetailSupplier,
		payablesAging 			: banhji.payablesAgingSupplier,
		payablesAgingDetail 	: banhji.payablesAgingDetailSupplier,
		listBillsPaid 			: banhji.listBillsPaid,
		billPaymentList 		: banhji.billPaymentList,

		collectReportDB 		: banhji.collectReport,
		invoiceListDB 			: banhji.invoiceList,
		// search button
		saleDetailSearch 	: function() {
			this.detailSale.filter({
				logic: 'segment',
				filters: [
					{field: "id", "operator": "segment", value: 9},
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		},
		displayDateStart    : function() {
			return kendo.toString(new Date(this.get('startDate')), 'dd-MM-yyyy');
		},
		displayDateEnd    : function() {
			return kendo.toString(new Date(this.get('endDate')), 'dd-MM-yyyy');
		},
		trnxSearch 			: function() {},
		depositDetailSearch : function() {},
		summaryProductSearch: function() {},
		detailProductSearch : function() {},
		saleJobSearch 		: function() {},
		saleOrderSearch 	: function() {},
		balanaceSearch 		: function() {},
		balanceDetailSearch : function() {},
		agingSummarySearch  : function() {},
		agingDetailSearch   : function() {},
		collectingInvSearch : function() {},
		collectedInvSearch  : function() {},
		invoiceListSearch 	: function() {},
		customerListSearch 	: function() {},

		dateMax 			: function(e) {
			$('#edate').css('width', '160px');
			var edate = $('#edate').kendoDatePicker().data("kendoDatePicker");
			edate.min(e.sender.value());
		},
		dateMin 			: function(e) {
			$('#sdate').css('width', '160px');
			var sdate = $('#sdate').kendoDatePicker().data("kendoDatePicker");
			sdate.max(e.sender.value());
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=900, height=700'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="<?php echo base_url(); ?>assets/responsive.css" rel="stylesheet" >' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            '*{  } html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: landscape; margin:0mm; } .saleSummaryCustomer .total-customer, .saleSummaryCustomer .total-sale { background-color: #DDEBF7!important; -webkit-print-color-adjust:exact; }.saleSummaryCustomer .table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;-webkit-print-color-adjust:exact;}.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ color: #fff!important; }.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td {  background-color: #fff!important; -webkit-print-color-adjust:exact;} .saleSummaryCustomer .table.table-borderless.table-condensed tr td { background-color: #F2F2F2!important;-webkit-print-color-adjust:exact; } </style>' +
		            '</head>' +
		            '<body><div id="example" class="k-content saleSummaryCustomer" style="padding: 30px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		dateChange 			: function(){
			// var strDate = "";

			// 	if(this.startDate && this.endDate){
			// 		strDate = "From " + kendo.toString(this.startDate, "dd-MM-yyyy") + " To " + kendo.toString(this.endDate, "dd-MM-yyyy");
			// 	}else if(this.startDate){
			// 		strDate = "On " + kendo.toString(this.startDate,"dd-MM-yyyy");
			// 	}else if(this.endDate){
			// 		strDate = "As Of " + kendo.toString(this.endDate,"dd-MM-yyyy");
			// 	}else{
			// 		strDate = "";
			// 	}

			var today = new Date(),
			day = today.getDate();
        	sdate = "",
        	edate = "",
        	value = this.get('sorter');

			switch(value){
			case "today":
				sdate = today;

			  	break;
			case "week":
				var first = new Date(today.getTime() - 60*60*24* day*1000),
				last = new Date(today.getTime() + 60*60*24* day*1000);

				sdate = first;
				edate = last;

			  	break;
			case "month":
				var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
				edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

			  	break;
			case "year":
			  	var sdate = new Date(today.getFullYear(), 0, 1),
			  	edate = new Date(today.getFullYear(), 11, 31);

			  	break;
			default:

			}

			this.set("startDate", sdate);
			this.set("endDate", edate);
			// start.value(sdate);
			// end.value(edate);

			// start.max(end.value());
		   //      	end.min(start.value());

		   //      	dateChanges();
		   //          });

		   //          start.max(end.value());
		   //          end.min(start.value());
		}
	});



	/*************************
	*   Customer Section   *
	**************************/
	banhji.customerDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/customer_dashboard_summary"),
		topCustomerDS 		: dataStore(apiUrl + "dashboards/top_customer"),
		topARDS 			: dataStore(apiUrl + "dashboards/top_ar"),
		topProductDS 		: dataStore(apiUrl + "dashboards/top_sale_product"),		
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		sale 				: 0,
		sale_customer 		: 0,
		sale_product 		: 0,
		sale_order 			: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.graphDS.read();

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value: kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("sale", kendo.toString(view[0].sale, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
				self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
				self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));
			});

			this.topCustomerDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			});

			this.topARDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});

			this.topProductDS.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related_transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});										
		}
	});
	banhji.customerCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		noteDS 				: dataStore(apiUrl + 'notes'),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		summaryDS 			: dataStore(apiUrl + "transactions"),
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 1 }//Customer
		}),
		contactDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field:"parent_id", operator:"where_related_contact_type", value:1 },
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		note 				: "",
		searchText 			: "",
		contact_type_id 	: null,
		currency_id 		: 0,
		balance 			: 0,
		deposit 			: 0,
		outInvoice 			: 0,
		overInvoice 		: 0,
		currencyCode 		: "",
		user_id 			: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.loadObj(id);
			}

			//Refresh
			if(this.contactDS.total()>0){
				this.contactDS.fetch();
				this.searchTransaction();
				this.loadSummary();
			}
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		setCurrencyCode 	: function(){
			var code = "", obj = this.get("obj");

			$.each(banhji.source.currencyDS.data(), function(index, value){				
				if(value.locale == obj.locale){
					code = value.code;					

					return false;					
				}
			});

			this.set("currencyCode", code);
		},
		loadObj 			: function(id){
			var self = this;

			this.contactDS.query({
				filter: { field:"id", value:id},
				page:1,
				pageSize:100
			}).then(function(){
				var view = self.contactDS.view();

				if(view.length>0){
					self.set("obj", view[0]);
					self.loadData();
				}
			});
		},
		loadData 			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.searchTransaction();
				this.loadSummary();
				this.setCurrencyCode();

				this.attachmentDS.filter({ field:"contact_id", value: obj.id });
				this.noteDS.query({
					filter: { field:"contact_id", value: obj.id },
					sort: { field:"noted_date", dir:"desc" },
					page: 1,
					pageSize: 10
				});
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
			if(obj!==null){
		        // Check the extension of each file and abort the upload if it is not .jpg
		        $.each(files, function(index, value){
		            if (value.extension.toLowerCase() === ".jpg"
		            	|| value.extension.toLowerCase() === ".jpeg"
		            	|| value.extension.toLowerCase() === ".tiff"
		            	|| value.extension.toLowerCase() === ".png" 
		            	|| value.extension.toLowerCase() === ".gif"
		            	|| value.extension.toLowerCase() === ".pdf"){

		            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

		            	self.attachmentDS.add({
		            		user_id 		: self.get("user_id"),
		            		contact_id 		: obj.id,
		            		type 			: "Contact",
		            		name 			: value.name,
		            		description 	: "",
		            		key 			: key,
		            		url 			: banhji.s3 + key,
		            		size 			: value.size,
		            		created_at 		: new Date(),

		            		file 			: value.rawFile
		            	});
		            }else{
		            	alert("This type of file is not allowed to attach.");
		            }
		        });
	    	}else{
	    		alert("Please select a customer!");
	    	}
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    		this.attachmentDS.sync();
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
	    //Summary
		loadContact 		: function(id){
			var self = this;
			
			this.contactDS.query({
			  	filter:[
			  		{ field:"id", value:id }
			  	],
			  	page: 1,
			  	pageSize: 50
			}).then(function(e) {
			    var view = self.contactDS.data();
			    
			    if(view.length>0){
			    	self.set("obj", view[0]);
			    	self.loadData();
			    }
			});
		},
		loadSummary 		: function(){
			var self = this, obj = this.get("obj");

			if(obj!==null){
				this.summaryDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", operator:"where_in", value: ["Customer_Deposit", "Commercial_Invoice", "Vat_Invoice", "Invoice"] },
				  		{ field:"status", operator:"where_in", value: [0,2] }
				  	],
				  	sort: { field: "issued_date", dir: "desc" },
				  	page: 1,
				  	pageSize: 1000
				}).then(function(){
					var view = self.summaryDS.view(),
					deposit = 0, open = 0, over = 0, balance = 0, today = new Date();

					$.each(view, function(index, value){
						if(value.type=="Customer_Deposit"){
							deposit += kendo.parseFloat(value.amount);
						}else{
							balance += kendo.parseFloat(value.amount) - (kendo.parseFloat(value.deposit) + value.amount_paid);
							open++;

							if(new Date(value.due_date)<today){						
								over++;
							}
						}									
					});
					
					self.set("deposit", kendo.toString(deposit, obj.locale=="km-KH"?"c0":"c", obj.locale));
					self.set("outInvoice", kendo.toString(open, "n0"));
					self.set("overInvoice", kendo.toString(over, "n0"));
					self.set("balance", kendo.toString(balance, obj.locale=="km-KH"?"c0":"c", obj.locale));
				});
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		loadBalance 		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.transactionDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
				  		{ field:"status", operator:"where_in", value: [0,2] }
				  	],
				  	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
				  	page: 1,
				  	pageSize: 10
				});
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		loadDeposit 		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.transactionDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", value:"Customer_Deposit" }
				  	],
				  	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
				  	page: 1,
				  	pageSize: 10
				});
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		loadOverInvoice 	: function(){
			var obj = this.get("obj");

			if(obj!==null){
				this.transactionDS.query({
				  	filter: [
				  		{ field:"contact_id", value: obj.id },
				  		{ field:"type", operator:"where_in", value: ["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
				  		{ field:"status", operator:"where_in", value: [0,2] },
				  		{ field:"due_date <", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				  	],
				  	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
				  	page: 1,
				  	pageSize: 10
				});
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},	
		selectedRow			: function(e){
			var data = e.data;
			
			this.set("obj", data);
			this.loadData();
		},
		//Search
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
      		searchText = this.get("searchText"),
      		contact_type_id = this.get("contact_type_id");
      		
      		if(searchText){
      			var textParts = searchText.replace(/([a-z]+)/i, "$1 ").split(/[^0-9a-z]+/ig);

      			para.push(
      				{ field: "abbr", value: textParts[0] },
      				{ field: "number", value: textParts[1] },
					{ field: "name", operator: "or_like", value: searchText }
      			);
      		}

      		if(contact_type_id){
      			para.push({ field: "contact_type_id", value: contact_type_id });
      		}else{
      			para.push({ field: "parent_id", operator:"where_related_contact_type", value: 1 });
      		}

      		this.contactDS.filter(para);
			
			//Clear search filters
      		self.set("searchText", "");
      		self.set("contact_type_id", 0);
		},
		searchTransaction	: function(){
			var self = this,
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd"),
        		para = [], obj = this.get("obj");

        	if(obj!==null){
        		para.push({ field:"contact_id", value: obj.id });
        	
	        	//Dates
	        	if(start && end){
	            	para.push({ field:"issued_date >=", value: start });
	            	para.push({ field:"issued_date <=", value: end });
	            }else if(start){
	            	para.push({ field:"issued_date", value: start });
	            }else if(end){
	            	para.push({ field:"issued_date <=", value: end });
	            }else{
	            	
	            }

	            this.transactionDS.query({
	            	filter: para,
	            	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
	            	page: 1,
	            	pageSize: 10
	            });
	        }else{
	        	alert("Please select a customer.");
	        }            
		},
		//Links	
		goEdit 		 		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/customer/'+obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goQuote				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/quote');
				banhji.quote.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goDeposit			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/customer_deposit');
				banhji.customerDeposit.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goSaleOrder			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/sale_order');
				banhji.saleOrder.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goCashSale			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/cash_sale');
				banhji.cashSale.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goInvoice			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/invoice');
				banhji.invoice.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goGDN				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/gdn');
				banhji.gdn.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goSaleReturn		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/sale_return');
				banhji.saleReturn.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goStatement			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/statement');
				banhji.statement.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		goCashReceipt		: function(){
			var obj = this.get("obj");

			if(obj!==null){
				banhji.router.navigate('/cash_receipt');
				banhji.cashReceipt.loadContact(obj.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		payInvoice			: function(e){
			var data = e.data;

			if(obj!==null){
				banhji.router.navigate('/cash_receipt');
				banhji.cashReceipt.loadInvoice(data.id);
			}else{
				alert(banhji.source.selectCustomerMessage);
			}
		},
		//Note
		saveNoteEnter 		: function(e){
			e.preventDefault();
			this.saveNote();
		},
		saveNote 			: function(){
			var obj = this.get("obj");

			if(obj!==null && this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: obj.id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});

				this.noteDS.sync();
				this.set("note", "");
			}else{
				alert("Please select a customer and Memo is required");
			}
		}
	});
	banhji.customer = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "contacts"),
		patternDS 				: dataStore(apiUrl + "contacts"),
		numberDS 				: dataStore(apiUrl + "contacts"),
		deleteDS 				: dataStore(apiUrl + "transactions"),
		existingDS 				: dataStore(apiUrl + "contacts"),
		contactPersonDS			: dataStore(apiUrl + "contact_persons"),
		paymentTermDS			: banhji.source.paymentTermDS,
		paymentMethodDS			: banhji.source.paymentMethodDS,
		countryDS 				: banhji.source.countryDS,
		currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 1 }//Customer
		}),
		arDS 		  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 12 },
		  	sort: { field:"number", dir:"asc" }
		}),
		raDS 		  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 35 },
			      	{ field: "account_type_id", value: 39 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		depositDS 		  		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 25 },
			      	{ field: "account_type_id", value: 30 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		tradeDiscountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"id", value: 72 },
		  	sort: { field:"number", dir:"asc" }
		}),
		settlementDiscountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"id", value: 99 },
		  	sort: { field:"number", dir:"asc" }
		}),
		taxItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		genders					: banhji.source.genderList,
		statusList 				: banhji.source.statusList,
		confirmMessage 			: banhji.source.confirmMessage,
		isEdit 					: false,
		isProtected 			: false,
        obj 					: null,
        saveClose 				: false,
		showConfirm 			: false,
		notDuplicateNumber 		: true,
		phFullname 				: "Customer Name ...",
		contact_type_id 		: 0,
		pageLoad 				: function(id, contact_type_id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, contact_type_id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}	
		},
		//Contact Person
		addEmptyContactPerson 	: function(){
			var obj = this.get("obj");
			
			this.contactPersonDS.add({
				contact_id 			: obj.id,
      			prefix 				: "",
				name 				: "",
				department			: "",
				phone				: "",
				email				: ""
			});
		},
		deleteContactPerson 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.contactPersonDS.getByUid(d.uid);

				this.contactPersonDS.remove(obj);
			}
		},
		//Map
		loadMap 				: function(){
			var obj = this.get("obj"), lat = kendo.parseFloat(obj.latitute),
			lng = kendo.parseFloat(obj.longtitute);
			
			if(lat && lng){
				var myLatLng = {lat:lat, lng:lng};
				var mapOptions = {
					zoom: 17,
					center: myLatLng,
					mapTypeControl: false,
					zoomControl: false,
					scaleControl: false,
					streetViewControl: false
				};
				var map = new google.maps.Map(document.getElementById('map'),mapOptions);
				var marker = new google.maps.Marker({
					position: myLatLng,
					map: map,
					title: obj.number
				});
			} 
		},
		copyBillTo 				: function(){
			var obj = this.get("obj");

			obj.set("ship_to", obj.bill_to);
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"contact_type_id", value: obj.contact_type_id });
				
				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"contact_type_id", value:obj.contact_type_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		checkExistingTxn		: function(){
			var self = this, obj = this.get("obj");
			
			this.deleteDS.query({
				filter: { field:"contact_id", value: obj.id },
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.deleteDS.view();
				
				if(view.length>0){
					self.set("isProtected", true);
				}else{
					self.set("isProtected", false);
				}
			});
		},
		//Obj
		loadObj 				: function(id, contact_type_id){
			var self = this, para = [];

			if(id>0){
				para.push({ field:"id", value: id });
			}

			if(contact_type_id){
				para.push({ field:"contact_type_id", value: contact_type_id });
				para.push({ field:"is_pattern", value: 1 });
			}

			this.dataSource.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();
				
				self.set("obj", view[0]);
				self.loadMap();
				self.checkExistingTxn();
			});

			this.contactPersonDS.filter({ field:"contact_id", value: id });
		},		
      	addEmpty 				: function(){
      		this.dataSource.data([]);
      		this.contactPersonDS.data([]);
      		
      		this.set("isEdit", false);
      		this.set("isProtected", false);
      		this.set("notDuplicateNumber", true);
      		this.set("obj", null);
      		
  			this.dataSource.insert(0, {				
				"country_id" 			: 0,			
				"user_id" 				: 0,
				"contact_type_id" 		: 4, //General Customer							
				"abbr"					: "",
				"number"				: "",				
				"surname"				: "",
				"name"					: "",
				"gender"				: "",					
				"phone" 				: "",
				"email" 				: "",					
				"company"				: "",
				"vat_no"				: "",					
				"memo"					: "",
				"city"					: "",
				"post_code"				: "",
				"address" 				: "",
				"bill_to" 				: "",
				"ship_to" 				: "",
				"latitute" 				: "",
				"longtitute" 			: "",
				"credit_limit"			: 0,
				"locale" 				: banhji.locale,														
				"payment_term_id"		: 0,
				"payment_method_id"		: 0,									
				"registered_date" 		: new Date(),
				"account_id"			: 0,
				"ra_id"					: 0,
				"tax_item_id"			: 0,
				"deposit_account_id"	: 0,
				"trade_discount_id"		: 0,
				"settlement_discount_id": 0,					
				"is_pattern" 			: 0,
				"status"				: 1
			});

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			this.typeChanges();
		},
	    objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Edit Mode
	    	if(this.get("isEdit")){
	    		//Contact Person has changes
		    	if(this.contactPersonDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Contact Person
					$.each(self.contactPersonDS.data(), function(index, value) {
						value.set("contact_id", data[0].id);
					});
				}
				self.contactPersonDS.sync();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				banhji.source.loadCustomers();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.contactPersonDS.cancelChanges();
			this.dataSource.data([]);
			this.contactPersonDS.data([]);
			this.set("contact_type_id", 0);

			banhji.userManagement.removeMultiTask("customer");
		},
		delete 					: function(){
			var obj = this.get("obj");
			this.set("showConfirm",false);

			if(!obj.is_system==1){
				if(this.get("isProtected")){
					alert("Sorry, this data is protected!");
				}else{
					obj.set("deleted", 1);
			        this.dataSource.sync();
			        banhji.source.customerDS.fetch();

			        window.history.back();
				}
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		},
		//Pattern
		typeChanges 			: function(){
			var obj = this.get("obj");

			if(obj.contact_type_id && obj.isNew()){
				this.applyPattern();
				this.generateNumber();
			}
		},
		applyPattern 			: function(){
			var self = this, obj = self.get("obj");
			
			this.patternDS.query({
				filter: [
					{ field:"contact_type_id", value: obj.contact_type_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view(),
				type = self.contactTypeDS.get(view[0].contact_type_id);				

				if(view.length>0){
					obj.set("country_id", view[0].country_id);
					obj.set("abbr", type.abbr);					
					obj.set("gender", view[0].gender);
					obj.set("company", view[0].company);
					obj.set("vat_no", view[0].vat_no);
					obj.set("memo", view[0].memo);
					obj.set("city", view[0].city);
					obj.set("post_code", view[0].post_code);
					obj.set("address", view[0].address);
					obj.set("bill_to", view[0].bill_to);
					obj.set("ship_to", view[0].ship_to);									
					obj.set("payment_term_id", view[0].payment_term_id);
					obj.set("payment_method_id", view[0].payment_method_id);
					obj.set("credit_limit", view[0].credit_limit);
					obj.set("locale", view[0].locale);					
					obj.set("account_id", view[0].account_id);
					obj.set("ra_id", view[0].ra_id);
					obj.set("tax_item_id", view[0].tax_item_id);
					obj.set("deposit_account_id", view[0].deposit_account_id);
					obj.set("trade_discount_id", view[0].trade_discount_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);					
				}
			});
		}
	});
	banhji.quote =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		paymentTermDS 		: banhji.source.paymentTermDS,
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Quote" }
		}),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber 	: true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		showDiscount 		: false,
		sub_total 			: 0,		
		discount 			: 0,
		balance 			: 0,		
		total 				: 0,		
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },   
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
	    contactChanges 		: function(id){
			var self = this, obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadBalance();
		    	this.jobDS.filter({ field:"contact_id", value:obj.contact_id });
	    	}
	    	
		    this.changes();
	    },
		loadBalance 		: function(){
			var self = this, 
			obj = this.get("obj"),
			contact = this.contactDS.get(obj.contact_id),
			balance = 0, creditAllowed = 0;			

			this.txnDS.query({    			
				filter:[
					{ field:"amount", operator:"select_sum", value:"amount" },
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
					{ field:"status", operator:"where_in", value:[0,2] }
				]
			}).then(function(){
				var view = self.txnDS.view();

				balance += view[0].amount;

		    	return self.txnDS.query({
		    		filter:[
						{ field:"contact_id", value:obj.contact_id },
						{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
						{ field:"status", value:2 }
					]
		    	});	
			}).then(function(){
				var view = self.txnDS.view();				

				var idList = [0];
				$.each(view, function(index, value){
					idList.push(value.id);
				});

		    	return self.txnDS.query({
		    		filter:[
		    			{ field:"amount", operator:"select_sum", value:"amount" },
						{ field:"reference_id", operator:"where_in", value: idList },
						{ field:"type", value:"Cash_Receipt" }
					]
		    	});
		    }).then(function(){
		    	var view = self.txnDS.view();

		    	balance -= view[0].amount;

		    	if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}

		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);
			});				
		},
	    //Currency Rate	
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});						
		},
		//Payment Term
		setTerm 			: function(){
			var duedate = new Date(), obj = this.get("obj");

			if(obj.payment_term_id>0){
				var term = this.paymentTermDS.get(obj.payment_term_id);

				duedate.setDate(duedate.getDate() + term.net_due);

				obj.set("due_date", duedate);
			}else{
				obj.set("due_date", new Date());
			}			
		},
		//Segment				
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
			    }else{
			    	data.set("item_id", "");
			    }
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });			

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();

					self.set("obj", view[0]);
					
			        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));				
					
					if(view[0].status=="1"){
						self.set("statusSrc", banhji.source.usedSrc);
					}else{
						self.set("statusSrc", banhji.source.openSrc);
					}

					if(view[0].discount>0){
						self.set("showDiscount", true);
					}
					
					self.loadLines(id);
					self.assemblyLineDS.filter([
						{ field: "transaction_id", value: id },
						{ field: "assembly_id >", value: 0 }
					]);
					self.attachmentDS.filter({ field: "transaction_id", value: id });
				});
			}
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount = 0, tax = 0, itemIds = [];

			$.each(this.lineDS.data(), function(index, value) {					
				var amt = value.quantity * value.price;

				//Discount by line
				if(value.discount>0){
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					tax += amt * taxItem.rate;
				}					

				value.set("amount", amt);
				subTotal += amt;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}
	        });

	    	//Total
	        total = subTotal + tax;

	        //Warning over credit allowed
	        if(obj.credit_allowed>0 && total>obj.credit_allowed){
	        	this.set("amtDueColor", "Gold");
	        }else{
	        	this.set("amtDueColor", banhji.source.amtDueColor);
	        }

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);
			obj.set("amount", total);

			this.set("total", kendo.toString(total, "c", obj.locale));	    	

	    	//Remove Assembly Item List
			var raw = this.assemblyLineDS.data();			
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);
			    }
		    }
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);
			this.set("amtDueColor", banhji.source.amtDueColor);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);

			this.dataSource.insert(0,{
				contact_id 				: "",
				transaction_template_id : 1,
				payment_term_id 		: 0,
				recurring_id 			: "",
				user_id 				: this.get("user_id"),
				employee_id 			: "",
			   	type					: "Quote",//Required
			   	number 					: "",
			   	sub_total 				: 0,
			   	amount					: 0,
			   	discount 				: 0,
			   	tax 					: 0,
			   	rate					: 1,
			   	locale 					: banhji.locale,
			   	issued_date 			: new Date(),
			   	due_date 				: duedate,
			   	bill_to 				: "",
			   	ship_to 				: "",
			   	memo 					: "",
			   	memo2 					: "",
			   	status 					: 0,
			   	segments 				: [],
			   	//Recurring
			   	recurring_name 			: "",
			   	start_date 				: new Date(),
			   	frequency 				: "Daily",
			   	month_option 			: "Day",
			   	interval 				: 1,
			   	day 					: 1,
			   	week 					: 0,
			   	month 					: 0,
			   	is_recurring 			: 0
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			
			this.generateNumber();
			this.setRate();
			this.addRow();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 1,
				price 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;

			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}
	    	
    		//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.assemblyLineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);
			
			banhji.userManagement.removeMultiTask("quote");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("employee_id", view[0].employee_id);//Sale Rep
				obj.set("job_id", view[0].job_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,							
						item_id 			: value.item_id,									
						description 		: value.description,							
						quantity 			: value.quantity,
						price 				: value.price,								
						amount 	 			: value.amount,									
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,
						
						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.saleOrder =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_lines"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Sale_Order" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		paymentMethodDS 	: banhji.source.paymentMethodDS,
		amtDueColor 		: banhji.source.amtDueColor,
		confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		showCost 			: false,
		showDiscount 		: false,
		showRequiredDate 	: false,
		sub_total 			: 0,
		discount 			: 0,
		balance 			: 0,
		total 				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var self = this, obj = this.get("obj");

	    	if(obj.contact_id>0){	    				    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadBalance();
		    	this.loadReference();
		    	this.jobDS.filter({ field:"contact_id", value: obj.contact_id });
	    	}
	    	
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, 
			obj = this.get("obj"),
			contact = this.contactDS.get(obj.contact_id),
			balance = 0, creditAllowed = 0;			

			this.txnDS.query({    			
				filter:[
					{ field:"amount", operator:"select_sum", value:"amount" },
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
					{ field:"status", operator:"where_in", value:[0,2] }
				]
			}).then(function(){
				var view = self.txnDS.view();

				balance += view[0].amount;

		    	return self.txnDS.query({
		    		filter:[
						{ field:"contact_id", value:obj.contact_id },
						{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
						{ field:"status", value:2 }
					]
		    	});	
			}).then(function(){
				var view = self.txnDS.view();				

				var idList = [0];
				$.each(view, function(index, value){
					idList.push(value.id);
				});

		    	return self.txnDS.query({
		    		filter:[
		    			{ field:"amount", operator:"select_sum", value:"amount" },
						{ field:"reference_id", operator:"where_in", value: idList },
						{ field:"type", value:"Cash_Receipt" }
					]
		    	});
		    }).then(function(){
		    	var view = self.txnDS.view();

		    	balance -= view[0].amount;

		    	if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}

		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);
			});				
		},
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});						
		},
		//Segment
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}								
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
			    }else{
		        	data.set("item_id", "");
		        }
		    }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}			

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();

					self.set("obj", view[0]);
					
			        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));

					if(view[0].status=="1"){
						self.set("statusSrc", banhji.source.usedSrc);
					}else{
						self.set("statusSrc", banhji.source.openSrc);
					}

					if(view[0].discount>0){
						self.set("showDiscount", true);
					}
					
					self.loadLines(id);
					self.assemblyLineDS.filter([
						{ field: "transaction_id", value: id },
						{ field: "assembly_id >", value: 0 }
					]);
					self.attachmentDS.filter({ field: "transaction_id", value: id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });
				});
			}				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, tax = 0, itemIds = [];											

			$.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.price;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);					
				subTotal += amt;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}					
	        });				

	    	//Total
	        total = subTotal + tax;		        

	        //Warning over credit allowed
	        if(obj.credit_allowed>0 && total>obj.credit_allowed){
	        	this.set("amtDueColor", "Gold");		        	
	        }else{
	        	this.set("amtDueColor", banhji.source.amtDueColor);
	        }

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);

			this.set("total", kendo.toString(total, "c", obj.locale));									    	
	    	
	    	//Remove Assembly Item List
			var raw = this.assemblyLineDS.data();			
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);			      	
			    }
		    }	
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);
			
			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);
			this.set("amtDueColor", banhji.source.amtDueColor);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);

			this.dataSource.insert(0, {
				contact_id 			: "",
				transaction_template_id : 2,
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,
				user_id 			: this.get("user_id"),
				employee_id			: "",
			   	type				: "Sale_Order",//Required
			   	number 				: "",
			   	sub_total 			: 0,
			   	amount				: 0,
			   	credit_allowed 		: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	due_date 			: duedate,
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			
			this.setRate();
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 0,
				price 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1,
				required_date 		: new Date(),

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
	    		ref.set("status", 1);
	    		this.referenceDS.sync();
	    	}else{
	    		obj.set("reference_id", 0);
	    	}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly Item line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.assemblyLineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);
				
				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("sale_order");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Reference					
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", value: "Quote" },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("employee_id", data.employee_id);
				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
								
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: 0,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,
							required_date 		: value.required_date,

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});
		 	}
		},
		//Recurring		
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("employee_id", view[0].employee_id);//Sale Rep
				obj.set("job_id", view[0].job_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,							
						item_id 			: value.item_id,									
						description 		: value.description,							
						quantity 			: value.quantity,
						price 				: value.price,								
						amount 	 			: value.amount,									
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,
						
						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.customerDeposit =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "account_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "account_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Deposit" }
		}),
		accountDS 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 10 },//Cash
			      	{ field: "account_type_id", value: 34 },//Retained Earning
			      	{ field: "account_type_id", value: 36 },//Expense
			      	{ field: "account_type_id", value: 37 },
			      	{ field: "account_type_id", value: 38 },
			      	{ field: "account_type_id", value: 40 },
			      	{ field: "account_type_id", value: 41 },
			      	{ field: "account_type_id", value: 42 },
			      	{ field: "account_type_id", value: 43 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		depositAccountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 25 },
			      	{ field: "account_type_id", value: 30 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthList 			: banhji.source.monthList,	
		monthOptionList 	: banhji.source.monthOptionList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		total				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("account_id", contact.deposit_account_id);
		    	obj.set("locale", contact.locale);
		    	this.setRate();
		    	this.loadReference();
		    	this.jobDS.filter({ field:"contact_id", value: obj.contact_id });
	    	}
	    	
		    this.changes();
	    },
		//Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				value.set("rate", rate);
				value.set("locale", obj.locale);
			});
		},
		//Segment
		segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.dataSource.view();

					self.set("obj", view[0]);
					self.set("original_total", view[0].amount);
					self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
					
					self.lineDS.filter({ field: "transaction_id", value: id });				
					self.journalLineDS.filter({ field: "transaction_id", value: id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });
				});
			}
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){
				var sum = 0;
				
				$.each(this.lineDS.data(), function(index, value) {
					sum += value.amount;
		        });

		        this.set("total", kendo.toString(sum, "c", obj.locale));
		        obj.set("amount", sum);
	    	}else{
	    		this.set("total", 0);
		        obj.set("amount", 0);
	    	}
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);
			this.journalLineDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				contact_id 				: "",
				transaction_template_id : 7,
				recurring_id 			: "",
				reference_id	 		: "",
				account_id 				: "",
				user_id 				: this.get("uer_id"),
			   	type					: "Customer_Deposit", //required
			   	number 					: "",
			   	amount					: 0,
			   	rate					: 1,
			   	locale 					: banhji.locale,
			   	issued_date 			: new Date(),
			   	memo 					: "",
			   	memo2 					: "",
			   	segments 				: [],
			   	is_journal 				: 1,
			   	//Recurring
			   	recurring_name 			: "",
			   	start_date 				: new Date(),
			   	frequency 				: "Daily",
			   	month_option 			: "Day",
			   	interval 				: 1,
			   	day 					: 1,
			   	week 					: 0,
			   	month 					: 0,
			   	is_recurring 			: 0
	    	});

			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");
			this.lineDS.add({
				transaction_id 		: obj.id,
				account_id 			: "",
				description 		: "",
				reference_no 		: "",
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		removeRow  			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(this.lineDS.hasChanges() && obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				ref.set("deposit", obj.amount);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Journal
					if(data[0].is_recurring==0){
			            self.addJournal(data[0].id);
			        }
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("customer_deposit");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id }
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        
			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Journal
		addJournal 			: function(transaction_id){
	    	var self = this,
	    	sum = 0,
	    	obj = this.get("obj");

			//Cash account on DR
			$.each(this.lineDS.data(), function(index, value){
				sum += value.amount;
				self.journalLineDS.add({
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,
					contact_id 			: value.contact_id,
					description 		: "",
					reference_no 		: value.reference_no,
					segments 	 		: [],
					dr 	 				: value.amount,
					cr 					: 0,
					rate				: value.rate,
					locale				: value.locale
				});
			});

			//Deposit on CR
			this.journalLineDS.add({
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,
				contact_id 			: obj.contact_id,
				description 		: "",
				reference_no 		: "",
				segments 	 		: obj.segments,
				dr 	 				: 0,
				cr 					: sum,
				rate				: obj.rate,
				locale				: obj.locale
			});

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "deposit", value: 0 },
					{ field: "type", value: "Sale_Order" },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
				obj.set("amount", data.amount);

				this.lineDS.data([]);
				this.lineDS.add({
					transaction_id 		: obj.id,
					account_id 			: "",
					description 		: "",
					reference_no 		: data.number,
					amount 	 			: data.amount,
					rate				: data.rate,
					locale				: data.locale
				});
			 	this.set("total", kendo.toString(data.amount, "c", data.locale));
		 	}
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("employee_id", view[0].employee_id);//Sale Rep
				obj.set("job_id", view[0].job_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						account_id 			: value.account_id,
						description 		: value.description,
						reference_no 		: value.reference_no,
						amount 	 			: value.amount,
						rate				: value.rate,
						locale				: value.locale
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.cashSale =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_lines"),
		depositDS  			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		depositSumDS  		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transactions/amount_sum",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,								
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		typeList  			: new kendo.data.DataSource({
		  	data: banhji.source.prefixList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Commercial_Cash_Sale" },
			      	{ field: "type", value: "Vat_Cash_Sale" },
			      	{ field: "type", value: "Cash_Sale" }
			    ]
			}
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Commercial_Cash_Sale" },
			      	{ field: "type", value: "Vat_Cash_Sale" },
			      	{ field: "type", value: "Cash_Sale" }
			    ]
			}
		}),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		cashAccountDS  		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		paymentMethodDS 	: banhji.source.paymentMethodDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		showDiscount 		: false,
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		total_deposit		: 0,
		total 				: 0,
		remaining 			: 0,
		amount_due 			: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		loadData 			: function(){
			var obj = this.get("obj");

			this.setRate();
	    	this.loadDeposit();
	    	this.loadBalance();
	    	this.loadReference();
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Deposit
		loadDeposit 		: function(){
			var self = this, obj = this.get("obj");

			if(this.get("isEdit")){
				this.depositDS.filter([
					{ field:"type", value:"Customer_Deposit" },
					{ field:"reference_id", value:obj.id }
				]);
			}

			this.depositSumDS.query({
				filter:[
					{ field:"type", value:"Customer_Deposit" },
					{ field:"contact_id", value:obj.contact_id }
				],
				page: 1,
				pageSize: 1000
			}).then(function(){
				var view = self.depositSumDS.view(),
				total_deposit = view[0].amount + obj.deposit;

				self.set("total_deposit", total_deposit);
			});
		},
		addDeposit 			: function(id){
			var obj = this.get("obj");
			
			this.depositDS.data([]);

			if(obj.deposit>0){				
				this.depositDS.add({				
					contact_id 			: obj.contact_id,								
					reference_id 		: id,				
					user_id 			: this.get("user_id"),				    		
				   	type				: "Customer_Deposit",
				   	amount				: obj.deposit*-1,			   	
				   	rate				: obj.rate,			   	
				   	locale 				: obj.locale,			   	
				   	issued_date 		: obj.issued_date			   	
		    	});
			}
		},
		saveDeposit 		: function(id){
			var obj = this.get("obj");
			
    		if(this.get("isEdit")){
    			if(this.depositDS.total()>0){
					var deposit = this.depositDS.at(0);
					deposit.set("amount", obj.deposit*-1);
				}else{
					this.addDeposit(id);
				}
    		}else{
				this.addDeposit(id);
    		}

			this.depositDS.sync();
		},
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){	    				    			    	
		    	var contact = this.contactDS.get(obj.contact_id);		    			    	
		    	
		    	obj.set("payment_method_id", contact.payment_method_id);
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.loadData();
		    	this.jobDS.filter({ field:"contact_id", value: obj.contact_id });	    	
	    	}else{
	    		this.set("total_deposit", 0);
	    	}
	    	
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, 
			obj = this.get("obj"),
			contact = this.contactDS.get(obj.contact_id),
			balance = 0, creditAllowed = 0;			

			this.txnDS.query({    			
				filter:[
					{ field:"amount", operator:"select_sum", value:"amount" },
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
					{ field:"status", operator:"where_in", value:[0,2] }
				]
			}).then(function(){
				var view = self.txnDS.view();

				balance += view[0].amount;

		    	return self.txnDS.query({
		    		filter:[
						{ field:"contact_id", value:obj.contact_id },
						{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
						{ field:"status", value:2 }
					]
		    	});	
			}).then(function(){
				var view = self.txnDS.view();				

				var idList = [0];
				$.each(view, function(index, value){
					idList.push(value.id);
				});

		    	return self.txnDS.query({
		    		filter:[
		    			{ field:"amount", operator:"select_sum", value:"amount" },
						{ field:"reference_id", operator:"where_in", value: idList },
						{ field:"type", value:"Cash_Receipt" }
					]
		    	});
		    }).then(function(){
		    	var view = self.txnDS.view();

		    	balance -= view[0].amount;

		    	if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}

		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);
			});				
		},
	    //Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});						
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}								
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
		    	}else{
		        	data.set("item_id", "");
		        }
		    }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}			

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();				

					self.set("obj", view[0]);
			        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
			        self.set("amount_due", kendo.toString(view[0].amount - view[0].deposit, "c", view[0].locale));
			        
					self.set("statusSrc", banhji.source.paidSrc);

					if(view[0].discount>0){
						self.set("showDiscount", true);
					}
									
					self.loadLines(id);
					self.assemblyLineDS.filter([
						{ field: "transaction_id", value: view[0].id },
						{ field: "assembly_id >", value: 0 }
					]);
					self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });

					self.depositDS.filter([
						{ field: "reference_id", value: view[0].id },
						{ field: "type", value: "Credit" }
					]);
					
					self.set("original_total", view[0].amount);
					self.set("original_credit", view[0].credit);

					self.loadDeposit();
				});
			}				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, tax = 0, remaining = 0, amount_due = 0, itemIds = [];
							
			if(kendo.parseInt(obj.tax_item_id)>0){
				var selectedVat 					
				vatAmt = kendo.parseFloat(selectedVat.item_prices[0].price);
			}								

			$.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.price;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);					
				subTotal += amt;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}					
	        });				

	    	//Total
	        total = subTotal + tax;
	        amount_due = total - obj.deposit;

	        //Apply Deposit
	        if(obj.deposit>0){
	        	if(obj.deposit <= this.get("total_deposit")){
		        	if(obj.deposit <= total){
		        		remaining = total - obj.deposit;
		        	}else{
		        		obj.set("deposit", total);
		        	}
		        }else{
	        		alert("Over deposit to apply!");
	        		obj.set("deposit", 0);
	        	}

	        	//Status
		        if(remaining==0){
		    		obj.set("status", 1);
		    	}else if(remaining==total){
		    		obj.set("status", 0);
		    	}else{
		    		obj.set("status", 2);
		    	}
	        }

	        //Warning over credit allowed
	        if(obj.credit_allowed>0 && total>obj.credit_allowed){
	        	this.set("amtDueColor", "Gold");		        	
	        }else{
	        	this.set("amtDueColor", banhji.source.amtDueColor);
	        }

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);
			obj.set("remaining", remaining);

			this.set("total", kendo.toString(total, "c", obj.locale));
	        this.set("amount_due", kendo.toString(amount_due, "c", obj.locale));									    	
	    	
	    	//Remove Assembly Item List
			var raw = this.assemblyLineDS.data();			
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);			      	
			    }
		    }	
		},
		typeChanges 		: function(){
			var obj = this.get("obj");

			$.each(this.txnTemplateDS.data(), function(index, value){
				if(value.type==obj.type){
					obj.set("transaction_template_id", value.id);

					return false;
				}
			});
		},
		discountChanges 	: function(){
			var obj = this.get("obj");

			var total = (obj.sub_total + obj.tax) - obj.discount;
	        var remaining = total - obj.deposit;

	        this.set("total", kendo.toString(total, "c", obj.locale));
	        this.set("remaining", kendo.toString(remaining, "c", obj.locale));

	        obj.set("amount", total);
	        obj.set("remaining", remaining);
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.depositDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);
			this.set("total_deposit", 0);
			this.set("remaining", 0);
			this.set("amount_due", 0);
			this.set("amtDueColor", banhji.source.amtDueColor);

			this.dataSource.insert(0, {
				transaction_template_id: 10,
				contact_id 			: "",//Customer
				payment_method_id	: 0,
				reference_id 		: "",
				recurring_id 		: "",
				account_id 			: 1,
				job_id 				: 0,
				user_id 			: this.get("user_id"),
				employee_id			: "",//Sale Rep
			   	type				: "Commercial_Cash_Sale",//Required
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	amount				: 0,
			   	deposit 			: 0,
			   	remaining 			: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	check_no 			: "",
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			
			this.addRow();
			this.setRate();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 0,
				price 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Warning over credit allowed
	        if(obj.credit_limit>0 && obj.amount>obj.credit_allowed){
	        	alert("Over credit allowed!");
	        }

	        //Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	        //Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}

	        //Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly Item line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Journal
					if(data[0].is_recurring==0){
			            self.addJournal(data[0].id);
			        }
				}

				self.lineDS.sync();
				self.assemblyLineDS.sync();
				self.saveDeposit(data[0].id);
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("cash_sale");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id }
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	assemblyItemList = [],	    				    	
	    	saleList = {},
	    	taxList = {},
	    	inventoryList = {},
			cogsList = {};			
			
			//Arrange sale, cogs, inventory
			$.each(this.lineDS.data(), function(index, value){										
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;

				if(item.is_assembly=="1"){
					assemblyItemList.push(value.item_id);
				}				
				
				//Add Tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;

					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				
				
				//Add Income list
				var incomeID = kendo.parseInt(item.income_account_id);																				
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}				
				
				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						cogsAmount = (value.quantity*value.unit_value)*item.cost;						
					}else{
						cogsAmount = value.amount;
					}					

					if(cogsAmount>0){
						if(cogsList[cogsID]===undefined){
							cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
						}else{											
							if(cogsList[cogsID].id===cogsID){
								cogsList[cogsID].amount += cogsAmount;
							}else{
								cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};
							}
						}
					}
				}						

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						inventoryAmount = (value.quantity*value.unit_value)*item.cost;						
					}else{
						inventoryAmount = value.amount;
					}

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}
			});//End Foreach Loop

			//Assembly Item for cogs and inventory
			$.each(self.assemblyLineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id);
				
				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));
					
					cogsAmount = value.quantity*item.cost;

					if(cogsAmount>0){
						if(cogsList[cogsID]===undefined){
							cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
						}else{											
							if(cogsList[cogsID].id===cogsID){
								cogsList[cogsID].amount += cogsAmount;
							}else{
								cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};
							}
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					inventoryAmount = value.quantity*item.cost;

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}
			});		

			//Start journal
			//Cash on Dr 
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: obj.amount - obj.deposit,
				cr 					: 0,				
				rate				: obj.rate,
				locale				: obj.locale
			});

			//Discount on Dr			
			if(obj.discount > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.discount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Deposit on Dr
			if(obj.deposit > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.deposit,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Sale accounts on Cr		
			if(!jQuery.isEmptyObject(saleList)){				
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}

			//Tax on Cr					
			if(!jQuery.isEmptyObject(taxList)){				
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}
			
			//COGS on Dr 			
			if(!jQuery.isEmptyObject(cogsList)){							
				$.each(cogsList, function(index, value){				
					if(value.amount>0){
						self.journalLineDS.add({
							transaction_id 		: transaction_id,
							account_id 			: value.id,
							contact_id 			: obj.contact_id,
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],
							dr 	 				: value.amount,
							cr 					: 0,
							rate				: value.rate,
							locale				: value.locale
						});
					}
				});
			}

			//Inventory on Cr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					if(value.amount>0){
						self.journalLineDS.add({
							transaction_id 		: transaction_id,
							account_id 			: value.id,
							contact_id 			: obj.contact_id,
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],
							dr 	 				: 0,
							cr 					: value.amount,
							rate				: value.rate,
							locale				: value.locale
						});
					}
				});
			}

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", operator:"where_in", value:["Sale_Order", "Quote", "GDN"] },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("employee_id", data.employee_id);
				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
				obj.set("deposit", data.deposit);
												
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							fine 				: value.fine,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
			}								
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("payment_method_id", view[0].payment_method_id);
				obj.set("account_id", view[0].account_id);
				obj.set("employee_id", view[0].employee_id);//Sale Rep
				obj.set("job_id", view[0].job_id);
				obj.set("check_no", view[0].check_no);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						item_id 			: value.item_id,
						measurement_id 		: value.measurement_id,
						description 		: value.description,
						quantity 	 		: value.quantity,
						price 				: value.price,
						amount 				: value.amount,
						discount 			: value.discount,
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,

						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});	
	banhji.invoice =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_lines"),
		depositDS  			: dataStore(apiUrl + "transactions"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		typeList  			: new kendo.data.DataSource({
		  	data: banhji.source.prefixList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Commercial_Invoice" },
			      	{ field: "type", value: "Vat_Invoice" },
			      	{ field: "type", value: "Invoice" }
			    ]
			}
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Commercial_Invoice" },
			      	{ field: "type", value: "Vat_Invoice" },
			      	{ field: "type", value: "Invoice" }
			    ]
			}
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		depositSumDS  		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transactions/amount_sum",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,								
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		paymentTermDS 		: banhji.source.paymentTermDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		showDiscount 		: false,
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		total_deposit		: 0,
		total 				: 0,
		amount_due 			: 0,
		remaining 			: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		loadData 			: function(){
			this.setRate();
			this.setTerm();
			this.loadBalance();
			this.loadDeposit();
			this.loadReference();
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Deposit
		loadDeposit 		: function(){
			var self = this, obj = this.get("obj");

			if(this.get("isEdit")){
				this.depositDS.filter([
					{ field:"type", value:"Customer_Deposit" },
					{ field:"reference_id", value:obj.id }
				]);
			}

			this.depositSumDS.query({
				filter:[
					{ field:"type", value:"Customer_Deposit" },
					{ field:"contact_id", value:obj.contact_id }
				],
				page: 1,
				pageSize: 1000
			}).then(function(){
				var view = self.depositSumDS.view(),
				total_deposit = view[0].amount + obj.deposit;

				self.set("total_deposit", total_deposit);
			});
		},
		addDeposit 			: function(id){
			var obj = this.get("obj");
			
			this.depositDS.data([]);

			if(obj.deposit>0){				
				this.depositDS.add({				
					contact_id 			: obj.contact_id,								
					reference_id 		: id,				
					user_id 			: this.get("user_id"),				    		
				   	type				: "Customer_Deposit",
				   	amount				: obj.deposit*-1,			   	
				   	rate				: obj.rate,			   	
				   	locale 				: obj.locale,			   	
				   	issued_date 		: obj.issued_date			   	
		    	});
			}
		},
		saveDeposit 		: function(id){
			var obj = this.get("obj");
			
    		if(this.get("isEdit")){
    			if(this.depositDS.total()>0){
					var deposit = this.depositDS.at(0);
					deposit.set("amount", obj.deposit*-1);
				}else{
					this.addDeposit(id);
				}
    		}else{
				this.addDeposit(id);
    		}

			this.depositDS.sync();
		},
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");			

	    	if(obj.contact_id>0){	    				    			    	
		    	var contact = this.contactDS.get(obj.contact_id);		    	 	
		    	
		    	obj.set("payment_term_id", contact.payment_term_id);
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.loadData();
		    	this.jobDS.filter({ field:"contact_id", value: obj.contact_id });	
	    	}else{
	    		this.set("total_deposit", 0);
	    	}

		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, 
			obj = this.get("obj"),
			contact = this.contactDS.get(obj.contact_id),
			balance = 0, creditAllowed = 0;			

			this.txnDS.query({    			
				filter:[
					{ field:"amount", operator:"select_sum", value:"amount" },
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
					{ field:"status", operator:"where_in", value:[0,2] }
				]
			}).then(function(){
				var view = self.txnDS.view();

				balance += view[0].amount;

		    	return self.txnDS.query({
		    		filter:[
						{ field:"contact_id", value:obj.contact_id },
						{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },
						{ field:"status", value:2 }
					]
		    	});	
			}).then(function(){
				var view = self.txnDS.view();				

				var idList = [0];
				$.each(view, function(index, value){
					idList.push(value.id);
				});

		    	return self.txnDS.query({
		    		filter:[
		    			{ field:"amount", operator:"select_sum", value:"amount" },
						{ field:"reference_id", operator:"where_in", value: idList },
						{ field:"type", value:"Cash_Receipt" }
					]
		    	});
		    }).then(function(){
		    	var view = self.txnDS.view();

		    	balance -= view[0].amount;

		    	if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}

		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);
			});				
		},
	    //Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});						
		},
		//Payment Term
		setTerm 			: function(){
			var duedate = new Date(), obj = this.get("obj");

			if(obj.payment_term_id>0){
				var term = this.paymentTermDS.get(obj.payment_term_id);

				duedate.setDate(duedate.getDate() + term.net_due);

				obj.set("due_date", duedate);
			}else{
				obj.set("due_date", new Date());
			}			
		},
		//Segments	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}								
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
			    }else{
		        	data.set("item_id", "");
		        }
		    }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();				

					self.set("obj", view[0]);
					self.set("original_total", view[0].amount);

					if(view[0].status=="1"){
						self.set("statusSrc", banhji.source.paidSrc);
					}else if(view[0].status=="2"){
						self.set("statusSrc", banhji.source.partialyPaidSrc);
					}else{
						self.set("statusSrc", banhji.source.openSrc);
					}

					if(view[0].discount>0){
						self.set("showDiscount", true);
					}
					
			        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
			        self.set("amount_due", kendo.toString(view[0].amount - view[0].deposit, "c", view[0].locale));
										
					self.loadLines(id);
					self.assemblyLineDS.filter([
						{ field: "transaction_id", value: id },
						{ field: "assembly_id >", value: 0 }
					]);
					self.journalLineDS.filter({ field: "transaction_id", value: id });
					self.attachmentDS.filter({ field: "transaction_id", value: id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });				
					
					self.loadDeposit();
				});
			}				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, tax = 0, remaining = 0, amount_due = 0, itemIds = [];											

			$.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.price;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);					
				subTotal += amt;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}					
	        });				

	    	//Total
	        total = subTotal + tax;
	        amount_due = total - obj.deposit;

	        //Apply Deposit
	        if(obj.deposit>0){
	        	if(obj.deposit <= this.get("total_deposit")){
		        	if(obj.deposit <= total){
		        		remaining = total - obj.deposit;
		        	}else{
		        		obj.set("deposit", total);
		        	}
		        }else{
	        		alert("Over deposit to apply!");
	        		obj.set("deposit", 0);
	        	}

	        	//Status
		        if(remaining==0){
		    		obj.set("status", 1);
		    	}else if(remaining==total){
		    		obj.set("status", 0);
		    	}else{
		    		obj.set("status", 2);
		    	}
	        }

	        //Warning over credit allowed
	        if(obj.credit_allowed>0 && total>obj.credit_allowed){
	        	this.set("amtDueColor", "Gold");		        	
	        }else{
	        	this.set("amtDueColor", banhji.source.amtDueColor);
	        }

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);
			obj.set("remaining", remaining);

			this.set("total", kendo.toString(total, "c", obj.locale));
	        this.set("amount_due", kendo.toString(amount_due, "c", obj.locale));									    	
	    	
	    	//Remove Assembly Item List
			var raw = this.assemblyLineDS.data();			
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);			      	
			    }
		    }	
		},
		typeChanges 		: function(){
			var obj = this.get("obj");

			$.each(this.txnTemplateDS.data(), function(index, value){
				if(value.type==obj.type){
					obj.set("transaction_template_id", value.id);

					return false;
				}
			});
		},
		discountChanges 	: function(){
			var obj = this.get("obj");

			var total = (obj.sub_total + obj.tax) - obj.discount;
	        var remaining = total - obj.deposit;

	        this.set("total", kendo.toString(total, "c", obj.locale));
	        this.set("remaining", kendo.toString(remaining, "c", obj.locale));

	        obj.set("amount", total);
	        obj.set("remaining", remaining);
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.depositDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total_deposit", 0);
			this.set("total", 0);			
			this.set("amount_due", 0);
			this.set("amtDueColor", banhji.source.amtDueColor);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);				

			this.dataSource.insert(0, {				
				contact_id 			: "",//Customer
				transaction_template_id : 3,
				payment_term_id		: 0,				
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
				employee_id 		: "",//Sale Rep 	    		
			   	type				: "Commercial_Invoice",//Required
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	deposit 			: 0,			   	
			   	amount				: 0,
			   	remaining 			: 0,
			   	credit_allowed 		: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: duedate,			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.setRate();	
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 0,
				price 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));
	    	obj.set("due_date", kendo.toString(new Date(obj.due_date), "yyyy-MM-dd"));

	    	//Warning over credit allowed
	        if(obj.credit_limit>0 && obj.amount>obj.credit_allowed){
	        	alert("Over credit allowed!");
	        }

	        //Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	        //Mode
	    	if(obj.isNew()==false){
	    		//Line has changed
		    	if(obj.is_recurring==0){
			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}

	        //Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly Item line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

					//Journal
					if(data[0].is_recurring==0){
			            self.addJournal(data[0].id);
		        	}
				}

				self.lineDS.sync();
				self.assemblyLineDS.sync();
				self.saveDeposit(data[0].id);
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.clear();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		clear 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("invoice");
		},
		cancel 				: function(){
			this.clear();
			history.back();
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id }
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	taxList = {},
	    	saleList = {},
	    	cogsList = {},
	    	inventoryList = {};
			
			//Arrange sale, cogs, inventory
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;				

				//Add Tax list
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;

					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}
				
				//Add Income list
				var incomeID = kendo.parseInt(item.income_account_id);
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}
				
				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						cogsAmount = (value.quantity*value.unit_value)*item.cost;						
					}else{
						cogsAmount = value.amount;
					}					

					if(cogsAmount>0){
						if(cogsList[cogsID]===undefined){
							cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
						}else{											
							if(cogsList[cogsID].id===cogsID){
								cogsList[cogsID].amount += cogsAmount;
							}else{
								cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};
							}
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						inventoryAmount = (value.quantity*value.unit_value)*item.cost;						
					}else{
						inventoryAmount = value.amount;
					}

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}
			});//End Foreach Loop
			
			//Assembly Item for cogs and inventory
			$.each(self.assemblyLineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id);
				
				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));
					
					cogsAmount = value.quantity*item.cost;

					if(cogsAmount>0){
						if(cogsList[cogsID]===undefined){
							cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
						}else{											
							if(cogsList[cogsID].id===cogsID){
								cogsList[cogsID].amount += cogsAmount;
							}else{
								cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};
							}
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					inventoryAmount = value.quantity*item.cost;

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}
			});

			//Start journal
			//A/R on Dr
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: contact.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: obj.amount - obj.deposit,
				cr 					: 0,				
				rate				: obj.rate,
				locale				: obj.locale
			});

			//Discount on Dr			
			if(obj.discount > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.discount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Deposit on Dr
			if(obj.deposit > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.deposit,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Sale accounts on Cr		
			if(!jQuery.isEmptyObject(saleList)){				
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}

			//Tax on Cr					
			if(!jQuery.isEmptyObject(taxList)){				
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}
			
			//COGS on Dr 			
			if(!jQuery.isEmptyObject(cogsList)){
				$.each(cogsList, function(index, value){
					if(value.amount>0){
						self.journalLineDS.add({
							transaction_id 		: transaction_id,
							account_id 			: value.id,
							contact_id 			: obj.contact_id,
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],
							dr 	 				: value.amount,
							cr 					: 0,
							rate				: value.rate,
							locale				: value.locale
						});
					}
				});
			}

			//Inventory on Cr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					if(value.amount>0){
						self.journalLineDS.add({					
							transaction_id 		: transaction_id,
							account_id 			: value.id,				
							contact_id 			: obj.contact_id,				
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],								
							dr 	 				: 0,
							cr 					: value.amount,				
							rate				: value.rate,
							locale				: value.locale
						});
					}						
				});
			}

			this.journalLineDS.sync();
		},
		//Reference					
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", operator:"where_in", value:["Sale_Order", "Quote", "GDN"] },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);
				
				obj.set("employee_id", data.employee_id);
				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
				obj.set("deposit", data.deposit);
												
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
			}								
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("payment_term_id", view[0].payment_term_id);
				obj.set("employee_id", view[0].employee_id);//Sale Rep
				obj.set("job_id", view[0].job_id);
				obj.set("segments", view[0].segments);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						item_id 			: value.item_id,
						measurement_id 		: value.measurement_id,
						description 		: value.description,
						quantity 	 		: value.quantity,
						price 				: value.price,
						amount 				: value.amount,
						discount 			: value.discount,
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,

						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.gdn =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		txnDS 	 			: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "item_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_lines"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "GDN" }
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		notDuplicateNumber  : true,
		statusSrc 			: "",
		recurring 			: "",
		recurring_validate 	: false,
		enableRef 	 		: false,
		total 				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");

	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadReference(); 			    	
	    	}

		    this.changes();
	    },
	    //Currency Rate
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});						
		},
		//Item
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}								
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
		    	}else{
	        		data.set("item_id", "");
	        	}
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}			

				this.dataSource.query({    			
					filter: para,
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.dataSource.view();

					self.set("obj", view[0]);
					
					self.set("statusSrc", banhji.source.deliveredSrc);
								
					self.loadLines(id);
					self.assemblyLineDS.filter([
						{ field: "transaction_id", value: id },
						{ field: "assembly_id >", value: 0 }
					]);
					self.attachmentDS.filter({ field: "transaction_id", value: id });
					self.referenceDS.filter({ field: "id", value: view[0].reference_id });
				});
			}				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), total = 0, itemIds = [];												

			$.each(this.lineDS.data(), function(index, value) {				
				total += value.quantity;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}										
	        });

	        this.set("total", kendo.toString(total, "n0"));
	        obj.set("amount", total);

	        //Remove Assembly Item List
			var raw = this.assemblyLineDS.data();			
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);			      	
			    }
		    }	    	
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 7);

			this.dataSource.insert(0, {
				contact_id 			: "",
				transaction_template_id : 4,
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,
				user_id 			: this.get("user_id"),
				employee_id 		: "",
			   	type				: "GDN",//Required
			   	number 				: "",
			   	amount				: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	due_date 			: duedate,//Delivery Date
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");

			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 0,
				price 				: 0,
				amount 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				//Remove Assembly Item List
				if(data.item_id>0){
					var raw = this.assemblyLineDS.data();
				    
				    var item, i;
				    for(i=raw.length-1; i>=0; i--){
				      	item = raw[i];
				      	if (item.assembly_id==data.item_id){
				       	 	this.assemblyLineDS.remove(item);
				      	}

				    }
				}

				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly Item line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}

				self.lineDS.sync();
				self.assemblyLineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("gdn");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.txnDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.txnDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);

			        self.dataSource.sync();
			        self.dataSource.bind("requestEnd", function(e){
			        	if(e.type==="update"){
			        		window.history.back();
			        	}
			        });
	        	}
	        });
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Reference					
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", operator:"where_in", value:["Quote", "Sale_Order", "Commercial_Invoice", "Vat_Invoice", "Invoice"] },
					{ field: "due_date >=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);
				
				obj.set("employee_id", data.employee_id);
				obj.set("reference_no", data.number);
				obj.set("segments", data.segments);
				obj.set("deposit", data.deposit);
												
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
			}								
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this;

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("locale", view[0].locale);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);

				self.loadContact(view[0].contact_id);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringLineDS.view();
				self.lineDS.data([]);

				$.each(view, function(index, value){
					self.lineDS.add({					
						transaction_id 		: 0,
						tax_item_id 		: value.tax_item_id,
						item_id 			: value.item_id,
						measurement_id 		: value.measurement_id,
						description 		: value.description,
						quantity 	 		: value.quantity,
						price 				: value.price,
						amount 				: value.amount,
						discount 			: value.discount,
						rate				: value.rate,
						locale				: value.locale,
						movement 			: value.movement,

						item_prices 		: value.item_prices
					});
				});

				self.changes();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.saleReturn =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		returnDS			: dataStore(apiUrl + "transactions"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		accountLineDS  		: dataStore(apiUrl + "account_lines"),		
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Sale_Return" }
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter:[
		      	{ field: "account_type_id", operator:"gte", value: 35 },
		      	{ field: "account_type_id", operator:"lte", value: 43 }
		    ],
		  	sort: { field:"number", dir:"asc" }
		}),
		depositAccountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 25 },
			      	{ field: "account_type_id", value: 30 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),		
		amtDueColor 		: banhji.source.amtDueColor,
		obj 				: null,
		returnObj 			: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		statusSrc 			: "",
		showReturn 			: true,
		showDiscount 		: false,
		showRef 			: false,
		showSegment 		: false,
		windowVisible 		: false,
		isOffsetInvoice 	: false,
		notDuplicateNumber  : true,
		total 				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);   	
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.jobDS.filter({ field:"contact_id", value: obj.contact_id });		    		    			    	
	    	}

		    this.changes();
	    },
		//Currency Rate		
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});					
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}								
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
		    	}else{
	        		data.set("item_id", "");
	        	}
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Account
		addRowAccount		: function(){
			var obj = this.get("obj");
					
			this.accountLineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				account_id 			: "",
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		removeRowAccount	: function(e){
			var d = e.data;
			if(this.lineDS.total()==0 && this.accountLineDS.total()==0){

			}else{
				this.accountLineDS.remove(d);
		        this.changes();
	        }
		},
		//Number      	
		checkExistingNumber : function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 		: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });					

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				
				
				self.set("obj", view[0]);
				self.set("statusSrc", banhji.source.usedSrc);					
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
				
				self.loadLines(id);
				self.assemblyLineDS.filter([
					{ field: "transaction_id", value: id },
					{ field: "assembly_id >", value: 0 }
				]);
				self.accountLineDS.filter({ field: "transaction_id", value: id });
				self.journalLineDS.filter({ field: "transaction_id", value: id });
				self.attachmentDS.filter({ field: "transaction_id", value: id });
				self.returnDS.filter({ field: "return_id", value: id });
			});				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), 
			subTotal = 0, discount =0, tax = 0, returnAmount = 0, remaining = 0, itemIds = [];
			
			//Item lines
	        $.each(this.lineDS.data(), function(index, value) {
				var amt = value.quantity * value.price;

				//Discount by line
				if(value.discount>0){
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					tax += amt * taxItem.rate;
				}

				value.set("amount", amt);
				subTotal += amt;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}
	        });

	        //Account lines
	        $.each(this.accountLineDS.data(), function(index, value) {
				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);
					tax += value.amount * taxItem.rate;
				}

				subTotal += value.amount;
	        });

	        total = subTotal + tax;

	        //Return lines
	        $.each(this.returnDS.data(), function(index, value) {
	        	if(value.type=="Offset_Invoice" && value.amount>value.sub_total){
	        		value.set("amount", value.sub_total);
	        	}
				returnAmount += value.amount;
	        });
	       
	        remaining = total - returnAmount;

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);
			obj.set("amount", total);
			obj.set("deposit", returnAmount);
			obj.set("remaining", remaining);

			this.set("total", kendo.toString(total, "c", obj.locale));

			//Remove Assembly Item List
			var raw = this.assemblyLineDS.data();
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);
			    }
		    }
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);
			this.returnDS.data([]);
			this.referenceDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				contact_id 			: "",
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,
				user_id 			: this.get("user_id"),
			   	type				: "Sale_Return", //Require
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	amount				: 0,
			   	deposit 			: 0,
			   	remaining 			: 0,
			   	amount_paid 		: 0,
			   	credit_allowed 		: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");
			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 0,
				price 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: 1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			
			//Remove Assembly Item List
			if(data.item_id>0){
				var raw = this.assemblyLineDS.data();
			    
			    var item, i;
			    for(i=raw.length-1; i>=0; i--){
			      	item = raw[i];
			      	if (item.assembly_id==data.item_id){
			       	 	this.assemblyLineDS.remove(item);
			      	}

			    }
			}

			this.lineDS.remove(data);
	        this.changes();
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Journal
	    		$.each(this.journalLineDS.data(), function(index, value){
					value.set("deleted", 1);
				});

				this.addJournal(obj.id);
	    	}

	    	//Save Obj
			this.objSync()
			.then(function(data){ //Success
				var ids = [];

				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Account line
					$.each(self.accountLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly Item line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Return
					$.each(self.returnDS.data(), function(index, value){
						if(value.type=="Offset_Invoice" && value.reference_id>0){
							ids.push(value.reference_id);
						}
						value.set("return_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.accountLineDS.sync();
				self.assemblyLineDS.sync();
				self.returnDS.sync();
				self.updateTxnStatus(ids);
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("sale_return");
		},
		validating 			: function(){
			var result = true, obj = this.get("obj");

			if(obj.remaining!==0){
				$("#ntf1").data("kendoNotification").error("Remaining must be Zero!");

				result = false;
			}

			if(this.lineDS.total()==0 && this.accountDS.total()==0){
				$("#ntf1").data("kendoNotification").error("Please select an item or account.");

				result = false;
			}

			if(this.returnDS.total()==0){
				$("#ntf1").data("kendoNotification").error("Please make an offset invoice or add to deposit.");

				result = false;
			}

			return result;
		},
		updateTxnStatus 	: function(ids){
			var self = this;

			if(ids.length>0){
				this.txnDS.query({
					filter:{ field:"id", operator:"where_in", value:ids }
				}).then(function(){
					var view = self.txnDS.view();

					$.each(view, function(index, value){
						if(value.amount_paid == 0){
							value.set("status", 0);
						}else if(value.amount_paid >= value.amount){
							value.set("status", 1);
						}else{
							value.set("status", 2);
						}
					});

					self.txnDS.sync();
				});
			}
		},
		//Return
		addRowReturn 		: function(type){
			var obj = this.get("obj"), account_id = 0;

			if(type=="Customer_Deposit" && obj.contact_id>0){
				var contact = this.contactDS.get(obj.contact_id);
				account_id = contact.deposit_account_id;
			}
			
			this.returnDS.insert(0, {
				return_id 		: obj.id,
				account_id 		: account_id,
				reference_id 	: "",
				reference_no 	: "",
				number 			: "",
				type 			: type,				
				amount 			: 0,
				rate			: obj.rate,
				locale			: obj.locale,
				issued_date 	: obj.issued_date
			});

			var raw = this.returnDS.at(0);
			this.set("returnObj", raw);
		},
		selectedRow 		: function(e){
			var data = e.data, para = [], ids = [], obj = this.get("obj");

			this.set("returnObj", data);
			
			if(data.type=="Offset_Invoice"){
				this.set("isOffsetInvoice", true);

				if(this.returnDS.total()>0){
					$.each(this.returnDS.data(), function(index, value){
						if(value.reference_id!==data.reference_id){
							ids.push(value.reference_id);
						}
					});
					para.push({field: "id", operator:"where_not_in", value: ids});
				}
				para.push({field: "contact_id", value: obj.contact_id});
				para.push({field: "status", operator:"where_in", value: [0,2]});
				para.push({field: "type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"]});
				this.referenceDS.filter(para);
			}else{
				this.set("isOffsetInvoice", false);
			}
			
      		this.set("windowVisible", true);
		},
		removeRowReturn 	: function(e){
			var d = e.data;
			
			if(this.returnDS.total()>1){
				this.returnDS.remove(d);
		        this.changes();
	        }
		},
		returnChanges 		: function(e){
			e.preventDefault();

			this.closeWindow();
		},
		referenceChanges 	: function(){
			var returnObj = this.get("returnObj");
			
			if(returnObj.reference_id>0){
				var txn = this.referenceDS.get(returnObj.reference_id),
				amount = txn.amount - (txn.amount_paid + txn.deposit);

				returnObj.set("account_id", txn.account_id);
				returnObj.set("reference_no", txn.number);
				returnObj.set("sub_total", amount);
				returnObj.set("amount", amount);				
			}else{
				returnObj.set("account_id", 0);
				returnObj.set("reference_no", "");
				returnObj.set("sub_total", 0);
				returnObj.set("amount", 0);				
			}

			this.changes();
		},
		openOffsetInvoiceWindow	: function(){
			this.openWindow("Offset_Invoice");
		},
		openDepositWindow	: function(){
			this.openWindow("Customer_Deposit");
		},
		openWindow			: function(type){
			var para = [], ids = [], 
			obj = this.get("obj");

			if(obj.contact_id>0){
				this.addRowReturn(type);
				
				if(type=="Offset_Invoice"){
					this.set("isOffsetInvoice", true);

					if(this.returnDS.total()>0){
						$.each(this.returnDS.data(), function(index, value){
							ids.push(value.reference_id);
						});
						para.push({field: "id", operator:"where_not_in", value: ids});
					}
					para.push({field: "contact_id", value: obj.contact_id});
					para.push({field: "status", operator:"where_in", value: [0,2]});
					para.push({field: "type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"]});
					this.referenceDS.filter(para);
				}else{
					this.set("isOffsetInvoice", false);
				}
				
	      		this.set("windowVisible", true);
      		}else{
      			alert("Please select a customer.");
      		}
      	},
      	closeWindow 		: function(){
      		this.changes();
      		this.set("windowVisible", false);
      	},
      	cancelWindow 		: function(){      		
      		var returnObj = this.get("returnObj"),
      		indexReturnObj = this.returnDS.indexOf(returnObj),
      		selectedReturnObj = this.returnDS.at(indexReturnObj);

      		this.returnDS.remove(selectedReturnObj);
      		this.changes();

      		this.set("windowVisible", false);
      	},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	saleList = {},
	    	taxList = {},
	    	inventoryList = {},
	    	cogsList = {},
	    	returnList = {};
			
			//Item lines
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;

				//Add Income list
				var incomeID = kendo.parseInt(item.income_account_id);
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID] = {"id": incomeID, "amount": amount};
					}else{
						saleList[incomeID].amount += amount;
					}
				}

				//Discount by line
				if(value.discount>0){
					amount -= (amount * value.discount);
				}

				//TAX Account
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = amount * taxItem.rate;
					if(taxList[taxID]===undefined){
						taxList[taxID] = {"id": taxID, "amount": taxAmt};
					}else{
						taxList[taxID].amount += taxAmt;
					}
				}

				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						cogsAmount = (value.quantity*value.unit_value)*item.cost;
					}else{
						cogsAmount = value.amount;
					}

					if(cogsList[cogsID]===undefined){
						cogsList[cogsID] = {"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
					}else{
						cogsList[cogsID].amount += cogsAmount;
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						inventoryAmount = (value.quantity*value.unit_value)*item.cost;
					}else{
						inventoryAmount = value.amount;
					}

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID] = {"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{
						inventoryList[inventoryID].amount += inventoryAmount;
					}
				}
			});

			//Assembly Item Lines
			$.each(self.assemblyLineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id);
				
				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));
					
					cogsAmount = value.quantity*item.cost;

					if(cogsAmount>0){
						if(cogsList[cogsID]===undefined){
							cogsList[cogsID] = {"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
						}else{
							cogsList[cogsID].amount += cogsAmount;
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					inventoryAmount = value.quantity*item.cost;

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID] = {"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{
						inventoryList[inventoryID].amount += inventoryAmount;
					}
				}
			});

			//Account line
			$.each(this.accountLineDS.data(), function(index, value){
				//Add tax list
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;
					
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};
					}else{
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}
			});

			//Return Lines
			$.each(this.returnDS.data(), function(index, value){
				//Add Offset Invoice and Deposit list
				var returnID = kendo.parseInt(value.account_id);
				if(value.type=="Offset_Invoice"){
					returnID = contact.account_id;
				}

				if(returnID>0){
					if(returnList[returnID]===undefined){
						returnList[returnID] = {"id": returnID, "amount": value.amount};
					}else{
						returnList[returnID].amount += value.amount;
					}
				}
			});

			//Start journal
			//Sale on Dr
			if(!jQuery.isEmptyObject(saleList)){
				$.each(saleList, function(index, value){
					self.journalLineDS.add({
						transaction_id 		: transaction_id,
						account_id 			: value.id,
						contact_id 			: obj.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: value.amount,
						cr 					: 0,
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Rebate Account on Dr
			$.each(this.accountLineDS.data(), function(index, value){
				self.journalLineDS.add({
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,
					contact_id 			: obj.contact_id,
					description 		: "",
					reference_no 		: "",
					segments 	 		: value.segments,
					dr 	 				: value.amount,
					cr 					: 0,
					rate				: obj.rate,
					locale				: obj.locale
				});
			});

			//Tax on Dr
			if(!jQuery.isEmptyObject(taxList)){
				$.each(taxList, function(index, value){
					self.journalLineDS.add({
						transaction_id 		: transaction_id,
						account_id 			: value.id,
						contact_id 			: obj.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: value.amount,
						cr 					: 0,
						rate				: obj.rate,
						locale				: obj.locale
					});
				});
			}			

			//Discount on Cr
			if(obj.discount>0){
				this.journalLineDS.add({
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,
					contact_id 			: obj.contact_id,
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],
					dr 	 				: 0,
					cr 					: obj.discount,
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//A/R and Deposit on Cr
			if(!jQuery.isEmptyObject(returnList)){
				$.each(returnList, function(index, value){
					self.journalLineDS.add({
						transaction_id 		: transaction_id,
						account_id 			: value.id,
						contact_id 			: obj.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: 0,
						cr 					: value.amount,
						rate				: obj.rate,
						locale				: obj.locale
					});
				});
			}

			//INVENTORY
			//Inventory on Dr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({
						transaction_id 		: transaction_id,
						account_id 			: value.id,
						contact_id 			: obj.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: value.amount,
						cr 					: 0,
						rate				: value.rate,
						locale				: value.locale
					});
				});
			}

			//Cogs on Cr
			if(!jQuery.isEmptyObject(cogsList)){
				$.each(cogsList, function(index, value){
					self.journalLineDS.add({
						transaction_id 		: transaction_id,
						account_id 			: value.id,
						contact_id 			: obj.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: 0,
						cr 					: value.amount,
						rate				: value.rate,
						locale				: value.locale
					});
				});
			}

			this.journalLineDS.sync();
		}
	});
	banhji.cashRefund =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "item_lines"),
		assemblyLineDS  	: dataStore(apiUrl + "item_lines"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "item_lines"),
		returnDS			: dataStore(apiUrl + "transactions"),
		invoiceDS			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		taxItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.taxList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "tax_type_id", value: 3 },//Customer Tax
			      	{ field: "tax_type_id", value: 9 }
			    ]
			},
		  	sort: [
			  	{ field: "tax_type_id", dir: "asc" },
			  	{ field: "name", dir: "asc" }
			]
		}),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Sale_Return" }
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:{ field: "item_type_id", operator:"neq", value: 3 },
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		assemblyDS			: dataStore(apiUrl + "item_prices"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		optionList 			: [
			{ id:"Offset_Invoice", name:"Charge Against Invoice" },
			{ id:"Customer_Deposit", name:"Add To Deposit" },
			{ id:"Credit_Note", name:"Cash Refund" }
		],
		amtDueColor 		: banhji.source.amtDueColor,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		statusSrc 			: "",
		enableRef 	 		: false,
		showReturn 			: true,
		showDiscount 		: false,
		sub_total 			: 0,
		discount 			: 0,
		tax 				: 0,
		total 				: 0,
		remain 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Contact
		loadContact 		: function(id){
			var obj = this.get("obj");

		    obj.set("contact_id", id);
		    this.contactChanges();
	    },
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);   	
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadReference();
		    	this.jobDS.filter({ field:"contact_id", value: obj.contact_id });		    		    			    	
	    	}

		    this.changes();
	    },
		//Currency Rate		
		setRate 			: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);

			$.each(this.lineDS.data(), function(index, value){
				var itemRate = rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				value.set("rate", itemRate);
			});					
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data,
			obj = this.get("obj");
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id), assemblyId = 0;
				if(item.is_assembly=="1"){
					$.each(this.lineDS.data(), function(index, value){
						if(value.item_id==data.item_id){
							assemblyId++;
						}
					});
				}

				if(assemblyId<2){//No duplicate assembly item
			        if(item.is_catalog=="1"){
			        	this.lineDS.remove(data);

						$.each(item.catalogs, function(ind, val){
							var cat = self.itemDS.get(val);

							if(cat){
								var itemPriceList = [], counter = 0,
								rate = obj.rate / banhji.source.getRate(cat.locale, new Date(obj.issued_date)),
								price = cat.price, 
			        			unit_value = 1, 
			        			measurement_id = cat.measurement_id, 
			        			locale = cat.locale;

						    	$.each(banhji.source.itemPriceList, function(index, value){
						    		if(value.item_id==cat.id){
						    			itemPriceList.push(value);

						    			if(counter==0){
											rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
											price = value.price;
											unit_value = value.unit_value;
											measurement_id = value.measurement_id;
											locale = value.locale;
					        			}
					        			counter++;
						    		}
						    	});

								self.lineDS.add({
									transaction_id 		: obj.id,
									tax_item_id 		: 0,
									item_id 			: cat.id,
									measurement_id 		: measurement_id,
									description 		: cat.sale_description,
									quantity 	 		: 1,
									unit_value 			: unit_value,
									price 				: price*rate,
									amount 				: price*rate,
									discount 			: 0,
									rate				: rate,
									locale				: locale,
									movement 			: -1,

									item_prices 		: itemPriceList
								});
							}								
						});

						this.changes();
			        }else if(item.is_assembly=="1"){
			        	var rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

			        	data.set("measurement_id", item.measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", 1);
				        data.set("price", item.price*rate);
				        data.set("rate", rate);
				        data.set("locale", item.locale);
				        data.set("movement", 0);

				        this.changes();

				        this.assemblyDS.query({
				        	filter:{ field:"assembly_id", value:data.item_id }
				        }).then(function(){
				        	var view = self.assemblyDS.view();

				        	$.each(view, function(index, value){
				        		rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));

								self.assemblyLineDS.add({
									transaction_id 		: obj.id,
									item_id 			: value.item_id,
									assembly_id 		: value.assembly_id,
									measurement_id 		: value.measurement_id,
									description 		: "",
									quantity 	 		: value.quantity,
									unit_value 			: value.unit_value,
									price 				: value.price*rate,
									amount 				: value.price*rate,
									rate				: rate,
									locale				: value.locale,
									movement 			: -1
								});
					        });
				        });
			        }else{
						var itemPriceList = [], counter = 0,
						rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date)),
						price = item.price, 
						unit_value = 1, 
						measurement_id = item.measurement_id, 
						locale = item.locale;

						$.each(banhji.source.itemPriceList, function(index, value){
							if(value.item_id==data.item_id){
								itemPriceList.push(value);

								if(counter==0){
									rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
									price = value.price;
									unit_value = value.unit_value;
									measurement_id = value.measurement_id;
									locale = value.locale;
			        			}
			        			counter++;
							}
						});

			    		data.set("measurement_id", measurement_id);
			    		data.set("description", item.sale_description);
			    		data.set("quantity", 1);
			    		data.set("unit_value", unit_value);
				        data.set("price", price*rate);
				        data.set("rate", rate);	
				        data.set("locale", locale);
				        data.set("item_prices", itemPriceList);			        

				        this.changes();
			    	}
		    	}else{
	        		data.set("item_id", "");
	        	}
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
						var rate = obj.rate / banhji.source.getRate(value.locale, new Date(obj.issued_date));
				        
				        data.set("price", value.price*rate);
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});

		        this.changes();
	        }
		},
		//Return Option
		addRowOption 		: function(){
			var obj = this.get("obj");
			

			var account_id = 0;
			if(this.accountDS.total()>0){
				account_id = this.accountDS.at(0).id;
			}
			this.returnDS.add({
				return_id 		: obj.id,
				reference_id 	: "",
				account_id 		: account_id,
				type 			: "",
				amount 			: 0,
				rate			: obj.rate,
				locale			: obj.locale,
				issued_date 	: obj.issued_date,
				showInvoice 	: false,
				showAccount 	: false
			});
		},
		removeRowOption 	: function(e){
			var d = e.data;
			
			if(this.returnDS.total()>1){
				this.returnDS.remove(d);
		        this.changes();
	        }
		},
		invoiceChanges 		: function(e){
			var data = e.data;
			
			if(data.reference_id>0){
				var inv = this.invoiceDS.get(data.reference_id);
				data.set("amount", inv.amount - (inv.amount_paid + inv.deposit));

				this.changes();
			}else{
				data.set("amount", 0);
			}							
		},
		optionChanges 		: function(e){
			var data = e.data, obj = this.get("obj");

			switch(data.type) {
			    case "Offset_Invoice": //Invoice		    	
			        data.set("showInvoice", true);
			        data.set("showAccount", false);

			        if(obj.contact_id>0){
			        	var para = [
					 			{ field:"contact_id", value: obj.contact_id },
					 			{ field:"status", operator:"where_in", value:[0,2] },
					 			{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] }
					 	];

					 	if(obj.reference_id>0){
					 		para.push({ field:"id", operator:"where_not_in", value:[obj.reference_id] });
					 	} 

				        this.invoiceDS.filter(para);
				 	}

			        break;
			    case "Credit_Note": //Refund		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", true);
			        break;
			    default: //Deposit		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", false);
			}			
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this, para = [];

			para.push({ field:"id", value: id });					

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				
				
				self.set("obj", view[0]);
				
				self.set("statusSrc", banhji.source.usedSrc);
					
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));

		        self.set("original_total", view[0].amount);
				
				self.loadLines(id);
				self.assemblyLineDS.filter([
					{ field: "transaction_id", value: id },
					{ field: "assembly_id >", value: 0 }
				]);
				self.journalLineDS.filter({ field: "transaction_id", value: id });
				self.attachmentDS.filter({ field: "transaction_id", value: id });
				self.referenceDS.filter({ field: "id", value: view[0].reference_id });

				self.returnDS.query({
					filter:{ field: "return_id", value: id },
					page:1,
					pageSize:100
				}).then(function(){
					var reInvoice = self.returnDS.view();

					$.each(reInvoice, function(index, value){
						if(value.type=="Offset_Invoice"){
							value.set("showInvoice", true);
			        		value.set("showAccount", false);
						}else if(value.type=="Credit_Note"){
							value.set("showInvoice", false);
			        		value.set("showAccount", true);
						}else{
							value.set("showInvoice", false);
			        		value.set("showAccount", false);
						}
					});
				});
			});				
		},
		loadLines 			: function(id){
			var self = this;

			self.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "assembly_id", value: 0 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), 
			subTotal = 0, discount =0, tax = 0, returnAmount = 0, remaining = 0, itemIds = [];
			
	        $.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.price;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);
				subTotal += amt;

				if(value.item_id>0){
					itemIds.push(value.item_id);
				}									
	        });

	        total = subTotal + tax;

	        //Return
	        $.each(this.returnDS.data(), function(index, value) {								
				returnAmount += value.amount;					
	        });
	       
	        remaining = obj.amount_paid - returnAmount;

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);
			obj.set("remaining", remaining);

			this.set("total", kendo.toString(total, "c", obj.locale));

			//Remove Assembly Item List
			var raw = this.assemblyLineDS.data();			
		    var item, i;
		    for(i=raw.length-1; i>=0; i--){
		    	item = raw[i];
		    	
		    	if (jQuery.inArray(kendo.parseInt(item.assembly_id), itemIds)==-1) {
			       	this.assemblyLineDS.remove(item);			      	
			    }
		    }			    	
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);
			this.returnDS.data([]);
			this.referenceDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				contact_id 			: "",
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,
				user_id 			: this.get("user_id"),
			   	type				: "Sale_Return", //Require
			   	number 				: "",
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	amount				: 0,
			   	deposit 			: 0,
			   	remaining 			: 0,
			   	amount_paid 		: 0,
			   	credit_allowed 		: 0,
			   	rate				: 1,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.setRate();
			this.addRow();
			this.addRowOption();
			this.generateNumber();
		},
		addRow 				: function(){
			var obj = this.get("obj");
			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				assembly_id 		: 0,
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				unit_value 			: 0,
				price 				: 0,
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: 1,

				item_prices 		: []
			});
		},
		removeRow 			: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				//Remove Assembly Item List
				if(data.item_id>0){
					var raw = this.assemblyLineDS.data();
				    
				    var item, i;
				    for(i=raw.length-1; i>=0; i--){
				      	item = raw[i];
				      	if (item.assembly_id==data.item_id){
				       	 	this.assemblyLineDS.remove(item);
				      	}

				    }
				}

				this.lineDS.remove(data);
		        this.changes();
	        }
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    	//Mode
	    	if(obj.isNew()==false){
	    		//Journal
	    		$.each(this.journalLineDS.data(), function(index, value){
					value.set("deleted", 1);
				});

				this.addJournal(obj.id);
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 3);

				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Assembly Item line
					$.each(self.assemblyLineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Return
					$.each(self.returnDS.data(), function(index, value){
						value.set("return_id", data[0].id);

						if(value.type=="Offset_Invoice" && value.reference_id>0){
							var inv = self.invoiceDS.get(value.reference_id),
							amountPaid = inv.amount_paid + value.amount;

							inv.set("amount_paid", amountPaid);

							if(amountPaid>=inv.amount){
								inv.set("status", 1); //Paid
							}else{
								inv.set("status", 2); //Partially Paid
							}
						}
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.assemblyLineDS.sync();
				self.returnDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.assemblyLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.assemblyLineDS.data([]);
			this.attachmentDS.data([]);

			banhji.userManagement.removeMultiTask("sale_return");
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	saleList = {},
	    	taxList = {},	    	
	    	inventoryList = {},
	    	cogsList = {},
	    	cashList = {},
	    	sumInvoice = 0,
	    	sumCredit = 0;			
			
			//Group Account from lineDS
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;

				//Add Income list
				var incomeID = kendo.parseInt(item.income_account_id);																				
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amount * value.discount;
					amount -= discount_amount;																						
				}

				//TAX Account																								
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = amount * taxItem.rate;
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				

				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						cogsAmount = (value.quantity*value.unit_value)*item.cost;						
					}else{
						cogsAmount = value.amount;
					}					

					if(cogsList[cogsID]===undefined){
						cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(cogsList[cogsID].id===cogsID){
							cogsList[cogsID].amount += cogsAmount;
						}else{
							cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}						

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					if(item.item_type_id==1 || item.item_type_id==4){
						inventoryAmount = (value.quantity*value.unit_value)*item.cost;						
					}else{
						inventoryAmount = value.amount;
					}

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}					  	
			});

			//Assembly Item for cogs and inventory
			$.each(self.assemblyLineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id);
				
				//Add COGS list
				var cogsID = kendo.parseInt(item.expense_account_id);
				if(cogsID>0){
					var cogsAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));
					
					cogsAmount = value.quantity*item.cost;

					if(cogsAmount>0){
						if(cogsList[cogsID]===undefined){
							cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};						
						}else{											
							if(cogsList[cogsID].id===cogsID){
								cogsList[cogsID].amount += cogsAmount;
							}else{
								cogsList[cogsID]={"id": cogsID, "amount": cogsAmount, "rate": itemRate, "locale": item.locale};
							}
						}
					}
				}

				//Add Inventory list
				var inventoryID = kendo.parseInt(item.inventory_account_id);
				if(inventoryID>0){
					var inventoryAmount = 0, 
					itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

					inventoryAmount = value.quantity*item.cost;

					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmount;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmount, "rate": itemRate, "locale": item.locale};
						}
					}
				}
			});

			//Group Account from returnDS
			$.each(this.returnDS.data(), function(index, value){
				//Offset Invoice
				if(value.type=="Offset_Invoice"){
					sumInvoice += value.amount;
				}

				//Deposit
				if(value.type=="Customer_Deposit"){ 
					sumCredit += value.amount;
				}

				//Refund
				if(value.type=="Credit_Note"){
					var cashID = value.account_id,
					cashAmt = value.amount;

					if(cashList[cashID]===undefined){
						cashList[cashID]={"id": cashID, "amount": cashAmt};						
					}else{											
						if(cashList[cashID].id===cashID){
							cashList[cashID].amount += cashAmt;
						}else{
							cashList[cashID]={"id": cashID, "amount": cashAmt};
						}
					}
				}
			});

			//Start journal			
			//Sale on Dr
			if(!jQuery.isEmptyObject(saleList)){
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Tax on Dr
			if(!jQuery.isEmptyObject(taxList)){
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}			

			//Discount on Cr
			if(obj.discount>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.discount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//A/R on Cr
			var ar = obj.amount - (obj.amount_paid + obj.deposit);
			if(ar>0){						
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: ar,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}			

			//Deposit on Cr
			if(sumCredit>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: sumCredit,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Cash on Cr
			if(!jQuery.isEmptyObject(cashList)){
				$.each(cashList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//INVENTORY
			//Inventory on Dr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: value.rate,
						locale				: value.locale
					});						
				});
			}

			//Cogs on Cr
			if(!jQuery.isEmptyObject(cogsList)){
				$.each(cogsList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: value.rate,
						locale				: value.locale
					});						
				});
			}

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("enableRef", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status <>", value: 3 },
					{ field: "type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice", "Commercial_Cash_Sale","Vat_Cash_Sale", "Cash_Sale"] }
				]);
			}else{
				this.set("enableRef", false);
				obj.set("reference_id", "");
			}
		},
		referenceChanges 	: function(e){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				
				obj.set("reference_no", ref.number);
				obj.set("amount", ref.amount);

				if(ref.type=="Commercial_Cash_Sale" || ref.type=="Vat_Cash_Sale" || ref.type=="Cash_Sale"){					
					obj.set("amount_paid", ref.amount);
					this.set("showReturn", true);
				}else{
					obj.set("amount_paid", ref.amount_paid + ref.deposit);
					if(ref.status==0){
						this.set("showReturn", false);

						this.returnDS.data([]);
					}else{
						this.set("showReturn", true);

						this.returnDS.data([]);
						this.addRowOption();
					}
				}				
									
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							fine 				: value.fine,
							rate				: value.rate,
							locale				: value.locale,
							movement 			: value.movement,													

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				this.returnDS.data([]);
				this.addRowOption();
			}							
		}
	});
	banhji.statement = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions/statement"),
		agingDS 			: dataStore(apiUrl + "transactions/statement_aging"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList 			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		company 			: banhji.institute,
		obj 				: null,
		displayDate 		: "",
		contact_id 			: "",
		pageLoad 			: function(){
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		loadContact 		: function(id){
		    this.set("contact_id", id);
		    this.search();
	    },
		search				: function(){
			var self = this, para = [], displayDate = "",
				contact_id = this.get("contact_id"),
				start = this.get("sdate"),
        		end = this.get("edate");

        	if(contact_id>0){
        		var contact = this.contactDS.get(contact_id);
        		this.set("obj", contact);

        		para.push({ field:"contact_id", value: contact_id });
        	
	        	//Dates
		    	if(start && end){
		        	para.push({ field:"issued_date >=", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
		        	para.push({ field:"issued_date <=", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

		        	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
		        }else if(start){
		        	para.push({ field:"issued_date", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

		        	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
		        }else if(end){
		        	para.push({ field:"issued_date <=", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

		        	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
		        }else{
		        	
		        }

	            this.set("displayDate", displayDate);

	            this.dataSource.filter(para);
	            this.agingDS.filter(para);
	            this.agingDS.bind("requestEnd", function(e){				
					if(e.type=="read"){
						var response = e.response.results[0];

						self.set("total", kendo.toString(response.amount, "c", response.locale));
					}
				}); 
	        }            
		}
	});	
	banhji.stamentSummary = kendo.observable({
		lang 				: langVM,
		dataSource 		: dataStore(apiUrl + "sales/statement"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.stamentSummary.dataSource.filter({
				logic: banhji.stamentSummary.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.stamentSummary.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.customerReportCenter = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/customer_dashboard_summary"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		pageLoad 			: function(){
			var self = this,
			today = new Date(),			        	
			start = kendo.toString(banhji.source.getFiscalDate(), "yyyy-MM-dd"),
			end = kendo.toString(today, "yyyy-MM-dd");

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: start },
					{ field:"issued_date <=", value: end }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("sale", kendo.toString(view[0].sale, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
				self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
				self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));

				self.set("collection_day", kendo.toString(view[0].collection_day, "n0"));
			});
		}
	});
	banhji.customerBalance = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl+"contact_reports/balance"),
		totalDS 				: dataStore(apiUrl+"contact_reports/balance_total"),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 1 }//Customer
		}),
		statusList 				: banhji.source.statusList,
		contact_type_id 		: null,
		status 					: null,
		date 					: new Date(),
		total 					: 0,		
		pageLoad 				: function(){
		},
		search 					: function(){
			var self = this, para = [],
			status = this.get("status"),
			date = this.get("date"),
			contact_type_id = this.get("contact_type_id");

			if(status!==null){
				para.push({ field:"status", value: status });
			}

			if(date){
				para.push({ field:"issued_date", operator:"transaction_date", value: kendo.toString(date, "yyyy-MM-dd") });
			}

			if(contact_type_id){
				para.push({ field:"contact_type_id", value: contact_type_id });
			}

			this.dataSource.filter(para);
			this.totalDS.query({
				filter: para,
				page:1,
				pageSize:100
			}).then(function(){
				var view = self.totalDS.view();
				self.set("total", kendo.toString(view[0].total, "c0", banhji.locale));
			});
			this.set("status", null);
			this.set("contact_type_id", null);
		}
	});
	banhji.customerSetting =  kendo.observable({
		lang 				: langVM,
        contactTypeDS 		: dataStore(apiUrl + "contacts/type"),
        patternDS 			: dataStore(apiUrl + "contacts"),
        paymentMethodDS		: banhji.source.paymentMethodDS,
        paymentTermDS		: banhji.source.paymentTermDS,
        txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),
        contactTypeName 	: "",
        contactTypeAbbr 	: "",
        contactTypeCompany 	: 0,
        paymentMethodName 	: "",
        paymentTermName 	: "",
        paymentTermNetDue	: "",
        paymentTermPeriod 	: "",
        paymentTermPercentage 	: "",
        prefixDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "prefixes",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "prefixes",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "prefixes",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "prefixes",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"type", operator:"where_in", value:["Quote", "Sale_Order", "Deposit","Commercial_Cash_Sale", "Vat_Cash_Sale", "Cash_Sale","Commercial_Invoice","Vat_Invoice", "Invoice", "Cash_Receipt", "GDN", "Sale_Return"] },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
        pageLoad 			: function() {
        	this.txnTemplateDS.filter({ field: "moduls", value : "customer_mg" });
        },	    
        addContactType 		: function(){
        	var self = this, name = this.get("contactTypeName");

        	if(name!==""){
	        	this.contactTypeDS.add({
	        		parent_id 	: 1,
	        		name 		: name,
	        		abbr 		: this.get("contactTypeAbbr"),
	        		description : "",
	        		is_company 	: this.get("contactTypeCompany"),
	        		is_system 	: 0
	        	});

	        	this.contactTypeDS.sync();
	        	this.contactTypeDS.bind("requestEnd", function(e){
	        		if(e.type==="create"){
	        			var response = e.response.results[0];
	        			self.addPattern(response.id);
	        			banhji.source.loadContactTypes();
	        		}
	        	});

	        	this.set("contactTypeName", "");
	        	this.set("contactTypeAbbr", "");
	        	this.set("contactTypeCompany", 0);
        	}
        },
        addPattern 			: function(id){
        	this.patternDS.insert(0, {
				"contact_type_id" 		: id,
				"number"				: "",
				"locale" 				: banhji.locale,					
				"is_pattern" 			: 1,
				"status"				: 1								
			});
			this.patternDS.sync();
        },
        addPaymentMethod 	: function(){
        	var name = this.get("paymentMethodName");

        	if(name!==""){
	        	this.paymentMethodDS.add({	        		
	        		name 		: name,
	        		description : "",
	        		is_system 	: 0
	        	});

	        	this.paymentMethodDS.sync();

	        	this.set("paymentMethodName", "");
        	}
        },
        addPaymentTerm 		: function(){
        	var name = this.get("paymentTermName");

        	if(name!==""){
	        	this.paymentTermDS.add({	        		
	        		name 				: name,
	        		net_due 			: this.get("paymentTermNetDue"),
	        		discount_period 	: this.get("paymentTermPeriod"),
	        		discount_percentage : this.get("paymentTermPercentage"),
	        		is_system 			: 0
	        	});

	        	this.paymentTermDS.sync();

	        	this.set("paymentTermName", "");
	        	this.set("paymentTermNetDue", "");
	        	this.set("paymentTermPeriod", "");
	        	this.set("paymentTermPercentage", "");
        	}
        },
        deleteForm 			: function(e){
        	var data = e.data;
        	if(confirm("Do you want to delete it?") == true) {
        		this.txnTemplateDS.remove(data);
        		this.txnTemplateDS.sync();
        	}
        },
        goInvoiceCustom 	: function(){
		    banhji.router.navigate('/invoice_custom');
        }
    });
    banhji.job = kendo.observable({
		lang 				: langVM,
        dataSource 			: dataStore(apiUrl + "jobs"),
        contactDS 	 		: banhji.source.customerDS,
		obj 				: null,
		isVisible 			: false,
		pageLoad 			: function() {
        },        
        addObj 			: function(){
        	this.dataSource.add({
        		number 				: "",
        		name 				: "",
        		description 		: "",
        		contact_id 			: "",
        		contact 			: []
        	});
        	var data = this.dataSource.data();
			var obj = data[data.length-1];
			this.set("obj", obj);
        },        
        openWindow			: function(){
        	this.addObj();
      		this.set("isVisible", true);      		         	
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();

      		this.set("isVisible", false);
      	},
        save 				: function(){
        	var self = this, obj = this.get("obj");

        	if(obj.name!=="" && obj.contact_id>0){        		
	        	this.dataSource.sync();
	        	this.dataSource.bind("requestEnd", function(e){
	        		if( e.type == "create" || e.type == "update"){ 
	        			self.set("isVisible", false);
	        			banhji.source.loadJobs(); 
	        		}
	        	});
        	}else{
        		alert("Name and Customer are required.");
        	}
        },
        edit 				: function(e){
      		var data = e.data;      		
      		this.set("obj", data);

      		this.set("isVisible", true);       		
      	},      	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();
		        this.dataSource.bind("requestEnd", function(e){
		        	if(e.type=="destroy"){
		        		banhji.source.loadJobs();
		        	}
		        });		        
	    	}	    	
	    },
	    cancel 			: function(){
      		this.dataSource.cancelChanges();
      		window.history.back();
      	}
    });
    banhji.invoiceCustom =  kendo.observable({
    	lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transaction_templates"),		
		txnFormDS			: dataStore(apiUrl + "transaction_forms"),
		contactDS  			: new kendo.data.DataSource({
		  	data: { name: "", address: "", phone: ""},
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: {type: "Quote", amount: "$500,000.00",title: "Quotation"},
		objForm	 			: null,
		formShow			: null,
		formTitle 			: "Quotation",
		formType			: "Quote",
		company 			: banhji.institute,
		saveClose 			: false,
		selectTypeList 		: banhji.source.customerFormList,
		selectCustom		: "customer_mg",
		isEdit 				: false,
		onChange			: function(e) {
			var obj = this.get("obj"), self = this;
			this.txnFormDS.query({    			
				filter: [{ field:"type", value: obj.type }, {field:"moduls", value: obj.moduls }],
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.txnFormDS.view();
				if(view.length > 0){
					banhji.invoiceForm.set("obj", view[0]);
					var obj = self.get("obj");
					obj.set("type", view[0].type);
					obj.set("title", view[0].title);
					obj.set("note", view[0].note);
				}
			});	
			setTimeout(function(e){ $('#formStyle a').eq(0).click(); },2000);
        },
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{	
				var obj = this.get("obj"), self = this;
				if(this.formShow === null){ 
					this.formShow = banhji.view.invoiceForm10; 
				}
				banhji.view.invoiceCustom.showIn('#invFormContent', this.formShow);		
				this.addRowLineDS();
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
					this.txnFormDS.query({    			
						filter: { field:"type", value: obj.type },
						page: 1,
						take: 100
					}).then(function(e){
						var view = self.txnFormDS.view();
						var obj = self.get("obj");
						obj.set("type", view[0].type);
						obj.set("title", view[0].title);
						obj.set("note", view[0].note);
						
					});	
				}	
				var name = banhji.invoiceForm.get("obj");
				name.set("title", this.formTitle);
				banhji.invoiceForm.contactDS.filter({field: "id", value: 1});
			}
		},
		addRowLineDS			: function(e){
			banhji.invoiceForm.lineDS.data([]);
			for (var i = 0; i < 15; i++) { 
				banhji.invoiceForm.lineDS.add({				
					id			: i,
					description : '',
					quantity 	: '',
					price 		: '',
					amount 		: '',
					description : '',
					locale : '',
					item_prices : [],
					item_id 	: ''
		    	});	
		    }
		},
		activeInvoiceTmp		: function(e){
			var Active;
			switch(e) {
				case 1: Active = banhji.view.invoiceForm1; break;
				case 2: Active = banhji.view.invoiceForm2; break;
				//case 3: Active = banhji.view.invoiceForm3; break;
				//case 4: Active = banhji.view.invoiceForm4; break;
				//case 5: Active = banhji.view.invoiceForm5; break;
				case 6: Active = banhji.view.invoiceForm6; break;
				case 7: Active = banhji.view.invoiceForm7; break;
				case 8: Active = banhji.view.invoiceForm8; break;
				case 9: Active = banhji.view.invoiceForm9; break;
				case 10: Active = banhji.view.invoiceForm10; break;
				case 11: Active = banhji.view.invoiceForm11; break;
				case 12: Active = banhji.view.invoiceForm12; break;
				case 13: Active = banhji.view.invoiceForm13; break;
				case 14: Active = banhji.view.invoiceForm31; break;
				case 15: Active = banhji.view.invoiceForm15; break;
				case 16: Active = banhji.view.invoiceForm25; break;
				case 17: Active = banhji.view.invoiceForm17; break;
				case 18: Active = banhji.view.invoiceForm18; break;
				case 19: Active = banhji.view.invoiceForm19; break;
				case 20: Active = banhji.view.invoiceForm20; break;
				case 21: Active = banhji.view.invoiceForm21; break;
				case 22: Active = banhji.view.invoiceForm22; break;
				case 23: Active = banhji.view.invoiceForm28; break;
				case 24: Active = banhji.view.invoiceForm29; break;
				case 25: Active = banhji.view.invoiceForm35; break;
				case 26: Active = banhji.view.invoiceForm39; break;
				case 27: Active = banhji.view.invoiceForm19; break;
				case 28: Active = banhji.view.invoiceForm25; break;
				case 29: Active = banhji.view.invoiceForm26; break;
				case 30: Active = banhji.view.invoiceForm25; break;
				case 31: Active = banhji.view.invoiceForm25; break;
				case 32: Active = banhji.view.invoiceForm27; break;
				case 33: Active = banhji.view.invoiceForm30; break;
				case 34: Active = banhji.view.invoiceForm32; break;
				case 35: Active = banhji.view.invoiceForm33; break;
				case 36: Active = banhji.view.invoiceForm34; break;
				case 37: Active = banhji.view.invoiceForm36; break;
				case 38: Active = banhji.view.invoiceForm37; break;
				case 39: Active = banhji.view.invoiceForm38; break;
				case 40: Active = banhji.view.invoiceForm40; break;
				case 41: Active = banhji.view.invoiceForm41; break;
				case 42: Active = banhji.view.invoiceForm42; break;
				case 43: Active = banhji.view.formCaritasExpense; break;
			}
			banhji.view.invoiceCustom.showIn('#invFormContent', Active);
		},
		colorCC 			: function(e){
			var Color = e.value;
			var tS = '';
			if(Color == '#000000' || Color =='#1f497d') tS = '#fff'; 
			else tS = '#333';
			$('.main-color').css({'background-color': e.value, 'color': tS});
			$('.main-color div').css({'color': tS});
			$('.main-color p').css({'color': tS});
			$('.main-color span').css({'color': tS});
			$('.main-color th').css({'color': tS});
		},
		selectedForm 		: function(e){
			var Index = e.data.id;
			this.activeInvoiceTmp(Index);
			this.addRowLineDS();

			var data = e.data, obj = this.get("obj");
			obj.set("transaction_form_id", data.id);
		},
		loadObj 			: function(id){
			var self = this;	
			this.dataSource.query({    			
				filter: { field:"id", value: id },
				page: 1,
			}).then(function(e){
				var view = self.dataSource.view();
				self.set("obj", view[0]);
				
				banhji.invoiceForm.set("obj", view[0]);	
				var Index = parseInt(view[0].transaction_form_id);
				self.activeInvoiceTmp(Index);
				self.addRowLineDS();

				self.txnFormDS.filter([
					{ field:"type", value: view[0].type }, 
					{ field:"moduls", value: view[0].moduls }
				]);	
				
				if(view[0].moduls == "customer_mg"){
					self.set("selectTypeList", banhji.source.customerFormList);
				}else if(view[0].moduls == "vendor_mg"){
					self.set("selectTypeList", banhji.source.vendorFormList);
				}
			});	
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.set("obj", null);
			this.set("isEdit", false);
			this.dataSource.insert(0,{
				user_id			: banhji.source.user_id,
				transaction_form_id : 0,
				type 			: this.formType,
				name 			: "",
				title 			: "Quotation",
				note 			: "",
				color  			: null,
				moduls 			: this.selectCustom,
				item_id 		: '',
				status 			: 0
	    	});		
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
		},
		save 				: function(){
	    	var self = this,obj = this.get("obj");
	    	var dfd = $.Deferred();
			//Save Obj
			if(obj.name){
				this.dataSource.sync();
				this.dataSource.bind("requestEnd", function(e){
					if(e.type != 'read' && e.response.results) {
						self.cancel();
					}
				});
				this.dataSource.bind("error", function(e){		    		    	
					dfd.reject(e.errorThrown);    				
			    });
			}else{
				alert("Please Fill Name of Form!");
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();		
			window.history.back();
		}
	});
	banhji.invoiceForm =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		referenceDS 		: dataStore(apiUrl + "transactions"),
		txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),		
		obj 				: {title: "Quotation", issued_date : "<?php echo date('d/M/Y'); ?>", number : "QO123456", type : "Quote", amount: "$500,000.00", contact: []},
		company 			: banhji.institute,
		paymentMethodDS		: banhji.source.paymentMethodDS,
		lineDS 				: dataStore(apiUrl + "item_lines"),
		user_id				: banhji.source.user_id,
		selectForm 			: null,
		contactDS 			: dataStore(apiUrl + "contacts"),
		contactT 			: null,
		paymentS 			: null,
		pageLoad 			: function(id, is_recurring){
			var self = this;				
			this.dataSource.query({    			
				filter: { field:"id", value: id },
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.dataSource.view();	
				view[0].set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));	
				view[0].set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
				view[0].set("amount", kendo.toString(view[0].amount, "c", view[0].locale));
				view[0].set("discount", kendo.toString(view[0].discount, "c", view[0].locale));	
				view[0].set("deposit", kendo.toString(view[0].deposit, "c", view[0].locale));	
				view[0].set("amount_due", kendo.toString(view[0].amount_due, "c", view[0].locale));
				view[0].set("issued_date", kendo.toString(new Date(view[0].issued_date), "dd MMM yyyy"));
				view[0].set("due_date", kendo.toString(new Date(view[0].due_date), "dd MMM yyyy"));
				if(view[0].description == "null"){
					view[0].set("description", "No Description");
				}
				if(view[0].payment_method_id){
					self.paymentMethodDS.filter({field: "id", value: view[0].payment_method_id});
				}
				self.set("obj", view[0]);
				self.loadObjTemplate(view[0].transaction_template_id, id);
				self.contactDS.filter({field: "id", value: view[0].contact_id});
			});
		},
		printGrid			: function() {
			var obj = this.get('obj'), colorM, ts;
			if(obj.color == null){
				colorM = "#10253f";
			}else{
				colorM = obj.color;
			}
			if(obj.color == '#000000' || obj.color =='#1f497d' || obj.color == null){ 
				ts = 'color: #fff!important;';
			} else { ts = 'color: #333;'; }
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=800, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:0mm;margin-top: 1mm; }'+
		            	'.inv1 .main-color {' +
		            		'background-color: '+colorM+'!important; ' + ts +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.inv1 thead tr {'+
		            		'background-color: rgb(242, 242, 242)!important;'+
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}'+
		            	'.pcg .mid-title div {' + ts + '}' +
		            	'.pcg .mid-header {' +
		            		'background-color: #dce6f2!important; ' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}'+
		            	'.inv1 span.total-amount { ' +
		            		'color:#fff!important;' +
		            	'}</style>' +
		            '</head>' +
		            '<body>';
		    var htmlEnd =
		            '</body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	//win.close();
		    },2000);
		},
		activeInvoiceTmp		: function(e){
			var Active;
			switch(e) {
				case 1: Active = banhji.view.invoiceForm1; break;
				case 2: Active = banhji.view.invoiceForm2; break;
				//case 3: Active = banhji.view.invoiceForm3; break;
				//case 4: Active = banhji.view.invoiceForm4; break;
				//case 5: Active = banhji.view.invoiceForm5; break;
				case 6: Active = banhji.view.invoiceForm6; break;
				case 7: Active = banhji.view.invoiceForm7; break;
				case 8: Active = banhji.view.invoiceForm8; break;
				case 9: Active = banhji.view.invoiceForm9; break;
				case 10: Active = banhji.view.invoiceForm10; break;
				case 11: Active = banhji.view.invoiceForm11; break;
				case 12: Active = banhji.view.invoiceForm12; break;
				case 13: Active = banhji.view.invoiceForm13; break;
				case 14: Active = banhji.view.invoiceForm31; break;
				case 15: Active = banhji.view.invoiceForm15; break;
				case 16: Active = banhji.view.invoiceForm25; break;
				case 17: Active = banhji.view.invoiceForm17; break;
				case 18: Active = banhji.view.invoiceForm18; break;
				case 19: Active = banhji.view.invoiceForm19; break;
				case 20: Active = banhji.view.invoiceForm20; break;
				case 21: Active = banhji.view.invoiceForm21; break;
				case 22: Active = banhji.view.invoiceForm22; break;
				case 23: Active = banhji.view.invoiceForm28; break;
				case 24: Active = banhji.view.invoiceForm29; break;
				case 25: Active = banhji.view.invoiceForm35; break;
				case 26: Active = banhji.view.invoiceForm39; break;
				case 27: Active = banhji.view.invoiceForm19; break;
				case 28: Active = banhji.view.invoiceForm25; break;
				case 29: Active = banhji.view.invoiceForm26; break;
				case 30: Active = banhji.view.invoiceForm25; break;
				case 31: Active = banhji.view.invoiceForm25; break;
				case 32: Active = banhji.view.invoiceForm27; break;
				case 33: Active = banhji.view.invoiceForm30; break;
				case 34: Active = banhji.view.invoiceForm32; break;
				case 35: Active = banhji.view.invoiceForm33; break;
				case 36: Active = banhji.view.invoiceForm34; break;
				case 37: Active = banhji.view.invoiceForm36; break;
				case 38: Active = banhji.view.invoiceForm37; break;
				case 39: Active = banhji.view.invoiceForm38; break;
				case 40: Active = banhji.view.invoiceForm40; break;
				case 41: Active = banhji.view.invoiceForm41; break;
				case 42: Active = banhji.view.invoiceForm42; break;
				case 43: Active = banhji.view.formCaritasExpense; break;
			}
			banhji.view.invoiceForm.showIn('#invFormContent', Active);
		},
		loadObjTemplate 		: function(id, transaction_id){
			var self = this, obj = this.get('obj');			
			this.txnTemplateDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.txnTemplateDS.view(), Index = parseInt(view[0].transaction_form_id), Active;
				obj.set("color", view[0].color);
				obj.set("title", view[0].title);
				self.activeInvoiceTmp(Index);
				self.lineDS.filter({ field:"transaction_id", value: transaction_id });
				setTimeout(function(){ 	
					var CountItemsRow = parseInt(self.lineDS.data().length); 
					var TotalRow = 15 - CountItemsRow;
					if(TotalRow > 0){
						for (var i = 1; i < TotalRow; i++) { 
							self.lineDS.add({				
								id			: '',
								description : '',
								quantity 	: '',
								price 		: '',
								amount 		: '',
								description : '',
								locale 		: '',
								item_prices : [],
								item_id 	: ''
					    	});	
					    }
					    $("#loading-inv").remove();
					}
				},6000);
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();		
			window.history.back();
		}
	});
	banhji.customerRecurring = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		contactDS  			: banhji.source.customerDS,
		contact_id 			: "",
		pageLoad 			: function(){
			this.search();
		},
		search 				: function(){
			var para = [],
			contact_id = this.get("contact_id");

			if(contact_id){
				para.push({ field:"contact_id", value: contact_id });
			}

			para.push({ field:"type", operator:"where_in", value:["Quote","Sale_Order","Customer_Deposit", "Commercial_Cash_Sale","Vat_Cash_Sale", "Cash_Sale", "Commercial_Invoice", "Vat_Invoice", "Invoice","GDN"] });
			para.push({ field:"is_recurring", value: 1 });
			
			this.dataSource.filter(para);

			this.set("contact_id", "");
		},
		edit 				: function(e){
			var data = e.data;
			
			switch(data.type) {
			    case "Quote":
			        banhji.quote.set("recurring", "edit");
			        banhji.router.navigate('/quote/' + data.id);
			        break;
			    case "Sale_Order":
			        banhji.saleOrder.set("recurring", "edit");
			        banhji.router.navigate('/sale_order/' + data.id);

			        break;
			    case "Customer_Deposit":
			        banhji.customerDeposit.set("recurring", "edit");
			        banhji.router.navigate('/customer_deposit/' + data.id);

			        break;
			    case "Commercial_Cash_Sale":
			        banhji.cashSale.set("recurring", "edit");
			        banhji.router.navigate('/cash_sale/' + data.id);

			        break;
			    case "Vat_Cash_Sale":
			        banhji.cashSale.set("recurring", "edit");
			        banhji.router.navigate('/cash_sale/' + data.id);

			        break;
			    case "Cash_Sale":
			        banhji.cashSale.set("recurring", "edit");
			        banhji.router.navigate('/cash_sale/' + data.id);

			        break;
			    case "Commercial_Invoice":
			        banhji.invoice.set("recurring", "edit");
			        banhji.router.navigate('/invoice/' + data.id);

			        break;
			    case "Vat_Invoice":
			        banhji.invoice.set("recurring", "edit");
			        banhji.router.navigate('/invoice/' + data.id);

			        break;
			    case "Invoice":
			        banhji.invoice.set("recurring", "edit");
			        banhji.router.navigate('/invoice/' + data.id);

			        break;
			    case "GDN":
			        banhji.gdn.set("recurring", "edit");
			        banhji.router.navigate('/gdn/' + data.id);

			        break;
			    default:
			        // default code block
			}
		},
		use 				: function(e){
			var data = e.data;
			
			switch(data.type) {
			    case "Quote":
			        banhji.quote.set("recurring", "use");
			        banhji.router.navigate('/quote/' + data.id);
			        break;
			    case "Sale_Order":
			        banhji.saleOrder.set("recurring", "use");
			        banhji.router.navigate('/sale_order/' + data.id);
			        break;
			    case "Customer_Deposit":
			        banhji.customerDeposit.set("recurring", "use");
			        banhji.router.navigate('/customer_deposit/' + data.id);

			        break;
			    case "Commercial_Cash_Sale":
			        banhji.cashSale.set("recurring", "use");
			        banhji.router.navigate('/cash_sale/' + data.id);

			        break;
			    case "Vat_Cash_Sale":
			        banhji.cashSale.set("recurring", "use");
			        banhji.router.navigate('/cash_sale/' + data.id);

			        break;
			    case "Cash_Sale":
			        banhji.cashSale.set("recurring", "use");
			        banhji.router.navigate('/cash_sale/' + data.id);

			        break;
			    case "Commercial_Invoice":
			        banhji.invoice.set("recurring", "use");
			        banhji.router.navigate('/invoice/' + data.id);

			        break;
			    case "Vat_Invoice":
			        banhji.invoice.set("recurring", "use");
			        banhji.router.navigate('/invoice/' + data.id);

			        break;
			    case "Invoice":
			        banhji.invoice.set("recurring", "use");
			        banhji.router.navigate('/invoice/' + data.id);

			        break;
			    case "GDN":
			        banhji.gdn.set("recurring", "use");
			        banhji.router.navigate('/gdn/' + data.id);

			        break;
			    default:
			        // default code block
			}
		},
		getContactName      : function(id){
            var raw = banhji.source.customerDS.get(id);
            if(raw){
                return raw.name;
            }else{
                return "";
            }
        }
	});

	//CUSTOMER REPORTS
	banhji.saleSummaryByCustomer =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/sale_summary_by_customer"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){ 
            		amount += value.amount;
            	});
            	
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.saleDetailByCustomer =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/sale_detail_by_customer"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){ 
            		$.each(value.line, function(ind, val){ 
	            		amount += val.amount;
	            	});
            	});
            	
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.customerTransactionList =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/customer_transaction_list"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalCustomer		: 0,
		totalSale 			: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.filter(para);
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.depositDetailByCustomer =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/deposit_detail_by_customer"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Contact
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){ 
            		$.each(value.line, function(ind, val){ 
	            		amount += val.amount;
	            	});
            	});
            	
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.saleSummaryByProduct =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/sale_summary_by_product"),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: {
		  		logic: "and",
			    filters: [
			    	{ field: "is_catalog", operator: "neq", value: 1 },
			        { field: "is_assembly", operator: "neq", value: 1 },
			      	{
			      		logic: "or",
					    filters: [
					      	{ field: "item_type_id", value: 1 },//Inventory For Sale
				      		{ field: "item_type_id", value: 4 }//Service
					    ]
					}
			    ]
			},
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { itemIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		avg_sale 			: 0,
		total_sale 			: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.itemIds.length>0){
            	var itemIds = [];
            	$.each(obj.itemIds, function(index, value){
            		itemIds.push(value);
            	});          	
	            para.push({ field:"item_id", operator:"where_in", value:itemIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var txnCount = 0, amount = 0;
            	$.each(view, function(index, value){ 
            		txnCount += value.txn_count;
            		amount += value.amount;
            	});

            	var avgSale = 0;
            	if(txnCount>0){
            		avgSale = amount/txnCount;
            	}
            	
            	self.set("avg_sale", kendo.toString(avgSale, "c2", banhji.locale));
            	self.set("total_sale", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.saleDetailByProduct =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/sale_detail_by_product"),
		itemDS  			: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
		  	filter: {
		  		logic: "and",
			    filters: [
			    	{ field: "is_catalog", operator: "neq", value: 1 },
			        { field: "is_assembly", operator: "neq", value: 1 },
			      	{
			      		logic: "or",
					    filters: [
					      	{ field: "item_type_id", value: 1 },//Inventory For Sale
				      		{ field: "item_type_id", value: 4 }//Service
					    ]
					}
			    ]
			},
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { itemIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		product_sale 		: 0,
		total_sale 			: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.itemIds.length>0){
            	var itemIds = [];
            	$.each(obj.itemIds, function(index, value){
            		itemIds.push(value);
            	});          	
	            para.push({ field:"item_id", operator:"where_in", value:itemIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", operator:"where_related_transaction", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var txnCount = 0, amount = 0;
            	$.each(view, function(index, value){
            		$.each(value.line, function(ind, val){ 
	            		txnCount++;
	            		amount += val.amount;
            		});
            	});

            	var avgSale = 0;
            	if(txnCount>0){
            		avgSale = amount/txnCount;
            	}
            	
            	self.set("product_sale", kendo.toString(avgSale, "c2", banhji.locale));
            	self.set("total_sale", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.customerBalanceSummary =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/balance_summary"),
		obj 				: null,
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalTxn 			: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [],
				as_of = this.get("as_of"),
        		displayDate = "";
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);

				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0, txnCount = 0;
            	$.each(view, function(index, value){
            		txnCount += value.txn_count;
            		balance += value.amount;
            	});

            	self.set("total_txn", kendo.toString(txnCount, "n0"));
            	self.set("total_balance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.customerBalanceDetail =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/balance_detail"),
		obj 				: null,
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalTxn 			: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);
				
				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para,
            	sort:[
            		{ field:"issued_date", dir:"asc" },
            		{ field:"number", operator:"order_by_related_contact", dir:"asc" }
            	]
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0, txnCount = 0;
            	$.each(view, function(index, value){
            		txnCount += value.line.length;
            		$.each(value.line, function(ind, val){
            			balance += val.amount;
            		});
            	});

            	self.set("total_txn", kendo.toString(txnCount, "n0"));
            	self.set("total_balance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.receivableAgingSummary =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/aging_summary"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: null,
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [],
				as_of = this.get("as_of"),
        		displayDate = "";
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);

				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0;
            	$.each(view, function(index, value){
            		balance += value.total;
            	});

            	self.set("totalBalance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.receivableAgingDetail =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/aging_detail"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: { customers: [] },
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";

	        //Customer
            if(obj.customers.length>0){
            	var customers = [];
            	$.each(obj.customers, function(index, value){
            		customers.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:customers });
	        }
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);
				
				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para,
            	sort:[
            		{ field:"issued_date", dir:"asc" },
            		{ field:"number", operator:"order_by_related_contact", dir:"asc" }
            	]
            }).then(function(){
            	var view = self.dataSource.view();

            	var balance = 0;
            	$.each(view, function(index, value){
            		$.each(value.line, function(ind, val){
            			balance += val.amount;
            		});
            	});

            	self.set("totalBalance", kendo.toString(balance, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.collectInvoice =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/collect_invoice"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		obj 				: { customers: [] },
		company 			: banhji.institute,
		as_of 				: new Date(),
		displayDate 		: "",
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				as_of = this.get("as_of"),
        		displayDate = "";

        	//Customer
            if(obj.customers.length>0){
            	var customers = [];
            	$.each(obj.customers, function(index, value){
            		customers.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:customers });
	        }
    	
        	if(as_of){
				as_of = new Date(as_of);
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);
				as_of.setDate(as_of.getDate()+1);

				para.push({ field:"issued_date <", value:kendo.toString(as_of, "yyyy-MM-dd") });
			}

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0;
            	$.each(view, function(index, value){
            		amount += value.amount;
            	});

            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.collectionReport =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/collection_report"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { customers: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		total_txn 			: 0,
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.customers.length>0){
            	var customers = [];
            	$.each(obj.customers, function(index, value){
            		customers.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:customers });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0, txn_count = 0;
            	$.each(view, function(index, value){            		
            		$.each(value.line, function(indexx, x){
            			txn_count++;
            			$.each(x.payments, function(indexy, y){
            				amount += y.amount;
            			});
            		});
            	});

            	self.set("total_txn", kendo.toString(txn_count, "n0"));
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.saleOrderList =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/sale_order_list"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		orderCount 			: 0,
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0, orderCount = 0;
            	$.each(view, function(index, value){ 
            		$.each(value.line, function(ind, val){
            			orderCount++; 
	            		amount += val.amount;
	            	});
            	});
            	
            	self.set("orderCount", kendo.toString(orderCount, "n0"));
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.invoiceList =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "sales/invoice_list"),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { contactIds: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		invoiceCount 		: 0,
		totalAmount 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Customer
            if(obj.contactIds.length>0){
            	var contactIds = [];
            	$.each(obj.contactIds, function(index, value){
            		contactIds.push(value);
            	});          	
	            para.push({ field:"contact_id", operator:"where_in", value:contactIds });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var amount = 0, invoiceCount = 0;
            	$.each(view, function(index, value){ 
            		$.each(value.line, function(ind, val){
            			invoiceCount++; 
	            		amount += val.amount;
	            	});
            	});
            	
            	self.set("invoiceCount", kendo.toString(invoiceCount, "n0"));
            	self.set("totalAmount", kendo.toString(amount, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.customerSale = kendo.observable({
		institute 			: banhji.institute,
		lang 				: langVM,
		locale 				: banhji.locale,
		statementDB 		: dataStore(apiUrl + "sales/statement"),	
		count 				: 0,
		total_avg 			: 0,
		saleNumber 			: 0,
		gpm 				: 0,
		total_sale 			: 0,
		companyName 		: null,
		startDate 			: "<?php echo date("d-m-y"); ?>",
		endDate				: new Date(),
		sorter				: '',
		openInvoice 		: 0,
		company 			: banhji.institute,		
		sortList			: banhji.source.sortList, 
		//line to sale summary
		saleSummary         : banhji.saleSummaryCustomer,
		detailSummary       : banhji.saleDetailCustomer,
		customerTransaction : banhji.customerTransactionList,
		depositDetail 		: banhji.depositDetailCustomer,
		summaryProductSale 	: banhji.saleSummaryProduct,
		detailCustomerSale 	: banhji.saleDetailProduct,
		saleJob  			: banhji.saleJob,
		saleOrderDB 		: banhji.saleOrderReport,
		saleDetail 			: banhji.saleDetail,
		receivableAging 	: banhji.receivableAging,
		receivableDetail 	: banhji.receivableDetail,
		listInvoicesCollect : banhji.listInvoicesCollect,
		collectReportDB 	: banhji.collectReport,
		invoiceListDB 		: banhji.invoiceList,
		stamentSummary 		: banhji.stamentSummary,
		// search button
		saleDetailSearch 	: function() {
			this.detailSale.filter({
				logic: 'segment',
				filters: [
					{field: "id", "operator": "segment", value: 9},
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		},
		displayDateStart    : function() {
			return kendo.toString(new Date(this.get('startDate')), 'dd-MM-yyyy');
		},
		displayDateEnd    : function() {
			return kendo.toString(new Date(this.get('endDate')), 'dd-MM-yyyy');
		},
		trnxSearch 			: function() {},
		depositDetailSearch : function() {},
		summaryProductSearch: function() {},
		detailProductSearch : function() {},
		saleJobSearch 		: function() {},
		saleOrderSearch 	: function() {},
		balanaceSearch 		: function() {},
		balanceDetailSearch : function() {},
		agingSummarySearch  : function() {},
		agingDetailSearch   : function() {},
		collectingInvSearch : function() {},
		collectedInvSearch  : function() {},
		invoiceListSearch 	: function() {},
		customerListSearch 	: function() {},
		dateMax 			: function(e) {
			$('#edate').css('width', '160px');
			var edate = $('#edate').kendoDatePicker().data("kendoDatePicker");
			edate.min(e.sender.value());
		},
		dateMin 			: function(e) {
			$('#sdate').css('width', '160px');
			var sdate = $('#sdate').kendoDatePicker().data("kendoDatePicker");
			sdate.max(e.sender.value());
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=900, height=700'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="<?php echo base_url(); ?>assets/responsive.css" rel="stylesheet" >' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            '*{  } html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> '+
		            '@page { size: landscape; margin:0mm; }'+
		            '.saleSummaryCustomer .total-customer, .saleSummaryCustomer .total-sale { '+
		            	'background-color: #DDEBF7!important; -webkit-print-color-adjust:exact; }'+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed  tr th { '+
		            	'background-color: #1E4E78!important;-webkit-print-color-adjust:exact;}'+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ '+
		            	'color: #fff!important; }'+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td {'+
		              	'background-color: #fff!important; -webkit-print-color-adjust:exact;} '+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed tr td { '+
		            	'background-color: #F2F2F2!important;-webkit-print-color-adjust:exact; }'+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ '+
		            	'color: #fff!important; }'+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td {'+
		              	'background-color: #fff!important; -webkit-print-color-adjust:exact;} '+
		            '.saleSummaryCustomer .table.table-borderless.table-condensed tr td { '+
		            	'background-color: #F2F2F2!important;-webkit-print-color-adjust:exact; }'+
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ '+
		            	'color: #fff!important; }'+		            
		            '</style>' +
		            '</head>' +
		            '<body><div id="example" class="k-content saleSummaryCustomer" style="padding: 30px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>'; 
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcelSSC 		: function(){
			console.log(banhji.saleSummaryCustomer.exArray);
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Sale Summary by Customer",
	              rows: banhji.saleSummaryCustomer.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "SaleSummaryCustomer.xlsx"});
		},
		ExportExcelSDC 		: function(){
			console.log(banhji.saleDetailCustomer.exArray);
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Sale Detail by Customer",
	              rows: banhji.saleDetailCustomer.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "SaleDetailCustomer.xlsx"});
		},
		ExportExcelLIC 		: function(){
			console.log(banhji.saleDetailCustomer.exArray);
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "List of Invoices to be Collected",
	              rows: banhji.listInvoicesCollect.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "ListInvoicesCollect.xlsx"});
		},
		ExportExcelSSP 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Sale Summary by Products/Services",
	              rows: banhji.saleSummaryProduct.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "saleSummaryProduct.xlsx"});
		},
		dateChange 			: function(){
			// var strDate = "";

			// 	if(this.startDate && this.endDate){
			// 		strDate = "From " + kendo.toString(this.startDate, "dd-MM-yyyy") + " To " + kendo.toString(this.endDate, "dd-MM-yyyy");
			// 	}else if(this.startDate){
			// 		strDate = "On " + kendo.toString(this.startDate,"dd-MM-yyyy");
			// 	}else if(this.endDate){
			// 		strDate = "As Of " + kendo.toString(this.endDate,"dd-MM-yyyy");
			// 	}else{
			// 		strDate = "";
			// 	}

			var today = new Date(),
			day = today.getDate();
        	sdate = "",
        	edate = "",
        	value = this.get('sorter');

			switch(value){
			case "today":
				sdate = today;

			  	break;
			case "week":
				var first = new Date(today.getTime() - 60*60*24* day*1000),
				last = new Date(today.getTime() + 60*60*24* day*1000);

				sdate = first;
				edate = last;

			  	break;
			case "month":
				var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
				edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

			  	break;
			case "year":
			  	var sdate = new Date(today.getFullYear(), 0, 1),
			  	edate = new Date(today.getFullYear(), 11, 31);

			  	break;
			default:

			}

			this.set("startDate", sdate);
			this.set("endDate", edate);
			// start.value(sdate);
			// end.value(edate);

			// start.max(end.value());
		   //      	end.min(start.value());

		   //      	dateChanges();
		   //          });

		   //          start.max(end.value());
		   //          end.min(start.value());
		}
	});


	/*************************
	*   Sale Section   *
	**************************/
	banhji.saleDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/customer_dashboard_summary"),
		topCustomerDS 		: dataStore(apiUrl + "dashboards/top_customer"),
		topARDS 			: dataStore(apiUrl + "dashboards/top_ar"),
		topProductDS 		: dataStore(apiUrl + "dashboards/top_sale_product"),		
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		quote 				: 0,
		quote_customer 		: 0,
		quote_open 			: 0,
		so 					: 0,
		so_customer 		: 0,
		so_open 			: 0,
		product 			: 0,
		product_quote 		: 0,
		product_so 			: 0,
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.graphDS.read();

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("sale", kendo.toString(view[0].sale, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
				self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
				self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));
			});

			this.topCustomerDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			});

			this.topARDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});

			this.topProductDS.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related_transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});										
		}
	});
	banhji.saleCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		contactDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field:"parent_id", operator:"where_related_contact_type", value:1 },
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		contactTypeDS 			: new kendo.data.DataSource({
		  	data: banhji.source.contactTypeList,
		  	filter: { field:"parent_id", value: 1 }//Customer
		}),
		noteDS 				: dataStore(apiUrl + 'notes'),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		summaryDS 			: dataStore(apiUrl + "transactions"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: {id:0},
		note 				: "",
		searchText 			: "",
		contact_type_id 	: null,
		currency_id 		: 0,
		quote 				: 0,
		so 					: 0,
		currencyCode 		: "",
		user_id 			: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.loadObj(id);
			}

			//Refresh
			if(this.contactDS.total()>0){
				this.contactDS.fetch();
				this.searchTransaction();
				this.loadSummary();
			}
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		setCurrencyCode 	: function(){
			var code = "", obj = this.get("obj");

			$.each(banhji.source.currencyDS.data(), function(index, value){				
				if(value.locale == obj.locale){
					code = value.code;					

					return false;					
				}
			});

			this.set("currencyCode", code);
		},
		loadObj 			: function(id){
			var self = this;

			this.contactDS.query({
				filter: { field:"id", value:id},
				page:1,
				pageSize:100
			}).then(function(){
				var view = self.contactDS.view();

				if(view.length>0){
					self.set("obj", view[0]);
					self.loadData();
				}
			});
		},
		loadData 			: function(){
			var obj = this.get("obj");

			this.searchTransaction();
			this.loadSummary(obj.id);
			this.setCurrencyCode();

			this.attachmentDS.filter({ field:"contact_id", value: obj.id });
			this.noteDS.query({
				filter: { field:"contact_id", value: obj.id },
				sort: { field:"noted_date", dir:"desc" },
				page: 1,
				pageSize: 10
			});
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
			if(obj!==null){
		        // Check the extension of each file and abort the upload if it is not .jpg
		        $.each(files, function(index, value){
		            if (value.extension.toLowerCase() === ".jpg"
		            	|| value.extension.toLowerCase() === ".jpeg"
		            	|| value.extension.toLowerCase() === ".tiff"
		            	|| value.extension.toLowerCase() === ".png" 
		            	|| value.extension.toLowerCase() === ".gif"
		            	|| value.extension.toLowerCase() === ".pdf"){

		            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

		            	self.attachmentDS.add({
		            		user_id 		: self.get("user_id"),
		            		contact_id 		: obj.id,
		            		type 			: "Contact",
		            		name 			: value.name,
		            		description 	: "",
		            		key 			: key,
		            		url 			: banhji.s3 + key,
		            		size 			: value.size,
		            		created_at 		: new Date(),
		            		file 			: value.rawFile
		            	});
		            }else{
		            	alert("This type of file is not allowed to attach.");
		            }
		        });
	    	}else{
	    		alert("Please select a customer!");
	    	}
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    		this.attachmentDS.sync();
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
	    //Summary
		loadContact 		: function(id){
			var self = this;
			
			this.contactDS.query({
			  	filter:[
			  		{ field:"id", value:id }
			  	],
			  	page: 1,
			  	pageSize: 50
			}).then(function(e) {
			    var view = self.contactDS.data();
			    
			    if(view.length>0){
			    	self.set("obj", view[0]);
			    	self.loadData();
			    }
			});
		},
		loadSummary 		: function(id){
			var self = this, obj = this.get("obj");

			this.summaryDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Quote","Sale_Order"] },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 1000
			}).then(function(){
				var view = self.summaryDS.view(),
				quote = 0, so = 0;

				$.each(view, function(index, value){
					if(value.type=="Quote"){
						quote++;
					}else{
						so++;
					}									
				});
				
				self.set("quote", kendo.toString(quote, "n0"));
				self.set("so", kendo.toString(so, "n0"));
			});
		},
		loadQuote 			: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"Quote" },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: [
			  		{ field: "issued_date", dir: "desc" },
			  		{ field: "id", dir: "desc" }
			  	],
			  	page: 1,
			  	pageSize: 10
			});
		},
		loadSO 				: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"Sale_Order" }
			  	],
			  	sort: [
			  		{ field: "issued_date", dir: "desc" },
			  		{ field: "id", dir: "desc" }
			  	],
			  	page: 1,
			  	pageSize: 10
			});
		},
		selectedRow			: function(e){
			var data = e.data;
			
			this.set("obj", data);
			this.loadData();
		},
		//Search
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
      		searchText = this.get("searchText"),
      		contact_type_id = this.get("contact_type_id");
      		
      		if(searchText){
      			var textParts = searchText.replace(/([a-z]+)/i, "$1 ").split(/[^0-9a-z]+/ig);

      			para.push(
      				{ field: "abbr", value: textParts[0] },
      				{ field: "number", value: textParts[1] },
					{ field: "name", operator: "or_like", value: searchText }
      			);
      		}

      		if(contact_type_id){
      			para.push({ field: "contact_type_id", value: contact_type_id });
      		}else{
      			para.push({ field: "parent_id", operator:"where_related_contact_type", value: 1 });
      		}

      		this.contactDS.filter(para);
			
			//Clear search filters
      		self.set("searchText", "");
      		self.set("contact_type_id", 0);
		},
		searchTransaction	: function(){
			var self = this,
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd"),
        		para = [], obj = this.get("obj");

        	if(obj!==null){
        		para.push({ field:"contact_id", value: obj.id });
        	
	        	//Dates
	        	if(start && end){
	            	para.push({ field:"issued_date >=", value: start });
	            	para.push({ field:"issued_date <=", value: end });
	            }else if(start){
	            	para.push({ field:"issued_date", value: start });
	            }else if(end){
	            	para.push({ field:"issued_date <=", value: end });
	            }else{
	            	
	            }

	            para.push({ field:"type", operator:"where_in", value: ["Quote","Sale_Order"] });

	            this.transactionDS.query({
	            	filter: para,
	            	sort: [
				  		{ field: "issued_date", dir: "desc" },
				  		{ field: "id", dir: "desc" }
				  	],
	            	page: 1,
	            	pageSize: 10
	            });
	        }            
		},
		//Links	
		goEdit 		 		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/customer/'+obj.id);
		},
		goQuote				: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/quote');
			banhji.quote.loadContact(obj.id);
		},
		goDeposit			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/customer_deposit');
			banhji.customerDeposit.loadContact(obj.id);
		},
		goSaleOrder			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/sale_order');
			banhji.saleOrder.loadContact(obj.id);
		},
		//Note
		saveNoteEnter 		: function(e){
			e.preventDefault();
			this.saveNote();
		},
		saveNote 			: function(){
			var obj = this.get("obj");

			if(obj!==null && this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: obj.id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});

				this.noteDS.sync();
				this.set("note", "");					
			}else{
				alert("Please select a customer and Memo is required");
			}
		}
	});
	banhji.sale = kendo.observable({
		lang 				: langVM,
		dataSource  		: dataStore(apiUrl + 'items'),
		txnDS  				: dataStore(apiUrl + 'item_lines'),
		quoteLineDS  		: banhji.quote.lineDS,
		soLineDS  			: banhji.saleOrder.lineDS,
		categoryDS 			: dataStore(apiUrl + 'categories'),
		obj 				: null,
		searchText 			: "",
		isFavorite 			: false,
		on_hand 			: 0,
		on_so 				: 0,
		on_po 				: 0,
		user_id 			: banhji.source.user_id,
		pageLoad 			: function(){
			if(this.categoryDS.total()==0){
				this.categoryDS.filter({ field:"item_type_id", operator:"where_in", value:[1,4] });
				this.search();
			}
		},
		search 				: function(){
			var para = [], searchText = this.get("searchText");

			if(searchText){
      			var textParts = searchText.replace(/([a-z]+)/i, "$1 ").split(/[^0-9a-z]+/ig);

      			para.push(
      				{ field: "abbr", value: textParts[0] },
      				{ field: "number", value: textParts[1] },
					{ field: "name", operator: "or_like", value: searchText }
      			);
      		}

      		if(this.get("isFavorite")){
      			para.push({ field:"favorite", value:true });
      			this.set("isFavorite", false);
      		}

			para.push({ field:"item_type_id", operator:"where_in", value:[1,4] });

			this.dataSource.query({
				filter: para,
				page:1,
				pageSize:100
			});
		},
		favorite 			: function(){
			this.set("isFavorite", true);
			this.search();
		},
		selectedType 		: function(e){
			var data = e.data;

			this.dataSource.query({
				filter: { field:"category_id", value:data.id },
				page:1,
				pageSize:100
			});
		},
		addQuote 			: function(e){
			var data = e.data, price = 0;

			if(data.item_prices.length>0){
				price = data.item_prices[0].price;
			}

			var isExisting = false;
			$.each(banhji.quote.lineDS.data(), function(index, value){
				if(value.item_id==data.id){
					isExisting = true;
					value.set("quantity", value.quantity+1);

					return false;
				}
			});

			if(isExisting==false){
				banhji.quote.lineDS.add({
					transaction_id 		: 0,
					tax_item_id 		: "",
					item_id 			: data.id,				
					measurement_id 		: 0,				
					description 		: data.sale_description,				
					quantity 	 		: 1,
					price 				: price,												
					amount 				: price,
					rate				: 1,
					locale				: banhji.locale,
					movement 			: -1,

					item_prices 		: data.item_prices
				});
			}			
		},
		addSO 				: function(e){
			var data = e.data, price = 0;

			if(data.item_prices.length>0){
				price = data.item_prices[0].price;
			}

			var isExisting = false;
			$.each(banhji.quote.lineDS.data(), function(index, value){
				if(value.item_id==data.id){
					isExisting = true;
					value.set("quantity", value.quantity+1);

					return false;
				}
			});

			if(isExisting==false){
				banhji.saleOrder.lineDS.add({
					transaction_id 		: 0,
					tax_item_id 		: "",
					item_id 			: data.id,				
					measurement_id 		: 0,				
					description 		: data.sale_description,				
					quantity 	 		: 1,
					price 				: price,												
					amount 				: price,
					rate				: 1,
					locale				: banhji.locale,
					movement 			: -1,

					item_prices 		: data.item_prices
				});
			}			
		},
		loadDetail			: function(e){
			var data = e.data;
			this.set("obj", data);
			this.loadData();
		},
		loadData 			: function(){
			var self = this, obj = this.get("obj"), on_so = 0, on_po = 0;

			this.txnDS.query({
				filter:[
					{ field:"item_id", value:obj.id },
					{ field:"type", operator:"where_related_transaction", value:"Purchase_Order" },
					{ field:"status", operator:"where_related_transaction", value:0 },
					{ field:"is_recurring", operator:"where_related_transaction", value:0 },
					{ field:"deleted", operator:"where_related_transaction", value:0 }
				],
				page:1,
				pageSize:1000
			}).then(function(){
				var view = self.txnDS.view();

				$.each(view, function(index, value){
					on_po += value.quantity;
				});

				self.set("on_po", on_po);
			});

			this.txnDS.query({
				filter:[
					{ field:"item_id", value:obj.id },
					{ field:"type", operator:"where_related_transaction", value:"Sale_Order" },
					{ field:"status", operator:"where_related_transaction", value:0 },
					{ field:"is_recurring", operator:"where_related_transaction", value:0 },
					{ field:"deleted", operator:"where_related_transaction", value:0 }
				],
				page:1,
				pageSize:1000
			}).then(function(){
				var view = self.txnDS.view();

				$.each(view, function(index, value){
					on_so += value.quantity;
				});
				
				self.set("on_so", on_so);
			});
		},
		prevItem 			: function(){
			var obj = this.get("obj"), 
			index = this.dataSource.indexOf(obj);

			index--;

	        if (index === -1) {
	        	
	           	index = this.dataSource.data().length - 1;
	        }

	        var data = this.dataSource.at(index);
			this.set("obj", data);
			this.loadData();
		},
		nextItem 			: function(){
			var obj = this.get("obj"), 
			index = this.dataSource.indexOf(obj);

			index++;

			if (index === this.dataSource.data().length) {
	           	index = 0;
	        }

	        var data = this.dataSource.at(index);
			this.set("obj", data);
			this.loadData();
		}
	});
	banhji.saleRecurring = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		contactDS  			: banhji.source.customerDS,
		contact_id 			: "",
		pageLoad 			: function(){
			if(this.dataSource.total>0){
				this.search();
			}
		},
		search 				: function(){
			var contact_id = this.get("contact_id");

			if(contact_id){
				this.dataSource.filter([
					{ field:"type", operator:"where_in", value:["Quote","Sale_Order"] },
					{ field:"contact_id", value: contact_id },
					{ field:"is_recurring", value: 1 }
				]);
			}

			this.set("contact_id", "");
		}
	});



	/*************************
	*	Cash Section   *
	**************************/
	banhji.cashDashboard = kendo.observable({
		lang 				: langVM,
		topCashDS 	: dataStore(apiUrl + 'dashboards/top_cash'),
		topAdvaDS 	: dataStore(apiUrl + 'dashboards/top_advance'),
		topExpsDS 	: dataStore(apiUrl + 'dashboards/top_expense'),
		graphDS 	: banhji.index.graphDS,
		balance 	: 0,
		open 		: 0,
		overDue 	: 0,
		totalAdvance: 0,
		cashACNumber: 0,
		ar 			: 0,
		ar_open 	: 0,
		ar_customer : 0
	});
	banhji.cashCenter = kendo.observable({
		lang 				: langVM,
		dataStore 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		summaryDS  			: dataStore(apiUrl + 'centers/accounting_summary'),
		transactionDS  		: dataStore(apiUrl + 'centers/accounting_txn'),
		accountTypeDS 		: banhji.source.accountTypeDS,
		balance 			: 0,
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		searchText 			: null,
		totalTxn 			: 0,
		sorterChanges: function(event){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	value = event.sender.selectedIndex;

			switch(value){
				case 1:								
					banhji.cashCenter.set('sdate', today);
					banhji.cashCenter.set('edate', today);
													  					
				  	break;
				case 2:			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					banhji.cashCenter.set('sdate', new Date(today.setDate(first)));
					banhji.cashCenter.set('edate', new Date(today.setDate(last)));						
					
				  	break;
				case 3:							  	
					banhji.cashCenter.set('sdate', new Date(today.getFullYear(), today.getMonth(), 1));
					banhji.cashCenter.set('edate', new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case 4:				
				  	banhji.cashCenter.set('edate', new Date(today.getFullYear(), 0, 1));
				  	banhji.cashCenter.set('edate', new Date(today.getFullYear(), 11, 31));

				  	break;									  
			}
		},
		searchTransaction: function() {
			var self = this, obj = this.get("obj");
			var para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");
			this.set('balance', 'Loading');
			var para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");
			this.set('balance', 'Loading');
			this.summaryDS.query({
			  	filter: [
			  		{ field:"account_id", value: obj.id },
			  		{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(this.get("sdate"), 'yyyy-MM-dd') },
			  		{ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(this.get("edate"), 'yyyy-MM-dd') }
			  	],
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();				
				
				if(view.length>0){
					banhji.cashCenter.set("balance", kendo.toString(view[0].balance, view[0].locale=="km-KH"?"c0":"c", view[0].locale));
				}else{
					banhji.cashCenter.set("balance", 0);
				}
			});
			this.transactionDS.query({
			  	filter: [
			  		{ field:"account_id", value: obj.id },
			  		{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(this.get("sdate"), 'yyyy-MM-dd') },
			  		{ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(this.get("edate"), 'yyyy-MM-dd') }
			  	],
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();				
				
				if(view.length>0){
					banhji.cashCenter.set('totalTxn', banhji.cashCenter.transactionDS.data().length);
				}else{
					banhji.cashCenter.set('totalTxn', 0);
				}
			});
		},
		goCashTransaction: function() {
			banhji.router.navigate('/cash_transaction');
		},
		goCashReceipt: function() {
			banhji.router.navigate('/cash_receipt');
		},
		goCashPayment: function() {
			banhji.router.navigate('/cash_payment');
		},
		goCashAdvance: function() {
			banhji.router.navigate('/cash_advance');
		},
		goExpense: function() {
			banhji.router.navigate('/expense');
		},
		goExchange: function() {
			banhji.router.navigate('/currency_rate');
		},
		typeName: null,
		nature: null,
		goEdit 				: function(){
			var obj = this.get("obj");
			banhji.router.navigate('/account/'+obj.id);
		},
		selectedRow	: function(e) {
			this.set('obj', e.data);
			var data = e.data,

			sub = this.dataStore.get(data.sub_of_id),
			type = this.accountTypeDS.get(data.account_type_id);
			
			if(data.sub_of_id>0){
				this.set("subName", sub.name);
			}else{
				this.set("subName", "");
			}

			// this.set("typeName", type.name);
			this.set("nature", type.nature);

			// this.set("obj", data);
			// this.loadSummary();
			// this.searchTransaction();
			//
			
			var self = this, obj = this.get("obj");
			var para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");
			this.set('balance', 'Loading');
			this.summaryDS.query({
			  	filter: [
			  		{ field:"account_id", value: obj.id }
			  	],
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();				
				
				if(view.length>0){
					self.set("balance", kendo.toString(view[0].balance, view[0].locale=="km-KH"?"c0":"c", view[0].locale));
				}else{
					self.set("balance", 0);
				}
			});

        	if(obj.id){
        		para.push({ field:"account_id", value: obj.id });
        	}

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: start });
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: end });            	            	
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related_transaction", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: end });
            }else{
            	
            }                        

            this.transactionDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 100
            }).then(function(){
            	banhji.cashCenter.set('totalTxn', banhji.cashCenter.transactionDS.data().length);
            });
		},
		search 		: function() {
			var isNumber =  /^\d+$/.test(this.get('searchText'));

			if(isNumber) {
				this.dataStore.filter([
					{field: "number", value: this.get('searchText')},
					{field: "account_type_id", value: 10}
				]);
			} else {
				this.dataStore.filter([
					{field: "name", operator: "like", value: this.get('searchText')},
					{field: "account_type_id", value: 10}
				]);
			}
		}
	});
	banhji.cashier = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		paymentByCashierDS	: dataStore(apiUrl + "transactions"),
		contactDS 			: dataStore(apiUrl + "contacts"),
		invoiceDS 			: dataStore(apiUrl + "transactions"),
		updateInvoiceDS 	: dataStore(apiUrl + "transactions"),
		transactionDS 		: dataStore(apiUrl + "transactions"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),
		invoiceList 		: [],
		customer 			: null,		
		total_customer 		: 0,
		total_payment 		: kendo.toString(0,"c0", "km-KH"),
		//Payment		
		payment_date		: new Date(),
		payment_method_id	: 1,
		account_id 	 		: 2,
		check_no			: "",
		cashier				: banhji.source.user_id,
		discount 			: 0,
		fine 				: 0,
		pay_amount  		: kendo.toString(0,"c0", "km-KH"),
		receive_amount  	: kendo.toString(0,"c0", "km-KH"),
		remain				: kendo.toString(0,"c0", "km-KH"),
		pageLoad 			: function(id){
			var self = this;

			if(id){
				this.set("invoiceList", []);

				this.invoiceDS.query({
					filter: { field:"id", value: id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.invoiceDS.view(),
					fullIdName = view[0].contact[0].number +" "+ view[0].contact[0].surname +" "+ view[0].contact[0].name;

					if(view[0].contact[0].contact_type_id==5 && view[0].contact[0].contact_type_id==6 && view[0].contact[0].contact_type_id==7){
						fullIdName = view[0].contact[0].number +" "+ view[0].contact[0].company;
					}

					self.loadInvoice(view[0].contact_id, fullIdName);
				});
			}else{
				this.loadPaymentByCashier();
			}			
		},
		total 				: function() {
	        var sum = 0;

	        $.each(this.invoiceList, function(index, value) {
	        	sum += kendo.parseInt(value.amount);
	        });

	        return kendo.toString(sum, "c0", "km-KH");
	    },
	    loadContact 		: function(id){
			var self = this;

			this.set("invoiceList", []);			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				fullIdName = view[0].number +" "+ view[0].fullname;

				self.get("customer", view[0]);
				self.loadInvoice(id, fullIdName, view[0].account_id);		    										
			});
		},		
		loadPaymentByCashier: function(){
			var self = this;

			this.paymentByCashierDS.query({
				filter: [
					{ field:"user_id", value: this.get("cashier") },
					{ field:"issued_date", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				]
			}).then(function(e){
				var view = self.paymentByCashierDS.view(),
				contactIDList = {}, sum = 0, counter = 0;

				if(view.length>0){
					$.each(view, function(index, value){
						var contact_id = value.contact_id;

						if(contactIDList[contact_id]===undefined){
							contactIDList[contact_id]={"id": contact_id};
							counter++;
						}

						sum += value.amount / value.rate;
					});

					self.set("total_customer", counter);
			    	self.set("total_payment", kendo.toString(sum, "c0", banhji.institute.locale));
				}else{						    	
			    	self.set("total_customer", 0);
			    	self.set("total_payment", 0);
		    	}
			});
		},		
		loadInvoice 		: function(contact_id, fullIdName, ar_id){
			var self = this;

			this.invoiceDS.query({
				filter: [
					{ field:"contact_id", value: contact_id },
		    		{ field:"status", operator:"where_in", value: [0,2] },
		    		{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice", "Electricity_Invoice", "Water_Invoice"] }
				],
				page: 1,
				pageSize: 50	  	
			}).then(function(e) {
			    var view = self.invoiceDS.view();
			    
			    $.each(view, function(index, value){
		    		var result = $.grep(self.get("invoiceList"), function(e){ return e.id == value.id; });

		    		if (result.length == 0) {
					  	// not found
					  	var remainAmount = kendo.parseFloat(value.amount) - kendo.parseFloat(value.amount_paid);
					  	
					  	self.get("invoiceList").push({				
							id 				: value.id,
							isPay 			: true,				
							issued_date 	: value.issued_date,
							fullname 		: fullIdName,							
							number			: value.number,										
							amount 			: remainAmount,
							pay_amount 		: remainAmount,
							rate 			: value.rate,
							locale 			: value.locale,
							contact_id 		: value.contact_id,
							ar_id 			: ar_id,							
							company_id 		: value.company_id
 						});
						self.change();
						self.autoIncreaseNo();
					} else if (result.length == 1) {
					  	// access the foo property using result[0].foo					  
					} else {
					  	// multiple items found					  
					}		    					    		
		    	});		    	
			});			
		},						
		autoIncreaseNo 		: function(){
			$(".sno").each(function(index,element){                 
			   $(element).text(index + 1); 
			});
		},
		change				: function(){
			var total = 0;		
		    var tpay = 0;
		    $.each(this.get("invoiceList"), function(index, value){
		    	total += kendo.parseFloat(value.amount)/kendo.parseFloat(value.rate);
		    	tpay += kendo.parseFloat(value.pay_amount)/kendo.parseFloat(value.rate);
		    });

		    this.set("pay_amount", kendo.toString(tpay, "c0", banhji.institute.locale));
	    	
	    	var receive_amount = tpay + kendo.parseFloat(this.get("fine"));
			this.set("receive_amount", kendo.toString(receive_amount, "c0", banhji.institute.locale));

	    	var remain = (total + kendo.parseFloat(this.get("fine"))) - (tpay + kendo.parseFloat(this.get("discount")));
	    	this.set("remain", kendo.toString(remain, "c0", banhji.institute.locale));
		},	
		remove 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var item = e.data,
		        index = this.get("invoiceList").indexOf(item);
		        this.get("invoiceList").splice(index, 1);
		        this.change();
		        this.autoIncreaseNo();
	    	}	    	
	    },
	    checkPay 			: function(e){
	    	e.preventDefault();

	    	var d = e.data;
	    	var target = e.currentTarget;

	    	if(target.checked){
	    		d.set("pay_amount", d.amount);
	    	}else{
	    		d.set("pay_amount", 0);
	    	}
	    	this.change();
	    },
	    transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		save 		 		: function(){
			var self = this, data = this.get("invoiceList"), idList = {};
			
			if(data.length>0){
				$.each(data, function(index, value){
					if(kendo.parseFloat(value.pay_amount)>0 && value.isPay){
						// var contact_id = value.contact_id;						
						// if(idList[contact_id]===undefined){
						// 	idList[contact_id]={"id": contact_id, "amount": value.pay_amount};						
						// }else{											
						// 	if(idList[contact_id].id===contact_id){
						// 		idList[contact_id].amount += value.pay_amount;
						// 	}else{
						// 		idList[contact_id]={"id": contact_id, "amount": value.pay_amount};
						// 	}
						// }

						self.dataSource.add({							
							contact_id 			: value.contact_id,
							user_id 			: self.get("cashier"),													
							reference_id		: value.id,														
							payment_method_id	: self.get("payment_method_id"),
							account_id			: self.get("account_id"),
							check_no			: self.get("check_no"),							
							type 				: "Cash_Receipt",
							amount 				: value.pay_amount,
							fine 				: self.get("fine"),
							discount 			: self.get("discount"),
							rate 				: value.rate,
							locale 				: value.locale,
							issued_date			: kendo.toString(self.get("payment_date"), "yyyy-MM-dd"),
							payment_date		: kendo.toString(self.get("payment_date"), "yyyy-MM-dd"),
							is_journal 			: 1
						});																		
					}
				});							

				this.transactionSync()
				.then(function(data){
					//Start journal
					//Cash on Dr
					self.journalLineDS.add({					
						transaction_id 		: data[0].id,
						account_id 			: data[0].account_id,				
						contact_id 			: data[0].contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: obj.amount,
						cr 					: 0,				
						rate				: data[0].rate,
						locale				: data[0].locale
					});

					//A/R on Cr					
					self.journalLineDS.add({					
						transaction_id 		: data[0].id,
						account_id 			: value.id,				
						contact_id 			: data[0].contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: data[0].rate,
						locale				: data[0].locale
					});										
					
					self.journalLineDS.sync();																						
				}).then(function(){					
					self.clear();
					self.loadPaymentByCashier();
				});				
			}
		},					
		clear 				: function() {
			this.set("check_no", "");			
			this.set("discount", 0);
			this.set("fine", 0);		
			this.set("pay_amount", kendo.toString(0,"c0", "km-KH"));
			this.set("receive_amount", kendo.toString(0,"c0", "km-KH"));
			this.set("remain", kendo.toString(0,"c0", "km-KH"));

			this.set("invoiceList", []);

			this.updateInvoiceDS.data([]);
			this.dataSource.data([]);							
		}
	});
	banhji.reconcile = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "reconciles"),
		existingDS 				: dataStore(apiUrl + "reconciles"),
		prevAmountDS			: dataStore(apiUrl + "reconciles"),
		reconcileItemDS			: dataStore(apiUrl + "reconciles/item"),
		paymentDS 				: dataStore(apiUrl + "payments"),
		denominationList 		: [
			{ 'denomination':1, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':2, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':5, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':10, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':20, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':50, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':100, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':200, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':500, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':1000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':2000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':5000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':10000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':20000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':50000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
			{ 'denomination':100000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' }
		],
		reconcileItemList 		: [],
		obj 					: null,
		searchDate 				: new Date(),
		isEdit 					: false,
		isExisting 				: false,
		cashier 				: banhji.source.user_id,
		cashier_name 			: banhji.userManagement.getLogin() === null ? "" : banhji.userManagement.getLogin().username,
		pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadReconcile(id);
			}else{				
				this.set("isEdit", false);				
				this.addEmpty();
				this.loadPayment();
				this.loadPreviousAmount();

				this.checkExisting();
			}
		},
		str_date 				: function(){
			var strDate = "", obj = this.get("obj");

			if(obj){
				strDate = kendo.toString(new Date(obj.reconciled_date), "dd-MM-yyyy");
			}

			return strDate;
		},		
		loadReconcile 			: function(id){
			var self = this, obj = this.get("obj");

			this.dataSource.query({
				filter: { field: "id" , value: id },
				page: 1,
				pageSize: 50
			}).then(function(){
				var view = self.dataSource.view();

				self.set("obj", view[0]);
				self.reconcileItemDS.filter({ field:"reconcile_id", value: id }); });
		},
		loadPreviousAmount 			: function(){
			var self = this, obj = this.get("obj");

			this.prevAmountDS.query({
				filter: [
					{ field: "cashier", value: this.get("cashier") },										
					{ field: "reconciled_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				],				
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.prevAmountDS.view();

				obj.set("previous_amount", view[0].balance);
			});			
		},
		loadPayment 			: function(){
			var self = this, obj = this.get("obj");

			this.paymentDS.query({
				filter: [
					{ field: "cashier", value: this.get("cashier") },
					{ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] },						
					{ field: "payment_date", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				],
				aggregate: [
					{ field: "amount", aggregate: "sum" }
				],
				page: 1,
				pageSize: 50
			}).then(function(){
				var results = self.paymentDS.aggregates().amount;

				obj.set("received_amount", results.sum);
			});			
		},
		checkExisting 			: function(){
			var self = this;

			this.existingDS.query({
				filter: [
					{ field: "cashier", value: this.get("cashier") },
					{ field: "reconciled_date", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				],
				page: 1,
				pageSize: 50
			}).then(function(){
				var view = self.existingDS.view();

				if(view.length>0){
					self.set("isExisting", true);
				}else{
					self.set("isExisting", false);
				}
			});
		},
		change					: function(){
			var totalD = 0;
			var totalR = 0;
			var totalDT = 0;
			var totalRT = 0;

			for(var i=0; i < this.denominationList.length; i++){
				var data = this.denominationList[i];
				var dem = kendo.parseFloat(data.denomination);

		    	totalD += kendo.parseFloat(data.qty_usd) * dem;
		    	totalR += kendo.parseFloat(data.qty_khr) * dem;

		    	totalDT += kendo.parseFloat(data.qty_usd_transfer) * dem;
		    	totalRT += kendo.parseFloat(data.qty_khr_transfer) * dem;	    	
			}

			this.set('totalD', kendo.toString(totalD, 'n0'));
			this.set('totalR', kendo.toString(totalR, 'c0'));

			this.set('totalDT', kendo.toString(totalDT, 'n0'));
			this.set('totalRT', kendo.toString(totalRT, 'c0'));		  	 	
		},	
		transferAll 			: function(){
			$.each(this.reconcileItemDS.data(), function(index, value){
				if(value.khr_qty>0){									
					value.set("khr_transfer", value.khr_qty);
				}

				if(value.usd_qty>0){									
					value.set("usd_transfer", value.usd_qty);
				}
			});
			
			this.change();
		},
		change 					: function(){
			var obj = this.get("obj"),
			khr_sum = 0, usd_sum = 0, khr_transfer_sum = 0, usd_transfer_sum = 0,
			usd2khr_amount = 0, usd2khr_transfer_amount = 0;

			$.each(this.reconcileItemDS.data(), function(index, value){
				if(value.khr_qty>0){
					var khrAmt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.khr_qty);
					khr_sum += khrAmt;					
					value.set("khr_amount", khrAmt);
				}

				if(value.usd_qty>0){
					var usdAmt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.usd_qty);
					usd_sum += usdAmt;
					value.set("usd_amount", usdAmt);
				}

				if(value.khr_transfer>0){
					var khr_transfer_amt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.khr_transfer);
					khr_transfer_sum += khr_transfer_amt;
					value.set("khr_transfer_amount", khr_transfer_amt);
				}

				if(value.usd_transfer>0){
					var usd_transfer_amt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.usd_transfer);
					usd_transfer_sum += usd_transfer_amt;
					value.set("usd_transfer_amount", usd_transfer_amt);
				}
			});

			//Refresh lisview
			var listView = $("#lvReconcileItem").data("kendoListView");			
			listView.refresh();

			//Total Cash1
			obj.set("total_cash1", kendo.parseFloat(obj.received_amount) + kendo.parseFloat(obj.previous_amount));

			//Actual cash
			obj.set("usd_amount", usd_sum);
			usd2khr_amount = obj.rate * usd_sum;
			obj.set("usd2khr_amount", usd2khr_amount);

			obj.set("khr_amount", khr_sum);

			//Total Cash2
			obj.set("total_cash2", kendo.parseFloat(obj.khr_amount) + kendo.parseFloat(obj.usd2khr_amount));

			//Reconcile
			obj.set("reconciled_amount", kendo.parseFloat(obj.total_cash1) - kendo.parseFloat(obj.total_cash2));

			//Transer
			obj.set("transfer_usd", usd_transfer_sum);
			usd2khr_transfer_amount = kendo.parseFloat(obj.rate) * kendo.parseFloat(usd_transfer_sum);
			obj.set("usd2khr_transfer_amount", usd2khr_transfer_amount);

			obj.set("transfer_khr", khr_transfer_sum);

			//Transfered amount
			obj.set("transfered_amount", kendo.parseFloat(obj.usd2khr_transfer_amount) + kendo.parseFloat(obj.transfer_khr));

			//Balance
			obj.set("balance", kendo.parseFloat(obj.total_cash1) - kendo.parseFloat(obj.transfered_amount));
		},
		addEmpty 				: function(){
			var self = this;
			this.set("isEdit", false);
			this.dataSource.data([]);
			this.reconcileItemDS.data([]);        	
      		
			this.dataSource.add({
				company_id 				: 0,
				transfer_account_id 	: 2,
				cashier 				: this.get('cashier'),															
				rate					: 4000,
				received_amount 		: 0,
				previous_amount 		: 0,
				total_cash1 			: 0,
				usd_amount 				: 0,
				usd2khr_amount			: 0,
				khr_amount 				: 0,
				total_cash2 			: 0,
				reconciled_amount 		: 0,
				transfer_usd			: 0,
				usd2khr_transfer_amount	: 0,
				transfer_khr 			: 0,					
				transfered_amount		: 0,
				balance 				: 0,										
				memo 					: "",
				reconciled_date 		: new Date(),
				status 					: 1		
			});			

			//Reconcile Item							
			$.each(this.get("denominationList"), function(index, value){
				self.reconcileItemDS.add({
					"reconcile_id" 			: 0,
					"denomination" 			: value.denomination,			   			   						   
				   	"khr_qty" 				: value.khr_qty,
				   	"khr_amount"			: 0,		   	
				   	"usd_qty" 				: value.usd_qty,
				   	"usd_amount"			: 0,
				   	"khr_transfer" 			: value.khr_transfer,
				   	"khr_transfer_amount" 	: 0,
				   	"usd_transfer" 			: value.usd_transfer,
				   	"usd_transfer_amount" 	: 0
				});
			});			

			var data = this.dataSource.data();			
			var obj = data[data.length - 1];			
			this.set("obj", obj);	
		},
		save 					: function(){
			var self = this;

			this.dataSource.sync();
			this.reconcileItemDS.sync();
		},			
		addReconcile 			: function(){
			var dfd = $.Deferred();

			var tr = this.get("totalReceive");
			var pr = this.get("prevRemain");				
			var receiveAmount = Number(tr.replace(/[^0-9\.]+/g,""));
			var prevRemain = Number(pr.replace(/[^0-9\.]+/g,""));		

			banhji.ds.reconcileDS.add({
				cashier 			: this.get('cashier'),					 
				reconciled_date 	: kendo.toString(new Date(), 'yyyy-MM-dd'),					
				rate				: this.get('rate'),
				received_amount 	: receiveAmount,
				prev_remain 		: prevRemain,
				reconciled_amount	: kendo.parseFloat(this.totalDR()),
				transfered_amount	: kendo.parseFloat(this.totalTransferCash()),
				transfer_account_id : this.get('transfer_account_id'),
				class_id 			: this.get('class_id'),
				memo 				: this.get('memo')
			});				        

	    	banhji.ds.reconcileDS.sync();
		    banhji.ds.reconcileDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;		
		},
		addJournal 				: function(){
			var self = this;				
			var totalTransferCash = kendo.parseFloat(this.totalTransferCash());

			//Transfer account on Dr
			banhji.journalEntry.add({
				journal_id 	: 0,
		 		account 	: this.get("transfer_account_id"), 		
		 		dr 			: totalTransferCash, 
		 		cr 			: 0,
		 		class_id  	: self.get("class_id"),
		 		memo 		: self.get("memo"),
		 		exchange_rate: 1,
			 	main 		: 0	 		
			});				
			
			var cashInTillList = {};
			$.each(banhji.ds.invoiceDS.data(), function(index, value){
				var cash_in_till_id = value.account_id;
				var amt = kendo.parseFloat(value.paid)															
				if(cash_in_till_id>0){
					if(cashInTillList[cash_in_till_id]===undefined){
						cashInTillList[cash_in_till_id]={"id": cash_in_till_id, "amt": amt};						
					}else{											
						if(cashInTillList[cash_in_till_id].id===cash_in_till_id){
							cashInTillList[cash_in_till_id].amt += amt;
						}else{
							cashInTillList[cash_in_till_id]={"id": cash_in_till_id, "amt": amt};
						}
					}
				}
			});

			//Cash in till on Cr
			$.each(cashInTillList, function(index, value){					
				banhji.journalEntry.add({
					journal_id 	: 0,
			 		account 	: value.id,	 		
			 		dr 			: 0, 
			 		cr 			: value.amt,
			 		class_id  	: self.get("class_id"),
			 		memo 		: self.get("memo"),
			 		exchange_rate: 1,
				 	main 		: 0	 		
				});
			});

		 	//Add journal to datasource
			banhji.transaction.addNew();
			var journal = banhji.transaction.get("current");
			
			journal.set("company_id", banhji.config.userData.company);
			journal.set("people_id", 0);
			journal.set("employee_id", banhji.config.userData.userId);
			journal.set("payment_id", 0);
			journal.set("payment_term_id", 0);
			journal.set("transaction_type", "Reconcile");
			journal.set("payment_method", "");
			journal.set("check_no", null);
			journal.set("memo", "ផ្ទៀងផ្ទាត់ និង ផ្ទេរសាច់ប្រាក់");
			journal.set("date", kendo.toString(new Date(this.get("searchDate")), "yyyy-MM-dd"));				
			journal.set("amount_billed", totalTransferCash);
			journal.set("amount_due", 0);
			journal.set("amount_paid", 0);
			journal.set("voucher", null);
			journal.set("class_id", this.get("class_id"));
			journal.set("status", 0);
			journal.set("reference", null);
			journal.set("vat_id", {id: null});
			journal.set("inJournal", 1);			 	
		 			 	
		 	banhji.transaction.save()
		 	.then(function(journal){			 		
	 			$.each(banhji.journalEntry.dataSource.data(), function(index, value){
	 				value.set("journal_id", journal.data.id);
	 			});
	 					 			
	 			banhji.journalEntry.save();
		 	});			  
		}
	});	
	banhji.cashReceipt =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Cash_Receipt" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),		
		paymentTermDS 		: banhji.source.paymentTermDS,
		paymentMethodDS 	: banhji.source.paymentMethodDS,
		amtDueColor 		: banhji.source.amtDueColor,
		showCheckNo 		: false,
		showReceiptNo 		: false,
		obj 				: null,		
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		searchText 			: "",
		contact_id 			: "",
		invoice_id 			: 0,
		total 				: 0,
		total_received 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		loadInvoice 		: function(id){
			this.set("invoice_id", id);
			this.search();
		},	
		//Contact
		loadContact 		: function(id){
			this.set("contact_id", id);
			this.search();
		},
		contactChanges 		: function(){
			this.search();
	    },
	    getContactName      : function(id){
            var raw = banhji.source.customerDS.get(id);
            if(raw){
                return raw.name;
            }else{
                return "";
            }
        },
	    //Payment Method
	    issuedDateChanges 	: function(){
	    	this.applyTerm();
	    	this.setRate();	
	    },
	    applyTerm 			: function(){
	    	var self = this, obj = this.get("obj"), 
	    	today = new Date();

	    	$.each(this.dataSource.data(), function(index, value){	    		   		
	    		var term = self.paymentTermDS.get(value.payment_term_id),
	    		termDate = new Date(value.reference[0].issued_date);

    			termDate.setDate(termDate.getDate() + term.discount_period);
    			
    			if(today<=termDate){
    				if(value.reference[0].amount_paid==0){
	    				var amount = value.reference[0].amount * term.discount_percentage;
	    				value.set("discount", amount);
	    				value.set("amount", value.reference[0].amount - amount);
    				}
    			}		    	
	    	});	    	
	    },
	    //Currency Rate		
		setRate 			: function(){
			var obj = this.get("obj");

			$.each(this.dataSource.data(), function(index, value){
				var rate = banhji.source.getRate(value.locale, new Date(obj.issued_date));				
				
				value.set("rate", rate);				
			});

			this.changes();			
		},
		//Segments		
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Search		
		search 				: function(){
			var self = this, 
			para = [],
			obj = this.get("obj"),
			searchText = this.get("searchText"), 
			invoice_id = this.get("invoice_id"),
			contact_id = this.get("contact_id");

	    	if(contact_id>0){		    			    	
		    	para.push({ field:"contact_id", value: contact_id });				    			    	
	    	}

	    	if(invoice_id>0){		    			    	
		    	para.push({ field:"id", value: invoice_id });				    			    	
	    	}
			
			if(searchText!==""){
				para.push({ field:"number", value: searchText });
			}

			para.push({ field:"type", operator:"where_in", value:["Commercial_Invoice", "Vat_Invoice", "Invoice"] });
			para.push({ field:"status", operator:"where_in", value:[0,2] });

			if(this.dataSource.total()>0){
				var idList = [];
				$.each(this.dataSource.data(), function(index, value){
					idList.push(value.reference_id);
				});
				para.push({ field:"id", operator:"where_not_in", value:idList });
			}

			this.txnDS.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.txnDS.view();

				if(view.length>0){
					$.each(view, function(index, value){											
						var amount_due = value.amount - (value.amount_paid + value.deposit);							

						self.dataSource.add({
							transaction_template_id : 0,
		    				contact_id 			: value.contact_id,				
							account_id 			: obj.account_id,
							payment_term_id		: value.payment_term_id,
							payment_method_id	: obj.payment_method_id,				
							reference_id 		: value.id,								
							user_id 			: self.get("user_id"),
							check_no 			: value.check_no,
							reference_no 		: value.number,
							number 				: "",
						   	type				: "Cash_Receipt",
						   	sub_total 			: amount_due,
						   	amount 				: amount_due,				   	
						   	discount 			: 0,
						   	rate				: value.rate,			   	
						   	locale 				: value.locale,			   	
						   	issued_date 		: obj.issued_date,					   	
						   	memo 				: obj.memo,
						   	memo2 				: obj.memo2,
						   	status 				: 0,
						   	segments 			: obj.segments,
						   	is_journal 			: 1,
						   	//Recurring
						   	recurring_name 		: "",
						   	start_date 			: new Date(),
						   	frequency 			: "Daily",
						   	month_option 		: "Day",
						   	interval 			: 1,
						   	day 				: 1,
						   	week 				: 0,
						   	month 				: 0,
						   	is_recurring 		: 0,

						   	reference 			: [value]
				    	});
					});
					self.applyTerm();
					self.setRate();
				}

				self.set("searchText", "");
				self.set("contact_id", "");
				self.set("invoice_id", 0);				
			});
		},
		//Obj
		loadObj 			: function(id){
			var self = this;

			this.dataSource.query({
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.dataSource.view();
				view[0].set("reference", []);
				
				self.set("obj", view[0]);
				self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
		        self.set("total_received", kendo.toString(view[0].amount, "c", view[0].locale));
				
				self.journalLineDS.filter({ field: "transaction_id", value: id });

				self.txnDS.query({
					filter:{ field:"id", value:view[0].reference_id }
				}).then(function(){
					var txn = self.txnDS.view(),
					obj = self.get("obj");

					obj.set("reference", txn);
				});
			});
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, sub_total = 0, discount = 0, total_received = 0, remaining = 0;											

			$.each(this.dataSource.data(), function(index, value) {
				var amt = kendo.parseFloat(value.sub_total) - kendo.parseFloat(value.discount);
				if(kendo.parseFloat(value.amount)>amt){
					value.set("amount", amt);
				}

				sub_total += kendo.parseFloat(value.sub_total) / value.rate;					
				discount += kendo.parseFloat(value.discount) / value.rate;
				total_received += kendo.parseFloat(value.amount) / value.rate;					
	        });

			total = sub_total - discount;
			remaining = total - total_received;			

	        obj.set("sub_total", sub_total);
	        obj.set("discount", discount);
	        this.set("total", kendo.toString(total, "c2", banhji.locale));
	        this.set("total_received", kendo.toString(total_received, "c2", banhji.locale));
	        obj.set("remaining", remaining);
		},
		removeRow 			: function(e){
			this.dataSource.remove(e.data);
		    this.changes();
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.txnDS.data([]);
			this.journalLineDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);
			this.set("total_received", 0);

			this.set("obj", {
				transaction_template_id: 6,
				account_id 			: 7,
				payment_method_id	: 1,
			   	rate				: 1,
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	remaining 			: 0,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: []
	    	});						
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	
	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    		//Delete Previouse Journal
    			$.each(this.journalLineDS.data(), function(index, value){
					value.set("deleted", 1);
				});
	    	}else{
	    		//Add brand new transaction
	    		$.each(this.dataSource.data(), function(index, value){
	    			value.set("transaction_template_id", obj.transaction_template_id);
	    			value.set("account_id", obj.account_id);
	    			value.set("payment_method_id", obj.payment_method_id);
	    			value.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));
	    			value.set("memo", obj.memo);
	    			value.set("memo2", obj.memo2);
	    			value.set("segments", obj.segments);
	    		});
			}

			//Obj
			this.objSync()
			.then(function(data){
				var ids = [];
				//Save journals
				$.each(data, function(index, value){
					var contact = banhji.source.customerDS.get(value.contact_id);
					ids.push(value.reference_id);

					//Cash on Dr
					self.journalLineDS.add({					
						transaction_id 		: value.id,
						account_id 			: obj.account_id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: value.rate,
						locale				: value.locale
					});

					if(value.discount>0){
						//Discount on Dr
						self.journalLineDS.add({					
							transaction_id 		: value.id,
							account_id 			: contact.settlement_discount_id,				
							contact_id 			: value.contact_id,				
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],								
							dr 	 				: value.discount,
							cr 					: 0,				
							rate				: value.rate,
							locale				: value.locale
						});
					}

					//AR on Cr
					self.journalLineDS.add({					
						transaction_id 		: value.id,
						account_id 			: contact.account_id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: kendo.parseFloat(value.amount) + kendo.parseFloat(value.discount),				
						rate				: value.rate,
						locale				: value.locale
					});	
				});

				self.journalLineDS.sync();
				self.updateTxnStatus(ids);

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			
			banhji.userManagement.removeMultiTask("cash_receipt");
		},
		updateTxnStatus 	: function(ids){
			var self = this;

			if(ids.length>0){
				this.txnDS.query({
					filter:{ field:"id", operator:"where_in", value:ids }
				}).then(function(){
					var view = self.txnDS.view();

					$.each(view, function(index, value){
						if(value.amount_paid == 0){
							value.set("status", 0);
						}else if(value.amount_paid >= value.amount){
							value.set("status", 1);
						}else{
							value.set("status", 2);
						}
					});

					self.txnDS.sync();
				});
			}
		}
	});
	banhji.cashPayment =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		txnDS 				: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		txnTemplateDS 		: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Cash_Payment" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		contactDS  			: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		employeeDS  		: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Sale Rep.
			sort: { field:"number", dir:"asc" }
		}),
		accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		paymentTermDS 		: banhji.source.paymentTermDS,
		paymentMethodDS 	: banhji.source.paymentMethodDS,
		amtDueColor 		: banhji.source.amtDueColor,
		showCheckNo 		: false,
		showReceiptNo 		: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		searchText 			: "",
		contact_id 			: "",
		invoice_id 			: 0,
		total 				: 0,
		total_received 		: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Contact
		loadContact 		: function(id){
			this.set("contact_id", id);
			this.search();
		},
		contactChanges 		: function(){
			this.search();
	    },
	    getContactName      : function(id){
            var raw = banhji.source.customerDS.get(id);
            if(raw){
                return raw.name;
            }else{
                return "";
            }
        },
	    //Payment Term
	    issuedDateChanges 	: function(){
	    	this.applyTerm();
	    	this.setRate();	
	    },
	    applyTerm 			: function(){
	    	var self = this, obj = this.get("obj"), 
	    	today = new Date();

	    	$.each(this.dataSource.data(), function(index, value){	    		   		
	    		var term = self.paymentTermDS.get(value.payment_term_id),
	    		termDate = new Date(value.reference[0].issued_date);

    			termDate.setDate(termDate.getDate() + term.discount_period);
    			
    			if(today<=termDate){
    				if(value.reference[0].amount_paid==0){
	    				var amount = value.reference[0].amount * term.discount_percentage;
	    				value.set("discount", amount);
	    				value.set("amount", value.reference[0].amount - amount);
    				}
    			}		    	
	    	});	    	
	    },
	    //Currency Rate		
		setRate 			: function(){
			var obj = this.get("obj");

			$.each(this.dataSource.data(), function(index, value){
				var rate = banhji.source.getRate(value.locale, new Date(obj.issued_date));				
				
				value.set("rate", rate);				
			});

			this.changes();			
		},
		//Search
		search 				: function(){
			var self = this, 
			para = [],
			obj = this.get("obj"), 
			searchText = this.get("searchText"), 
			invoice_id = this.get("invoice_id"),
			contact_id = this.get("contact_id");

	    	if(contact_id>0){		    			    	
		    	para.push({ field:"contact_id", value: contact_id });				    			    	
	    	}

	    	if(invoice_id>0){		    			    	
		    	para.push({ field:"id", value: invoice_id });				    			    	
	    	}
			
			if(searchText!==""){
				para.push({ field:"number", value: searchText });
			}

			para.push({ field:"type", value:"Credit_Purchase" });
			para.push({ field:"status", operator:"where_in", value:[0,2] });

			if(this.dataSource.total()>0){
				var idList = [];
				$.each(this.dataSource.data(), function(index, value){
					idList.push(value.reference_id);
				});
				para.push({ field:"id", operator:"where_not_in", value:idList });
			}

			this.txnDS.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.txnDS.view();

				if(view.length>0){
					$.each(view, function(index, value){											
						var amount_due = value.amount - (value.amount_paid + value.deposit);							

						self.dataSource.add({
							transaction_template_id : 0,
		    				contact_id 			: value.contact_id,				
							account_id 			: obj.account_id,
							payment_term_id		: value.payment_term_id,
							payment_method_id	: obj.payment_method_id,				
							reference_id 		: value.id,								
							user_id 			: self.get("user_id"),
							check_no 			: value.check_no,
							reference_no 		: value.number,
						   	type				: "Cash_Payment",
						   	sub_total 			: amount_due,
						   	amount 				: amount_due,				   	
						   	discount 			: 0,
						   	rate				: value.rate,			   	
						   	locale 				: value.locale,			   	
						   	issued_date 		: obj.issued_date,					   	
						   	memo 				: obj.memo,
						   	memo2 				: obj.memo2,
						   	status 				: 0,
						   	segments 			: obj.segments,
						   	is_journal 			: 1,
						   	//Recurring
						   	recurring_name 		: "",
						   	start_date 			: new Date(),
						   	frequency 			: "Daily",
						   	month_option 		: "Day",
						   	interval 			: 1,
						   	day 				: 1,
						   	week 				: 0,
						   	month 				: 0,
						   	is_recurring 		: 0,

						   	reference 			: [value]
				    	});						
					});
					self.applyTerm();
					self.setRate();	
				}

				self.set("searchText", "");
				self.set("contact_id", "");
				self.set("invoice_id", 0);				
			});
		},	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Obj
		loadObj 			: function(id){
			var self = this;

			this.dataSource.query({
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.dataSource.view();
				view[0].set("reference", []);
				
				self.set("obj", view[0]);
				self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
		        self.set("total_received", kendo.toString(view[0].amount, "c", view[0].locale));
				
				self.journalLineDS.filter({ field: "transaction_id", value: id });

				self.txnDS.query({
					filter:{ field:"id", value:view[0].reference_id }
				}).then(function(){
					var txn = self.txnDS.view(),
					obj = self.get("obj");

					obj.set("reference", txn);
				});
			});
		},
		loadInvoice 		: function(id){
			this.set("invoice_id", id);
			this.search();
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, sub_total = 0, discount = 0, total_received = 0, remaining = 0;											

			$.each(this.dataSource.data(), function(index, value) {
				var amt = kendo.parseFloat(value.sub_total) - kendo.parseFloat(value.discount);
				if(kendo.parseFloat(value.amount)>amt){
					value.set("amount", amt);
				}
				
				sub_total += kendo.parseFloat(value.sub_total) / value.rate;					
				discount += kendo.parseFloat(value.discount) / value.rate;
				total_received += kendo.parseFloat(value.amount) / value.rate;					
	        });

			total = sub_total - discount;
			remaining = total - total_received;			

	        obj.set("sub_total", sub_total);
	        obj.set("discount", discount);
	        this.set("total", kendo.toString(total, "c2", banhji.locale));
	        this.set("total_received", kendo.toString(total_received, "c2", banhji.locale));
	        obj.set("remaining", remaining);
		},
		removeRow 			: function(e){
			var data = e.data;			
			this.dataSource.remove(data);		    
		    this.changes();	        
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.txnDS.data([]);
			this.journalLineDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);
			this.set("total_received", 0);

			this.set("obj", {
				transaction_template_id : 12,
				account_id 			: 7,
				payment_method_id	: 1,
			   	rate				: 1,
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	remaining 			: 0,
			   	locale 				: banhji.locale,
			   	issued_date 		: new Date(),
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: []
	    	});
		},
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 				: function(){
	    	var self = this, obj = this.get("obj");
	    	
	    	if(this.get("isEdit")){
	    		obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

	    		//Delete Previouse Journal
    			$.each(this.journalLineDS.data(), function(index, value){
					value.set("deleted", 1);
				});
	    	}else{
	    		//Add brand new transaction
	    		$.each(this.dataSource.data(), function(index, value){
	    			value.set("transaction_template_id", obj.transaction_template_id);
	    			value.set("account_id", obj.account_id);
	    			value.set("payment_method_id", obj.payment_method_id);
	    			value.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));
	    			value.set("memo", obj.memo);
	    			value.set("memo2", obj.memo2);
	    			value.set("segments", obj.segments);
	    		});
			}

			this.objSync()
			.then(function(data){
				var ids = [];
				//Save journals
				$.each(data, function(index, value){
					var contact = banhji.source.supplierDS.get(value.contact_id),
					ref = self.dataSource.at(index);
					ids.push(value.reference_id);

					//AP on Dr
					self.journalLineDS.add({
						transaction_id 		: value.id,
						account_id 			: ref.reference[0].account_id,
						contact_id 			: value.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: kendo.parseFloat(value.amount) + kendo.parseFloat(value.discount),
						cr 					: 0,
						rate				: value.rate,
						locale				: value.locale
					});
					
					//Cash on Cr
					self.journalLineDS.add({
						transaction_id 		: value.id,
						account_id 			: obj.account_id,
						contact_id 			: value.contact_id,
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],
						dr 	 				: 0,
						cr 					: value.amount,
						rate				: value.rate,
						locale				: value.locale
					});

					if(value.discount>0){
						//Discount on Cr
						self.journalLineDS.add({
							transaction_id 		: value.id,
							account_id 			: contact.settlement_discount_id,
							contact_id 			: value.contact_id,
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],
							dr 	 				: 0,
							cr 					: value.discount,
							rate				: value.rate,
							locale				: value.locale
						});
					}
				});

				self.journalLineDS.sync();
				self.updateTxnStatus(ids);

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			
			banhji.userManagement.removeMultiTask("cash_payment");
		},
		updateTxnStatus 	: function(ids){
			var self = this;

			if(ids.length>0){
				this.txnDS.query({
					filter:{ field:"id", operator:"where_in", value:ids }
				}).then(function(){
					var view = self.txnDS.view();

					$.each(view, function(index, value){
						if(value.amount_paid == 0){
							value.set("status", 0);
						}else if(value.amount_paid >= value.amount){
							value.set("status", 1);
						}else{
							value.set("status", 2);
						}
					});

					self.txnDS.sync();
				});
			}
		}
	});
	banhji.cashFlowForecast = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "budge_lines"),
		dbsDataSource 		: banhji.store.dbsDataSource,
		nameList 			: [
			"Cash Receipts",
			"Cash Sale",
			"Receivables Collection",
			"Other receipts",
			"Cash Disbursement",
			"A. Operating",
			"B. Capital Expense",
			"C. Tax",
			"D. Drawing/Dividends",
			"E. Financing",
			"Liquidlity Position",
			"Net Cash Position"
		],
        obj 				: null,
        cellIndex 			: 0,
        month_option 		: "only",
        amount 				: 0,
        showEdit 			: false,
		pageLoad 			: function(){
			this.addEmpty();
		},
		loadAccountHolder 			: function(){
			var self = this;
			
			banhji.dbsUrl = "https://developers.dbs.com:10443/api/sg/v1/accounts/0282828314/fundsTransfer/transferType=Scheduled";
			this.dbsDataSource.query({
				filter:[],
				page:1,
				pageSize:100
			}).then(function(){
				var view = banhji.store.dbsDataSource.data();
				console.log(view[0]);
				// self.set("customer", view[0].AccountHolder.accountHolderDetl.items[0].accountHolderDetl.partyName);
			});
		},
		addEmpty 			: function(){
			this.dataSource.data([]);

			for (var i = 0; i <= 11; i++) {
				this.dataSource.add({
					name 	: this.nameList[i],
					m0		: 0,
					m1 		: 0,
					m2 		: 0,
					m3 		: 0,
					m4 		: 0,
					m5 		: 0,
					m6 		: 0,
					m7 		: 0,
					m8 		: 0
				});
			}
		},
		changes 			: function(){
			var a0 = 0, a1 = 0, a2 = 0, a3 = 0, a4 = 0, a5 = 0, a6 = 0, a7 = 0, a8 = 0,
			b0 = 0, b1 = 0, b2 = 0, b3 = 0, b4 = 0, b5 = 0, b6 = 0, b7 = 0, b8 = 0,
			c0 = 0, c1 = 0, c2 = 0, c3 = 0, c4 = 0, c5 = 0, c6 = 0, c7 = 0, c8 = 0;

			$.each(this.dataSource.data(), function(index, value){
				if(index>0 && index <=3){
					a0 += value.m0; a1 += value.m1; a2 += value.m2; a3 += value.m3; a4 += value.m4; a5 += value.m5; a6 += value.m6; a7 += value.m7; a8 += value.m8;				
				}else if(index>4 && index <=9){
					b0 += value.m0; b1 += value.m1; b2 += value.m2; b3 += value.m3; b4 += value.m4; b5 += value.m5; b6 += value.m6; b7 += value.m7; b8 += value.m8;
				}else if(index>10){
					c0 += value.m0; c1 += value.m1; c2 += value.m2; c3 += value.m3; c4 += value.m4; c5 += value.m5; c6 += value.m6; c7 += value.m7; c8 += value.m8;
				}
			});

			var a = this.dataSource.at(0);
			a.set("m0", a0);
			a.set("m1", a1);
			a.set("m2", a2);
			a.set("m3", a3);
			a.set("m4", a4);
			a.set("m5", a5);
			a.set("m6", a6);
			a.set("m7", a7);
			a.set("m8", a8);

			var b = this.dataSource.at(4);
			b.set("m0", b0);
			b.set("m1", b1);
			b.set("m2", b2);
			b.set("m3", b3);
			b.set("m4", b4);
			b.set("m5", b5);
			b.set("m6", b6);
			b.set("m7", b7);
			b.set("m8", b8);

			var c = this.dataSource.at(10);
			c.set("m0", c0);
			c.set("m1", c1);
			c.set("m2", c2);
			c.set("m3", c3);
			c.set("m4", c4);
			c.set("m5", c5);
			c.set("m6", c6);
			c.set("m7", c7);
			c.set("m8", c8);
		},
		selectedRow0 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m0);
			this.set("cellIndex", 0);

			this.set("showEdit", true);
		},
		selectedRow1 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m1);
			this.set("cellIndex", 1);

			this.set("showEdit", true);
		},
		selectedRow2 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m2);
			this.set("cellIndex", 2);

			this.set("showEdit", true);
		},
		selectedRow3 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m3);
			this.set("cellIndex", 3);

			this.set("showEdit", true);
		},
		selectedRow4 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m4);
			this.set("cellIndex", 4);

			this.set("showEdit", true);
		},
		selectedRow5 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m5);
			this.set("cellIndex", 5);

			this.set("showEdit", true);
		},
		selectedRow6 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m6);
			this.set("cellIndex", 6);

			this.set("showEdit", true);
		},
		selectedRow7 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m7);
			this.set("cellIndex", 7);

			this.set("showEdit", true);
		},
		selectedRow8 		: function(e){
			var data = e.data;			
			this.set("obj", data);
			this.set("amount", data.m8);
			this.set("cellIndex", 8);

			this.set("showEdit", true);
		},
		save 				: function(){
			var obj = this.get("obj"), 
			amount = this.get("amount"), 
			cellIndex = this.get("cellIndex"), 
			month_option = this.get("month_option");			

			if(month_option=="only"){
				switch(cellIndex) {
				    case 0:
				        obj.set("m0", amount);
				        break;
				    case 1:
				        obj.set("m1", amount);
				        break;
				    case 2:
				        obj.set("m2", amount);
				        break;
				    case 3:
				        obj.set("m3", amount);
				        break;
				    case 4:
				        obj.set("m4", amount);
				        break;
				    case 5:
				        obj.set("m5", amount);
				        break;
				    case 6:
				        obj.set("m6", amount);
				        break;
				    case 7:
				        obj.set("m7", amount);
				        break;
				    default:
				        obj.set("m8", amount);
				}
			}else{
				for (var i = cellIndex; i <= 11; i++) {
					switch(i) {
					    case 0:
					        obj.set("m0", amount);
					        break;
					    case 1:
					        obj.set("m1", amount);
					        break;
					    case 2:
					        obj.set("m2", amount);
					        break;
					    case 3:
					        obj.set("m3", amount);
					        break;
					    case 4:
					        obj.set("m4", amount);
					        break;
					    case 5:
					        obj.set("m5", amount);
					        break;
					    case 6:
					        obj.set("m6", amount);
					        break;
					    case 7:
					        obj.set("m7", amount);
					        break;
					    default:
					        obj.set("m8", amount);
					}
				}
			}

			this.changes();

			this.set("showEdit", false);
		},
		cancel 				: function(){
			this.set("showEdit", false);
		}
	});
	banhji.cashSetting =  kendo.observable({
		lang 				: langVM,
        contactTypeDS 		: banhji.source.contactTypeDS,
        paymentMethodDS		: banhji.source.paymentMethodDS,
        paymentTermDS		: banhji.source.paymentTermDS,
        patternDS			: dataStore(apiUrl + "contacts"),
        txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),
        contactTypeName 	: "",
        contactTypeAbbr 	: "",
        contactTypeCompany 	: 0,
        paymentMethodName 	: "",
        paymentTermName 	: "",
        paymentTermNetDue	: "",
        paymentTermPeriod 	: "",
        paymentTermPercentage 	: "",
        pageLoad 			: function() {
        	this.txnTemplateDS.filter({ field: "moduls", value : "cash_mg" });
        },	    
        addContactType 		: function(){
        	var name = this.get("contactTypeName");

        	if(name!==""){
	        	this.contactTypeDS.add({
	        		parent_id 	: 1,
	        		name 		: name,
	        		abbr 		: this.get("contactTypeAbbr"),
	        		description : "",
	        		is_company 	: this.get("contactTypeCompany"),
	        		is_system 	: 0
	        	});

	        	this.contactTypeDS.sync();
	        	this.contactTypeDS.bind("requestEnd", function(e){
	        		if(e.type==="create"){
	        			var response = e.response.results[0];
		    			self.addPattern(response.id);
		    			banhji.source.loadContactTypes();
	        		}
	        	});

	        	this.set("contactTypeName", "");
	        	this.set("contactTypeAbbr", "");
	        	this.set("contactTypeCompany", 0);
        	}
        },
        addPattern 			: function(id){
			this.patternDS.insert(0, {
				"contact_type_id" 		: id,
				"number"				: "",
				"locale" 				: banhji.locale,
				"is_pattern" 			: 1,
				"status"				: 1
			});
			this.patternDS.sync();
		},
        addPaymentMethod 		: function(){
        	var name = this.get("paymentMethodName");

        	if(name!==""){
	        	this.paymentMethodDS.add({	        		
	        		name 		: name,
	        		description : "",
	        		is_system 	: 0
	        	});

	        	this.paymentMethodDS.sync();

	        	this.set("paymentMethodName", "");
        	}
        },
        addPaymentTerm 		: function(){
        	var name = this.get("paymentTermName");

        	if(name!==""){
	        	this.paymentTermDS.add({	        		
	        		name 				: name,
	        		net_due 			: this.get("paymentTermNetDue"),
	        		discount_period 	: this.get("paymentTermPeriod"),
	        		discount_percentage : this.get("paymentTermPercentage"),
	        		is_system 			: 0
	        	});

	        	this.paymentTermDS.sync();

	        	this.set("paymentTermName", "");
	        	this.set("paymentTermNetDue", "");
	        	this.set("paymentTermPeriod", "");
	        	this.set("paymentTermPercentage", "");
        	}
        },
        goPattern 	: function(e){
        	var data = e.data;        	        	

        	if(kendo.parseInt(data.contact_id)>0){        		        	
	        	banhji.router.navigate('/customer/'+data.contact_id+'/1');   	
        	}else{
        		banhji.router.navigate('/customer');
        		banhji.customer.set("contact_type_id",data.id);
        	}
        },
        deleteForm 		: function(e){
        	var data = e.data;
        	if(confirm("Do you want to delete it?") == true) {
        		this.txnTemplateDS.remove(data);
        		this.txnTemplateDS.sync();
        	}
        },
        goInvoiceCustom : function(){
        	banhji.invoiceCustom.set("selectCustom", "cash_mg");
		    banhji.invoiceCustom.set("formShow", banhji.view.invoiceForm15);
		    banhji.invoiceCustom.set("formTitle", "Cash Transfer");
		    banhji.invoiceCustom.set("formType", "Cash_Transfer");
		    var obj= banhji.invoiceCustom.get("obj");
		    obj.set("type", "Cash_Transfer");
		    banhji.invoiceCustom.set("selectTypeList", banhji.source.cashFormList);
		    banhji.router.navigate('/invoice_custom');
        }
    });
    banhji.cashPositionReport = kendo.observable({
		lang 					: langVM,
		dataSource 		: dataStore(apiUrl + "cashReports/cash_position"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.cashPositionReport.dataSource.filter({
				logic: banhji.cashPositionReport.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.cashPositionReport.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.cashMovement =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/general_ledger"),
		accountDS  		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 10 },
		  	sort: { field:"number", dir:"asc" }
		}),
		segmentItemDS 		: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),		
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: { account_id: 0, segments: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		segmentChanges 		: function() {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

        	//Account
            if(obj.account_id>0){
	            para.push({ field:"account_id", value:obj.account_id });
	        }

	        //Segment
            if(obj.segments.length>0){
            	var segments = [];
            	$.each(obj.segments, function(index, value){
            		segments.push(value);
            	});          	
	            para.push({ field:"segments", operator:"like_related_transaction", value:"%"+segments.toString()+"%" });
	        }
    	
        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related_transaction", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

            	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related_transaction", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else{
            	
            }
            this.set("displayDate", displayDate);

            para.push({ field:"account_type_id", value:10 });
            
            this.dataSource.query({
            	filter:para,
            	sort:[
            		{ field:"account_type_id", operator:"order_by_related_account", dir:"asc" },
            		{ field:"number", operator:"order_by_related_account", dir:"asc" },
            		{ field:"issued_date", operator:"order_by_related_transaction", dir:"asc" },
            		{ field:"number", operator:"order_by_related_transaction", dir:"asc" }            		
            	]
            });
            this.dataSource.bind("requestEnd", function(e){				
				if(e.type=="read"){
					var response = e.response.results, res = e.response, balanceCal = 0;
					self.exArray = [];
					self.set("totalAmount", kendo.toString(res.totalAmount, "c", banhji.locale));
					self.set("totalBalance", kendo.toString(res.totalBalance, "c", banhji.locale));

					self.exArray.push({
	            		cells: [
	            			{ value: self.company.name, textAlign: "center", colSpan: 7 }
	            		]
	            	});
	            	self.exArray.push({
	            		cells: [
	            			{ value: "Cash Movement",bold: true, fontSize: 20, textAlign: "center", colSpan: 7 }
	            		]
	            	});
	            	self.exArray.push({
	            		cells: [
	            			{ value: "", colSpan: 7 }
	            		]
	            	});
	            	self.exArray.push({ 
	            		cells: [
							{ value: "Type", background: "#496cad", color: "#ffffff" },
							{ value: "Date", background: "#496cad", color: "#ffffff" },
							{ value: "Reference No", background: "#496cad", color: "#ffffff" },
							{ value: "Description", background: "#496cad", color: "#ffffff" },
							{ value: "In", background: "#496cad", color: "#ffffff" },
							{ value: "Out", background: "#496cad", color: "#ffffff" },
							{ value: "Balance", background: "#496cad", color: "#ffffff" }
						]
					});
					for (var j = 0; j < response.length; j++){
						self.exArray.push({
					        cells: [
					          	{ value: response[j].number + " " + response[j].name, bold: true, },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: kendo.parseFloat(response[j].balance_forward), bold: true },
					        ]
					    });
					    balanceCal = response[j].balance_forward;
					    for (var i = 0; i < response[j].line.length; i++){
						    
						    //for(var j = 0; j < response.results[i].line.length; j++){
						    var IN, OUT;	
						    if(kendo.parseFloat(response[j].line[i].amount) > 0){
						    	IN = kendo.parseFloat(response[j].line[i].amount);
						    	OUT = 0;
						    	//totalA += kendo.parseFloat(response[j].line[i].amount);
						    }else{
						    	IN = 0;
						    	OUT = kendo.parseFloat(Math.abs(response[j].line[i].amount));
						    	//totalB += kendo.parseFloat(response[j].line[i].amount);
						    }
					    	balanceCal += response[j].line[i].amount;
				          	self.exArray.push({
				          		cells: [
				          	  		{ value: response[j].line[i].type ? response[j].line[i].type: ""},
				              		{ value: kendo.toString(new Date(response[j].line[i].issued_date), "dd-MM-yyyy")  },
				              		{ value: response[j].line[i].number },
				              		{ value: response[j].line[i].memo },
				              		{ value: IN},
				              		{ value: OUT},
				              		{ value: kendo.parseFloat(balanceCal)}
				            	]
				          	});
					    }
					    self.exArray.push({
					        cells: [
					          	{ value: "TOTAL " + response[j].number + " " + response[j].name, bold: true, },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: "" },
					            { value: kendo.parseFloat(balanceCal), bold: true },
					        ]
					    });
					}
					self.exArray.push({
				        cells: [
				          	{ value: "TOTAL", bold: true,fontSize: 16 },
				            { value: "" },
				            { value: "" },
				            { value: "" },
				            { value: "" },
				            { value: kendo.parseFloat(res.totalAmount), bold: true, fontSize: 16 },
				            { value: kendo.parseFloat(res.totalBalance), bold: true, fontSize: 16 },
				        ]
				    });
				}
			});            
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "Cash Movement",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "CashMovement.xlsx"});
		}
	});
    banhji.cashCollection = kendo.observable({
		lang 					: langVM,
		dataSource 		: dataStore(apiUrl + "cashReports/cash_collection"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.cashCollection.dataSource.filter({
				logic: banhji.cashCollection.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.cashCollection.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.cashPaymentReport = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "cashReports/cash_payment"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.cashPaymentReport.dataSource.filter({
				logic: banhji.cashPaymentReport.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.cashPaymentReport.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
    banhji.cashSales = kendo.observable({
		lang 				: langVM,
		locale 				: banhji.locale,
		// purchaseSummary 		: dataStore(apiUrl + "vendorReports/expense_summary"),	
		count 				: 0,
		total_avg 			: 0,
		supplierCount 		: 0,
		saleNumber 			: 0,
		gpm 				: 0,
		total_sale 			: 0,
		companyName 		: null,
		startDate 			: "<?php echo date("d-m-y"); ?>",
		endDate				: new Date(),
		sorter				: '',
		openInvoice 		: 0,	
		company 			: banhji.institute,		
		sortList			: banhji.source.sortList, 
		//line to sale summary
		cashCollection     	: banhji.cashCollection,
		cashPaymentReport   : banhji.cashPaymentReport,
		cashPositionReport   : banhji.cashPositionReport,
		// search button
		saleDetailSearch 	: function() {
			this.detailSale.filter({
				logic: 'segment',
				filters: [
					{field: "id", "operator": "segment", value: 9},
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		},
		displayDateStart    : function() {
			return kendo.toString(new Date(this.get('startDate')), 'dd-MM-yyyy');
		},
		displayDateEnd    : function() {
			return kendo.toString(new Date(this.get('endDate')), 'dd-MM-yyyy');
		},
		trnxSearch 			: function() {},
		depositDetailSearch : function() {},
		summaryProductSearch: function() {},
		detailProductSearch : function() {},
		saleJobSearch 		: function() {},
		saleOrderSearch 	: function() {},
		balanaceSearch 		: function() {},
		balanceDetailSearch : function() {},
		agingSummarySearch  : function() {},
		agingDetailSearch   : function() {},
		collectingInvSearch : function() {},
		collectedInvSearch  : function() {},
		invoiceListSearch 	: function() {},
		customerListSearch 	: function() {},
		dateMax 			: function(e) {
			$('#edate').css('width', '160px');
			var edate = $('#edate').kendoDatePicker().data("kendoDatePicker");
			edate.min(e.sender.value());
		},
		dateMin 			: function(e) {
			$('#sdate').css('width', '160px');
			var sdate = $('#sdate').kendoDatePicker().data("kendoDatePicker");
			sdate.max(e.sender.value());
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=900, height=700'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="<?php echo base_url(); ?>assets/responsive.css" rel="stylesheet" >' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            '*{  } html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: landscape; margin:0mm; } .saleSummaryCustomer .total-customer, .saleSummaryCustomer .total-sale { background-color: #DDEBF7!important; -webkit-print-color-adjust:exact; }.saleSummaryCustomer .table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;-webkit-print-color-adjust:exact;}.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ color: #fff!important; }.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td {  background-color: #fff!important; -webkit-print-color-adjust:exact;} .saleSummaryCustomer .table.table-borderless.table-condensed tr td { background-color: #F2F2F2!important;-webkit-print-color-adjust:exact; } </style>' +
		            '</head>' +
		            '<body><div id="example" class="k-content saleSummaryCustomer" style="padding: 30px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		dateChange 			: function(){
			// var strDate = "";

			// 	if(this.startDate && this.endDate){
			// 		strDate = "From " + kendo.toString(this.startDate, "dd-MM-yyyy") + " To " + kendo.toString(this.endDate, "dd-MM-yyyy");
			// 	}else if(this.startDate){
			// 		strDate = "On " + kendo.toString(this.startDate,"dd-MM-yyyy");
			// 	}else if(this.endDate){
			// 		strDate = "As Of " + kendo.toString(this.endDate,"dd-MM-yyyy");
			// 	}else{
			// 		strDate = "";
			// 	}

			var today = new Date(),
			day = today.getDate();
        	sdate = "",
        	edate = "",
        	value = this.get('sorter');

			switch(value){
			case "today":
				sdate = today;

			  	break;
			case "week":
				var first = new Date(today.getTime() - 60*60*24* day*1000),
				last = new Date(today.getTime() + 60*60*24* day*1000);

				sdate = first;
				edate = last;

			  	break;
			case "month":
				var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
				edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

			  	break;
			case "year":
			  	var sdate = new Date(today.getFullYear(), 0, 1),
			  	edate = new Date(today.getFullYear(), 11, 31);

			  	break;
			default:

			}

			this.set("startDate", sdate);
			this.set("endDate", edate);
			// start.value(sdate);
			// end.value(edate);

			// start.max(end.value());
			   //      	end.min(start.value());

			   //      	dateChanges();
			   //          });

			   //          start.max(end.value());
			   //          end.min(start.value());
		}
	});



	/*************************
	*	Inventory Section   *
	**************************/
	banhji.itemDashBoard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/inventory_dashboard_summary"),
		dataSource 			: dataStore(apiUrl + "itemReports/item_sale"),
		positionSummary 	: dataStore(apiUrl + "itemReports/position_summary"),
		topCustomerDS 		: dataStore(apiUrl + "dashboards/top_supplier"),
		topARDS 			: dataStore(apiUrl + "dashboards/top_ar"),
		topProductDS 		: dataStore(apiUrl + "dashboards/top_sale_product"),
		topPurchase 		: dataStore(apiUrl + "dashboards/top_purchase"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/item_monthly_purchase_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		sale 				: 0,
		sale_customer 		: 0,
		sale_product 		: 0,
		sale_order 			: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.graphDS.read();

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
			
				self.set("purchaseSupplierCount", kendo.toString(view[0].purchaseSupplierCount, "n0"));
				self.set("purchaseProductCount", kendo.toString(view[0].purchaseProductCount, "n0"));
				self.set("purchase_order", kendo.toString(view[0].purchase_order, "n0"));

				self.set("inventoryTurnOver", kendo.toString(view[0].inventoryTurnOver, "n0"));
				self.set("turnover", kendo.toString(view[0].turnover, "n0"));

				self.set("grossProfitMargin", kendo.toString(view[0].grossProfitMargin, "p"));
				self.set("product", kendo.toString(view[0].product, "n0"));

			});

			this.topCustomerDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			});

			this.topARDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});

			this.topPurchase.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related_transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});	

			this.topProductDS.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related_transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related_transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});								
		}
	});
	banhji.itemCenter = kendo.observable({
		lang 				: langVM,
		itemDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort:[
				{ field:"item_type_id", dir:"asc" },
				{ field:"id", dir:"asc" }
			],
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		itemMovementDS 		: dataStore(apiUrl + "item_lines"),
		onHandDS 			: dataStore(apiUrl + "item_lines"),
		sumamryDS 			: dataStore(apiUrl + "item_lines"),
		transactionDS		: dataStore(apiUrl + "items/movement"),
		attachmentDS 		: dataStore(apiUrl + "attachments"),
		categoryDS 			: new kendo.data.DataSource({
		  	data: banhji.source.categoryList
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		searchText 			: "",	
		category_id 		: null,
		total_value 		: 0,
		itemType 			: "",
		uom 		 		: "",
		on_hand 			: 0,
		currencyCode 		: "",
		pageLoad 			: function(id){
			if(id){
				this.loadObj(id);
			}

			//Refresh
			if(this.itemDS.total()>0){
				this.itemDS.fetch();
				this.transactionDS.fetch();
			}													
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		setItemType 	 	: function(){
			var itemType = "", obj = this.get("obj");

			$.each(banhji.source.itemTypeDS.data(), function(index, value){				
				if(value.id == obj.item_type_id){
					itemType = value.name;					

					return false;					
				}
			});

			this.set("itemType", itemType);
		},
		setCurrencyCode 	: function(){
			var code = "", obj = this.get("obj");

			$.each(banhji.source.currencyDS.data(), function(index, value){				
				if(value.locale == obj.locale){
					code = value.code;					

					return false;					
				}
			});

			this.set("currencyCode", code);
		},
		setUOM 	 			: function(){
			var measurement = "", obj = this.get("obj");

			$.each(banhji.source.measurementDS.data(), function(index, value){				
				if(value.id == obj.measurement_id){
					measurement = value.name;					

					return false;					
				}
			});

			this.set("uom", measurement);
		},
		loadOnHand 			: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.item_type_id==1){
				this.onHandDS.query({
					filter:[
						{ field:"item_id", value: obj.id },
						{ field:"type", operator:"where_in_related_transaction", value:["Cash_Purchase", "Credit_Purchase", "Commercial_Invoice", "Vat_Invoice", "Invoice", "Commercial_Cash_Sale", "Vat_Cash_Sale", "Cash_Sale", "Adjustment", "Internal_Usage"] },
						{ field:"is_recurring <>", operator:"where_related_transaction", value: 1 },
						{ field:"deleted <>", operator:"where_related_transaction", value: 1 }
					]
				}).then(function(){
					var view = self.onHandDS.view();

					var onHand = 0;
					$.each(view, function(index, value){
						onHand += (value.quantity * value.unit_value * value.movement);
					});

					self.set("on_hand", kendo.toString(onHand, "n"));
				});
			}else{
				this.set("on_hand", 0);
			}
		},
		//Upload
		onSelect 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");

	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Item",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
	    //Obj
		loadObj 			: function(id){
			var self = this;

			this.itemDS.query({
				filter: { field:"id", value:id},
				page:1,
				pageSize:100
			}).then(function(){
				var view = self.itemDS.view();

				if(view.length>0){
					self.set("obj", view[0]);
					self.loadData();
				}
			});
		},
		loadData 			: function(){
			var obj = this.get("obj");

			if(obj!==null){
				var totalValue = kendo.parseFloat(obj.on_hand) * kendo.parseFloat(obj.cost);

				this.searchTransaction();			
				this.set("total_value", kendo.toString(totalValue, "c", obj.locale));
				this.attachmentDS.filter({ field:"item_id", value:obj.id });
				this.setCurrencyCode();
				this.setUOM();
				this.setItemType();
				this.loadOnHand();
			}else{
				alert(banhji.source.selectItemMessage);
			}
		},
		selectedRow			: function(e){
			var id = e.data.id,
			data = e.data;			
			
			this.set("obj", data);
			this.loadData();
		},
		sorterChanges 		: function(){
			var value = this.get("sorter");

			switch(value){
			case "today":
				var today = new Date();
				
				this.set("sdate", today);
				this.set("edate", today);
			  					
			  	break;
			case "week":
			  	var thisWeek = new Date;
				var first = thisWeek.getDate() - thisWeek.getDay(); 
				var last = first + 6;

				var firstDayOfWeek = new Date(thisWeek.setDate(first));
				var lastDayOfWeek = new Date(thisWeek.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":
				var thisMonth = new Date;				  	
				var firstDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth(), 1);
				var lastDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":
				var thisYear = new Date();
			  	var firstDayOfYear = new Date(thisYear.getFullYear(), 0, 1);
				var lastDayOfYear = new Date(thisYear.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this,
			para = [],
			searchText = this.get("searchText"),			
			category_id = this.get("category_id");

        	if(searchText){
      			var textParts = searchText.replace(/([a-z]+)/i, "$1 ").split(/[^0-9a-z]+/ig);

      			para.push(
      				{ field: "abbr", value: textParts[0] },
      				{ field: "number", value: textParts[1] },
					{ field: "name", operator: "or_like", value: searchText }
      			);
      		}

			if(category_id){
				para.push({ field:"category_id", value:category_id });
			}

			// para.push({ field:"item_type_id", value:1 });
			// para.push({ field:"is_catalog", value: 0 });
			// para.push({ field:"is_assembly", value: 0 });          

            this.itemDS.filter(para);

            this.set("searchText", "");
            this.set("category_id", 0);      			
		},
		searchTransaction	: function(){
			var self = this, para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	if(obj!==null){
        		para.push({ field:"item_id", value: obj.id });
        	
	        	//Dates
	        	if(start && end){
	            	para.push({ field:"issued_date >=", operator: "where_related_transaction", value: start });
	            	para.push({ field:"issued_date <=", operator: "where_related_transaction", value: end });            	            	
	            }else if(start){
	            	para.push({ field:"issued_date", operator: "where_related_transaction", value: start });
	            }else if(end){
	            	para.push({ field:"issued_date <=", operator: "where_related_transaction", value: end });
	            }else{
	            	
	            }

	            this.transactionDS.query({
	            	filter: para,
	            	page: 1,
	            	pageSize: 10
	            });
	        }else{
				alert("Please select an item.");
			}            
		},
		edit				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				if(obj.item_type_id=="1"){
					if(obj.is_catalog=="1"){
						banhji.router.navigate('/item_catalog/'+obj.id);
					}else if(obj.is_assembly=="1"){
						banhji.router.navigate('/item_assembly/'+obj.id);
					}else{
						banhji.router.navigate('/item/'+obj.id);
					}
				}else if(obj.item_type_id=="2"){
					banhji.router.navigate('/non_inventory_part/'+obj.id);
				}else if(obj.item_type_id=="3"){
					banhji.router.navigate('/fixed_assets/'+obj.id);
				}else if(obj.item_type_id=="4"){
					banhji.router.navigate('/item_service/'+obj.id);
				}else if(obj.item_type_id=="5"){
					banhji.router.navigate('/txn_item/'+obj.id);
				}else{

				}
			}else{
				alert(banhji.source.selectItemMessage);
			}
		},
		pricing				: function(){
			var obj = this.get("obj");

			if(obj!==null){
				if(obj.is_catalog=="1"){
					banhji.router.navigate('/item_catalog/'+obj.id);
				}else if(obj.is_assembly=="1"){
					banhji.router.navigate('/item_assembly/'+obj.id);
				}else{
					banhji.router.navigate('/item_prices/'+obj.id);
				}
			}else{
				alert(banhji.source.selectItemMessage);
			}
		}
	});	
	banhji.itemPrice = kendo.observable({
		lang 				: langVM,
    	dataSource 			: dataStore(apiUrl + "item_prices"),
    	itemDS 				: dataStore(apiUrl + "items"),
    	recordDS 			: dataStore(apiUrl + "items/movement"),
    	poDS 				: dataStore(apiUrl + "item_lines"),
    	soDS 				: dataStore(apiUrl + "item_lines"),
    	onHandDS 			: dataStore(apiUrl + "item_lines"),
    	measurementDS	   	: banhji.source.measurementDS,
    	currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
    	obj 				: null,
    	priceList 			: null,
    	windowVisible 		: false,
    	isltBase 			: true,
    	type 				: "ltBase",
    	isBase 				: false,
    	on_po 				: 0,
    	on_so 				: 0,
    	on_hand 			: 0,
    	pageLoad 			: function(id){
    		this.dataSource.filter({ field:"item_id", value: id });
    		this.recordDS.filter({ field:"item_id", value: id });
    		this.loadObj(id);
    		this.loadData(id);
    	},
    	loadObj 			: function(id){
    		var self = this;

    		this.itemDS.query({    			
				filter: { field:"id", value: id },
				page:1,
				pageSize:1
			}).then(function(e){
				var view = self.itemDS.view();
						    	
		    	self.set("obj", view[0]);

		    	if(view[0].item_type_id==1){
		    		self.loadOnHand(view[0].id);
		    	}else{
					self.set("on_hand", 0);
				}
			});
    	},
    	loadData 			: function(id){
    		var self = this;

    		//PO
    		this.poDS.query({
    			filter:[
    				{ field:"item_id", value:id },
    				{ field:"type", operator:"where_related_transaction",  value:"Purchase_Order" },
	    			{ field:"status", operator:"where_related_transaction", value:0 }
    			],
    			page:1,
    			pageSize:100
    		}).then(function(){
	    		var view = self.poDS.view(),
	    		sum = 0;

    			$.each(view, function(index, value){
    				sum += kendo.parseInt(value.quantity);
    			});

	    		self.set("on_po", kendo.toString(sum, "n0"));
	    	});

    		//SO
	    	this.soDS.query({
    			filter:[
	    			{ field:"item_id", value: id },
	    			{ field:"type", operator:"where_related_transaction", value:"Sale_Order" },
	    			{ field:"status", operator:"where_related_transaction", value:0 }
	    		],
	    		page:1,
	    		pageSize:1
	    	}).then(function(){
	    		var view = self.soDS.view(),
	    		sum = 0;

    			$.each(view, function(index, value){
    				sum += kendo.parseInt(value.quantity);
    			});

    			self.set("on_so", kendo.toString(sum, "n0"));
	    	});
    	},
    	loadOnHand 			: function(id){
			var self = this;
			
			this.onHandDS.query({
				filter:[
					{ field:"item_id", value: id },
					{ field:"type", operator:"where_in_related_transaction", value:["Cash_Purchase", "Credit_Purchase", "Commercial_Invoice", "Vat_Invoice", "Invoice", "Commercial_Cash_Sale", "Vat_Cash_Sale", "Cash_Sale", "Adjustment", "Internal_Usage"] },
					{ field:"is_recurring <>", operator:"where_related_transaction", value: 1 },
					{ field:"deleted <>", operator:"where_related_transaction", value: 1 }
				]
			}).then(function(){
				var view = self.onHandDS.view();

				var onHand = 0;
				$.each(view, function(index, value){
					onHand += (value.quantity * value.unit_value * value.movement);
				});

				self.set("on_hand", kendo.toString(onHand, "n0"));
			});
		},
    	changes 			: function(){
    		var p = this.get("priceList"),
    		unitValue = 0;

    		if(this.get("type")=="ltBase"){
    			if(p.quantity>0){
    				unitValue = 1 / p.quantity;
    			}else{
    				unitValue = 0;
    			}
    		}else{
    			unitValue = p.quantity;
    		}

    		p.set("unit_value", unitValue);
    	},
    	typeChanges 		: function(){
    		if(this.get("type")=="ltBase"){
    			this.set("isltBase", true);
    		}else{
    			this.set("isltBase", false);
    		}

    		this.changes();
    	},
    	openWindow			: function(){
      		this.addEmpty();
      		this.set('windowVisible', true);
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();
      		this.set('windowVisible', false);
      	},
      	addEmpty 			: function () {
      		var obj = this.get("obj");
      		this.set("isBase", false);
      		this.set("type", "ltBase");

      		this.dataSource.add({      			      			
      			item_id			: obj.id,
      			measurement_id 	: 0,
      			quantity 		: 1,
      			price 			: 0,
      			unit_value		: 0,
      			locale 			: obj.locale,      			
      			measurement 	: ""
			});

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("priceList", obj);	
      	},
      	save 				: function(){
      		this.dataSource.sync();
      		var saved = false;
      		this.dataSource.bind("requestEnd",function(e){
      			if(saved==false){
      				saved = true;
      				banhji.source.loadItemPrices();
      			}
      		});

      		this.set("windowVisible", false); 		
      	},
      	edit 				: function(e){
      		var data = e.data;
      		
      		this.set("priceList", data);
      		
      		if(this.dataSource.indexOf(data)==0){
      			this.set("isBase", true);
      			data.set("quantity", 1);
      		}else{
      			this.set("isBase", false);

	      		if(data.unit_value>1){
	      			this.set("type", "gtBase");
	      			this.set("isltBase", false);
	      		}else{
	      			this.set("type", "ltBase");
	      			this.set("isltBase", true);
      			}
      		}
      		
      		this.set("windowVisible", true);       		
      	},
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        
		        this.dataSource.remove(data);
		        this.dataSource.sync();
	    	}	    	
	    }
    });	
    banhji.item = kendo.observable({
    	lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "items"),
    	patternDS 				: dataStore(apiUrl + "items"),
    	deleteDS 				: dataStore(apiUrl + "item_lines"),    	
    	attachmentDS	 		: dataStore(apiUrl + "attachments"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	itemPriceDS 			: dataStore(apiUrl + "item_prices"),
    	itemVendorDS 	 		: dataStore(apiUrl + "items/contact"),
    	itemCustomerDS 	 		: dataStore(apiUrl + "items/contact"),
    	itemGroupDS 			: banhji.source.itemGroupDS,   	
    	brandDS 	 			: banhji.source.brandDS,
    	measurementDS			: banhji.source.measurementDS,
    	currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
    	vendorDS  				: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		customerDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
    	categoryDS 				: new kendo.data.DataSource({
		  	data: banhji.source.categoryList,
		  	filter: [
		  		{ field:"item_type_id", value: 1 },
		  		{ field:"id", operator:"neq", value: 5 },
		  		{ field:"id", operator:"neq", value: 6 }
		  	]
		}),
    	incomeAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 35 },
			      	{ field: "account_type_id", value: 39 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
    	cogsAccountDS 			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 36 },
		  	sort: { field:"number", dir:"asc" }
		}),
    	inventoryAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 13 },
		  	sort: { field:"number", dir:"asc" }
		}),
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		notDuplicateNumber 		: true,
		user_id					: banhji.source.user_id,
    	pageLoad 				: function(id, category_id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, category_id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Upload
		onSelect 				: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files[0],
	        obj = this.get("obj");

	        var fileReader = new FileReader();
	        fileReader.onload = function (event) {
	            var mapImage = event.target.result;
	            self.obj.set('image_url', mapImage);
	        }
	        fileReader.readAsDataURL(files.rawFile);
			
	        // Check the extension of each file and abort the upload if it is not .jpg	       
            if (files.extension.toLowerCase() === ".jpg"
            	|| files.extension.toLowerCase() === ".jpeg"
            	|| files.extension.toLowerCase() === ".tiff"
            	|| files.extension.toLowerCase() === ".png" 
            	|| files.extension.toLowerCase() === ".gif"){

            	if(this.attachmentDS.total()>0){
            		var att = this.attachmentDS.at(0);
            		this.attachmentDS.remove(att);
            	}

            	var key = 'ITEM_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ files.name;

            	this.attachmentDS.add({
            		user_id 		: this.get("user_id"),
            		item_id 		: obj.id,
            		type 			: "Item",
            		name 			: files.name,
            		description 	: "",
            		key 			: key,
            		url 			: banhji.s3 + key,
            		size 			: files.size,
            		created_at 		: new Date(),

            		file 			: files.rawFile
            	});
            }else{
            	alert("This type of file is not allowed to attach.");
            }
	    },	    
	    saveAttachment 	 		: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
		//Pattern
		loadPattern 			: function(){
			var self = this, obj = self.get("obj"), 
			cat = this.categoryDS.get(obj.category_id);

			this.patternDS.query({
				filter: [
					{ field:"category_id", value: obj.category_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();

				if(view.length>0){
	      			obj.set("item_group_id", view[0].item_group_id),
	      			obj.set("brand_id", view[0].brand_id),
	      			obj.set("measurement_id", view[0].measurement_id),
	      			obj.set("abbr", cat.abbr),
	      			obj.set("number", ""),
	      			obj.set("international_code", view[0].international_code),
	      			obj.set("color_code", view[0].color_code),
	      			obj.set("name", ""),
	      			obj.set("purchase_description", view[0].purchase_description),
	      			obj.set("sale_description", view[0].sale_description),
	      			obj.set("measurements", view[0].measurements),
	      			obj.set("cost", view[0].cost),
	      			obj.set("price", view[0].price),
	      			obj.set("locale", view[0].locale),
	      			obj.set("order_point", view[0].order_point),
	      			obj.set("income_account_id", view[0].income_account_id),
	      			obj.set("expense_account_id", view[0].expense_account_id),
	      			obj.set("inventory_account_id", view[0].inventory_account_id),
	      			obj.set("favorite", view[0].favorite)
				}else{
					obj.set("item_group_id", ""),
	      			obj.set("brand_id", ""),
	      			obj.set("measurement_id", ""),
	      			obj.set("abbr", ""),
	      			obj.set("number", ""),
	      			obj.set("international_code", ""),
	      			obj.set("color_code", ""),
	      			obj.set("name", ""),
	      			obj.set("purchase_description", ""),
	      			obj.set("sale_description", ""),
	      			obj.set("measurements", ""),
	      			obj.set("cost", ""),
	      			obj.set("price", ""),
	      			obj.set("locale", ""),
	      			obj.set("order_point", ""),
	      			obj.set("income_account_id", ""),
	      			obj.set("expense_account_id", ""),
	      			obj.set("inventory_account_id", ""),
	      			obj.set("favorite", false)
				}
			});
		},
		//Item Price
		addItemPrice 			: function (item_id) {
			var obj = this.get("obj");

      		this.itemPriceDS.add({
      			item_id			: item_id,
      			measurement_id 	: obj.measurement_id,
      			price 			: obj.price,
      			unit_value		: 1,
      			locale 			: obj.locale
			});

			this.itemPriceDS.sync();
			var loaded = false;
			this.itemPriceDS.bind("requestEnd", function(e){
				if(e.type=="create" && loaded==false){
					loaded = true;

					banhji.source.loadItemPrices();
				}
			});
      	},
      	//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(this.get("isEdit")){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"category_id", value: obj.category_id });

				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);						
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}		
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"category_id", value:obj.category_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		categoryChanges 		: function(){
			var obj = this.get("obj");

			if(obj.category_id && obj.isNew()){
				this.loadPattern();
				this.generateNumber();
			}
		},
      	//Item Contact
		loadItemContact			: function(){
    		var obj = this.get("obj");

			this.itemVendorDS.query({
				filter: [ 
					{ "field":"item_id", value: obj.id },
					{ "field":"type", value: "vendor" }
				],
				page: 1,
				pageSize: 100
			});

			this.itemCustomerDS.query({
				filter: [ 
					{ "field":"item_id", value: obj.id },
					{ "field":"type", value: "customer" }
				],
				page: 1,
				pageSize: 100
			});
		},
	    addEmptyItemVendor 		: function(){
			var obj = this.get("obj");
			
			this.itemVendorDS.add({
				item_id 	: obj.id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 		: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var obj = this.get("obj");

			this.itemCustomerDS.add({
				item_id 	: obj.id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 		: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		},
		//Obj
		loadObj 				: function(id, category_id){
    		var self = this, para = [];

    		if(id>0){
				para.push({ field:"id", value: id });
			}

			if(category_id){
				para.push({ field:"category_id", value: category_id });
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
		    	self.loadItemContact();
			});

			this.attachmentDS.filter({ field:"item_id", value: id });
    	},
      	addEmpty 				: function(){
      		var self = this;

      		this.dataSource.data([]);
      		this.itemVendorDS.data([]);
	      	this.itemCustomerDS.data([]);

	      	this.set("isEdit", false);
      		this.set("obj", null);

      		this.patternDS.query({
      			filter:[
      				{ field:"category_id", value:1 },
      				{ field:"is_pattern", value:1 }
      			],
      			page:1,
      			pageSize:1
      		}).then(function(){
      			var view = self.patternDS.view(),
      			cat = self.categoryDS.at(0);

      			self.dataSource.insert(0, {				
					item_type_id 			: 1,//Inventory Part      			      			
	      			category_id 			: view[0].category_id,
	      			item_group_id 			: view[0].item_group_id,
	      			brand_id 				: view[0].brand_id,
	      			measurement_id			: view[0].measurement_id,
	      			abbr 					: cat.abbr,
	      			number 					: "",
	      			international_code 		: view[0].international_code,
	      			color_code 				: view[0].color_code,
	      			name 					: "",
	      			purchase_description	: view[0].purchase_description,
	      			sale_description		: view[0].sale_description,
	      			measurements 			: view[0].measurements,	      			
	      			cost 					: view[0].cost,
	      			price 					: view[0].price,
	      			locale 					: view[0].locale,	      			     			
	      			order_point 			: view[0].order_point,
	      			income_account_id 		: view[0].income_account_id,
	      			expense_account_id  	: view[0].expense_account_id,
	      			inventory_account_id 	: view[0].inventory_account_id,
	      			image_url 				: banhji.no_image,
	      			favorite 				: view[0].favorite,
	      			is_pattern 				: 0,
	      			status 					: 1,
	      			deleted 				: 0								
				});

				var obj = self.dataSource.at(0);				
				//Pattern
				// if(self.get("contact_type_id")>0){
				// 	obj.set("contact_type_id", self.get("contact_type_id"));
				// 	obj.set("abbr", "");
				// 	obj.set("is_pattern", 1);
				// }

				self.set("obj", obj);
				self.generateNumber();
      		});
      	},
      	objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Edit Mode
	    	if(obj.isNew()==false){
		    	obj.set("dirty", true);
	    	}

	    	if(this.attachmentDS.total()>0){
    			var att = this.attachmentDS.at(0);
    			obj.set("image_url", att.url);
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("item_id", data[0].id);
		            });

					self.addItemPrice(data[0].id);
				}
				
      			self.itemVendorDS.sync();
      			self.itemCustomerDS.sync();
      			self.saveAttachment();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.itemVendorDS.cancelChanges();
			this.itemCustomerDS.cancelChanges();
			
			this.dataSource.data([]);
			this.itemVendorDS.data([]);
			this.itemCustomerDS.data([]);

			banhji.userManagement.removeMultiTask("item");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			if(!obj.is_system==1){
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						obj.set("deleted", 1);
				        self.dataSource.sync();

				        window.history.back();				        
					}
				});
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
    banhji.itemCatalog =  kendo.observable({
		lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "items"),
    	deleteDS 				: dataStore(apiUrl + "transactions"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	itemDS  				: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter: {
			    logic: "and",
			    filters: [
			    	{ field: "is_catalog", operator: "neq", value: 1 },
			        { field: "is_assembly", operator: "neq", value: 1 },
			      	{
			      		logic: "or",
					    filters: [
					      	{ field: "item_type_id", value: 1 },
			      			{ field: "item_type_id", value: 4 }
					    ]
					}
			    ]
			},
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		originalNo 				: "",
		notDuplicateNumber 		: false,
    	user_id					: banhji.source.user_id,
    	pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj"),
			originalNo = this.get("originalNo");			
			
			if(obj.number!=="" && obj.number!==originalNo){
				this.existingDS.query({
					filter: [
						{ field:"number", value: obj.number },
						{ field:"category_id", value: obj.category_id }
					],
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("isDuplicateNumber", true);						
					}else{
						self.set("isDuplicateNumber", false);
					}
				});							
			}else{
				this.set("isDuplicateNumber", false);
			}			
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"category_id", value:obj.category_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		//Obj
		loadObj 				: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
      	addEmpty 				: function(){
      		this.dataSource.data([]);
      		
      		this.set("isEdit", false);
      		this.set("obj", null);

      		this.dataSource.insert(0, {
      			item_type_id 			: 1,
      			category_id 			: 6,
      			abbr 					: "CAT",
      			number 					: "",
      			name 					: "",
      			purchase_description	: "",
      			sale_description 		: "",
      			catalogs 				: [],
      			locale 					: banhji.locale,
      			image_url 				: banhji.no_image,
      			favorite 				: false,
      			status 					: 1,
      			is_catalog 				: 1,
      			deleted 				: 0
			});      		

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			this.generateNumber();
      	},
      	objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");
			
			//Save Obj
			this.objSync()
			.then(function(data){ //Success

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.dataSource.data([]);
			
			banhji.userManagement.removeMultiTask("item_catalog");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			this.deleteDS.query({
			  	filter: { field: "item_id", value: obj.id },
			  	page: 1,
			  	pageSize: 1
			}).then(function() {
				var view = self.deleteDS.view();

				if(view.length>0){
					alert("Sorry, you can not delete it because it is using now.");
				}else{
					obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();				        
				}
			});	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
	banhji.itemAssembly =  kendo.observable({
		lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "items"),
    	lineDS 					: dataStore(apiUrl + "item_prices"),
    	deleteDS 				: dataStore(apiUrl + "transactions"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	incomeAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 35 },
			      	{ field: "account_type_id", value: 39 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
    	itemDS  				: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter: {
			    logic: "and",
			    filters: [
			    	{ field: "is_catalog", operator: "neq", value: 1 },
			        { field: "is_assembly", operator: "neq", value: 1 },
			      	{
			      		logic: "or",
					    filters: [
					      	{ field: "item_type_id", value: 1 },
			      			{ field: "item_type_id", value: 4 }
					    ]
					}
			    ]
			},
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
    	currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
    	measurementDS 			: banhji.source.measurementDS,    	
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		originalNo 				: "",
		notDuplicateNumber 		: true,
		total 					: 0,
    	user_id					: banhji.source.user_id,
    	pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Item
		itemChanges 			: function(e){
			var data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var cost = 0, rate = 1;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));
					cost = item.cost*rate;
				}

	    		data.set("measurement_id", item.measurement_id);
	    		data.set("quantity", 1);
		        data.set("price", cost);
		        data.set("amount", cost);

		        this.onChanges();
	        }
		},
		onChanges 				: function(){
			var total = 0, obj = this.get("obj");

			$.each(this.lineDS.data(), function(index, value){
				var amount = value.quantity * value.price;
				total += amount;

				value.set("amount", amount);
			});

			this.set("total", kendo.toString(total, "c", obj.locale));
		},
		addRow 					: function(){
      		var obj = this.get("obj");
      		this.lineDS.add({
      			assembly_id 	: obj.id,
      			item_id 		: "",
      			quantity 		: 1,
      			price 			: 0,
      			amount 			: 0,
      			locale 			: obj.locale
			});				
      	},
      	removeRow 				: function(e){
      		e.preventDefault();

			if(this.lineDS.total()>1){      		        
		        var data = e.data;		        
		        this.lineDS.remove(data);
	        }	    	
      	},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(this.get("isEdit")){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"category_id", value: obj.category_id });

				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);						
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}		
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"category_id", value:obj.category_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		//Obj
		loadObj 				: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
		    	self.lineDS.filter({ field:"assembly_id", value:id });
			});
    	},
      	addEmpty 				: function(){
      		this.dataSource.data([]);
      		this.lineDS.data([]);

      		this.set("isEdit", false);
      		this.set("obj", null);

      		this.dataSource.insert(0, {
      			item_type_id 			: 1,
      			category_id 			: 5,
      			income_account_id 		: 0,
      			abbr 					: "ASS",
      			number 					: "",
      			name 					: "",
      			purchase_description	: "",
      			sale_description 		: "",
      			price 					: "",
      			rate 					: banhji.source.getRate(banhji.locale, new Date()),
      			locale 					: banhji.locale,
      			image_url 				: banhji.no_image,
      			favorite 				: false,
      			status 					: 1,
      			is_assembly 			: 1,
      			deleted 				: 0
			});      		

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			this.addRow();
			this.generateNumber();
      	},
      	objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Edit Mode
	    	if(this.get("isEdit")){
	    		//Line
		    	if(this.lineDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					$.each(self.lineDS.data(), function(index, value){
	      				value.set("assembly_id", data[0].id);
	      			});
				}
				
      			self.lineDS.sync();
      			
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
						
			this.dataSource.data([]);
			this.lineDS.data([]);
			
			banhji.userManagement.removeMultiTask("item_assembly");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			this.deleteDS.query({
			  	filter: { field: "item_id", value: obj.id },
			  	page: 1,
			  	pageSize: 1
			}).then(function() {
				var view = self.deleteDS.view();

				if(view.length>0){
					alert("Sorry, you can not delete it because it is using now.");
				}else{
					obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();				        
				}
			});	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
	banhji.itemService =  kendo.observable({
    	lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "items"),
    	patternDS 				: dataStore(apiUrl + "items"),
    	deleteDS 				: dataStore(apiUrl + "item_lines"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	itemGroupDS 			: dataStore(apiUrl + "items/group"),
    	measurementDS			: banhji.source.measurementDS,
    	itemVendorDS 	 		: dataStore(apiUrl + "items/contact"),
    	itemCustomerDS 	 		: dataStore(apiUrl + "items/contact"),
    	itemPriceDS 			: dataStore(apiUrl + "item_prices"),
    	currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
    	categoryDS 				: new kendo.data.DataSource({
		  	data: banhji.source.categoryList,
		  	filter: { field:"item_type_id", value: 4 }//Service
		}),
    	vendorDS  				: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		customerDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),  	
    	incomeAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 35 },
			      	{ field: "account_type_id", value: 39 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		cogsAccountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 36 },//Expense
			      	{ field: "account_type_id", value: 37 },
			      	{ field: "account_type_id", value: 38 },
			      	{ field: "account_type_id", value: 40 },
			      	{ field: "account_type_id", value: 41 },
			      	{ field: "account_type_id", value: 42 },
			      	{ field: "account_type_id", value: 43 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
    	statusList 				: banhji.source.statusList,
        confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		originalNo 				: "",
		notDuplicateNumber 		: true,
    	pageLoad 				: function(id, category_id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, category_id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Pattern
		loadPattern 			: function(){
			var self = this, obj = self.get("obj"), 
			cat = this.categoryDS.get(obj.category_id);

			this.patternDS.query({
				filter: [
					{ field:"category_id", value: obj.category_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();				

				if(view.length>0){
					obj.set("measurement_id", view[0].measurement_id),
	      			obj.set("abbr", cat.abbr),	      			
					obj.set("price", view[0].price);
					obj.set("cost", view[0].cost);
					obj.set("locale", view[0].locale);
					obj.set("purchase_description", view[0].purchase_description),
	      			obj.set("sale_description", view[0].sale_description),
					obj.set("income_account_id", view[0].income_account_id);
					obj.set("expense_account_id", view[0].expense_account_id);					
				}else{
					obj.set("measurement_id", 0),
	      			obj.set("abbr", ""),
	      			obj.set("price", view[0].price);
					obj.set("cost", view[0].cost);
					obj.set("locale", banhji.locale);
					obj.set("purchase_description", ""),
	      			obj.set("sale_description", ""),
					obj.set("income_account_id", 0);
					obj.set("expense_account_id", 0);
				}
			});
		},
		//Number
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(this.get("isEdit")){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"category_id", value: obj.category_id });

				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);						
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}		
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"category_id", value:obj.category_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		categoryChanges 		: function(){
			var obj = this.get("obj");

			if(obj.category_id && obj.isNew()){
				this.loadPattern();
				this.generateNumber();
			}
		},
		//Item Price
		addItemPrice 			: function (item_id) {
			var obj = this.get("obj");

      		this.itemPriceDS.add({
      			item_id			: item_id,
      			measurement_id 	: obj.measurement_id,
      			price 			: obj.price,
      			unit_value		: 1,
      			locale 			: obj.locale
			});

			this.itemPriceDS.sync();
      	},
      	//Item Contact
		loadItemContact			: function(){
    		var obj = this.get("obj");

			this.itemVendorDS.query({
				filter: [ 
					{ "field":"item_id", value: obj.id },
					{ "field":"type", value: "vendor" }
				],
				page: 1,
				pageSize: 100
			});

			this.itemCustomerDS.query({
				filter: [ 
					{ "field":"item_id", value: obj.id },
					{ "field":"type", value: "customer" }
				],
				page: 1,
				pageSize: 100
			});
		},
	    addEmptyItemVendor 		: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemVendorDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 		: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemCustomerDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 		: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		},
		//Obj
		loadObj 				: function(id, category_id){
    		var self = this, para = [];

    		if(id>0){
				para.push({ field:"id", value: id });
			}

			if(category_id){
				para.push({ field:"category_id", value: category_id });
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
		    	self.set("originalNo", view[0].number);
		    	self.loadItemContact();
			});
    	},
      	addEmpty 				: function(){
      		var self = this;

      		this.dataSource.data([]);
      		this.itemVendorDS.data([]);
	      	this.itemCustomerDS.data([]);

	      	this.set("isEdit", false);
      		this.set("obj", null);

      		this.patternDS.query({
      			filter:[
      				{ field:"category_id", value: 3 },
      				{ field:"is_pattern", value: 1 }
      			],
      			page:1,
      			pageSize:1
      		}).then(function(){
      			var view = self.patternDS.view(),
      			cat = self.categoryDS.at(0);

      			self.dataSource.insert(0, {				
					item_type_id 			: 4,//Service      			      			
	      			category_id 			: view[0].category_id,
	      			item_group_id 			: view[0].item_group_id,
	      			measurement_id			: view[0].measurement_id,
	      			abbr 					: cat.abbr,
	      			number 					: "",
	      			name 					: "",
	      			price 					: view[0].price,
	      			cost 					: view[0].cost,
	      			locale 					: view[0].locale, 
	      			purchase_description	: view[0].purchase_description,
	      			sale_description		: view[0].sale_description,
	      			income_account_id 		: view[0].income_account_id,
	      			expense_account_id  	: view[0].expense_account_id,
	      			image_url 				: banhji.no_image,
	      			favorite 				: view[0].favorite,
	      			is_pattern 				: 0,
	      			status 					: 1							
				});

				var obj = self.dataSource.at(0);				
				//Pattern
				// if(self.get("contact_type_id")>0){
				// 	obj.set("contact_type_id", self.get("contact_type_id"));
				// 	obj.set("abbr", "");
				// 	obj.set("is_pattern", 1);
				// }

				self.set("obj", obj);
				self.generateNumber();
      		});
      	},
		objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Edit Mode
	    	if(this.get("isEdit")){
	    		//Contact Item has changes
		    	if(this.itemVendorDS.hasChanges() || this.itemCustomerDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			self.addItemPrice(data[0].id);
				}
				
      			self.itemVendorDS.sync();
      			self.itemCustomerDS.sync();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.itemVendorDS.cancelChanges();
			this.itemCustomerDS.cancelChanges();
			
			this.dataSource.data([]);
			this.itemVendorDS.data([]);
			this.itemCustomerDS.data([]);

			banhji.userManagement.removeMultiTask("item_service");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			if(!obj.is_system==1){
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						obj.set("deleted", 1);
				        self.dataSource.sync();

				        window.history.back();				        
					}
				});
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
	banhji.nonInventoryPart =  kendo.observable({
    	lang 					: langVM,    	
    	dataSource 				: dataStore(apiUrl + "items"),
    	patternDS 				: dataStore(apiUrl + "items"),
    	deleteDS 				: dataStore(apiUrl + "item_lines"),
    	itemGroupDS 			: dataStore(apiUrl + "items/group"),
    	brandDS 	 			: dataStore(apiUrl + "brands"),
    	measurementDS			: dataStore(apiUrl + "measurements"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	itemPriceDS 			: dataStore(apiUrl + "item_prices"),
    	itemVendorDS 	 		: dataStore(apiUrl + "items/contact"),
    	itemCustomerDS 	 		: dataStore(apiUrl + "items/contact"),
    	vendorDS  				: new kendo.data.DataSource({
		  	data: banhji.source.supplierList,
			sort: { field:"number", dir:"asc" }
		}),
		customerDS  			: new kendo.data.DataSource({
		  	data: banhji.source.customerList,
			sort: { field:"number", dir:"asc" }
		}),
    	categoryDS 				: new kendo.data.DataSource({
		  	data: banhji.source.categoryList,
		  	filter: { field:"item_type_id", value: 2 }//Non Inventory
		}),
    	inventoryAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 13 },
		  	sort: { field:"number", dir:"asc" }
		}),
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		originalNo 				: "",
		notDuplicateNumber 		: true,    	
    	pageLoad 				: function(id, category_id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, category_id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Pattern
		loadPattern 			: function(){
			var self = this, obj = self.get("obj");

			if(obj.category_id){
				var cat = this.categoryDS.get(obj.category_id);

				this.patternDS.query({
					filter: [
						{ field:"category_id", value: obj.category_id },
						{ field:"is_pattern", value: 1 }
					],
					page: 1,
					pageSize: 1
				}).then(function(){
					var view = self.patternDS.view();				

					if(view.length>0){
		      			obj.set("item_group_id", view[0].item_group_id),
		      			obj.set("brand_id", view[0].brand_id),
		      			obj.set("measurement_id", view[0].measurement_id),
		      			obj.set("abbr", cat.abbr),
		      			obj.set("number", ""),
		      			obj.set("name", ""),
		      			obj.set("purchase_description", view[0].purchase_description),
		      			obj.set("sale_description", view[0].sale_description),
		      			obj.set("measurements", view[0].measurements),
		      			obj.set("color_code", view[0].color_code),
		      			obj.set("international_code", view[0].international_code),
		      			obj.set("inventory_account_id", view[0].inventory_account_id),
		      			obj.set("favorite", view[0].favorite)
					}else{
		      			obj.set("item_group_id", ""),
		      			obj.set("brand_id", ""),
		      			obj.set("measurement_id", ""),
		      			obj.set("abbr", ""),
		      			obj.set("number", ""),
		      			obj.set("name", ""),
		      			obj.set("purchase_description", ""),
		      			obj.set("sale_description", ""),
		      			obj.set("measurements", ""),
		      			obj.set("color_code", ""),
		      			obj.set("international_code", ""),
		      			obj.set("inventory_account_id", ""),
		      			obj.set("favorite", false)
					}
				});
			}
		},
      	//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(this.get("isEdit")){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"category_id", value: obj.category_id });

				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);						
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}		
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"category_id", value:obj.category_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		categoryChanges 		: function(){
			var obj = this.get("obj");

			if(obj.category_id && obj.isNew()){
				this.loadPattern();
				this.generateNumber();
			}
		},
		//Item Price
		addItemPrice 			: function (item_id) {
			var obj = this.get("obj");

      		this.itemPriceDS.add({
      			item_id			: item_id,
      			measurement_id 	: obj.measurement_id,
      			unit_value		: 1,
      			locale 			: obj.locale
			});

			this.itemPriceDS.sync();
			var loaded = false;
			this.itemPriceDS.bind("requestEnd", function(e){
				if(e.type=="create" && loaded==false){
					loaded = true;

					banhji.source.loadItemPrices();
				}
			});
      	},
      	//Item Contact
		loadItemContact			: function(){
    		var obj = this.get("obj");

			this.itemVendorDS.query({
				filter: [ 
					{ "field":"item_id", value: obj.id },
					{ "field":"type", value: "vendor" }
				],
				page: 1,
				pageSize: 100
			});

			this.itemCustomerDS.query({
				filter: [ 
					{ "field":"item_id", value: obj.id },
					{ "field":"type", value: "customer" }
				],
				page: 1,
				pageSize: 100
			});
		},
	    addEmptyItemVendor 		: function(){
			var obj = this.get("obj");
			
			this.itemVendorDS.add({
				item_id 	: obj.id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 		: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var obj = this.get("obj");

			this.itemCustomerDS.add({
				item_id 	: obj.id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 		: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		},
		//Obj
		loadObj 				: function(id, category_id){
    		var self = this, para = [];

    		if(id>0){
				para.push({ field:"id", value: id });
			}

			if(category_id){
				para.push({ field:"category_id", value: category_id });
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
		    	self.loadItemContact();
			});
    	},
      	addEmpty 				: function(){
      		var self = this;

      		this.dataSource.data([]);
      		this.itemVendorDS.data([]);
	      	this.itemCustomerDS.data([]);

	      	this.set("isEdit", false);
      		this.set("obj", null);

      		this.patternDS.query({
      			filter:[
      				{ field:"category_id", value:2 },
      				{ field:"is_pattern", value:1 }
      			],
      			page:1,
      			pageSize:1
      		}).then(function(){
      			var view = self.patternDS.view(),
      			cat = self.categoryDS.at(0);

      			self.dataSource.insert(0, {				
					item_type_id 			: 2,//Non Inventory Part      			      			
	      			category_id 			: view[0].category_id,
	      			item_group_id 			: view[0].item_group_id,
	      			brand_id 				: view[0].brand_id,
	      			measurement_id			: view[0].measurement_id,
	      			abbr 					: cat.abbr,
	      			number 					: "",
	      			name 					: "",
	      			purchase_description	: view[0].purchase_description,
	      			sale_description		: view[0].sale_description,
	      			measurements 			: view[0].measurements,
	      			color_code 				: view[0].color_code,
	      			international_code 		: view[0].international_code,
	      			inventory_account_id 	: view[0].inventory_account_id,
	      			image_url 				: banhji.no_image,
	      			favorite 				: view[0].favorite,
	      			is_pattern 				: 0,
	      			status 					: 1,
	      			deleted 				: 0								
				});

				var obj = self.dataSource.at(0);
				self.set("obj", obj);
				self.generateNumber();
      		});
      	},
      	objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Edit Mode
	    	if(this.get("isEdit")){
	    		//Contact Item has changes
		    	if(this.itemVendorDS.hasChanges() || this.itemCustomerDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			//Add first item price
	      			self.addItemPrice(data[0].id);
				}
				
      			self.itemVendorDS.sync();
      			self.itemCustomerDS.sync();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.itemVendorDS.cancelChanges();
			this.itemCustomerDS.cancelChanges();
			
			this.dataSource.data([]);
			this.itemVendorDS.data([]);
			this.itemCustomerDS.data([]);

			banhji.userManagement.removeMultiTask("item");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			if(!obj.is_system==1){
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						obj.set("deleted", 1);
				        self.dataSource.sync();

				        window.history.back();				        
					}
				});
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
	banhji.fixedAssets =  kendo.observable({
    	lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "items"),
    	patternDS 				: dataStore(apiUrl + "items"),
    	deleteDS 				: dataStore(apiUrl + "item_lines"),
    	measurementDS			: dataStore(apiUrl + "measurements"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	itemPriceDS 			: dataStore(apiUrl + "item_prices"),
    	categoryDS 				: new kendo.data.DataSource({
		  	data: banhji.source.categoryList,
		  	filter: { field:"item_type_id", value: 3 }//Fixed Asset
		}),
    	fixedAssetAccountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 16 },
		  	sort: { field:"number", dir:"asc" }
		}),
    	accumulatedAccountDS 	: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 18 },
		  	sort: { field:"number", dir:"asc" }
		}),
    	deposalAccountDS 		: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
		  	filter: { field:"account_type_id", value: 38 },
		  	sort: { field:"number", dir:"asc" }
		}),
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		notDuplicateNumber 		: true,    	
    	pageLoad 				: function(id, category_id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, category_id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Pattern
		loadPattern 			: function(){
			var self = this, obj = self.get("obj"), 
			cat = this.categoryDS.get(obj.category_id);

			this.patternDS.query({
				filter: [
					{ field:"category_id", value: obj.category_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();

				if(view.length>0){
	      			obj.set("category_id", view[0].category_id),
	      			obj.set("measurement_id", view[0].measurement_id),
	      			obj.set("abbr", cat.abbr),	      			
	      			obj.set("name", ""),
	      			obj.set("purchase_description", view[0].purchase_description),
	      			obj.set("sale_description", view[0].sale_description),
	      			obj.set("locale", view[0].locale),
	      			obj.set("inventory_account_id", view[0].inventory_account_id),
	      			obj.set("income_account_id", view[0].income_account_id),
	      			obj.set("expense_account_id", view[0].expense_account_id)
	      			obj.set("favorite", view[0].favorite)
				}else{
					obj.set("category_id", 0),
	      			obj.set("measurement_id", 0),
	      			obj.set("abbr", ""),
	      			obj.set("number", ""),
	      			obj.set("name", ""),
	      			obj.set("purchase_description", ""),
	      			obj.set("sale_description", ""),
	      			obj.set("locale", ""),
	      			obj.set("inventory_account_id", 0),
	      			obj.set("income_account_id", 0),
	      			obj.set("expense_account_id", 0)
				}
			});
		},
      	//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(this.get("isEdit")){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}

				para.push({ field:"abbr", value: obj.abbr });
				para.push({ field:"number", value: obj.number });
				para.push({ field:"category_id", value: obj.category_id });

				this.existingDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);						
					}else{
						self.set("notDuplicateNumber", true);
					}
				});							
			}		
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"category_id", value:obj.category_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				var lastNo = 0;
				if(view.length>0){
					lastNo = kendo.parseInt(view[0].number);
				}
				lastNo++;
				obj.set("number",kendo.toString(lastNo, "00000"));
			});
		},
		categoryChanges 		: function(){
			var obj = this.get("obj");

			if(obj.category_id && obj.isNew()){
				this.loadPattern();				
				this.generateNumber();
			}
		},
		//Obj
		loadObj 				: function(id, category_id){
    		var self = this, para = [];

    		if(id>0){
				para.push({ field:"id", value: id });
			}

			if(category_id){
				para.push({ field:"category_id", value: category_id });
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
      	addEmpty 				: function(){
      		var self = this;
      		this.dataSource.data([]);
      		
	      	this.set("isEdit", false);
      		this.set("obj", null);

			this.patternDS.query({
      			filter:[
      				{ field:"category_id", value:7 },
      				{ field:"is_pattern", value:1 }
      			],
      			page:1,
      			pageSize:1
      		}).then(function(){
      			var view = self.patternDS.view(),
      			cat = self.categoryDS.at(0);

      			self.dataSource.insert(0, {
					item_type_id 			: 3,//Fixed Assets      			      			
	      			category_id 			: view[0].category_id,
	      			measurement_id			: view[0].measurement_id,
	      			abbr 					: cat.abbr,
	      			number 					: "",
	      			name 					: "",
	      			purchase_description	: view[0].purchase_description,
	      			sale_description		: view[0].sale_description,
	      			locale 					: view[0].locale,
	      			inventory_account_id 	: view[0].inventory_account_id,
	      			income_account_id  		: view[0].income_account_id,
	      			expense_account_id 		: view[0].expense_account_id,
	      			image_url 				: banhji.no_image,
	      			is_pattern 				: 0,
	      			status 					: 1,
	      			deleted 				: 0								
				});

				var obj = self.dataSource.at(0);				
				//Pattern
				// if(self.get("contact_type_id")>0){
				// 	obj.set("contact_type_id", self.get("contact_type_id"));
				// 	obj.set("abbr", "");
				// 	obj.set("is_pattern", 1);
				// }

				self.set("obj", obj);
				self.generateNumber();
      		});
      	},
      	objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
	      			
				}
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();			
			
			this.dataSource.data([]);			

			banhji.userManagement.removeMultiTask("fixed_assets");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);
			
			if(!obj.is_system==1){
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						obj.set("deleted", 1);
				        self.dataSource.sync();

				        window.history.back();				        
					}
				});
			}	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
	banhji.txnItem =  kendo.observable({
    	lang 					: langVM,
    	dataSource 				: dataStore(apiUrl + "items"),
    	deleteDS 				: dataStore(apiUrl + "item_lines"),
    	numberDS 				: dataStore(apiUrl + "items"),
    	existingDS 				: dataStore(apiUrl + "items"),
    	currencyDS  			: new kendo.data.DataSource({
		  	data: banhji.source.currencyList,
		  	filter: { field:"status", value: 1 }
		}),
    	accountDS  			: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),   	
    	statusList 				: banhji.source.statusList,
    	confirmMessage 			: banhji.source.confirmMessage,
    	obj 	 				: null,
    	isEdit 					: false,
    	saveClose 				: false,
		showConfirm 			: false,
		originalName 			: "",
		isDuplicateNumber 		: false,
		account_id 				: 0,
		user_id					: banhji.source.user_id,
    	pageLoad 				: function(id){			
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}  																							
		},
		//Number      	
		checkExistingName 	: function(){
			var self = this, para = [], 
			obj = this.get("obj"),
			originalName = this.get("originalName");			
			
			if(obj.name!=="" && obj.name!==originalName){
				this.existingDS.query({
					filter: [
						{ field:"name", value: obj.name },
						{ field:"category_id", value: obj.category_id }
					],
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("isDuplicateNumber", true);						
					}else{
						self.set("isDuplicateNumber", false);
					}
				});							
			}else{
				this.set("isDuplicateNumber", false);
			}			
		},
		//Obj
    	loadObj 				: function(id){
    		var self = this;			

    		this.dataSource.query({    			
				filter: { field:"id", value: id },
				page:1,
				pageSize:1
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);

		    	self.set("account_id", view[0].income_account_id);
		    	if(view[0].expense_account_id>0){
		    		self.set("account_id", view[0].expense_account_id);
		    	}		    	
		    	self.set("originalName", view[0].name);
			});
    	},		
      	addEmpty 				: function(){
      		this.dataSource.data([]);

      		this.set("isEdit", false);
      		this.set("obj", null);

      		this.dataSource.insert(0, {
      			inventory_account_id 	: 0,
      			item_type_id 			: 5,//Transaction type
      			category_id 			: 4,
      			name 					: "",
      			purchase_description	: "",
      			sale_description		: "",
      			locale 					: banhji.locale,
      			image_url 				: banhji.no_image,
      			status 					: 1
			});

			var obj = this.dataSource.at(0);

			this.set("obj", obj);
      	},
      	objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },			
		save 					: function(){
			var self = this, obj = this.get("obj");

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh
				banhji.source.loadItems();
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();						
			this.dataSource.data([]);
			
			banhji.userManagement.removeMultiTask("txn_item");
		},
		delete 					: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			this.deleteDS.query({
			  	filter: { field: "item_id", value: obj.id },
			  	page: 1,
			  	pageSize: 1
			}).then(function() {
				var view = self.deleteDS.view();

				if(view.length>0){
					alert("Sorry, you can not delete it because it is using now.");
				}else{
					obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();				        
				}
			});	
		},
		openConfirm 			: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 			: function(){
			this.set("showConfirm", false);
		}
    });
    banhji.itemAdjustment = kendo.observable({
    	lang 					: langVM,
    	dataSource  			: dataStore(apiUrl + "transactions"),
    	recurringDS 			: dataStore(apiUrl + "transactions"),
		recurringLineDS 		: dataStore(apiUrl + "item_lines"),    	
    	journalLineDS			: dataStore(apiUrl + "journal_lines"),
    	attachmentDS	 		: dataStore(apiUrl + "attachments"),
		itemDS  				: dataStore(apiUrl + "items/on_hand"),
		itemGroupDS 			: banhji.source.itemGroupDS,
		lineDS  				: new kendo.data.DataSource({
    		transport: {
				read 	: {
					url: apiUrl + "item_lines",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "item_lines",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "item_lines",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "item_lines",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: false,
			serverSorting: false,
			serverPaging: false,
			page: 1,
			pageSize: 20
		}),
		categoryDS 				: new kendo.data.DataSource({
		  	data: banhji.source.categoryList,
		  	filter: [
		  		{ field:"item_type_id", value: 1 },
		  		{ field:"id", operator:"neq", value: 5 },
		  		{ field:"id", operator:"neq", value: 6 }
		  	]
		}),
		contactDS  				: new kendo.data.DataSource({
		  	data: banhji.source.employeeList,
		  	filter:{ field: "item_type_id", value: 10 },//Employee
			sort: { field:"number", dir:"asc" }
		}),
		accountDS  				: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),
		jobDS 					: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		txnTemplateDS 			: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{ field: "type", value: "Item_Adjustment" }
		}),
		recurringItemList 		: [],
		confirmMessage 			: banhji.source.confirmMessage,
		frequencyList 			: banhji.source.frequencyList,
		monthOptionList 		: banhji.source.monthOptionList,
		monthList 				: banhji.source.monthList,
		weekDayList 			: banhji.source.weekDayList,
		dayList 				: banhji.source.dayList,
		showMonthOption 		: false,
		showMonth 				: false,
		showWeek 				: false,
		showDay 				: false,
		obj 					: null,
		isEdit 					: false,
		saveClose 				: false,
		savePrint 				: false,
		saveRecurring 			: false,
		recurring_validate 		: false,
		recurring 				: "",
		searchText 				: "",
		category_id 			: null,
		item_group_id 			: null,
		user_id					: banhji.source.user_id,
		pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Upload
		onSelect 				: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 				: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}
	    },
	    uploadFile 				: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {
	                	// console.log(err, data);
	                	// var url = data.Location;
	            	});
            	}
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
	    //Currency Rate
		setRate 				: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));
			
			obj.set("rate", rate);
		},
        //Segment
        segmentChanges 			: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Search
		search 					: function(){
			var self = this,
			para = [],
			obj = this.get("obj"),
			recurringItemList = this.get("recurringItemList"),
			category_id = this.get("category_id"),
			item_group_id = this.get("item_group_id"),
			searchText = this.get("searchText");
			
			if(this.lineDS.total()>0){
				var existingIds = [];
				$.each(this.lineDS.data(), function(index, value){
					existingIds.push(value.item_id);
				});
				para.push({ field:"id", operator:"where_not_in", value:existingIds });
			}

            if(searchText!==""){
				var textParts = searchText.replace(/([a-z]+)/i, "$1 ").split(/[^0-9a-z]+/ig);

				para.push(
					{ field:"abbr", value: textParts[0] },
					{ field:"number", value: textParts[1] }
				);
			}

			if(item_group_id){
				para.push({ field:"item_group_id", value:item_group_id });
			}else if(category_id){
				para.push({ field:"category_id", value:category_id });
			}

			if(recurringItemList.length>0){
				var ids = [];
				$.each(recurringItemList, function(index, value){
					ids.push(value);
				});
				para.push({ field:"id", operator:"where_in", value:ids });
			}

			para.push({ field:"item_type_id", value:1 });
			para.push({ field:"is_catalog", value: 0 });
			para.push({ field:"is_assembly", value: 0 });

            this.itemDS.query({
            	filter: para
            }).then(function(data){
            	var view = self.itemDS.view();

            	$.each(view, function(index, value){
            		self.lineDS.add({
            			transaction_id 		: 0,
						item_id 			: value.id,
						measurement_id 		: value.measurement_id,
						description 		: value.name,
						on_hand 			: value.on_hand,
						quantity_adjusted 	: "",				
						quantity 	 		: 0,
						unit_value 			: 1,
						cost 				: value.cost,
						additional_cost 	: 0,
						rate				: banhji.source.getRate(value.locale, new Date(obj.issued_date)),
						locale				: value.locale,
						movement 			: 1
            		});
            	});
            });

            this.set("searchText", "");
            this.set("category_id", null);
            this.set("item_group_id", null);

            //Clear array
			if(recurringItemList.length>0){
				recurringItemList.splice(0,recurringItemList.length);
			}
		},
		enterSearch 			: function(e){
			e.preventDefault();

			this.search();
		},
		onChange 				: function(e) {
      		var data = e.data;            
            
            if(data.quantity_adjusted){
            	var diff = data.quantity_adjusted - data.on_hand;
		        
		        if(diff>0){
		        	data.set("movement", 1);
		        }else{
		        	data.set("movement", -1);
		        }

		        data.set("quantity", Math.abs(diff));
			}
			
			var index = this.lineDS.indexOf(data);
			index++;
			var nextDataItem = this.lineDS.at(index);

			if(nextDataItem){
				$(".txt"+nextDataItem.uid).focus();
			}else{
				var firstRow = this.lineDS.at(0);
				$(".txt"+firstRow.uid).focus();
			}            
        },
		removeRow 				: function(e){
			var d = e.data;
			this.lineDS.remove(d);
		},
		//Obj
		loadObj 				: function(id){
			var self = this, para = [];

    		para.push({ field:"id", value: id });

			if(this.get("recurring")=="use"){
				this.set("recurring","");
				this.addEmpty();
				this.loadRecurring(id);
			}else{
				if(this.get("recurring")=="edit"){
					this.set("recurring","");
					para.push({ field:"is_recurring", value: 1 });
				}

	    		this.dataSource.query({
					filter: para,
					page:1,
					pageSize:100
				}).then(function(e){
					var view = self.dataSource.view();

			    	self.set("obj", view[0]);
			    	// self.journalLineDS.filter({ field:"transaction_id", value: id });

			    	var filter = {
			    		filters: [
			    			{field: "transaction_id", value: id}
			    		]
			    	};
			    	self.lineDS.transport.options.read.data={"filter":filter};
					self.lineDS.read();
				});
			}
    	},
        addEmpty 		 		: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			
			this.dataSource.insert(0, {
				transaction_template_id : "",
				employee_id 			: "",
				job_id 					: "",
				account_id 	 			: "",
			   	type					: "Item_Adjustment",
			   	rate					: banhji.source.getRate(banhji.locale, new Date()),
			   	locale 					: banhji.locale,
			   	issued_date 			: new Date(),
			   	memo 					: "",
			   	memo2 					: "",
			   	segments 				: [],
			   	is_journal 				: 1,
			   	//Recurring
			   	recurring_name 			: "",
			   	start_date 				: new Date(),
			   	frequency 				: "Daily",
			   	month_option 			: "Day",
			   	interval 				: 1,
			   	day 					: 1,
			   	week 					: 0,
			   	month 					: 0,
			   	is_recurring 			: 0
	    	});
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);
		},
	    objSync 				: function(){
	    	var dfd = $.Deferred();

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.dataSource.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");
			obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

		    //Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		obj.set("number", "");
	    		obj.set("is_recurring", 1);
	    	}else{
	    		//Remove Empty Row
				var raw = this.lineDS.data();
			    var item, i;
			    for(i=raw.length-1; i>=0; i--){
			    	item = raw[i];
			    	
			    	if (item.quantity_adjusted=="") {
				       	this.lineDS.remove(item);
				    }
			    }
	    	}

			// Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//Item Line
					$.each(self.lineDS.data(), function(index, value){
	      				value.set("transaction_id", data[0].id);
	      			});

	      			//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
					if(data[0].is_recurring==0){
			            self.addJournal(data[0].id);
		        	}
				}
				
      			self.lineDS.sync();
      			self.uploadFile();

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();
					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.journalLineDS.cancelChanges();
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);

			banhji.userManagement.removeMultiTask("item_adjustment");
		},
		//Journal
	    addJournal 				: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	inventoryList = {};
			
			//Group accounts
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				accountID = item.inventory_account_id,
				itemRate = banhji.source.getRate(item.locale, new Date(obj.issued_date));

				var itemCost = (value.quantity*value.unit_value)*value.movement*(kendo.parseFloat(item.cost)/itemRate);
				if(itemCost==0){
					itemCost = (value.quantity*value.unit_value)*value.movement*(value.cost/itemRate);
				}
				
				if(inventoryList[accountID]===undefined){
					inventoryList[accountID]={"id": accountID, "amount": itemCost };
				}else{
					if(inventoryList[accountID].id===accountID){
						inventoryList[accountID].amount += itemCost;
					}else{
						inventoryList[accountID]={"id": accountID, "amount": itemCost };
					}
				}
			});//End Foreach Loop

			//Start journal
			if(!jQuery.isEmptyObject(inventoryList)){
				var gainLoss = 0;

				$.each(inventoryList, function(index, value){
					gainLoss += value.amount;

					if(value.amount>0){
						//Add +Positive Inventory On Dr
						self.journalLineDS.add({
							transaction_id 		: transaction_id,
							account_id 			: value.id,
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],
							dr 	 				: Math.abs(value.amount),
							cr 					: 0,
							rate				: obj.rate,
							locale				: obj.locale
						});
					}else{
						//Add -Negative Inventory On Cr
						self.journalLineDS.add({
							transaction_id 		: transaction_id,
							account_id 			: value.id,
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],
							dr 	 				: 0,
							cr 					: Math.abs(value.amount),
							rate				: obj.rate,
							locale				: obj.locale
						});
					}
				});

				//Add Gain Or Loss Account
				var dr = 0, cr = 0;
				if(gainLoss>0){
					cr = Math.abs(gainLoss);
				}else{
					dr = Math.abs(gainLoss);
				}

				self.journalLineDS.add({
					transaction_id 		: transaction_id,
					account_id 			: obj.account_id,
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],
					dr 	 				: dr,
					cr 					: cr,
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			this.journalLineDS.sync();
		},
		//Recurring
		loadRecurring 		: function(id){
			var self = this, raw = this.get("recurringItemList");

			this.recurringDS.query({
				filter:[
					{ field:"id", value:id },
					{ field:"is_recurring", value:1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.recurringDS.view(),
				obj = self.get("obj");
				
				obj.set("recurring_id", id);
				obj.set("account_id", view[0].account_id);
				obj.set("employee_id", view[0].employee_id);//Employee
				obj.set("job_id", view[0].job_id);
				obj.set("segments", view[0].segments);
				obj.set("memo", view[0].memo);
				obj.set("memo2", view[0].memo2);
			});

			this.recurringLineDS.query({
				filter: { field:"transaction_id", value:id }
			}).then(function(){
				var view = self.recurringLineDS.view();

				$.each(view, function(index, value){
					raw.push(value.item_id);
				});

				self.search();
			});
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		}
	});
	banhji.internalUsage = kendo.observable({
    	lang 					: langVM,
    	dataSource  			: dataStore(apiUrl + "transactions"),
    	lineDS  				: dataStore(apiUrl + "item_lines"),
    	txnDS  					: dataStore(apiUrl + "transactions"),
    	accountLineDS  			: dataStore(apiUrl + "account_lines"),
    	toItemLineDS  			: dataStore(apiUrl + "item_lines"),
    	toAccountLineDS  		: dataStore(apiUrl + "account_lines"),
    	journalLineDS			: dataStore(apiUrl + "journal_lines"),	
		txnTemplateDS 			: new kendo.data.DataSource({
		  	data: banhji.source.txnTemplateList,
		  	filter:{
			    logic: "or",
			    filters: [
			      	{ field: "type", value: "Internal_Usage" },
			      	{ field: "type", value: "Transfer_In" },
			      	{ field: "type", value: "Transfer_Out" },
			      	{ field: "type", value: "Usage_Disposal" }
			    ]
			}
		}),
		itemDS  				: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:[
				{ field: "item_type_id", operator:"neq", value: 3 },
				{ field: "is_catalog", value: 0 },
				{ field: "is_assembly", value: 0 }
			],
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		accountDS  				: new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			sort: { field:"number", dir:"asc" }
		}),
		jobDS 					: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		segmentItemDS 			: new kendo.data.DataSource({
		  	data: banhji.source.segmentItemList,
		  	sort: [
			  	{ field: "segment_id", dir: "asc" },
			  	{ field: "code", dir: "asc" }
			]
		}),
		inventoryFixAssetAccountDS : new kendo.data.DataSource({
		  	data: banhji.source.accountList,
			filter:{
			    logic: "or",
			    filters: [
			      	{ field: "account_type_id", value: 13 },
			      	{ field: "account_type_id", value: 16 },
			      	{ field: "account_type_id", value: 19 }
			    ]
			},
			sort: { field:"number", dir:"asc" }
		}),
		attachmentDS	 		: dataStore(apiUrl + "attachments"),
		amtDueColor 			: banhji.source.amtDueColor,
	    confirmMessage 			: banhji.source.confirmMessage,
		frequencyList 			: banhji.source.frequencyList,
		monthOptionList 		: banhji.source.monthOptionList,
		monthList 				: banhji.source.monthList,
		weekDayList 			: banhji.source.weekDayList,
		dayList 				: banhji.source.dayList,
		showMonthOption 		: false,
		showMonth 				: false,
		showWeek 				: false,
		showDay 				: false,
		obj 					: null,
		isEdit 					: false,
		saveClose 				: false,
		savePrint 				: false,
		showConfirm 			: false,
		notDuplicateNumber 		: true,
		type 					: "Item",
		isItemType 				: false,
		total 					: 0,
		user_id					: banhji.source.user_id,
		pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
		//Upload
		onSelect 				: function(e){
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");

	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		user_id 		: self.get("user_id"),
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		size 			: value.size,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 				: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 				: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
	    //Currency Rate
		setRate 				: function(){
			var obj = this.get("obj"), 
			rate = banhji.source.getRate(obj.locale, new Date(obj.issued_date));			
			
			obj.set("rate", rate);					
		},
        //Segment        
        segmentChanges 			: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item
		itemChanges 		: function(e){
			e.preventDefault();

			var self = this, data = e.data, obj = this.get("obj");			
			
			if(data.item_id>0){
				var item = this.itemDS.get(data.item_id),
				itemPriceList = [],
	        	rate = obj.rate / banhji.source.getRate(item.locale, new Date(obj.issued_date));

	        	$.each(banhji.source.itemPriceList, function(index, value){
	        		if(value.item_id==data.item_id){
	        			itemPriceList.push(value);
	        		}
	        	});

	    		data.set("measurement_id", item.measurement_id);
	    		data.set("description", item.purchase_description);
	    		data.set("quantity", 1);
	    		data.set("unit_value", 1);
		        data.set("cost", item.cost*rate);
		        data.set("rate", rate);	
		        data.set("locale", item.locale);
		        data.set("item_prices", itemPriceList);			        

		        this.changes();
	        }else{
	        	data.set("item_id", "");
	        	alert(banhji.source.duplicateSelectedItemMessage);
	        }
		},
		measurementChanges 	: function(e){
			var data = e.data, obj = this.get("obj");

			if(data.measurement_id>0){
				$.each(banhji.source.itemPriceList, function(index, value){
					if(value.item_id==data.item_id && value.measurement_id==data.measurement_id){
				        data.set("unit_value", value.unit_value);
				        
						return false;
					}
				});
	        }
		},
		toItemChanges 			: function(e){
			var self = this, data = e.data,
			itemPriceList = [],
			item = this.itemDS.get(data.item_id);

			$.each(banhji.source.itemPriceList, function(index, value){
        		if(value.item_id==data.item_id){
        			itemPriceList.push(value);
        		}
        	});
			
    		data.set("measurement_id", item.measurement_id);
    		data.set("description", item.purchase_description);
    		data.set("quantity", 1);
	        data.set("item_prices", itemPriceList);
		},
		typeChanges 			: function(){
			var self = this, 
			obj = this.get("obj");

			$.each(this.toItemLineDS.data(), function(index, value){
				if(value.movement=="1"){
					self.toItemLineDS.remove(value);

					return false;
				}
			});

			$.each(this.toAccountLineDS.data(), function(index, value){
				if(value.movement=="1"){
					self.toAccountLineDS.remove(value);

					return false;
				}
			});

			if(this.get("type")=="Item"){
				this.set("isItemType", true);

				this.toItemLineDS.insert(0, {					
					transaction_id 		: obj.id,
					tax_item_id 		: "",
					item_id 			: "",				
					measurement_id 		: 0,				
					description 		: "",				
					quantity 	 		: 1,
					cost 				: 0,
					price 				: 0,												
					amount 				: 0,
					rate				: obj.rate,
					locale				: obj.locale,							
					movement 			: 1
				});
			}else{
				this.set("isItemType", false);

				this.toAccountLineDS.insert(0, {					
					transaction_id 		: obj.id,
					account_id 			: "",				
					description 		: "",											
					amount 				: 0,
					rate				: obj.rate,
					locale				: obj.locale,
					movement 			: 1 //To Account
				});
			}

			this.changes();
		},
		changes 				: function() {
			var obj = this.get("obj"), sum = 0;

			//Item
			$.each(this.lineDS.data(), function(index, value){
				sum += value.quantity * value.cost;
			});

			//Account
			$.each(this.accountLineDS.data(), function(index, value){
				sum += value.amount;
			});

			this.set("total", kendo.toString(sum, "c", obj.locale));
			obj.set("amount", sum);

			if(this.get("isItemType")){
				var toItemLine = this.toItemLineDS.at(0);

				toItemLine.set("cost", sum/toItemLine.quantity);
				toItemLine.set("amount", sum);
			}else{
				var toAccountLine = this.toAccountLineDS.at(0);
				
				toAccountLine.set("amount", sum);
			}
        },
        addRow 					: function(){
			var obj = this.get("obj");
			
			this.lineDS.add({
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",
				measurement_id 		: 0,
				description 		: "",
				quantity 	 		: 1,
				cost 				: 0,
				price 				: 0,
				amount 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1
			});
		},
		removeRow 				: function(e){
			var data = e.data;
			if(this.lineDS.total()>1){
				this.lineDS.remove(data);
		        this.changes();
	        }
		},
		//Account Line
		addRowAccount 			: function(){
			var obj = this.get("obj");
			this.accountLineDS.add({
				transaction_id 		: obj.id,
				account_id 			: "",
				description 		: "",
				amount 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				movement 			: -1 //From Account
			});
		},
		removeRowAccount 		: function(e){
			var data = e.data;

			this.accountLineDS.remove(data);
	        this.changes();
		},
		//Number      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj");
			
			if(obj.number!==""){

				if(obj.isNew()==false){
					para.push({ field:"id", operator:"where_not_in", value: [obj.id] });
				}
				
				para.push({ field:"number", value: obj.number });
				para.push({ field:"type", value: obj.type });

				this.txnDS.query({
					filter: para,
					page: 1,
					pageSize: 1
				}).then(function(e){
					var view = self.txnDS.view();
					
					if(view.length>0){
				 		self.set("notDuplicateNumber", false);
					}else{
						self.set("notDuplicateNumber", true);
					}
				});
			}
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj"),
			issueDate = new Date(obj.issued_date),
			startDate = new Date(obj.issued_date),
			endDate = new Date(obj.issued_date);

			this.set("notDuplicateNumber", true);

			startDate.setDate(1);
			startDate.setMonth(0);//Set to January
			endDate.setDate(31);
			endDate.setMonth(11);//Set to November

			this.txnDS.query({
				filter:[
					{ field:"type", value:obj.type },
					{ field:"issued_date >=", value:kendo.toString(startDate, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:kendo.toString(endDate, "yyyy-MM-dd") }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.txnDS.view(),				
				number = 0, str = "";

				if(view.length>0){
					str = view[0].number;
					str = str.substring(str.length-4, str.length);
					number = kendo.parseInt(str);
				}
				
				number++;
				str = banhji.source.getPrefixAbbr(obj.type) + kendo.toString(issueDate, "yy") + kendo.toString(issueDate, "MM") + kendo.toString(number, "00000");
				
				obj.set("number", str);
			});
		},
		//Obj
		loadObj 				: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id },
				page:1,
				pageSize:100
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
		    	self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
		    			    	
		    	self.journalLineDS.filter({ field:"transaction_id", value: id });
		    	
		    	//To		    	
		    	self.toAccountLineDS.query({
		    		filter:[
			    		{ field:"transaction_id", value: id },
			    		{ field:"movement", value: 1 }
			    	],
			    	page:1,
			    	pageSize:1
		    	}).then(function(){
		    		var view = self.toAccountLineDS.view();
		    		if(view.length>0){
		    			self.set("type", "Account");
		    			self.set("isItemType", false);
		    		}
		    	});		    	

		    	//From
		    	self.accountLineDS.filter([
		    		{ field:"transaction_id", value: id },
		    		{ field:"movement", value: -1 }
		    	]);
		    	
		    	self.loadLines(id);
			});
    	},
    	loadLines 			: function(id){
			var self = this;

			this.toItemLineDS.query({
	    		filter:[
		    		{ field:"transaction_id", value: id },
		    		{ field:"movement", value: 1 }
		    	],
		    	page:1,
		    	pageSize:1
	    	}).then(function(){
	    		var view = self.toItemLineDS.view();
	    		if(view.length>0){
	    			self.set("type", "Item");
	    			self.set("isItemType", true);

	    			$.each(view, function(index, value){
						var itemPriceList = [];
						$.each(banhji.source.itemPriceList, function(ind, val){
			        		if(val.item_id==value.item_id){			        			
			        			itemPriceList.push(val);
			        		}
			        	});
						value.set("item_prices", itemPriceList);
					});
	    		}
	    	});

			this.lineDS.query({
				filter: [
					{ field: "transaction_id", value: id },
					{ field: "movement", value: -1 }
				],
			}).then(function(){
				var view = self.lineDS.view();

				$.each(view, function(index, value){
					var itemPriceList = [];
					$.each(banhji.source.itemPriceList, function(ind, val){
		        		if(val.item_id==value.item_id){		        			
		        			itemPriceList.push(val);
		        		}
		        	});
					value.set("item_prices", itemPriceList);
				});
			});
		},
		addEmpty 		 		: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.accountLineDS.data([]);
			this.toItemLineDS.data([]);
			this.toAccountLineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("type", "Item");
			this.set("total", 0);					

			this.dataSource.insert(0, {
				transaction_template_id : 0,
				recurring_id 		: "",
				item_id 			: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
			   	type				: "Internal_Usage",//Required
			   	number 				: "",
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.setRate();	
			this.addRow();
			this.typeChanges();
			this.generateNumber();
		},	
	    objSync 				: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },
		save 					: function(){
			var self = this, obj = this.get("obj");
			obj.set("issued_date", kendo.toString(new Date(obj.issued_date), "s"));

			//Mode
	    	if(obj.isNew()==false){
	    		//Line has changes
		    	if(this.lineDS.hasChanges() || this.accountLineDS.hasChanges() || this.toItemLineDS.hasChanges() || this.toAccountLineDS.hasChanges()){
		    		$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);
					});

					this.addJournal(obj.id);
		    	}
	    	}

			//Save Obj
			this.objSync()
			.then(function(data){ //Success
				if(self.get("isEdit")==false){
					//To Item Line
					$.each(self.toItemLineDS.data(), function(index, value){
	      				value.set("transaction_id", data[0].id);
	      			});

	      			//To Account Line
					$.each(self.toAccountLineDS.data(), function(index, value){
	      				value.set("transaction_id", data[0].id);
	      			});

	      			//Item Line
					$.each(self.lineDS.data(), function(index, value){	      			value.set("transaction_id", data[0].id);
	      			});

	      			//Account Line
					$.each(self.accountLineDS.data(), function(index, value){
	      				value.set("transaction_id", data[0].id);
	      			});

	      			//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

      			self.lineDS.sync();
      			self.accountLineDS.sync();
      			self.toItemLineDS.sync();
      			self.toAccountLineDS.sync();

      			self.uploadFile();

				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print
					self.set("savePrint", false);
					self.cancel();

					if(result[0].transaction_template_id>0){
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}
				}else{
					//Save New
					self.addEmpty();
				}
			});
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.accountLineDS.cancelChanges();
			this.toItemLineDS.cancelChanges();
			this.toAccountLineDS.cancelChanges();
			this.journalLineDS.cancelChanges();
			this.attachmentDS.cancelChanges();			
			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.accountLineDS.data([]);
			this.toItemLineDS.data([]);
			this.toAccountLineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);		

			banhji.userManagement.removeMultiTask("internal_usage");
		},
		//Journal	        
	    addJournal 				: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),		    	
	    	inventoryList = {};			
			
			//Group From Item Accounts
			$.each(this.lineDS.data(), function(index, value){										
				var item = self.itemDS.get(value.item_id),
				accountID = item.inventory_account_id,
				cost = value.quantity*value.unit_value*value.cost;

				if(inventoryList[accountID]===undefined){
					inventoryList[accountID]={ "id": accountID, "amount": cost, "rate": value.rate, "locale": value.locale };						
				}else{											
					if(inventoryList[accountID].id===accountID){
						inventoryList[accountID].amount += cost;
					}else{
						inventoryList[accountID]={ "id": accountID, "amount": cost, "rate": value.rate, "locale": value.locale };
					}
				}
			});//End Foreach Loop			

			//Start journal			
			//Add From Item Account on Dr
			$.each(this.toItemLineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id);

				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: item.inventory_account_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: value.amount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			});

			//Add From Account on Dr
			$.each(this.toAccountLineDS.data(), function(index, value){
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: value.amount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			});			

			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){										
					//Add From item's account on Cr
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: value.rate,
						locale				: value.locale
					});							
				});	
			}

			//Add From Account on Cr
			$.each(this.accountLineDS.data(), function(index, value){
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: value.amount,				
					rate				: value.rate,
					locale				: value.locale
				});
			});

			this.journalLineDS.sync();
		}
	});
	banhji.itemRecurring = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		pageLoad 			: function(){
			this.search();
		},
		search 				: function(){
			var para = [];

			para.push({ field:"type", value:"Item_Adjustment" });
			para.push({ field:"is_recurring", value: 1 });
			
			this.dataSource.filter(para);
		},
		edit 				: function(e){
			var data = e.data;
			
	        banhji.itemAdjustment.set("recurring", "edit");
	        banhji.router.navigate('/item_adjustment/' + data.id);
		},
		use 				: function(e){
			var data = e.data;

			banhji.itemAdjustment.set("recurring", "use");
	        banhji.router.navigate('/item_adjustment/' + data.id);
		}
	});
	banhji.itemSetting =  kendo.observable({
		lang 				: langVM,
		itemTypeDS 			: dataStore(apiUrl + "item_types"),
        categoryDS 			: dataStore(apiUrl + "categories"),
        itemGroupDS			: dataStore(apiUrl + "items/group"),
		brandDS				: dataStore(apiUrl + "brands"),
        measurementDS		: dataStore(apiUrl + "measurements"),
        patternDS  			: dataStore(apiUrl + "items"),
        category_code 		: "",
        category_name 		: "",
        category_abbr 		: "",
        category_item_type_id : 1,
        item_group_category_id : 0,
        item_group_code 	: "",
        item_group_name 	: "",
        item_group_abbr 	: "",
        measurement_name 	: "",
        brand_code 			: "",
        brand_name 			: "",
        brand_abbr 			: "", 
        prefixDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "prefixes",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "prefixes",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "prefixes",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "prefixes",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"type", operator:"where_in", value:["GRN", "GDN", "Adjustment", "Internal_Usage"] },			
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
        pageLoad 			: function() {
        },        
        addCategory 		: function(){
        	var self = this, 
        	name = this.get("category_name"),
        	abbr = this.get("category_abbr");

        	if(name!=="" && abbr!==""){        		
	        	this.categoryDS.add({	        		
	        		sub_of 		 	: 0,
	        		item_type_id 	: this.get("category_item_type_id"),
	        		item_id 		: 0,
	        		code 			: "",	        		
	        		name 			: name,
	        		abbr 			: abbr,	        		
	        		is_system 		: 0,
	        		item_type 		: []
	        	});

	        	this.categoryDS.sync();
	        	var saved = false;
	        	this.categoryDS.bind("requestEnd", function(e){
	        		if(e.type==="create" && saved==false){
	        			saved = true;

	        			var response = e.response.results[0];	        			
	        			self.addPattern(response.id, response.item_type_id);
	        			banhji.source.loadCategories();
	        		}
	        	});

    			this.set("category_name", "");
    			this.set("category_abbr", "");
        	}else{
        		alert("required abbr and name!");
        	}
        },
        addPattern 			: function(category_id, item_type_id){
    		this.patternDS.insert(0, {				
				item_type_id 			: item_type_id,     			      			
      			category_id 			: category_id,
      			number 					: "",
      			is_pattern 				: 1,
      			status 					: 1							
			});

			this.patternDS.sync();
        },
        addItemGroup 		: function(){
        	var self = this, 
        	category_id = this.get("item_group_category_id"),
        	name = this.get("item_group_name"),
        	abbr = this.get("item_group_abbr");

        	if(category_id>0 && name!=="" && abbr!==""){        		
	        	this.itemGroupDS.add({	        		
	        		category_id	 	: category_id,
	        		sub_of 		 	: 0,
	        		code 			: "",	        		
	        		name 			: name,
	        		abbr 			: abbr,	        		
	        		is_system 		: 0,

	        		category 		: [{name:""}]
	        	});

	        	this.itemGroupDS.sync();
	        	var saved = false;
	        	this.itemGroupDS.bind("requestEnd", function(e){
	        		if(e.type==="create" && saved==false){
	        			saved = true;
	        			banhji.source.loadItemGroups();
	        		}
	        	});

    			self.set("item_group_category_id", 0);    			
    			self.set("item_group_code", "");
    			self.set("item_group_name", "");
    			self.set("item_group_abbr", "");	        		
        	}else{
        		alert("required category, abbr, and name!");
        	}
        },
        addMeasurement 		: function(){
        	var self = this, 
        	name = this.get("measurement_name");

        	if(name!==""){
	        	this.measurementDS.add({	        		
	        		name 		: name,
	        		description : name,
	        		is_system 	: 0
	        	});

	        	this.measurementDS.sync();
	        	var saved = false;
	        	this.measurementDS.bind("requestEnd", function(e){
	        		if(saved==false){
	        			saved = true;
	        			banhji.source.loadMeasurements();
	        		}
	        	});
	        		        			
	        	this.set("measurement_name", "");	        		
        	}else{
        		alert("required name");
        	}
        },
        addBrand 			: function(){
        	var self = this, 
        	code = this.get("brand_code"),
        	name = this.get("brand_name");

        	if(name!=="" && code!==""){
	        	this.brandDS.add({
	        		sub_of 		: this.get("brand_sub_of"),
	        		code 		: code,        		
	        		name 		: name,
	        		abbr 		: this.get("brand_abbr")
	        	});

	        	this.brandDS.sync();	        	    			
	        			
    			this.set("brand_code", "");
    			this.set("brand_name", "");
    			this.set("brand_abbr", "");	        		
        	}else{
        		alert("required number and name!");
        	}
        },
        goPattern 			: function(e){
        	var data = e.data;
        	
    		if(data.item_type_id==1){        		        	
        		banhji.router.navigate('/item/0/'+data.id);
        	}else if(data.item_type_id==2){
        		banhji.router.navigate('/non_inventory_part/0/'+data.id);        	
        	}else if(data.item_type_id==3){        		        	
        		banhji.router.navigate('/fixed_assets/0/'+data.id);
        	}else if(data.item_type_id==4){        		        	
        		banhji.router.navigate('/item_service/0/'+data.id);
        	}else if(data.item_type_id==5){        		        	
        		banhji.router.navigate('/txn_item/0/'+data.id);
        	}        	
        } 
    });
    banhji.serviceSetting =  kendo.observable({
		lang 				: langVM,		        
        categoryDS 			: dataStore(apiUrl + "categories"),        
        itemGroupDS 		: dataStore(apiUrl + "items/group"),        
        measurementDS		: dataStore(apiUrl + "measurements"),        
        itemTypeDS 			: dataStore(apiUrl + "item_types"),        
        category_code 		: "",
        category_name 		: "",
        category_abbr 		: "",
        category_item_type_id : 4,
        item_group_category_id : 0,       
        item_group_code 	: "",
        item_group_name 	: "",
        item_group_abbr 	: "",        
        measurement_name 	: "",        
        pageLoad 			: function() {
        	
        },        
        addCategory 		: function(){
        	var self = this, 
        	name = this.get("category_name"),
        	code = this.get("category_code");

        	if(name!=="" && code!==""){        		
	        	this.categoryDS.add({	        		
	        		sub_of 		 	: 0,
	        		item_type_id 	: this.get("category_item_type_id"),
	        		item_id 		: 0,
	        		code 			: code,	        		
	        		name 			: name,
	        		abbr 			: this.get("category_abbr"),	        		
	        		is_system 		: 0,
	        		item_type 		: []
	        	});

	        	this.categoryDS.sync();
	        	this.set("category_code", "");
    			this.set("category_name", "");
    			this.set("category_abbr", "");
        	}else{
        		alert("required number and name!");
        	}
        },
        addItemGroup 		: function(){
        	var self = this, 
        	category_id = this.get("item_group_category_id"),
        	name = this.get("item_group_name"),
        	code = this.get("item_group_code");

        	if(category_id>0 && name!=="" && code!==""){        		
	        	this.itemGroupDS.add({	        		
	        		category_id	 	: category_id,
	        		sub_of 		 	: 0,
	        		code 			: code,	        		
	        		name 			: name,
	        		abbr 			: this.get("item_group_abbr"),	        		
	        		is_system 		: 0
	        	});

	        	this.itemGroupDS.sync();
	        	
    			self.set("item_group_category_id", 0);    			
    			self.set("item_group_code", "");
    			self.set("item_group_name", "");
    			self.set("item_group_abbr", "");	        		
        	}else{
        		alert("required category, number, and name!");
        	}
        },
        addMeasurement 		: function(){
        	var self = this, 
        	name = this.get("measurement_name");

        	if(name!==""){
	        	this.measurementDS.add({	        		
	        		name 		: name,
	        		description : name,
	        		is_system 	: 0
	        	});

	        	this.measurementDS.sync();
	        		        			
	        	this.set("measurement_name", "");	        		
        	}else{
        		alert("required name");
        	}
        },        
        goPattern 	: function(e){
        	var data = e.data;        	

        	if(kendo.parseInt(data.item_id)>0){        		       		        	
	        	banhji.router.navigate('/item_service/'+data.item_id+'/1');	        		
        	}else{        		       		        	
	        	banhji.router.navigate('/item_service');	        	   		
        		banhji.item.setPattern(data.id);
        	}
        } 
    });
    banhji.itemReportCenter = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "dashboards/inventory_report"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "dashboards/item_monthly_purchase_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),					
		pageLoad 			: function(){
			var self = this,
			today = new Date(),			        	
			start = kendo.toString(banhji.source.getFiscalDate(), "yyyy-MM-dd"),
			end = kendo.toString(today, "yyyy-MM-dd");
			console.log("akjdsflksj");
			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: start },
					{ field:"issued_date <=", value: end }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
			
				self.set("inventoryTurnOver", kendo.toString(view[0].inventoryTurnOver, "n2"));				
				self.set("grossProfitMargin", kendo.toString(view[0].grossProfitMargin, "p"));

				self.set("inventoryBalance", kendo.toString(view[0].inventoryBalance, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
			});
		}
	});
	banhji.inventoryPositionSummary = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "itemReports/position_summary"),
		company 				: banhji.institute,
		as_of 					: new Date(),
		displayDate 			: "",
		total 					: 0,
		pageLoad 				: function(){
		},
		search 					: function(){
			var as_of = this.get("as_of");

			if(as_of){
				var displayDate = "As Of " + kendo.toString(as_of, "dd-MM-yyyy");
				this.set("displayDate", displayDate);

				this.dataSource.filter({ field:"issued_date", value:kendo.toString(new Date(as_of), "yyyy-MM-dd") });
			}
		}
	});
	banhji.inventoryPositionDetail = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "itemReports/position_detail"),
		itemDS  				: new kendo.data.DataSource({
		  	data: banhji.source.itemList,
			filter:[
				{ field: "item_type_id", value: 1 },
		    	{ field: "is_catalog", operator: "neq", value: 1 },
		        { field: "is_assembly", operator: "neq", value: 1 }
			],
			sort: [
				{ field:"item_type_id", dir:"asc" },
				{ field:"number", dir:"asc" }
			]
		}),
		itemList 				: [],
		sortList				: banhji.source.sortList,
		sorter 					: "all",
		sdate 					: "",
		edate 					: "",
		company 				: banhji.institute,
		displayDate 			: "",
		total 					: 0,
		pageLoad 				: function(){
			this.search();
		},
		sorterChanges 			: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search					: function(){
			var self = this, para = [], displayDate = "",
				itemList = this.get("itemList"),
				start = this.get("sdate"),
        		end = this.get("edate");
    	
        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", value: kendo.toString(new Date(start), "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "From " + kendo.toString(new Date(start), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else if(start){
            	para.push({ field:"issued_date", value: kendo.toString(new Date(start), "yyyy-MM-dd") });

            	displayDate = "On " + kendo.toString(new Date(start), "dd-MM-yyyy");
            }else if(end){
            	para.push({ field:"issued_date <=", value: kendo.toString(new Date(end), "yyyy-MM-dd") });

            	displayDate = "As Of " + kendo.toString(new Date(end), "dd-MM-yyyy");
            }else{
            	
            }

            this.set("displayDate", displayDate);

            //Item list
            if(itemList.length>0){
            	var itemIds = [];
            	$.each(itemList, function(index, value){
            		itemIds.push(value);
            	});

            	para.push({ field: "item_id", operator:"where_in", value:itemIds });
            }

            this.dataSource.query({
            	filter:para
            }).then(function(){
            	var view = self.dataSource.view();

            	var sum = 0;
            	$.each(view, function(index, value){
            		$.each(value.line, function(ind, val){
	            		sum += val.amount;
	            	});            		
            	});
            	self.set("total", kendo.toString(sum, "c", banhji.locale));
            });
		}
	});
	banhji.inventorySaleItemAnalysis = kendo.observable({
		dataSource 		: dataStore(apiUrl + "itemReports/item_sale"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.inventorySaleItemAnalysis.dataSource.filter({
				logic: banhji.inventorySaleItemAnalysis.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.inventorySaleItemAnalysis.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.inventoryTurnoverList = kendo.observable({
		dataSource 		: dataStore(apiUrl + "itemReports/item_turnover"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.inventoryTurnoverList.dataSource.filter({
				logic: banhji.inventoryTurnoverList.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.inventoryTurnoverList.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.inventoryMovementSummary = kendo.observable({
		dataSource 		: dataStore(apiUrl + "itemReports/movement_summary"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.inventoryMovementSummary.dataSource.filter({
				logic: banhji.inventoryMovementSummary.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.inventoryMovementSummary.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.inventoryMovementDetail = kendo.observable({
		dataSource 		: dataStore(apiUrl + "itemReports/movement_detail"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.inventoryMovementDetail.dataSource.filter({
				logic: banhji.inventoryMovementDetail.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.inventoryMovementDetail.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		},
	});
	banhji.inventorySale = kendo.observable({
		institute 			: banhji.institute,
		lang 				: langVM,
		locale 				: banhji.locale,
		statementDB 		: dataStore(apiUrl + "sales/statement"),
		count 				: 0,
		total_avg 			: 0,
		saleNumber 			: 0,
		gpm 				: 0,
		total_sale 			: 0,
		companyName 		: null,
		startDate 			: "<?php echo date("d-m-y"); ?>",
		endDate				: new Date(),
		sorter				: '',
		openInvoice 		: 0,
		company 			: banhji.institute,
		sortList			: banhji.source.sortList, 
		//line to sale summary
		inventoryPositionSummary         : banhji.inventoryPositionSummary,
		inventoryPositionDetail 		 : banhji.inventoryPositionDetail,
		inventorySaleDB		 			 : banhji.inventorySaleItemAnalysis,
		inventoryTurnoverList		 	 : banhji.inventoryTurnoverList,
		inventoryMovementSummary		 : banhji.inventoryMovementSummary,
		inventoryMovementDetail		 	: banhji.inventoryMovementDetail,
		// search button
		saleDetailSearch 	: function() {
			this.detailSale.filter({
				logic: 'segment',
				filters: [
					{field: "id", "operator": "segment", value: 9},
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		},
		displayDateStart    : function() {
			return kendo.toString(new Date(this.get('startDate')), 'dd-MM-yyyy');
		},
		displayDateEnd    : function() {
			return kendo.toString(new Date(this.get('endDate')), 'dd-MM-yyyy');
		},
		trnxSearch 			: function() {},
		depositDetailSearch : function() {},
		summaryProductSearch: function() {},
		detailProductSearch : function() {},
		saleJobSearch 		: function() {},
		saleOrderSearch 	: function() {},
		balanaceSearch 		: function() {},
		balanceDetailSearch : function() {},
		agingSummarySearch  : function() {},
		agingDetailSearch   : function() {},
		collectingInvSearch : function() {},
		collectedInvSearch  : function() {},
		invoiceListSearch 	: function() {},
		customerListSearch 	: function() {},
		dateMax 			: function(e) {
			$('#edate').css('width', '160px');
			var edate = $('#edate').kendoDatePicker().data("kendoDatePicker");
			edate.min(e.sender.value());
		},
		dateMin 			: function(e) {
			$('#sdate').css('width', '160px');
			var sdate = $('#sdate').kendoDatePicker().data("kendoDatePicker");
			sdate.max(e.sender.value());
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=900, height=700'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="<?php echo base_url(); ?>assets/responsive.css" rel="stylesheet" >' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            '*{  } html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: landscape; margin:0mm; } .saleSummaryCustomer .total-customer, .saleSummaryCustomer .total-sale { background-color: #DDEBF7!important; -webkit-print-color-adjust:exact; }.saleSummaryCustomer .table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;-webkit-print-color-adjust:exact;}.saleSummaryCustomer .table.table-borderless.table-condensed  tr th span{ color: #fff!important; }.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td {  background-color: #fff!important; -webkit-print-color-adjust:exact;} .saleSummaryCustomer .table.table-borderless.table-condensed tr td { background-color: #F2F2F2!important;-webkit-print-color-adjust:exact; } </style>' +
		            '</head>' +
		            '<body><div id="example" class="k-content saleSummaryCustomer" style="padding: 30px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		dateChange 			: function(){
			// var strDate = "";

			// 	if(this.startDate && this.endDate){
			// 		strDate = "From " + kendo.toString(this.startDate, "dd-MM-yyyy") + " To " + kendo.toString(this.endDate, "dd-MM-yyyy");
			// 	}else if(this.startDate){
			// 		strDate = "On " + kendo.toString(this.startDate,"dd-MM-yyyy");
			// 	}else if(this.endDate){
			// 		strDate = "As Of " + kendo.toString(this.endDate,"dd-MM-yyyy");
			// 	}else{
			// 		strDate = "";
			// 	}

			var today = new Date(),
			day = today.getDate();
        	sdate = "",
        	edate = "",
        	value = this.get('sorter');

			switch(value){
			case "today":
				sdate = today;

			  	break;
			case "week":
				var first = new Date(today.getTime() - 60*60*24* day*1000),
				last = new Date(today.getTime() + 60*60*24* day*1000);

				sdate = first;
				edate = last;

			  	break;
			case "month":
				var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
				edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

			  	break;
			case "year":
			  	var sdate = new Date(today.getFullYear(), 0, 1),
			  	edate = new Date(today.getFullYear(), 11, 31);

			  	break;
			default:

			}

			this.set("startDate", sdate);
			this.set("endDate", edate);
			// start.value(sdate);
			// end.value(edate);

			// start.max(end.value());
		   //      	end.min(start.value());

		   //      	dateChanges();
		   //          });

		   //          start.max(end.value());
		   //          end.min(start.value());
		}
	});
    banhji.inventoryList =  kendo.observable({
		lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	categoryDS 			: dataStore(apiUrl + "categories"),
    	itemGroupDS 		: dataStore(apiUrl + "items/group"),    	
    	contactDS  			: dataStore(apiUrl + "contacts"),
    	vendorDS  			: dataStore(apiUrl + "contacts"),
    	    	
    	searchField			: "",
    	category_id 		: 0,
    	item_group_id 		: 0,     	
    	
    	pageLoad 			: function(){    		
    		
    	},
    	search 				: function(){
    		var para = [],
    		searchField = this.get("searchField"),
    		category_id = this.get("category_id"),
    		item_group_id = this.get("item_group_id");

    		if(searchField!==""){
    			para.push(      				
      				{ field: "number", operator: "like", value: searchField },
      				{ field: "name", operator: "or_like", value: searchField }
      			);
    		}

    		if(item_group_id>0){
    			para.push({ field:"item_group_id", value:item_group_id });
    		}else if(category_id>0){
    			para.push({ field:"category_id", value:category_id });
    		}

    		this.dataSource.filter(para);    		
    	},
    	searchFavorite 	: function(){
    		this.dataSource.filter({ field:"favorite", value: 1 });
    	},    	
    	vendorChanges 	: function(e){    		
    		var index = e.sender.select().index();
    		var data = this.vendorDS.at(index);    		
    		
    		this.dataSource.filter({ field:"contact_id", operator:"by_vendor", value:data.id });
    	}    		
    });
    banhji.inventoryPurchaseByVendorSummary =  kendo.observable({
    	lang 				: langVM,
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/purchase_by_vendor_summary",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "amount", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),
    	sortList			: [ 
	 		{ text:"All", value: "all" }, 
	 		{ text:"Today",	value: "today" }, 
	 		{ text:"This Week", value: "week" }, 
	 		{ text:"This Month", value: "month" }, 
	 		{ text:"This Year", value: "year" } 
		],
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
    	pageLoad 			: function(id){
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
		}
    });
    banhji.inventoryPurchaseByVendorDetail = kendo.observable({
    	lang 				: langVM,
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/purchase_by_vendor_detail",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "issued_date", dir: "asc" },			
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),
    	sortList			: [ 
	 		{ text:"All", value: "all" }, 
	 		{ text:"Today",	value: "today" }, 
	 		{ text:"This Week", value: "week" }, 
	 		{ text:"This Month", value: "month" }, 
	 		{ text:"This Year", value: "year" } 
		],
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
    	pageLoad 			: function(id){},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":
				this.set("sdate", today);
				this.set("edate", "");
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }
            this.dataSource.filter(para);
		}
    });


    /*************************
	*	Reports Module Section   * 
	**************************/
    banhji.reportDashboard = kendo.observable({
    	lang 				: langVM,
    	dataSource			: dataStore(apiUrl+"accounting_reports/ratio_analysis"),
    	quickRatio			: 0,
		currentRatio 		: 0,
		cashRatio  			: 0,
		wcSale 				: 0,
		grossProfitMargin 	: 0,
		profitMargin 		: 0,
		returnOnAsset 		: 0,
		roce 				: 0,
		arCollectionPeriod 	: 0,
		apPaymentPeriod 	: 0,
		inventoryTurnOver 	: 0,
		ccc 				: 0,
    	pageLoad 			: function(){
			var self = this;

			this.dataSource.query({
				filter: [],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.dataSource.view();				
				
				self.set("quickRatio", kendo.toString(view[0].quickRatio, "n"));
				self.set("currentRatio", kendo.toString(view[0].currentRatio, "n"));
				self.set("cashRatio", kendo.toString(view[0].cashRatio, "n"));
				
				self.set("wcSale", kendo.toString(view[0].wcSale, "p"));
				self.set("grossProfitMargin", kendo.toString(view[0].grossProfitMargin, "p"));
				self.set("profitMargin", kendo.toString(view[0].profitMargin, "p"));
				self.set("returnOnAsset", kendo.toString(view[0].returnOnAsset, "n"));
				
				self.set("roce", kendo.toString(view[0].roce, "p"));
				self.set("arCollectionPeriod", kendo.toString(view[0].arCollectionPeriod, "n"));
				self.set("apPaymentPeriod", kendo.toString(view[0].apPaymentPeriod, "n"));
				self.set("inventoryTurnOver", kendo.toString(view[0].inventoryTurnOver, "n"));
				self.set("ccc", kendo.toString(view[0].ccc, "n"));
			});
		}
    });
    banhji.profitabilitySummaryJob =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/profitability_summary_by_job"),
		jobDS 				: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { jobs: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		revenue 			: 0,
		expense 			: 0,
		profit 				: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

	        //Job
            if(obj.jobs.length>0){
            	var jobs = [];
            	$.each(obj.jobs, function(index, value){
            		jobs.push(value);
            	});          	
	            para.push({ field:"job_id", operator:"where_in", value:jobs });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);
            
            para.push({ field:"job_id >", value:0 });

            this.dataSource.query({
            	filter:para,
            	sort:{ field:"number", operator:"order_by_related_job", dir:"asc" }
            }).then(function(){
            	var view = self.dataSource.view();

            	var revenue = 0, expense = 0;
            	$.each(view, function(index, value){
            		revenue += value.revenue;
            		expense += value.expense;            		
            	});

            	self.set("revenue", kendo.toString(revenue, "c2", banhji.locale));
            	self.set("expense", kendo.toString(expense, "c2", banhji.locale));
            	self.set("profit", kendo.toString(revenue-expense, "c2", banhji.locale));
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});
	banhji.profitabilityDetailJob =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/profitability_detail_by_job"),
		jobDS 						: new kendo.data.DataSource({
		  	data: banhji.source.jobList,
		  	sort: { field: "name", dir: "asc" }
		}),
		sortList			: banhji.source.sortList,
		sorter 				: "month",
		sdate 				: "",
		edate 				: "",
		obj 				: { jobs: [] },
		company 			: banhji.institute,
		displayDate 		: "",
		totalAmount 		: 0,
		totalBalance 		: 0,
		exArray 			: [],
		pageLoad 			: function(){
			this.search();
		},
		sorterChanges 		: function(){
	        var today = new Date(),
        	sdate = "",
        	edate = "",
        	sorter = this.get("sorter");
        	
			switch(sorter){
				case "today":								
					this.set("sdate", today);
					this.set("edate", "");
													  					
				  	break;
				case "week":			  	
					var first = today.getDate() - today.getDay(),
					last = first + 6;

					this.set("sdate", new Date(today.setDate(first)));
					this.set("edate", new Date(today.setDate(last)));						
					
				  	break;
				case "month":							  	
					this.set("sdate", new Date(today.getFullYear(), today.getMonth(), 1));
					this.set("edate", new Date(today.getFullYear(), today.getMonth() + 1, 0));

				  	break;
				case "year":				
				  	this.set("sdate", new Date(today.getFullYear(), 0, 1));
				  	this.set("edate", new Date(today.getFullYear(), 11, 31));

				  	break;
				default:
					this.set("sdate", "");
				  	this.set("edate", "");									  
			}
		},
		search				: function(){
			var self = this, para = [], 
				obj = this.get("obj"),
				start = this.get("sdate"),
        		end = this.get("edate"),
        		displayDate = "";

	        //Job
            if(obj.jobs.length>0){
            	var jobs = [];
            	$.each(obj.jobs, function(index, value){
            		jobs.push(value);
            	});          	
	            para.push({ field:"job_id", operator:"where_in", value:jobs });
	        }
    	
        	//Dates
        	if(start && end){
        		start = new Date(start);
        		end = new Date(end);
        		displayDate = "From " + kendo.toString(start, "dd-MM-yyyy") + " To " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);

            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else if(start){
            	start = new Date(start);
            	displayDate = "On " + kendo.toString(start, "dd-MM-yyyy");

            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	end = new Date(end);
            	displayDate = "As Of " + kendo.toString(end, "dd-MM-yyyy");
        		end.setDate(end.getDate()+1);
        		
            	para.push({ field:"issued_date <", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }
            this.set("displayDate", displayDate);
            
            para.push({ field:"job_id >", value:0 });

            this.dataSource.query({
            	filter:para,
            	sort:{ field:"number", operator:"order_by_related_job", dir:"asc" }
            });
		},
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=990, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/responsive.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:1mm; }'+
		            	'.inv1 .main-color {' +
		            		
		            		'-webkit-print-color-adjust:exact; ' +
		            	'} ' +
		            	'.table.table-borderless.table-condensed  tr th { background-color: #1E4E78!important;' +
		            	'-webkit-print-color-adjust:exact; color:#fff!important;}' +
		            	'.table.table-borderless.table-condensed  tr th * { color: #fff!important; -webkit-print-color-adjust:exact;}' +
		            	'.inv1 .light-blue-td { ' +
		            		'background-color: #c6d9f1!important;' +
		            		'text-align: left;' +
		            		'padding-left: 5px;' +
		            		'-webkit-print-color-adjust:exact; ' +
		            	'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tr td { ' +
    						'background-color: #F2F2F2!important; -webkit-print-color-adjust:exact;' +
						'}'+
						'.saleSummaryCustomer .table.table-borderless.table-condensed tr:nth-child(2n+1) td { ' +
    						' background-color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span2 *, .journal_block1>.span5 * {color: #fff!important;}' +
		            	'.journal_block1>.span2:first-child { ' +
    						'background-color: #bbbbbb!important; -webkit-print-color-adjust:exact;' +
						'}' +
						'.journal_block1>.span5:last-child {' +
							'background-color: #496cad!important; color: #fff!important; -webkit-print-color-adjust:exact; ' +
						'}' +
						'.journal_block1>.span5 {' +
							'background-color: #5cc7dd!important; color: #fff!important; -webkit-print-color-adjust:exact;' +
						'}' +
		            	'.saleSummaryCustomer .table.table-borderless.table-condensed tfoot .bg-total td {' +
		            		'background-color: #1C2633!important;' +
		            		'color: #fff!important; ' + 
		            		'-webkit-print-color-adjust:exact;' +
		            	'}' +
		            	'</style>' +
		            '</head>' +
		            '<body><div class="saleSummaryCustomer" style="padding: 0 10px;">';
		    var htmlEnd =
		            '</div></body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		},
		ExportExcel 		: function(){
	        var workbook = new kendo.ooxml.Workbook({
	          sheets: [
	            {
	              columns: [
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true },
	                { autoWidth: true }
	              ],
	              title: "General Ledger",
	              rows: this.exArray
	            }
	          ]
	        });
	        //save the file as Excel file with extension xlsx
	        kendo.saveAs({dataURI: workbook.toDataURL(), fileName: "GeneralLedger.xlsx"});
		}
	});


	/*************************
	*	Import Section   * 
	**************************/
	banhji.importContact = kendo.observable({
		dataSource 	  : dataStore(apiUrl+"imports/contact"),
		onSelected    : function(e) {
			$('li.k-file').remove();
	        var files = e.files;
	        var reader = new FileReader();
			banhji.importContact.dataSource.data([]);		
			reader.onload = function() {						
				var data = reader.result;	
				var result = {}; 						
				var workbook = XLSX.read(data, {type : 'binary'});
				workbook.SheetNames.forEach(function(sheetName) {
					var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
					if(roa.length > 0){
						result[sheetName] = roa;
						for(var i = 0; i < roa.length; i++) {	
							banhji.importContact.dataSource.add(roa[i]);	
						}						
					}
				});															
			}
			reader.readAsBinaryString(files[0].rawFile);         	
        },
		save: function() {
			$("#loadImport").css("display","block");
			banhji.importContact.dataSource.sync();
			banhji.importContact.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
		    		$("#ntf1").data("kendoNotification").success("Imported contacts successfully!");
					$("#loadImport").css("display","none");
				}				  				
		    });
		    banhji.importContact.dataSource.bind("error", function(e){		    		    	
				$("#ntf1").data("kendoNotification").error("Error Importing Contact!"); 	
				$("#loadImport").css("display","none");			
		    });
		}
	});
	banhji.importItem = kendo.observable({
		dataSource 	  : dataStore(apiUrl+"imports/item"),
		onSelected    : function(e) {
			$('li.k-file').remove();
	        var files = e.files;
	        var reader = new FileReader();
			banhji.importItem.dataSource.data([]);	
			reader.onload = function() {						
				var data = reader.result;	
				var result = {}; 						
				var workbook = XLSX.read(data, {type : 'binary'});
				workbook.SheetNames.forEach(function(sheetName) {
					var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
					if(roa.length > 0){
						result[sheetName] = roa;
						for(var i = 0; i < roa.length; i++) {	
							banhji.importItem.dataSource.add(roa[i]);	
						}						
					}
				});															
			}
			reader.readAsBinaryString(files[0].rawFile);         	
        },
		save: function() {
			$("#loadImport").css("display","block");
			banhji.importItem.dataSource.sync();
			banhji.importItem.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
		    		$("#ntf1").data("kendoNotification").success("Imported Inventory successfully!");
					$("#loadImport").css("display","none");
				}				  				
		    });
		    banhji.importItem.dataSource.bind("error", function(e){		    		    	
				$("#ntf1").data("kendoNotification").error("Error Importing Inventory!"); 
				$("#loadImport").css("display","none");				
		    });
		}
	});
	banhji.importChartAccount = kendo.observable({
		dataSource 	  : dataStore(apiUrl+"imports/coa"),
		onSelected    : function(e) {
			$('li.k-file').remove();
	        var files = e.files;
	        var reader = new FileReader();
			banhji.importChartAccount.dataSource.data([]);	
			reader.onload = function() {						
				var data = reader.result;	
				var result = {}; 						
				var workbook = XLSX.read(data, {type : 'binary'});
				workbook.SheetNames.forEach(function(sheetName) {
					var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
					if(roa.length > 0){
						result[sheetName] = roa;
						for(var i = 0; i < roa.length; i++) {	
							banhji.importChartAccount.dataSource.add(roa[i]);	
						}						
					}
				});															
			}
			reader.readAsBinaryString(files[0].rawFile);         	
        },
		save: function() {
			$("#loadImport").css("display","block");
			banhji.importChartAccount.dataSource.sync();
			banhji.importChartAccount.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
		    		$("#ntf1").data("kendoNotification").success("Imported Chart of Account successfully!");
					$("#loadImport").css("display","none");
				}				  				
		    });
		    banhji.importChartAccount.dataSource.bind("error", function(e){		    		    	
				$("#ntf1").data("kendoNotification").error("Error Importing Chart of Account!"); 
				$("#loadImport").css("display","none");				
		    });
		}
	});
	banhji.importJournal = kendo.observable({
		dataSource 	  : dataStore(apiUrl+"imports/journal"),
		accountDS 	  : dataStore(apiUrl+"accounts"),
		noneAccount   : [],
		enabled 	  : false,
		numberExists  : function(account) {
			var existed = false;
			
			for(var i = 0; i < banhji.source.accountList.length; i++) {
				if(account == banhji.source.accountList[i].number) {
					existed = true;
					break;
				}
			}			
			return existed;
		},
		onSelected    : function(e) {
			var self = this;			
			$('li.k-file').remove();
	        var files = e.files;
	        $("#loadImport").css("display","block");
	        banhji.importJournal.set('enabled', false);
	        banhji.importJournal.noneAccount.splice(0, banhji.importJournal.noneAccount.length);
	        var reader = new FileReader();
			banhji.importJournal.dataSource.data([]);	
			reader.onload = function() {	
				var data = reader.result;	
				var result = {}; 						
				var workbook = XLSX.read(data, {type : 'binary'});
				workbook.SheetNames.forEach(function(sheetName) {
					var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
					banhji.importJournal.accountDS.fetch(function(){
						if(roa.length > 0){
							result[sheetName] = roa;
							for(var i = 0; i < roa.length; i++) {
								var number = banhji.importJournal.numberExists(roa[i].account_number);
								if(!number) {
									banhji.importJournal.noneAccount.push({line: i+1, trans_no:roa[i].trans_no, date: roa[i].date, number: roa[i].number, memo: roa[i].memo, 	account_number: roa[i].account_number, dr: roa[i].dr, cr: roa[i].cr});
								}
							}
								
							if(banhji.importJournal.noneAccount.length > 0){
								banhji.importJournal.set('enabled', true);
								$("#loadImport").css("display","none");	
							}else{
								for(var i = 0; i < roa.length; i++) {
									banhji.importJournal.dataSource.add(roa[i]);
									$("#loadImport").css("display","none");	
								}
								banhji.importJournal.set('enabled', false);
							}							
						}
					});						
				});															
			}
			reader.readAsBinaryString(files[0].rawFile);         	
        },
		save: function() {
			if(banhji.importJournal.dataSource.data().length > 0) {
				$("#loadImport").css("display","block");
				banhji.importJournal.dataSource.sync();
				banhji.importJournal.dataSource.bind("requestEnd", function(e){
			    	if(e.response){				
			    		$("#ntf1").data("kendoNotification").success("Imported Journal successfully!");
						$("#loadImport").css("display","none");
					}				  				
			    });
			    banhji.importJournal.dataSource.bind("error", function(e){		    		    	
					$("#ntf1").data("kendoNotification").error("Error Importing Journal!"); 
					$("#loadImport").css("display","none");				
			    });
			}				
		}
	});
    banhji.importView = kendo.observable({
    	lang 				: langVM,
    	contact 			: banhji.importContact,
    	item 				: banhji.importItem,
    	journal 			: banhji.importJournal,
    	caccount 			: banhji.importChartAccount,
    	printGrid			: function() {
			var obj = this.get('obj');
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=800, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" />'+
		            '<link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css">' +
		            '<link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" />'+
		            '<link href="https://fonts.googleapis.com/css?family=Content:400,700" rel="stylesheet" type="text/css">' +
		            '<link href="https://fonts.googleapis.com/css?family=Moul" rel="stylesheet">' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style><style type="text/css" media="print"> @page { size: portrait; margin:0mm;margin-top: 1mm; }'+
		            	'.table-primary thead th {background-color:#496cad!important;color: #fff;-webkit-print-color-adjust:true;}' +
		            	'}</style>' +
		            '</head>' +
		            '<body>';
		    var htmlEnd =
		            '</body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();
		    	win.close();
		    },2000);
		}
    });
	/* views and layout */
	banhji.view = {
		layout 		: new kendo.Layout('#layout', {model: banhji.Layout}),
		blank		: new kendo.View('<div></div>'),
		index  		: new kendo.Layout("#index", {model: banhji.index}),
		menu 		: new kendo.Layout('#menu-tmpl', {model: banhji.userManagement}),
		searchAdvanced: new kendo.Layout("#searchAdvanced", {model: banhji.searchAdvanced}),

		//Accounting
		accountingDashboard: new kendo.Layout("#accountingDashboard", {model: banhji.accountingDashboard}),
		accountingCenter: new kendo.Layout("#accountingCenter", {model: banhji.accountingCenter}),
		account: new kendo.Layout("#account", {model: banhji.account}),
		txnItem: new kendo.Layout("#txnItem", {model: banhji.txnItem}),
		journal: new kendo.Layout("#journal", {model: banhji.journal}),
		cashTransaction: new kendo.Layout("#cashTransaction", {model: banhji.cashTransaction}),
		cashAdvance: new kendo.Layout("#cashAdvance", {model: banhji.cashAdvance}),
		expense: new kendo.Layout("#expense", {model: banhji.expense}),
		currencyRate: new kendo.Layout("#currencyRate", {model: banhji.currencyRate}),
		recurring: new kendo.Layout("#recurring", {model: banhji.recurring}),
		journalReport: new kendo.Layout("#journalReport", {model: banhji.journalReport}),
		journalReportBySegment: new kendo.Layout("#journalReportBySegment", {model: banhji.journalReportBySegment}),
		generalLedger: new kendo.Layout("#generalLedger", {model: banhji.generalLedger}),
		trialBalance: new kendo.Layout("#trialBalance", {model: banhji.trialBalance}),
		chartOfAccount: new kendo.Layout("#chartOfAccount", {model: banhji.chartOfAccount}),
		accountingReportCenter: new kendo.Layout("#accountingReportCenter", {model: banhji.accountingReportCenter}),
		accountingSetting: new kendo.Layout("#accountingSetting", {model: banhji.accountingSetting}),
		accountingRecurring: new kendo.Layout("#accountingRecurring", {model: banhji.accountingRecurring}),
		addAccountingprefix: new kendo.Layout("#addAccountingprefix", {model: banhji.addAccountingprefix}),

		segment: new kendo.Layout("#segment", {model: banhji.segment}),
		transactionListDate: new kendo.Layout("#transactionListDate", {model: banhji.transactionListDate}),
		recentTransactionsList: new kendo.Layout("#recentTransactionsList", {model: banhji.recentTransactionsList}),
		recurringJournalList: new kendo.Layout("#recurringJournalList", {model: banhji.recurringJournalList}),
		statementProfitLoss: new kendo.Layout("#statementProfitLoss", {model: banhji.statementProfitLoss}),
		statementProfitLossBySegment: new kendo.Layout("#statementProfitLossBySegment", {model: banhji.statementProfitLossBySegment}),
		statementFinancialPosition: new kendo.Layout("#statementFinancialPosition", {model: banhji.statementFinancialPosition}),
		statementProfitLossComparison: new kendo.Layout("#statementProfitLossComparison", {model: banhji.statementProfitLossComparison}),
		statementFinancialPositionComparison: new kendo.Layout("#statementFinancialPositionComparison", {model: banhji.statementFinancialPositionComparison}),
		statementChangesEquity: new kendo.Layout("#statementChangesEquity", {model: banhji.statementChangesEquity}),
		statementCashFlow: new kendo.Layout("#statementCashFlow", {model: banhji.statementCashFlow}),
		auditTrialReport: new kendo.Layout("#auditTrialReport", {model: banhji.auditTrialReport}),

		//Tax
		tax: new kendo.Layout("#tax", {model: banhji.tax}),
		taxReportCenter: new kendo.Layout("#taxReportCenter", {model: banhji.taxReportCenter}),
		saleJournal: new kendo.Layout("#saleJournal", {model: banhji.saleJournal}),
		purchaseJournal: new kendo.Layout("#purchaseJournal", {model: banhji.purchaseJournal}),


		//Employee
		employeeDashboard: new kendo.Layout("#employeeDashboard", {model: banhji.employeeDashboard}),
		employeeCenter: new kendo.Layout("#employeeCenter", {model: banhji.employeeCenter}),
		employee: new kendo.Layout("#employee", {model: banhji.employee}),
		employeeReportCenter: new kendo.Layout("#employeeReportCenter"),

		//Vendor
		vendorDashboard: new kendo.Layout("#vendorDashboard", {model: banhji.vendorDashboard}),
		vendorCenter: new kendo.Layout("#vendorCenter", {model: banhji.vendorCenter}),
		vendor: new kendo.Layout("#vendor", {model: banhji.vendor}),
		purchaseOrder: new kendo.Layout("#purchaseOrder", {model: banhji.purchaseOrder}),
		grn: new kendo.Layout("#grn", {model: banhji.grn}),
		purchase: new kendo.Layout("#purchase", {model: banhji.purchase}),
		purchaseReturn: new kendo.Layout("#purchaseReturn", {model: banhji.purchaseReturn}),
		vendorDeposit: new kendo.Layout("#vendorDeposit", {model: banhji.vendorDeposit}),
		vendorSetting: new kendo.Layout("#vendorSetting", {model: banhji.vendorSetting}),
		vendorReportCenter: new kendo.Layout("#vendorReportCenter", {model: banhji.vendorReportCenter}),
		purchaseSummaryProductServices: new kendo.Layout("#purchaseSummaryProductServices", {model: banhji.purchaseSummaryProductServices}),
		expensesSummarySupplier: new kendo.Layout("#expensesSummarySupplier", {model: banhji.expensesSummarySupplier}),
		expensesDetailSupplier: new kendo.Layout("#expensesDetailSupplier", {model: banhji.expensesDetailSupplier}),
		purchaseOrderList: new kendo.Layout("#purchaseOrderList", {model: banhji.purchaseOrderList}),
		purchaseDetailProductServices: new kendo.Layout("#purchaseDetailProductServices", {model: banhji.purchaseDetailProductServices}),
		supplierTransaction: new kendo.Layout("#supplierTransaction", {model: banhji.supplierTransaction}),
		depositDetailSupplier: new kendo.Layout("#depositDetailSupplier", {model: banhji.depositDetailSupplier}),
		suppliersBalanceSummary: new kendo.Layout("#suppliersBalanceSummary", {model: banhji.suppliersBalanceSummary}),
		suppliersBalanceDetail: new kendo.Layout("#suppliersBalanceDetail", {model: banhji.suppliersBalanceDetail}),
		payablesAgingSummary: new kendo.Layout("#payablesAgingSummary", {model: banhji.payablesAgingSummary}),
		payablesAgingDetail: new kendo.Layout("#payablesAgingDetail", {model: banhji.payablesAgingDetail}),
		listBillsPaid: new kendo.Layout("#listBillsPaid", {model: banhji.listBillsPaid}),
		billPaymentList: new kendo.Layout("#billPaymentList", {model: banhji.billPaymentList}),
		productServiceList: new kendo.Layout("#productServiceList", {model: banhji.vendorSale}),
		supplierList: new kendo.Layout("#supplierList", {model: banhji.supplierList}),
		vendorRecurring: new kendo.Layout("#vendorRecurring", {model: banhji.vendorRecurring}),

		//Customer
		customerDashboard: new kendo.Layout("#customerDashboard", {model: banhji.customerDashboard}),
		customerCenter: new kendo.Layout("#customerCenter", {model: banhji.customerCenter}),
		customer: new kendo.Layout("#customer", {model: banhji.customer}),
		invoice: new kendo.Layout("#invoice", {model: banhji.invoice}),
		cashSale: new kendo.Layout("#cashSale", {model: banhji.cashSale}),
		saleOrder: new kendo.Layout("#saleOrder", {model: banhji.saleOrder}),
		quote: new kendo.Layout("#quote", {model: banhji.quote}),
		gdn: new kendo.Layout("#gdn", {model: banhji.gdn}),
		saleReturn: new kendo.Layout("#saleReturn", {model: banhji.saleReturn}),
		cashRefund: new kendo.Layout("#cashRefund", {model: banhji.cashRefund}),
		statement: new kendo.Layout("#statement", {model: banhji.statement}),
		customerDeposit: new kendo.Layout("#customerDeposit", {model: banhji.customerDeposit}),
		customerReportCenter: new kendo.Layout("#customerReportCenter", {model: banhji.customerReportCenter}),
		customerList : new kendo.Layout("#customerList"),
		customerBalance : new kendo.Layout("#customerBalance", {model: banhji.customerBalance}),
		customerSetting: new kendo.Layout("#customerSetting", {model: banhji.customerSetting}),
		customerRecurring : new kendo.Layout("#customerRecurring", {model: banhji.customerRecurring}),
		job: new kendo.Layout("#job", {model: banhji.job}),
		invoiceCustom: new kendo.Layout("#invoiceCustom", {model: banhji.invoiceCustom}),
		invoiceForm: new kendo.Layout("#invoiceForm", {model: banhji.invoiceForm}),
		invoiceForm1: new kendo.Layout("#invoiceForm1", {model: banhji.invoiceForm}),
		invoiceForm2: new kendo.Layout("#invoiceForm2", {model: banhji.invoiceForm}),
		//invoiceForm3: new kendo.Layout("#invoiceForm3", {model: banhji.invoiceForm}),
		//invoiceForm4: new kendo.Layout("#invoiceForm4", {model: banhji.invoiceForm}),
		//invoiceForm5: new kendo.Layout("#invoiceForm5", {model: banhji.invoiceForm}),
		invoiceForm6: new kendo.Layout("#invoiceForm6", {model: banhji.invoiceForm}),
		invoiceForm7: new kendo.Layout("#invoiceForm7", {model: banhji.invoiceForm}),
		invoiceForm8: new kendo.Layout("#invoiceForm8", {model: banhji.invoiceForm}),
		invoiceForm9: new kendo.Layout("#invoiceForm9", {model: banhji.invoiceForm}),
		invoiceForm10: new kendo.Layout("#invoiceForm10", {model: banhji.invoiceForm}),
		invoiceForm11: new kendo.Layout("#invoiceForm11", {model: banhji.invoiceForm}),
		invoiceForm12: new kendo.Layout("#invoiceForm12", {model: banhji.invoiceForm}),
		invoiceForm13: new kendo.Layout("#invoiceForm13", {model: banhji.invoiceForm}),
		invoiceForm14: new kendo.Layout("#invoiceForm14", {model: banhji.invoiceForm}),
		invoiceForm15: new kendo.Layout("#invoiceForm15", {model: banhji.invoiceForm}),
		invoiceForm16: new kendo.Layout("#invoiceForm16", {model: banhji.invoiceForm}),
		invoiceForm17: new kendo.Layout("#invoiceForm17", {model: banhji.invoiceForm}),
		invoiceForm18: new kendo.Layout("#invoiceForm18", {model: banhji.invoiceForm}),
		invoiceForm19: new kendo.Layout("#invoiceForm19", {model: banhji.invoiceForm}),
		invoiceForm20: new kendo.Layout("#invoiceForm20", {model: banhji.invoiceForm}),
		invoiceForm21: new kendo.Layout("#invoiceForm21", {model: banhji.invoiceForm}),
		invoiceForm22: new kendo.Layout("#invoiceForm22", {model: banhji.invoiceForm}),
		invoiceForm23: new kendo.Layout("#invoiceForm23", {model: banhji.invoiceForm}),
		invoiceForm24: new kendo.Layout("#invoiceForm24", {model: banhji.invoiceForm}),
		invoiceForm25: new kendo.Layout("#invoiceForm25", {model: banhji.invoiceForm}),
		invoiceForm26: new kendo.Layout("#invoiceForm26", {model: banhji.invoiceForm}),
		invoiceForm27: new kendo.Layout("#invoiceForm27", {model: banhji.invoiceForm}),
		invoiceForm28: new kendo.Layout("#invoiceForm28", {model: banhji.invoiceForm}),
		invoiceForm29: new kendo.Layout("#invoiceForm29", {model: banhji.invoiceForm}),
		invoiceForm30: new kendo.Layout("#invoiceForm30", {model: banhji.invoiceForm}),
		invoiceForm31: new kendo.Layout("#invoiceForm31", {model: banhji.invoiceForm}),
		invoiceForm32: new kendo.Layout("#invoiceForm32", {model: banhji.invoiceForm}),
		invoiceForm33: new kendo.Layout("#invoiceForm33", {model: banhji.invoiceForm}),
		invoiceForm34: new kendo.Layout("#invoiceForm34", {model: banhji.invoiceForm}),
		invoiceForm35: new kendo.Layout("#invoiceForm35", {model: banhji.invoiceForm}),
		invoiceForm36: new kendo.Layout("#invoiceForm36", {model: banhji.invoiceForm}),
		invoiceForm37: new kendo.Layout("#invoiceForm37", {model: banhji.invoiceForm}),
		invoiceForm38: new kendo.Layout("#invoiceForm38", {model: banhji.invoiceForm}),
		invoiceForm39: new kendo.Layout("#invoiceForm39", {model: banhji.invoiceForm}),
		invoiceForm40: new kendo.Layout("#invoiceForm40", {model: banhji.invoiceForm}),
		invoiceForm41: new kendo.Layout("#invoiceForm41", {model: banhji.invoiceForm}),
		invoiceForm42: new kendo.Layout("#invoiceForm42", {model: banhji.invoiceForm}),
		//Caritas Company
		formCaritasExpense: new kendo.Layout("#formCaritasExpense", {model: banhji.invoiceForm}),

		saleSummaryByCustomer: new kendo.Layout("#saleSummaryByCustomer", {model: banhji.saleSummaryByCustomer}),
		saleDetailByCustomer: new kendo.Layout("#saleDetailByCustomer", {model: banhji.saleDetailByCustomer}),
		saleSummaryByProduct: new kendo.Layout("#saleSummaryByProduct", {model: banhji.saleSummaryByProduct}),
		saleDetailByProduct : new kendo.Layout("#saleDetailByProduct", {model: banhji.saleDetailByProduct}),
		customerTransactionList: new kendo.Layout("#customerTransactionList", {model: banhji.customerTransactionList}),
		depositDetailByCustomer: new kendo.Layout("#depositDetailByCustomer", {model: banhji.depositDetailByCustomer}),		
		customerBalanceSummary : new kendo.Layout("#customerBalanceSummary", {model: banhji.customerBalanceSummary}),
		customerBalanceDetail : new kendo.Layout("#customerBalanceDetail", {model: banhji.customerBalanceDetail}),
		receivableAgingSummary : new kendo.Layout("#receivableAgingSummary", {model: banhji.receivableAgingSummary}),
		receivableAgingDetail : new kendo.Layout("#receivableAgingDetail", {model: banhji.receivableAgingDetail}),
		collectInvoice : new kendo.Layout("#collectInvoice", {model: banhji.collectInvoice}),
		collectionReport : new kendo.Layout("#collectionReport", {model: banhji.collectionReport}),
		invoiceList : new kendo.Layout("#invoiceList", {model: banhji.invoiceList}),
		saleJobEngagement: new kendo.Layout("#saleJobEngagement", {model: banhji.saleJob}),
		saleOrderList: new kendo.Layout("#saleOrderList", {model: banhji.saleOrderList}),

		//Sale
		saleDashboard: new kendo.Layout("#saleDashboard", {model: banhji.saleDashboard}),
		saleCenter: new kendo.Layout("#saleCenter", {model: banhji.saleCenter}),
		sale: new kendo.Layout("#sale", {model: banhji.sale}),
		saleDetail: new kendo.Layout("#saleDetail", {model: banhji.saleDetail}),
		saleReportCenter: new kendo.Layout("#saleReportCenter", {model: banhji.saleReportCenter}),
		saleRecurring : new kendo.Layout("#saleRecurring", {model: banhji.saleRecurring}),
		saleInventoryPositionSummary: new kendo.Layout("#saleInventoryPositionSummary", {model: banhji.inventoryPositionSummary}),

		//Inventory		
		itemDashBoard: new kendo.Layout("#itemDashBoard", {model: banhji.itemDashBoard}),
		itemCenter: new kendo.Layout("#itemCenter", {model: banhji.itemCenter}),
		item: new kendo.Layout("#item", {model: banhji.item}),
		itemService: new kendo.Layout("#itemService", {model: banhji.itemService}),
		nonInventoryPart: new kendo.Layout("#nonInventoryPart", {model: banhji.nonInventoryPart}),
		itemPrice: new kendo.Layout("#itemPrice", {model: banhji.itemPrice}),
		itemCatalog: new kendo.Layout("#itemCatalog", {model: banhji.itemCatalog}),
		itemAssembly: new kendo.Layout("#itemAssembly", {model: banhji.itemAssembly}),
		itemAdjustment: new kendo.Layout("#itemAdjustment", {model: banhji.itemAdjustment}),
		itemSetting: new kendo.Layout("#itemSetting", {model: banhji.itemSetting}),
		internalUsage: new kendo.Layout("#internalUsage", {model: banhji.internalUsage}),
		serviceSetting: new kendo.Layout("#serviceSetting", {model: banhji.serviceSetting}),
		itemReportCenter: new kendo.Layout("#itemReportCenter", {model: banhji.itemReportCenter}),
		inventoryPositionSummary: new kendo.Layout("#inventoryPositionSummary", {model: banhji.inventoryPositionSummary}),
		inventoryPositionDetail: new kendo.Layout("#inventoryPositionDetail", {model: banhji.inventoryPositionDetail}),
		inventoryTurnoverList: new kendo.Layout("#inventoryTurnoverList", {model: banhji.inventorySale}),
		inventorySaleItemAnalysis: new kendo.Layout("#inventorySaleItemAnalysis", {model: banhji.inventorySale}),
		inventoryMovementSummary: new kendo.Layout("#inventoryMovementSummary", {model: banhji.inventorySale}),
		inventoryMovementDetail: new kendo.Layout("#inventoryMovementDetail", {model: banhji.inventorySale}),
		inventorySaleByItem: new kendo.Layout("#inventorySaleByItem", {model: banhji.inventorySaleByItem}),
		inventoryList: new kendo.Layout("#inventoryList", {model: banhji.inventoryList}),		
		inventoryPurchaseByVendorSummary: new kendo.Layout("#inventoryPurchaseByVendorSummary", {model: banhji.inventoryPurchaseByVendorSummary}),
		inventoryPurchaseByVendorDetail: new kendo.Layout("#inventoryPurchaseByVendorDetail", {model: banhji.inventoryPurchaseByVendorDetail}),
		fixedAssets: new kendo.Layout("#fixedAssets", {model: banhji.fixedAssets}),
		itemRecurring: new kendo.Layout("#itemRecurring", {model: banhji.itemRecurring}),
		cashMovement: new kendo.Layout("#cashMovement", {model: banhji.cashMovement}),
		cashPositionReport: new kendo.Layout("#cashPositionReport", {model: banhji.cashPositionReport}),
		cashCollectionReport: new kendo.Layout("#cashCollectionReport", {model: banhji.cashSales}),
		cashPaymentReport: new kendo.Layout("#cashPaymentReport", {model: banhji.cashPaymentReport}),

		//Cash Managment
		cashDashboard: new kendo.Layout("#cashDashboard", {model: banhji.cashDashboard}),
		cashCenter: new kendo.Layout("#cashCenter", {model: banhji.cashCenter}),
		cash: new kendo.Layout("#cash", {model: banhji.cash}),
		cashList : new kendo.Layout("#cashList", {model: banhji.cashList}),		
		cashDeposit: new kendo.Layout("#cashDeposit", {model: banhji.cashDeposit}),
		cashReportCenter: new kendo.Layout("#cashReportCenter"),
		cashier: new kendo.Layout("#cashier", {model: banhji.cashier}),
		reconcile: new kendo.Layout("#reconcile", {model: banhji.reconcile}),
		cashReceipt: new kendo.Layout("#cashReceipt", {model: banhji.cashReceipt}),
		cashPayment: new kendo.Layout("#cashPayment", {model: banhji.cashPayment}),
		cashFlowForecast: new kendo.Layout("#cashFlowForecast", {model: banhji.cashFlowForecast}),
		cashSetting: new kendo.Layout("#cashSetting", {model: banhji.cashSetting}),

		//Cash Management Dashbaord
		cashManagementDashboard: new kendo.Layout("#cashManagementDashboard", {model: banhji.cashManagementDashboard}),
		
		//Document
		documents: new kendo.Layout("#documents", {model: banhji.fileManagement}),

		//Report
		reportDashboard: new kendo.Layout("#reportDashboard", {model: banhji.reportDashboard}),
		profitabilitySummaryJob: new kendo.Layout("#profitabilitySummaryJob", {model: banhji.profitabilitySummaryJob}),
		profitabilityDetailJob: new kendo.Layout("#profitabilityDetailJob", {model: banhji.profitabilityDetailJob}),

		//Imports
		imports: new kendo.Layout("#importView", {model: banhji.importView}),

		//Menu
		accountingMenu: new kendo.View("#accountingMenu", {model: langVM}),
		employeeMenu: new kendo.View("#employeeMenu", {model: langVM}),
		vendorMenu: new kendo.View("#vendorMenu", {model: langVM}),
		customerMenu: new kendo.View("#customerMenu", {model: langVM}),
		cashMenu: new kendo.View("#cashMenu", {model: langVM}),
		inventoryMenu: new kendo.View("#inventoryMenu", {model: langVM}),
		taxMenu: new kendo.View("#taxMenu", {model: langVM}),
		saleMenu: new kendo.View("#saleMenu", {model: langVM})	
	};
	/* views and layout */
	banhji.router = new kendo.Router({
		init: function() {	
			var language = JSON.parse(localStorage.getItem('userData/lang'));	
			switch(language) {
				case "KH": 
					langVM.set('lang', km_KH);
					localforage.setItem("lang", language);
					langVM.set('localeCode', language);
					break;
				case "EN":
					langVM.set('lang', en_US);
					localforage.setItem("lang", language);
					langVM.set('localeCode', language);
					break;
				default: 
					langVM.set('lang', en_US);
					localforage.setItem("lang", language);
					langVM.set('localeCode', language);
			}
			localforage.getItem('user', function(err, data){
				if (err) {
					
				} else {
					$('#current-section').html('|&nbsp;Company');
					$('#home-menu').addClass('active');
					banhji.view.layout.render("#wrapperApplication");
					banhji.index.set('companyName', data.institute.name);
					banhji.index.set('companyLogo', data.institute.logo);
					var blank = new kendo.View('#blank-tmpl');
					banhji.view.layout.showIn('#menu', banhji.view.menu);
					if(userPool.getCurrentUser() == null) {
						window.location.replace(baseUrl + "login");
					}
					banhji.aws.getImage();
				}
			});	
			
		},
		routeMissing: function(e) {
			// banhji.view.layout.showIn("#layout-view", banhji.view.missing);
			console.log("no resource found.")
		}
	});
	/* Login page */
	banhji.router.route('/', function(){
		var blank = new kendo.View('#blank-tmpl');
		banhji.view.layout.showIn('#content', banhji.view.index);
		banhji.view.layout.showIn('#menu', banhji.view.menu);
		$('#main-top-navigation').append('<li><a href="\#">Home</a></li>');
		$('#current-section').text("");
		$("#secondary-menu").html("");
		banhji.index.getLogo();
		banhji.index.pageLoad();
		banhji.pageLoaded["index"] = true;
	});
	banhji.router.route("/search_advanced", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.searchAdvanced;
			banhji.view.layout.showIn("#content", banhji.view.searchAdvanced);
			
			if(banhji.pageLoaded["search_advanced"]==undefined){
				banhji.pageLoaded["search_advanced"] = true;
			}

			vm.pageLoad();
		}
	});


	/*************************
	* Accounting Section   *
	**************************/
	banhji.router.route("/accounting", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {	
				banhji.view.layout.showIn("#content", banhji.view.accountingDashboard);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

				var vm = banhji.accountingDashboard;
				banhji.userManagement.addMultiTask("Accounting Dashboard","accounting",null);

				if(banhji.pageLoaded["accounting"]==undefined){
					banhji.pageLoaded["accounting"] = true;
			          	
				}

				vm.pageLoad();			
			} else {
				window.location.replace(baseUrl + "admin");
			}				
		});
	});
	banhji.router.route("/accounting_center(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {			
				var vm = banhji.accountingCenter;
				banhji.userManagement.addMultiTask("Account Center","accounting_center",null);
							
				banhji.view.layout.showIn("#content", banhji.view.accountingCenter);			
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

				if(banhji.pageLoaded["accounting_center"]==undefined){
					banhji.pageLoaded["accounting_center"] = true;
			              	
				}

				vm.pageLoad(id);			
			} else {
				window.location.replace(baseUrl + "admin");
			}				
		});
	});
	banhji.router.route("/account(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {				
				var vm = banhji.account;
				banhji.userManagement.addMultiTask("Account","account",vm);
							
				banhji.view.layout.showIn("#content", banhji.view.account);			
				// kendo.fx($("#slide-form")).slideIn("down").play();

				if(banhji.pageLoaded["account"]==undefined){
					banhji.pageLoaded["account"] = true;		         

			    	var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");
													
			        $("#saveNew").click(function(e){				
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();		            				  
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }		            
					});

					$("#saveClose").click(function(e){				
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();		            	
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});				      	
				}

				vm.pageLoad(id);			
			} else {
				window.location.replace(baseUrl + "admin");
			}				
		});
	});

	banhji.router.route("/journal(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.journal);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.journal;
				banhji.userManagement.addMultiTask("Journal Entry","journal",vm);
				
				if(banhji.pageLoaded["journal"]==undefined){
					banhji.pageLoaded["journal"] = true;
					   
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
			        		customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate() && vm.get("isValid")){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate() && vm.get("isValid")){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate() && vm.get("isValid")){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate() && vm.get("isValid")){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });	
	});
	banhji.router.route("/cash_transaction(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashTransaction);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashTransaction;
			banhji.userManagement.addMultiTask("Cash Transaction","cash_transaction",vm);
			
			if(banhji.pageLoaded["cash_transaction"]==undefined){
				banhji.pageLoaded["cash_transaction"] = true;
 				
				var validator = $("#example").kendoValidator({
		        	rules: {
				        customRule1: function(input) {
				          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
				          		vm.set("recurring_validate", false);
				            	return $.trim(input.val()) !== "";
				          	}
				          	return true;
				        },
				        customRule2: function(input){
				          	if (input.is("[name=txtNumber]")) {	
					            return vm.get("notDuplicateNumber");
					        }
					        return true;
				        }
				    },
				    messages: {
				        customRule1: banhji.source.requiredMessage,
				        customRule2: banhji.source.duplicateNumber
				    }
		        }).data("kendoValidator");

		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);
					
					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/deposit(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashTransaction);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashTransaction;
			banhji.userManagement.addMultiTask("Cash Transaction","cash_transaction",vm);
			
			if(banhji.pageLoaded["cash_transaction"]==undefined){
				banhji.pageLoaded["cash_transaction"] = true;
 				
				var validator = $("#example").kendoValidator({
		        	rules: {
				        customRule1: function(input) {
				          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
				          		vm.set("recurring_validate", false);
				            	return $.trim(input.val()) !== "";
				          	}
				          	return true;
				        },
				        customRule2: function(input){
				          	if (input.is("[name=txtNumber]")) {	
					            return vm.get("notDuplicateNumber");
					        }
					        return true;
				        }
				    },
				    messages: {
				        customRule1: banhji.source.requiredMessage,
				        customRule2: banhji.source.duplicateNumber
				    }
		        }).data("kendoValidator");

		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);
					
					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/withdraw(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashTransaction);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashTransaction;
			banhji.userManagement.addMultiTask("Cash Transaction","cash_transaction",vm);
			
			if(banhji.pageLoaded["cash_transaction"]==undefined){
				banhji.pageLoaded["cash_transaction"] = true;
 				
				var validator = $("#example").kendoValidator({
		        	rules: {
				        customRule1: function(input) {
				          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
				          		vm.set("recurring_validate", false);
				            	return $.trim(input.val()) !== "";
				          	}
				          	return true;
				        },
				        customRule2: function(input){
				          	if (input.is("[name=txtNumber]")) {	
					            return vm.get("notDuplicateNumber");
					        }
					        return true;
				        }
				    },
				    messages: {
				        customRule1: banhji.source.requiredMessage,
				        customRule2: banhji.source.duplicateNumber
				    }
		        }).data("kendoValidator");

		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);
					
					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/transfer(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashTransaction);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashTransaction;
			banhji.userManagement.addMultiTask("Cash Transaction","cash_transaction",vm);
			
			if(banhji.pageLoaded["cash_transaction"]==undefined){
				banhji.pageLoaded["cash_transaction"] = true;
 				
				var validator = $("#example").kendoValidator({
		        	rules: {
				        customRule1: function(input) {
				          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
				          		vm.set("recurring_validate", false);
				            	return $.trim(input.val()) !== "";
				          	}
				          	return true;
				        },
				        customRule2: function(input){
				          	if (input.is("[name=txtNumber]")) {	
					            return vm.get("notDuplicateNumber");
					        }
					        return true;
				        }
				    },
				    messages: {
				        customRule1: banhji.source.requiredMessage,
				        customRule2: banhji.source.duplicateNumber
				    }
		        }).data("kendoValidator");

		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);
					
					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/cash_advance(/:id)", function(id){
		banhji.view.layout.showIn("#content", banhji.view.cashAdvance);
		kendo.fx($("#slide-form")).slideIn("down").play();

		var vm = banhji.cashAdvance;
		banhji.userManagement.addMultiTask("Cash Advance","cash_advance",vm);
		
		if(banhji.pageLoaded["cash_advance"]==undefined){
			banhji.pageLoaded["cash_advance"] = true;

			var validator = $("#example").kendoValidator({
	        	rules: {
			        customRule1: function(input) {
			          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
			          		vm.set("recurring_validate", false);
			            	return $.trim(input.val()) !== "";
			          	}
			          	return true;
			        },
			        customRule2: function(input){
			          	if (input.is("[name=txtNumber]")) {	
				            return vm.get("notDuplicateNumber");
				        }
				        return true;
			        }
			    },
			    messages: {
			        customRule1: banhji.source.requiredMessage,
			        customRule2: banhji.source.duplicateNumber
			    }
	        }).data("kendoValidator");

	        $("#saveNew").click(function(e){
				e.preventDefault();

				if(validator.validate()){
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }		            
			});

			$("#saveClose").click(function(e){
				e.preventDefault();

				if(validator.validate()){
					vm.set("saveClose", true);
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});

			$("#savePrint").click(function(e){
				e.preventDefault();
				
				if(validator.validate()){
					vm.set("savePrint", true);
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});

			$("#saveRecurring").click(function(e){
				e.preventDefault();

				vm.set("recurring_validate", true);

				if(validator.validate()){
	            	vm.set("saveRecurring", true);
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});
		}

		vm.pageLoad(id);
	});
	banhji.router.route("/expense(/:id)", function(id){
		banhji.view.layout.showIn("#content", banhji.view.expense);
		kendo.fx($("#slide-form")).slideIn("down").play();

		var vm = banhji.expense;
		banhji.userManagement.addMultiTask("Expense","expense",vm);
		
		if(banhji.pageLoaded["expense"]==undefined){
			banhji.pageLoaded["expense"] = true;

			var validator = $("#example").kendoValidator({
	        	rules: {
			        customRule1: function(input) {
			          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
			          		vm.set("recurring_validate", false);
			            	return $.trim(input.val()) !== "";
			          	}
			          	return true;
			        },
			        customRule2: function(input) {
			          	if (input.is("[name=txtReferenceNo]")) {
			            	return $.trim(input.val()) !== "" && vm.isExistingInvoice==false;
			          	}
			          	return true;
			        },
			        customRule3: function(input){
			          	if (input.is("[name=txtNumber]")) {	
				            return vm.get("notDuplicateNumber");
				        }
				        return true;
			        }
			    },
			    messages: {
			        customRule1: banhji.source.requiredMessage,
			        customRule2: banhji.source.duplicateInvoice,
			        customRule3: banhji.source.duplicateNumber
			    }
	        }).data("kendoValidator");

	        $("#saveNew").click(function(e){
				e.preventDefault();

				if(validator.validate()){
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});

			$("#saveClose").click(function(e){
				e.preventDefault();

				if(validator.validate()){
					vm.set("saveClose", true);
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});

			$("#savePrint").click(function(e){
				e.preventDefault();
				
				if(validator.validate()){
					vm.set("savePrint", true);
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});

			$("#saveRecurring").click(function(e){
				e.preventDefault();

				vm.set("recurring_validate", true);

				if(validator.validate()){
	            	vm.set("saveRecurring", true);
	            	vm.save();
		        }else{
		        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
		        }
			});
		}

		vm.pageLoad(id);
	});
	banhji.router.route("/direct_expense(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.expense);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.expense;
				banhji.userManagement.addMultiTask("Expense","expense",vm);
				
				if(banhji.pageLoaded["expense"]==undefined){
					banhji.pageLoaded["expense"] = true;
	   
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input) {
					          	if (input.is("[name=txtReferenceNo]")) {
					            	return $.trim(input.val()) !== "" && vm.isExistingInvoice==false;
					          	}
					          	return true;
					        },
					        customRule3: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateInvoice,
					        customRule3: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});
	banhji.router.route("/reimbursement(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.expense);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.expense;
				banhji.userManagement.addMultiTask("Expense","expense",vm);
				
				if(banhji.pageLoaded["expense"]==undefined){
					banhji.pageLoaded["expense"] = true;
	   
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input) {
					          	if (input.is("[name=txtReferenceNo]")) {
					            	return $.trim(input.val()) !== "" && vm.isExistingInvoice==false;
					          	}
					          	return true;
					        },
					        customRule3: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateInvoice,
					        customRule3: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});
	banhji.router.route("/advance_settlement(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {							
				banhji.view.layout.showIn("#content", banhji.view.expense);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.expense;
				banhji.userManagement.addMultiTask("Expense","expense",vm);
				
				if(banhji.pageLoaded["expense"]==undefined){
					banhji.pageLoaded["expense"] = true;
	   
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input) {
					          	if (input.is("[name=txtReferenceNo]")) {
					            	return $.trim(input.val()) !== "" && vm.isExistingInvoice==false;
					          	}
					          	return true;
					        },
					        customRule3: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateInvoice,
					        customRule3: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});

	banhji.router.route("/accounting_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.accountingReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

			var vm = banhji.accountingReportCenter;			
			banhji.userManagement.addMultiTask("Accounting Report Center","accounting_report_center",null);
			if(banhji.pageLoaded["accounting_report_center"]==undefined){
				banhji.pageLoaded["accounting_report_center"] = true;				
								
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/accounting_setting", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("accounting" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {	
				banhji.view.layout.showIn("#content", banhji.view.accountingSetting);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

				var vm = banhji.vendorSetting;
				banhji.userManagement.addMultiTask("General Accounting Setting","accounting_setting",null);
				
				if(banhji.pageLoaded["accounting_setting"]==undefined){
					banhji.pageLoaded["accounting_setting"] = true;

					vm.contactTypeDS.filter({ field:"parent_id", value: 2 });
				}

				vm.pageLoad();			     		
			} else {
				window.location.replace(baseUrl + "admin");
			}				
		});
	});

	banhji.router.route("/currency_rate", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.currencyRate);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.currencyRate;
			banhji.userManagement.addMultiTask("Currency Rate","currency_rate",null);
			
			if(banhji.pageLoaded["currency_rate"]==undefined){
				banhji.pageLoaded["currency_rate"] = true;
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.recurring);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.recurring;
			banhji.userManagement.addMultiTask("Recurring Transaction Lists","recurring",null);
			
			if(banhji.pageLoaded["recurring"]==undefined){
				banhji.pageLoaded["recurring"] = true;   
				
				vm.dataSource.filter({ field:"is_recurring", value: 1 });
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/journal_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.journalReport);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Journal Entry Reports","journal_report",null);

			if(banhji.pageLoaded["journal_report"]==undefined){
				banhji.pageLoaded["journal_report"] = true;									
				
				vm.sorterChanges();		
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/journal_report_by_segment", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.journalReportBySegment);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReportBySegment;
			banhji.userManagement.addMultiTask("Journal Entry Reports By Segment","journal_report_by_segment",null);

			if(banhji.pageLoaded["journal_report_by_segment"]==undefined){
				banhji.pageLoaded["journal_report_by_segment"] = true;									
						
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/trial_balance", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.trialBalance);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.trialBalance;
			banhji.userManagement.addMultiTask("Trial Balance","trial_balance",null);

			if(banhji.pageLoaded["trial_balance"]==undefined){
				banhji.pageLoaded["trial_balance"] = true;                
                						
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/chart_of_account", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.chartOfAccount);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.chartOfAccount;
			banhji.userManagement.addMultiTask("Chart of Account","chart_of_account",null);

			if(banhji.pageLoaded["chart_of_account"]==undefined){
				banhji.pageLoaded["chart_of_account"] = true;              
                						
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/add_accountingprefix(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.addAccountingprefix);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.addAccountingprefix;
			banhji.userManagement.addMultiTask("Add Accounting Prefix","add_accountingprefix",null);
			if(banhji.pageLoaded["add_accountingprefix"]==undefined){
				banhji.pageLoaded["add_accountingprefix"] = true;				        
				setTimeout(function(){
					var validator = $("#example").kendoValidator().data("kendoValidator");
					var notification = $("#notification").kendoNotification({				    
					    autoHideAfter: 5000,
					    width: 300,				    
					    height: 50
					}).data('kendoNotification');
					$("#saveNew").click(function(e){	
		        			
						e.preventDefault();
						if(validator.validate()){
			            	vm.save();		            	

			            	notification.success("Save Successful");			  
				        }else{
				        	notification.error("Warning, please review it again!");			           
				        }		            
					});
					$("#saveClose").click(function(e){				
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
			            	window.history.back();

			            	notification.success("Save Successful");			  
				        }else{
				        	notification.error("Warning, please review it again!");			           
				        }	            
					});
				},2000);
						
			};
			
			vm.pageLoad(id);		
		};
	});	
	banhji.router.route("/segment", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.segment);

			banhji.userManagement.addMultiTask("Segment","segment",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.segment;

			if(banhji.pageLoaded["segment"]==undefined){
				banhji.pageLoaded["segment"] = true;
														
			}		
		}
	});
	banhji.router.route("/general_ledger", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.generalLedger);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.generalLedger;
			banhji.userManagement.addMultiTask("General Ledger","general_ledger",null);

			if(banhji.pageLoaded["general_ledger"]==undefined){
				banhji.pageLoaded["general_ledger"] = true;
						
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/transaction_list_date", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.transactionListDate);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Transaction List by Date","transaction_list_date",null);

			if(banhji.pageLoaded["transaction_list_date"]==undefined){
				banhji.pageLoaded["transaction_list_date"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}
	});
	banhji.router.route("/recent_transactions_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.recentTransactionsList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Recent Transactions List","recent_transactions_list",null);

			if(banhji.pageLoaded["recent_transactions_list"]==undefined){
				banhji.pageLoaded["recent_transactions_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);
		        });
			}
		}
	});	
	banhji.router.route("/recurring_journal_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.recurringJournalList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Recurring Journal List","recurring_journal_list",null);

			if(banhji.pageLoaded["recurring_journal_list"]==undefined){
				banhji.pageLoaded["recurring_journal_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);
		        });
			}
		}
	});
	banhji.router.route("/audit_trial_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.auditTrialReport);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Audit Trial Report","audit_trial_report",null);

			if(banhji.pageLoaded["audit_trial_report"]==undefined){
				banhji.pageLoaded["audit_trial_report"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);
		        });
			}
		}
	});
	banhji.router.route("/statement_profit_loss", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementProfitLoss);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.statementProfitLoss;
			banhji.userManagement.addMultiTask("Statement of Profit or Loss","statement_profit_loss",null);

			if(banhji.pageLoaded["statement_profit_loss"]==undefined){
				banhji.pageLoaded["statement_profit_loss"] = true;
						
			}

			vm.pageLoad();
		}
	});	
	banhji.router.route("/statement_profit_loss_by_segment", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementProfitLossBySegment);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.statementProfitLossBySegment;
			banhji.userManagement.addMultiTask("Statement of Profit or Loss by Segment","statement_profit_loss_by_segment",null);

			if(banhji.pageLoaded["statement_profit_loss_by_segment"]==undefined){
				banhji.pageLoaded["statement_profit_loss_by_segment"] = true;
						
			}

			vm.pageLoad();
		}
	});	
	banhji.router.route("/statement_financial_position", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementFinancialPosition);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.statementFinancialPosition;
			banhji.userManagement.addMultiTask("Statement of Financial Position","statement_financial_position",null);

			if(banhji.pageLoaded["statement_financial_position"]==undefined){
				banhji.pageLoaded["statement_financial_position"] = true;
						
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/statement_profit_loss_comparison", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementProfitLossComparison);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.statementProfitLossComparison;

			banhji.userManagement.addMultiTask("Statement of Profit or Loss Comparison","statement_profit_loss_comparison",null);

			if(banhji.pageLoaded["statement_profit_loss_comparison"]==undefined){
				banhji.pageLoaded["statement_profit_loss_comparison"] = true;

				
			}
		}
	});
	banhji.router.route("/statement_financial_position_comparison", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementFinancialPositionComparison);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Financial Position Comparison","statement_financial_position_comparison",null);

			if(banhji.pageLoaded["statement_financial_position_comparison"]==undefined){
				banhji.pageLoaded["statement_financial_position_comparison"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);
		        });
			}
		}
	});
	banhji.router.route("/statement_changes_equity", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementChangesEquity);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement Changes Equity","statement_changes_equity",null);

			if(banhji.pageLoaded["statement_changes_equity"]==undefined){
				banhji.pageLoaded["statement_changes_equity"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);
		        });
			}
		}
	});
	banhji.router.route("/statement_cash_flow", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementCashFlow);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Cash Flow","statement_cash_flow",null);

			if(banhji.pageLoaded["statement_cash_flow"]==undefined){
				banhji.pageLoaded["statement_cash_flow"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);
		        });
			}
		}
	});
	banhji.router.route("/accounting_recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.accountingRecurring);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.accountingRecurring;
			banhji.userManagement.addMultiTask("Accounting Recurring","accounting_recurring",null);
			
			if(banhji.pageLoaded["accounting_recurring"]==undefined){
				banhji.pageLoaded["accounting_recurring"] = true;

			}

			vm.pageLoad();
		}
	});

	/*************************
	*   Tax Section   *
	**************************/
	banhji.router.route("/tax", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.tax);

			banhji.userManagement.addMultiTask("Tax","tax",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			//banhji.view.menu.showIn('#secondary-menu', banhji.view.taxMenu);
			
			var vm = banhji.tax;

			if(banhji.pageLoaded["tax"]==undefined){
				banhji.pageLoaded["tax"] = true;
			}
		}		
	});
	banhji.router.route("/tax_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.taxReportCenter);

			banhji.userManagement.addMultiTask("Tax Report Center","tax_report_center",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.taxMenu);
			
			// var vm = banhji.tax_report_center;

			if(banhji.pageLoaded["tax_report_center"]==undefined){
				banhji.pageLoaded["tax_report_center"] = true;
			}
		}
	});
	banhji.router.route("/sale_journal", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleJournal);

			banhji.userManagement.addMultiTask("Sale Journal","sale_journal",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.taxMenu);
			
			var vm = banhji.tax_report_center;

			if(banhji.pageLoaded["sale_journal"]==undefined){
				banhji.pageLoaded["sale_journal"] = true;
			}
		}
	});	
	banhji.router.route("/purchase_journal", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.purchaseJournal);

			banhji.userManagement.addMultiTask("Purchase Journal","purchase_journal",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.taxMenu);
			
			var vm = banhji.tax_report_center;

			if(banhji.pageLoaded["purchase_journal"]==undefined){
				banhji.pageLoaded["purchase_journal"] = true;
			}
		}
	});


	/*************************
	*   Employee Section   *
	**************************/
	banhji.router.route("/employees", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.employeeDashboard);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.employeeMenu);
			
			var vm = banhji.employeeDashboard;

			banhji.userManagement.addMultiTask("Employees Dashboard","employees",null);


			if(banhji.pageLoaded["employees"]==undefined){
				banhji.pageLoaded["employees"] = true;
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/employee_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.employeeCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.employeeMenu);
			
			var vm = banhji.employeeCenter;

			banhji.userManagement.addMultiTask("Employees Center","employee_center",null);

			if(banhji.pageLoaded["employee_center"]==undefined){
				banhji.pageLoaded["employee_center"] = true;
				vm.contactTypeDS.filter({ field:"parent_id", value:2 });
				
				vm.contactDS.query({
				  	filter:{ field:"parent_id", operator:"where_related_contact_type", value:2 },
				  	page: 1,
				  	pageSize: 50
				}).then(function(e) {
				    var view = vm.contactDS.data();
				    
				    if(view.length>0){
				    	vm.set("obj", view[0]);
				    	vm.loadSummary(view[0].id);
				    	vm.loadTransaction(view[0].id);
				    	vm.loadNote(view[0].id);
				    }
				});

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
						
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:

					}

					start.value(sdate);
					end.value(edate);
					start.max(end.value());
                	end.min(start.value());
                	dateChanges();
                });
                start.max(end.value());
                end.min(start.value());
			}
		}
	});
	banhji.router.route("/employee(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.employee;
			vm.pageLoad(id);

			banhji.userManagement.addMultiTask("Employees","employee",null);
			
			banhji.view.layout.showIn("#content", banhji.view.employee);
			kendo.fx($("#slide-form")).slideIn("down").play();

			if(banhji.pageLoaded["employee"]==undefined){
				banhji.pageLoaded["employee"] = true;

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({
				    autoHideAfter: 5000,
				    width: 300,
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){
		        	e.preventDefault();

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");
			        }else{
			        	notification.error("Warning, please review it again!");
			        }
				});
			}
		}
	});	
	banhji.router.route("/employee_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.employeeReportCenter);

			banhji.userManagement.addMultiTask("Employee Reports","employee_report_center",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.employeeMenu);

			//var vm = banhji.customerReportCenter;
			
			if(banhji.pageLoaded["employee_report_center"]==undefined){
				banhji.pageLoaded["employee_report_center"] = true;
			}
		}
	});

	/*************************
	*   Vendor Section   *
	**************************/
	banhji.router.route("/vendors", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.vendorDashboard);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);
				
				var vm = banhji.vendorDashboard;
				banhji.userManagement.addMultiTask("Supplier Dashboard","vendors",null);
				if(banhji.pageLoaded["vendors"]==undefined){
					banhji.pageLoaded["vendors"] = true;
				}

				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/vendor_center(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.vendorCenter);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);
				
				var vm = banhji.vendorCenter;
				banhji.userManagement.addMultiTask("Supplier Center","vendor_center",null);

				if(banhji.pageLoaded["vendor_center"]==undefined){
					banhji.pageLoaded["vendor_center"] = true;
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/vendor(/:id)(/:is_pattern)", function(id, is_pattern){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.vendor;
				banhji.userManagement.addMultiTask("Supplier","vendor",vm);

				banhji.view.layout.showIn("#content", banhji.view.vendor);
				kendo.fx($("#slide-form")).slideIn("down").play();

				if(banhji.pageLoaded["vendor"]==undefined){
					banhji.pageLoaded["vendor"] = true;
			        
			        var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, is_pattern);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/purchase_order(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {						
				banhji.view.layout.showIn("#content", banhji.view.purchaseOrder);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.purchaseOrder;
				banhji.userManagement.addMultiTask("Purchase Order","purchase_order",vm);

				if(banhji.pageLoaded["purchase_order"]==undefined){
					banhji.pageLoaded["purchase_order"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/grn(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.grn);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.grn;
			banhji.userManagement.addMultiTask("Goods Receive Note","grn",vm);

			if(banhji.pageLoaded["grn"]==undefined){
				banhji.pageLoaded["grn"] = true;

				var validator = $("#example").kendoValidator({
		        	rules: {
				        customRule1: function(input) {
				          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
				          		vm.set("recurring_validate", false);
				            	return $.trim(input.val()) !== "";
				          	}
				          	return true;
				        },
				        customRule2: function(input){
				          	if (input.is("[name=txtNumber]")) {	
					            return vm.get("notDuplicateNumber");
					        }
					        return true;
				        }
				    },
				    messages: {
				        customRule1: banhji.source.requiredMessage,
				        customRule2: banhji.source.duplicateNumber
				    }
		        }).data("kendoValidator");

		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);

					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});	
	banhji.router.route("/vendor_deposit(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.vendorDeposit);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.vendorDeposit;
				banhji.userManagement.addMultiTask("Supplier Deposit","vendor_deposit",vm);
				
				if(banhji.pageLoaded["vendor_deposit"]==undefined){
					banhji.pageLoaded["vendor_deposit"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});	
	banhji.router.route("/purchase(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.purchase);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.purchase;
				banhji.userManagement.addMultiTask("Purchase","purchase",vm);

				if(banhji.pageLoaded["purchase"]==undefined){
					banhji.pageLoaded["purchase"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/credit_purchase(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.purchase);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.purchase;
				banhji.userManagement.addMultiTask("Purchase","purchase",vm);

				if(banhji.pageLoaded["purchase"]==undefined){
					banhji.pageLoaded["purchase"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/cash_purchase(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.purchase);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.purchase;
				banhji.userManagement.addMultiTask("Purchase","purchase",vm);

				if(banhji.pageLoaded["purchase"]==undefined){
					banhji.pageLoaded["purchase"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/purchase_return(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.purchaseReturn);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.purchaseReturn;
				banhji.userManagement.addMultiTask("Purchase Return","purchase_return",vm);
				
				if(banhji.pageLoaded["purchase_return"]==undefined){
					banhji.pageLoaded["purchase_return"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();
						
						if(validator.validate() && vm.get("obj").remaining===0){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate() && vm.get("obj").remaining===0){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate() && vm.get("obj").remaining===0){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});	
	banhji.router.route("/vendor_setting", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("supplier" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.vendorSetting);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

				var vm = banhji.vendorSetting;
				banhji.userManagement.addMultiTask("Supplier Setting","vendor_setting",null);
				
				if(banhji.pageLoaded["vendor_setting"]==undefined){
					banhji.pageLoaded["vendor_setting"] = true;

					vm.contactTypeDS.filter({ field:"parent_id", value: 2 });
				}

				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/vendor_recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.vendorRecurring);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			var vm = banhji.vendorRecurring;
			banhji.userManagement.addMultiTask("Supplier Recurring","vendor_recurring",null);
			if(banhji.pageLoaded["vendor_recurring"]==undefined){
				banhji.pageLoaded["vendor_recurring"] = true;

			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/vendor_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.vendorReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			var vm = banhji.vendorReportCenter;
			banhji.userManagement.addMultiTask("Supplier Report Center","vendor_report_center");

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Expense/Purchase Managment Reports","vendor_report_center",null);

			if(banhji.pageLoaded["vendor_report_center"]==undefined){
				banhji.pageLoaded["vendor_report_center"] = true;
			}
			banhji.vendorReportCenter.dataSource.read();
			banhji.vendorReportCenter.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.vendorReportCenter.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.vendorReportCenter.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.vendorReportCenter.set('supplierCount', kendo.toString(e.response.supplierCount, 'n0'));
					banhji.vendorReportCenter.set('order', kendo.toString(e.response.order, 'n0'));
					banhji.vendorReportCenter.set('items', kendo.toString(e.response.items, 'n0'));
					banhji.vendorReportCenter.set('overDate', kendo.toString(e.response.overDate, 'n0'));
					banhji.vendorReportCenter.set('totalBalance', kendo.toString(e.response.totalBalance, 'c2'));
					banhji.vendorReportCenter.set('openBalance', kendo.toString(e.response.openBalance, 'n0'));
				}
			});
			vm.pageLoad();
		}
	});
	banhji.router.route("/expenses_purchase_summary_supplier", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.expensesSummarySupplier);

			var vm = banhji.expensesSummarySupplier;
			banhji.userManagement.addMultiTask("Expense/ Purchase Summary by Supplier","expenses_purchase_summary_supplier",null);
			
			if(banhji.pageLoaded["expenses_purchase_summary_supplier"]==undefined){
				banhji.pageLoaded["expenses_purchase_summary_supplier"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/suppliers_transaction_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.supplierTransaction);

			var vm = banhji.supplierTransaction;
			banhji.userManagement.addMultiTask("Supplier Transaction List","suppliers_transaction_list");
			
			if(banhji.pageLoaded["suppliers_transaction_list"]==undefined){
				banhji.pageLoaded["suppliers_transaction_list"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/expenses_purchase_detail_supplier", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.expensesDetailSupplier);

			var vm = banhji.expensesDetailSupplier;
			banhji.userManagement.addMultiTask("Expense/ Purchase Detail by Supplier","expenses_purchase_detail_supplier",null);
			
			if(banhji.pageLoaded["expenses_purchase_detail_supplier"]==undefined){
				banhji.pageLoaded["expenses_purchase_detail_supplier"] = true;

				vm.sorterChanges();
			}
			banhji.expensesDetailSupplier.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.expensesDetailSupplier.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.expensesDetailSupplier.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
			vm.pageLoad();
		}
	});
	banhji.router.route("/deposit_detail_supplier", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.depositDetailSupplier);

			var vm = banhji.depositDetailSupplier;
			banhji.userManagement.addMultiTask("Deposit Detail Supplier","deposit_detail_supplier",null); 
			
			if(banhji.pageLoaded["deposit_detail_supplier"]==undefined){
				banhji.pageLoaded["deposit_detail_supplier"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/purchase_summary_product_services", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.purchaseSummaryProductServices);

			var vm = banhji.purchaseSummaryProductServices;
			banhji.userManagement.addMultiTask("Purchase Summary Product/Service","purchase_summary_product_services", null); 
			
			if(banhji.pageLoaded["purchase_summary_product_services"]==undefined){
				banhji.pageLoaded["purchase_summary_product_services"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});	
	banhji.router.route("/open_purchase_order", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.purchaseOrderList);

			var vm = banhji.purchaseOrderList;
			banhji.userManagement.addMultiTask("Open Purchase Order","open_purchase_order", null);
			
			if(banhji.pageLoaded["open_purchase_order"]==undefined){
				banhji.pageLoaded["open_purchase_order"] = true;
				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/purchase_detail_product_services", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.purchaseDetailProductServices);

			var vm = banhji.purchaseDetailProductServices;
			banhji.userManagement.addMultiTask("Purchase Detail Product/Service","purchase_detail_product_services", null);
			
			if(banhji.pageLoaded["purchase_detail_product_services"]==undefined){
				banhji.pageLoaded["purchase_detail_product_services"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/suppliers_balance_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.suppliersBalanceSummary);
			
			var vm = banhji.suppliersBalanceSummary;
			banhji.userManagement.addMultiTask("Supplier Balance Summary","suppliers_balance_summary", null);

			if(banhji.pageLoaded["suppliers_balance_summary"]==undefined){
				banhji.pageLoaded["suppliers_balance_summary"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/suppliers_balance_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.suppliersBalanceDetail;
			banhji.userManagement.addMultiTask("Supplier Balance Detail","suppliers_balance_detail", null);
			banhji.view.layout.showIn("#content", banhji.view.suppliersBalanceDetail);
			if(banhji.pageLoaded["suppliers_balance_detail"]==undefined){
				banhji.pageLoaded["suppliers_balance_detail"] = true;
			}
			vm.pageLoad();			
		}
	});
	banhji.router.route("/payables_aging_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.payablesAgingSummary);
			
			var vm = banhji.payablesAgingSummary;
			banhji.userManagement.addMultiTask("Payables Aging Summary ","payables_aging_summary", null);

			if(banhji.pageLoaded["payables_aging_summary"]==undefined){
				banhji.pageLoaded["payables_aging_summary"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/payables_aging_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.payablesAgingDetail);
			
			var vm = banhji.payablesAgingDetail;
			banhji.userManagement.addMultiTask("Payables Aging Detail ","payables_aging_detail", null);

			if(banhji.pageLoaded["payables_aging_detail"]==undefined){
				banhji.pageLoaded["payables_aging_detail"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/list_bills_paid", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.listBillsPaid);

			var vm = banhji.listBillsPaid;
			banhji.userManagement.addMultiTask("List Bills Paid ","list_bills_paid", null);
			
			if(banhji.pageLoaded["collect_invoice"]==undefined){
				banhji.pageLoaded["collect_invoice"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/bill_payment_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.billPaymentList;
			banhji.userManagement.addMultiTask("List of Payment","bill_payment_list", null);
			banhji.view.layout.showIn("#content", banhji.view.billPaymentList);

			if(banhji.pageLoaded["bill_payment_list"]==undefined){
				banhji.pageLoaded["bill_payment_list"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/product_service_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.productServiceList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Product/Service List","product_service_list",null);
			if(banhji.pageLoaded["product_service_list"]==undefined){
				banhji.pageLoaded["product_service_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();
					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;
						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);
					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());	
			}
		}
	});	
	banhji.router.route("/supplier_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.supplierList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.supplierMenu);

			var vm = banhji.supplierList;
			
			if(banhji.pageLoaded["supplier_list"]==undefined){
				banhji.pageLoaded["supplier_list"] = true;
				
			}
		}
	});


	/*************************
	*   Customer Section   *
	**************************/
	banhji.router.route("/customers", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.customerDashboard);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);
				
				//eraseCookie("isshow");
				var isshow = readCookie("cusVisit");
				
			    if (isshow != 1) {
			        createCookie("cusVisit", 1);
					$("a.aCustomer").click();
				}

				var vm = banhji.customerDashboard;
				banhji.userManagement.addMultiTask("Customer Dashboard","customers",null);
				if(banhji.pageLoaded["customers"]==undefined){
					banhji.pageLoaded["customers"] = true;
				}
				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/customer_center(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.customerCenter);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);
				
				var vm = banhji.customerCenter;
				banhji.userManagement.addMultiTask("Customer Center","customer_center",null);
				if(banhji.pageLoaded["customer_center"]==undefined){
					banhji.pageLoaded["customer_center"] = true;
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/customer(/:id)(/:is_pattern)", function(id,is_pattern){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.customer);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.customer;
				banhji.userManagement.addMultiTask("Customer","customer",vm);
				if(banhji.pageLoaded["customer"]==undefined){
					banhji.pageLoaded["customer"] = true;

			        var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, is_pattern);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/quote(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.quote);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.quote;
				banhji.userManagement.addMultiTask("Quote","quote",vm);

				if(banhji.pageLoaded["quote"]==undefined){
					banhji.pageLoaded["quote"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");
			        
			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
							vm.set("saveRecurring", true);			            	
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});
	banhji.router.route("/sale_order(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.saleOrder);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.saleOrder;
				banhji.userManagement.addMultiTask("Sale Order","sale_order",vm);

				if(banhji.pageLoaded["sale_order"]==undefined){
					banhji.pageLoaded["sale_order"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});
	banhji.router.route("/customer_deposit(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.customerDeposit);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.customerDeposit;
				banhji.userManagement.addMultiTask("Customer Deposit","customer_deposit",vm);

				if(banhji.pageLoaded["customer_deposit"]==undefined){
					banhji.pageLoaded["customer_deposit"] = true;

			        var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/cash_sale(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.cashSale);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.cashSale;
				banhji.userManagement.addMultiTask("Cash Sale","cash_sale",vm);

				if(banhji.pageLoaded["cash_sale"]==undefined){
					banhji.pageLoaded["cash_sale"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);

		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });			
	});
	banhji.router.route("/commercial_cash_sale(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.cashSale);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.cashSale;
				banhji.userManagement.addMultiTask("Cash Sale","cash_sale",vm);

				if(banhji.pageLoaded["cash_sale"]==undefined){
					banhji.pageLoaded["cash_sale"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);

		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });			
	});
	banhji.router.route("/vat_sale(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.cashSale);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.cashSale;
				banhji.userManagement.addMultiTask("Cash Sale","cash_sale",vm);

				if(banhji.pageLoaded["cash_sale"]==undefined){
					banhji.pageLoaded["cash_sale"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);

		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });			
	});
	banhji.router.route("/invoice(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.invoice);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.invoice;
				banhji.userManagement.addMultiTask("Invoice","invoice",vm);

				if(banhji.pageLoaded["invoice"]==undefined){
					banhji.pageLoaded["invoice"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/commercial_invoice(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.invoice);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.invoice;
				banhji.userManagement.addMultiTask("Invoice","invoice",vm);

				if(banhji.pageLoaded["invoice"]==undefined){
					banhji.pageLoaded["invoice"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/vat_invoice(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.invoice);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.invoice;
				banhji.userManagement.addMultiTask("Invoice","invoice",vm);

				if(banhji.pageLoaded["invoice"]==undefined){
					banhji.pageLoaded["invoice"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}
		// });
	});
	banhji.router.route("/gdn(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.gdn);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.gdn;
			banhji.userManagement.addMultiTask("GDN","gdn",vm);

			if(banhji.pageLoaded["gdn"]==undefined){
				banhji.pageLoaded["gdn"] = true;

				var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        },
					        customRule2: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage,
					        customRule2: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);

					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}		
	});
	banhji.router.route("/sale_return(/:id)", function(id){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.saleReturn);
				kendo.fx($("#slide-form")).slideIn("down").play();

				var vm = banhji.saleReturn;
				banhji.userManagement.addMultiTask("Sale Return","sale_return",vm);
				if(banhji.pageLoaded["sale_return"]==undefined){
					banhji.pageLoaded["sale_return"] = true;
					
			        var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();
						
						if(validator.validate() && vm.validating()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate() && vm.validating()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate() && vm.validating()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
		// 		} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });		
	});
	banhji.router.route("/statement(/:id)", function(){
		// banhji.accessMod.query({
		// 	filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		// }).then(function(e){
		// 	var allowed = false;
		// 	if(banhji.accessMod.data().length > 0) {
		// 		for(var i = 0; i < banhji.accessMod.data().length; i++) {
		// 			if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
		// 				allowed = true;
		// 				break;
		// 			}
		// 		}
		// 	} 
		// 	if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.statement);

				var vm = banhji.statement;
				banhji.userManagement.addMultiTask("Statement","statement",null);

				if(banhji.pageLoaded["statement"]==undefined){
					banhji.pageLoaded["statement"] = true;
				}

				vm.pageLoad();
		// 	} else {
		// 		window.location.replace(baseUrl + "admin");
		// 	}				
		// });
	});
	banhji.router.route("/customer_setting", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.customerSetting);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

				var vm = banhji.customerSetting;
				banhji.userManagement.addMultiTask("Customer Setting","customer_setting",null);
				if(banhji.pageLoaded["customer_setting"]==undefined){
					banhji.pageLoaded["customer_setting"] = true;
					
					vm.contactTypeDS.filter({ field:"parent_id", value:1 });
				}

				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/customer_recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerRecurring);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerRecurring;
			banhji.userManagement.addMultiTask("Customer Recurring","customer_recurring",null);
			if(banhji.pageLoaded["customer_recurring"]==undefined){
				banhji.pageLoaded["customer_recurring"] = true;

			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/customer_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Customer Reports Center","customer_report_center",null);
			if(banhji.pageLoaded["customer_report_center"]==undefined){
				banhji.pageLoaded["customer_report_center"] = true;
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/customer_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerList);
			banhji.userManagement.addMultiTask("Customer List","customer_list",null);

			if(banhji.pageLoaded["customer_list"]==undefined){
				banhji.pageLoaded["customer_list"] = true;
				
				$("#grid").kendoGrid({
	                dataSource: dataStore(apiUrl + "contacts"),
	                height: 550,
	                groupable: true,
	                sortable: true,
	                columnMenu: true,
	                pageable: {
	                    refresh: true,
	                    pageSizes: true,
	                    buttonCount: 5
	                },
	                columns: [{
	                	template: "#=abbr##=number#",
	                    field: "number",
	                    title: "Number"
	                }, {
	                    field: "name",
	                    title: "Name"
	                }, {
	                	template: "#=contact_type#",
	                    field: "contact_type_id",
	                    title: "Type"
	                }, {
	                    field: "phone",
	                    title: "Phone"
	                }, {
	                    field: "address",
	                    title: "Address"
	                }]
	            });
			}
		}
	});
	banhji.router.route("/customer_balance", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerBalance);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerBalance;
			banhji.userManagement.addMultiTask("Customer Balance","customer_balance",null);
			if(banhji.pageLoaded["customer_balance"]==undefined){
				banhji.pageLoaded["customer_balance"] = true;
				
				vm.search();
			}
		}
	});
	banhji.router.route("/job", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.job);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);
			
			var vm = banhji.job;
			banhji.userManagement.addMultiTask("Job","job",null);
			if(banhji.pageLoaded["job"]==undefined){
				banhji.pageLoaded["job"] = true;
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/invoice_custom(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.invoiceCustom);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.invoiceCustom;
			
			if(banhji.pageLoaded["invoice_custom"]==undefined){
				banhji.pageLoaded["invoice_custom"] = true;

				//Function write css to header
				function loadStyle(href){
				    // avoid duplicates
				    for(var i = 0; i < document.styleSheets.length; i++){
				        if(document.styleSheets[i].href == href){
				            return;
				        }
				    }
				    var head  = document.getElementsByTagName('head')[0];
				    var link  = document.createElement('link');
				    link.rel  = 'stylesheet';
				    link.type = 'text/css';
				    link.href = href;
				    head.appendChild(link);
				}
				var Href1 = '<?php echo base_url(); ?>assets/invoice/invoice.css';
				loadStyle(Href1);
				setTimeout(function(){
					var validator = $("#example").kendoValidator().data("kendoValidator");
					var notification = $("#notification").kendoNotification({
					    autoHideAfter: 5000,
					    width: 300,
					    height: 50
					}).data('kendoNotification');
					$("#saveNew").click(function(e){
						e.preventDefault();
						if(validator.validate()){
			            	vm.save();

			            	notification.success("Save Successful");
				        }else{
				        	notification.error("Warning, please review it again!");
				        }
					});
					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
			            	window.history.back();

			            	notification.success("Save Successful");
				        }else{
				        	notification.error("Warning, please review it again!");
				        }
					});
				},2000);
			};
			
			vm.pageLoad(id);
		};
	});
	banhji.router.route("/invoice_form(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.invoiceForm);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.invoiceForm;
			banhji.userManagement.addMultiTask("Customer Form","invoice_form",null);
			if(banhji.pageLoaded["invoice_form"]==undefined){
				banhji.pageLoaded["invoice_form"] = true;

				//Function write css to header
				function loadStyle(href){
				    // avoid duplicates
				    for(var i = 0; i < document.styleSheets.length; i++){
				        if(document.styleSheets[i].href == href){
				            return;
				        }
				    }
				    var head  = document.getElementsByTagName('head')[0];
				    var link  = document.createElement('link');
				    link.rel  = 'stylesheet';
				    link.type = 'text/css';
				    link.href = href;
				    head.appendChild(link);
				}
				var Href1 = '<?php echo base_url(); ?>assets/invoice/invoice.css';
				loadStyle(Href1);
			};
			
			vm.pageLoad(id);
		};
	});
	banhji.router.route("/sale_summary_by_customer", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleSummaryByCustomer);

			var vm = banhji.saleSummaryByCustomer;
			banhji.userManagement.addMultiTask("Sale Summary By Customer","sale_summary_by_customer",null);
			
			if(banhji.pageLoaded["sale_summary_by_customer"]==undefined){
				banhji.pageLoaded["sale_summary_by_customer"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/sale_detail_by_customer", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleDetailByCustomer);

			var vm = banhji.saleDetailByCustomer;
			banhji.userManagement.addMultiTask("Sale Detail By Customer","sale_detail_by_customer",null);
			
			if(banhji.pageLoaded["sale_detail_by_customer"]==undefined){
				banhji.pageLoaded["sale_detail_by_customer"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/customer_transaction_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerTransactionList);

			var vm = banhji.customerTransactionList;
			banhji.userManagement.addMultiTask("Customer Transaction List","customer_transaction_list",null);
			
			if(banhji.pageLoaded["customer_transaction_list"]==undefined){
				banhji.pageLoaded["customer_transaction_list"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/deposit_detail_by_customer", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.depositDetailByCustomer);

			var vm = banhji.depositDetailByCustomer;
			banhji.userManagement.addMultiTask("Deposit Detail By Customer","deposit_detail_by_customer",null);
			
			if(banhji.pageLoaded["deposit_detail_by_customer"]==undefined){
				banhji.pageLoaded["deposit_detail_by_customer"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/sale_summary_by_product", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleSummaryByProduct);

			var vm = banhji.saleSummaryByProduct;
			banhji.userManagement.addMultiTask("Sale Summary By Product","sale_summary_by_product",null);
			
			if(banhji.pageLoaded["sale_summary_by_product"]==undefined){
				banhji.pageLoaded["sale_summary_by_product"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});	
	banhji.router.route("/sale_detail_by_product", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleDetailByProduct);

			var vm = banhji.saleDetailByProduct;
			banhji.userManagement.addMultiTask("Sale Detail By Product","sale_detail_by_product",null);
			
			if(banhji.pageLoaded["sale_detail_by_product"]==undefined){
				banhji.pageLoaded["sale_detail_by_product"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/customer_balance_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerBalanceSummary);
			
			var vm = banhji.customerBalanceSummary;
			banhji.userManagement.addMultiTask("Customer Balance Summary","customer_balance_summary",null);

			if(banhji.pageLoaded["customer_balance_summary"]==undefined){
				banhji.pageLoaded["customer_balance_summary"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/customer_balance_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.customerBalanceDetail;
			banhji.userManagement.addMultiTask("Customer Balance Detail","customer_balance_detail",null);
			banhji.view.layout.showIn("#content", banhji.view.customerBalanceDetail);
			if(banhji.pageLoaded["customer_balance_detail"]==undefined){
				banhji.pageLoaded["customer_balance_detail"] = true;
			}
			vm.pageLoad();			
		}
	});
	banhji.router.route("/receivable_aging_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.receivableAgingSummary);
			
			var vm = banhji.receivableAgingSummary;
			banhji.userManagement.addMultiTask("Receivable Aging Summary","receivable_aging_summary",null);

			if(banhji.pageLoaded["receivable_aging_summary"]==undefined){
				banhji.pageLoaded["receivable_aging_summary"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/receivable_aging_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.receivableAgingDetail);
			
			var vm = banhji.receivableAgingDetail;
			banhji.userManagement.addMultiTask("Receivable Aging Detail","receivable_aging_detail",null);

			if(banhji.pageLoaded["receivable_aging_detail"]==undefined){
				banhji.pageLoaded["receivable_aging_detail"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/collect_invoice", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.collectInvoice);

			var vm = banhji.collectInvoice;
			banhji.userManagement.addMultiTask("List Invoice Collect","collect_invoice",null);
			
			if(banhji.pageLoaded["collect_invoice"]==undefined){
				banhji.pageLoaded["collect_invoice"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/collection_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.collectionReport;
			banhji.userManagement.addMultiTask("Collection Report","collection_report",null);
			banhji.view.layout.showIn("#content", banhji.view.collectionReport);

			if(banhji.pageLoaded["collection_report"]==undefined){
				banhji.pageLoaded["collection_report"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/invoice_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.invoiceList);

			var vm = banhji.invoiceList;
			banhji.userManagement.addMultiTask("Invoice List","invoice_list",null);
			
			if(banhji.pageLoaded["collect_invoice"]==undefined){
				banhji.pageLoaded["collect_invoice"] = true;
				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/sale_job_engagement", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.saleJobEngagement;
			banhji.userManagement.addMultiTask("Sale Job Engagement","sale_job_engagement",null);

			banhji.view.layout.showIn("#content", banhji.view.saleJobEngagement);
			banhji.saleJob.set('startDate', new Date().getFullYear() + "-01-01");
			banhji.saleJob.dataSource.filter({
				logic: banhji.saleSummaryCustomer.get('filteredBy'),
				filters: [
					{field: "issued_date >=", value: kendo.toString(new Date().getFullYear() + "-01-01", "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd")}
				]
			});
			banhji.saleJob.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.saleJob.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.saleJob.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.saleJob.set('saleNumber', kendo.toString(e.response.saleNumber, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/sale_order_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleOrderList);

			var vm = banhji.saleOrderList;
			banhji.userManagement.addMultiTask("List of Sale Order","sale_order_list",null);
			
			if(banhji.pageLoaded["sale_order_list"]==undefined){
				banhji.pageLoaded["sale_order_list"] = true;
				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/cash_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			var vm = banhji.cashSetting;
			banhji.userManagement.addMultiTask("Cash Setting","cash_setting",null);
			if(banhji.pageLoaded["cash_setting"]==undefined){
				banhji.pageLoaded["cash_setting"] = true;
				
				vm.contactTypeDS.filter({ field:"parent_id", value:1 });
			}

			vm.pageLoad();
		}
	});



	/*************************
	*	Sales    *
	**************************/
	banhji.router.route("/sales", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.saleDashboard);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.saleMenu);
				
				var vm = banhji.saleDashboard;
				banhji.userManagement.addMultiTask("Sale Dashboard","sales",null);
				if(banhji.pageLoaded["sales"]==undefined){
					banhji.pageLoaded["sales"] = true;
				}
				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/sale_center(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.saleCenter);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.saleMenu);
				
				var vm = banhji.customerCenter;
				banhji.userManagement.addMultiTask("Sale Center","sale_center",null);
				if(banhji.pageLoaded["sale_center"]==undefined){
					banhji.pageLoaded["sale_center"] = true;
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/sale", function(){
		banhji.view.layout.showIn("#content", banhji.view.sale);
		banhji.view.layout.showIn('#menu', banhji.view.menu);
		banhji.view.menu.showIn('#secondary-menu', banhji.view.saleMenu);
		
		var vm = banhji.sale;
		banhji.userManagement.addMultiTask("Sale","sale",null);
		if(banhji.pageLoaded["sale"]==undefined){
			banhji.pageLoaded["sale"] = true;
		}
		vm.pageLoad();
	});
	banhji.router.route("/sale_recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleRecurring);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.saleMenu);

			var vm = banhji.customerRecurring;
			banhji.userManagement.addMultiTask("Sale Recurring","sale_recurring",null);
			if(banhji.pageLoaded["sale_recurring"]==undefined){
				banhji.pageLoaded["sale_recurring"] = true;

			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/sale_detail", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.saleDetail);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.saleMenu);
				
				var vm = banhji.saleDetail;
				banhji.userManagement.addMultiTask("Sale Detail","sale_detail",null);
				if(banhji.pageLoaded["sale_detail"]==undefined){
					banhji.pageLoaded["sale_detail"] = true;
				}
				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/sale_report_center", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("customer" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.saleReportCenter);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.saleMenu);
				
				var vm = banhji.saleReportCenter;
				banhji.userManagement.addMultiTask("Sale Report Center","sale_report_center",null);
				if(banhji.pageLoaded["sale_report_center"]==undefined){
					banhji.pageLoaded["sale_report_center"] = true;
				}
				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/sale_inventory_position_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.inventoryPositionSummary;
			banhji.userManagement.addMultiTask("Sale Inventory Position Summary","sale_inventory_position_summary",null);

			banhji.view.layout.showIn("#content", banhji.view.saleInventoryPositionSummary);
			banhji.inventorySale.inventoryPositionSummary.dataSource.read();
			banhji.inventorySale.inventoryPositionSummary.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.inventorySale.set('count', e.response.count);
					kendo.culture(banhji.locale);	
					banhji.inventorySale.set('onHand', kendo.toString(e.response.onHand, 'n0'));
				}
			});
		}
	});
	


	/*************************
	*   Document Section   *
	**************************/
	banhji.router.route("/documents", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
				if(banhji.accessMod.data().length > 0) {
					for(var i = 0; i < banhji.accessMod.data().length; i++) {
						if("documents" == banhji.accessMod.data()[i].name.toLowerCase()) {
							banhji.view.layout.showIn("#content", banhji.view.documents);
							//banhji.view.layout.showIn('#menu', banhji.view.menu);
							//banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

							var vm = banhji.fileManagement;
							banhji.userManagement.addMultiTask("Attached Documents","documents",null);
							if(banhji.pageLoaded["documents"]==undefined){
								banhji.pageLoaded["documents"] = true;
							}
							vm.dataSource.read();
							vm.dataSource.bind('requestEnd', function(e){
								if(e.type == 'read') {
									vm.set('contactNu', e.response.contactNumber);
									vm.set('contactSize', kendo.toString(e.response.contactSize, "n2"));
									vm.set('transactionNu', e.response.transactionNumber);
									vm.set('transactionSize', kendo.toString(e.response.transactionSize, "n2"));
									vm.set('totalSize', kendo.toString(e.response.total, 'n2'));
									vm.set('allowSize', kendo.toString(e.response.allowedSize, 'n2'));
								}
							});
							break;
						}
					}
				} else {
					window.location.replace(baseUrl + "admin");
				}				
			}
		);
		// if(!checkRole("documents")){
		// 	window.location.replace(baseUrl + "admin");
		// }else{
		// 	banhji.view.layout.showIn("#content", banhji.view.documents);
		// 	//banhji.view.layout.showIn('#menu', banhji.view.menu);
		// 	//banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

		// 	var vm = banhji.fileManagement;			
		// 	banhji.userManagement.addMultiTask("Attached Documents","documents",null);
		// 	if(banhji.pageLoaded["documents"]==undefined){
		// 		banhji.pageLoaded["documents"] = true;					
		// 	}
		// 	vm.dataSource.read();
		// 	vm.dataSource.bind('requestEnd', function(e){
		// 		if(e.type == 'read') {
		// 			vm.set('contactNu', e.response.contactNumber);
		// 			vm.set('contactSize', e.response.contactSize);
		// 			vm.set('transactionNu', e.response.transactionNumber);
		// 			vm.set('transactionSize', e.response.transactionSize);
		// 			vm.set('totalSize', e.response.total);
		// 		}
		// 	});			
		// }		
	});


	/*************************
	*   Inventory Section   *
	**************************/
	banhji.router.route("/inventories", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.itemDashBoard);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);
				
				var vm = banhji.itemDashBoard;
				banhji.userManagement.addMultiTask("Products/Services Dashboard","inventories",null);

				if(banhji.pageLoaded["inventories"]==undefined){
					banhji.pageLoaded["inventories"] = true;
				}

				banhji.itemDashBoard.positionSummary.read();
				banhji.itemDashBoard.positionSummary.bind('requestEnd', function(e){
					if(e.response) {
						banhji.itemDashBoard.set('count', e.response.count);
						kendo.culture(banhji.locale);
						banhji.itemDashBoard.set('onHand', kendo.toString(e.response.onHand, 'n0'));
					}
				});
				vm.pageLoad();
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});	
	banhji.router.route("/item_center(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.itemCenter);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);
				
				var vm = banhji.itemCenter;

				banhji.userManagement.addMultiTask("Inventory Center","item_center",null);

				if(banhji.pageLoaded["item_center"]==undefined){
					banhji.pageLoaded["item_center"] = true;
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/item(/:id)(/:category_id)", function(id, category_id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.item;
							
				banhji.view.layout.showIn("#content", banhji.view.item);
				banhji.userManagement.addMultiTask("Inventory For Sale","item",null);

				if(banhji.pageLoaded["item"]==undefined){
					banhji.pageLoaded["item"] = true;
					
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, category_id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/item_prices/:id", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.itemPrice;

				banhji.userManagement.addMultiTask("Inventory Price","item_prices",null);
				
				banhji.view.layout.showIn("#content", banhji.view.itemPrice);
				
				if(banhji.pageLoaded["item_prices"]==undefined){
					banhji.pageLoaded["item_prices"] = true;
					
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/item_catalog(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.itemCatalog;

				banhji.userManagement.addMultiTask("Inventory Catalog","item_catalog",vm);
				
				banhji.view.layout.showIn("#content", banhji.view.itemCatalog);
				
				if(banhji.pageLoaded["item_catalog"]==undefined){
					banhji.pageLoaded["item_catalog"] = true;

					var validator = $("#example").kendoValidator().data("kendoValidator");
			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/item_assembly(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.itemAssembly;

				banhji.userManagement.addMultiTask("Inventory Assembly","item_assembly",vm);
				
				banhji.view.layout.showIn("#content", banhji.view.itemAssembly);
				
				if(banhji.pageLoaded["item_assembly"]==undefined){
					banhji.pageLoaded["item_assembly"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/item_service(/:id)(/:category_id)", function(id, category_id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.itemService;

				banhji.userManagement.addMultiTask("Service","item_service",vm);
				
				banhji.view.layout.showIn("#content", banhji.view.itemService);
				
				if(banhji.pageLoaded["item_service"]==undefined){
					banhji.pageLoaded["item_service"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, category_id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/non_inventory_part(/:id)(/:category_id)", function(id, category_id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.nonInventoryPart;

				banhji.userManagement.addMultiTask("Other Inventory","non_inventory_part",vm);
				
				banhji.view.layout.showIn("#content", banhji.view.nonInventoryPart);
				
				if(banhji.pageLoaded["non_inventory_part"]==undefined){
					banhji.pageLoaded["non_inventory_part"] = true;

					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, category_id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/fixed_assets(/:id)(/:category_id)", function(id, category_id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.fixedAssets);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

				var vm = banhji.fixedAssets;

				banhji.userManagement.addMultiTask("Fixed Assets","fixed_assets",vm);

				if(banhji.pageLoaded["fixed_assets"]==undefined){
					banhji.pageLoaded["fixed_assets"] = true;
					var validator = $("#example").kendoValidator().data("kendoValidator");
			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, category_id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/txn_item(/:id)(/:category_id)", function(id, category_id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				var vm = banhji.txnItem;
				banhji.userManagement.addMultiTask("Transaction Item","txn_item",vm);
				
				banhji.view.layout.showIn("#content", banhji.view.txnItem);
				
				if(banhji.pageLoaded["txn_item"]==undefined){
					banhji.pageLoaded["txn_item"] = true;

					var validator = $("#example").kendoValidator().data("kendoValidator");
			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id, category_id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/item_adjustment(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.itemAdjustment);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

				var vm = banhji.itemAdjustment;

				banhji.userManagement.addMultiTask("Inventory Adjustment","item_adjustment",vm);

				if(banhji.pageLoaded["item_adjustment"]==undefined){
					banhji.pageLoaded["item_adjustment"] = true;
					
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input) {
					          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
					          		vm.set("recurring_validate", false);
					            	return $.trim(input.val()) !== "";
					          	}
					          	return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.requiredMessage
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveRecurring").click(function(e){
						e.preventDefault();

						vm.set("recurring_validate", true);

						if(validator.validate()){
			            	vm.set("saveRecurring", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});
	banhji.router.route("/internal_usage(/:id)", function(id){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.internalUsage);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

				var vm = banhji.internalUsage;

				banhji.userManagement.addMultiTask("Internal Usage","internal_usage",null);
				
				if(banhji.pageLoaded["internal_usage"]==undefined){
					banhji.pageLoaded["internal_usage"] = true;
					
					var validator = $("#example").kendoValidator({
			        	rules: {
					        customRule1: function(input){
					          	if (input.is("[name=txtNumber]")) {	
						            return vm.get("notDuplicateNumber");
						        }
						        return true;
					        }
					    },
					    messages: {
					        customRule1: banhji.source.duplicateNumber
					    }
			        }).data("kendoValidator");

			        $("#saveNew").click(function(e){
						e.preventDefault();

						if(validator.validate()){
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#saveClose").click(function(e){
						e.preventDefault();

						if(validator.validate()){
							vm.set("saveClose", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});

					$("#savePrint").click(function(e){
						e.preventDefault();
						
						if(validator.validate()){
							vm.set("savePrint", true);
			            	vm.save();
				        }else{
				        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
				        }
					});
				}

				vm.pageLoad(id);
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});	
	});
	banhji.router.route("/item_recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemRecurring);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.itemRecurring;
			banhji.userManagement.addMultiTask("Item Recurring","item_recurring",null);
			if(banhji.pageLoaded["item_recurring"]==undefined){
				banhji.pageLoaded["item_recurring"] = true;

			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/item_setting", function(){
		banhji.accessMod.query({
			filter: {field: 'username', value: JSON.parse(localStorage.getItem('userData/user')).username}
		}).then(function(e){
			var allowed = false;
			if(banhji.accessMod.data().length > 0) {
				for(var i = 0; i < banhji.accessMod.data().length; i++) {
					if("products/services" == banhji.accessMod.data()[i].name.toLowerCase()) {
						allowed = true;
						break;
					}
				}
			} 
			if(allowed) {
				banhji.view.layout.showIn("#content", banhji.view.itemSetting);
				banhji.view.layout.showIn('#menu', banhji.view.menu);
				banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

				var vm = banhji.itemSetting;

				banhji.userManagement.addMultiTask("General Products/ Services Setting","item_setting",null);
				
				if(banhji.pageLoaded["item_setting"]==undefined){
					banhji.pageLoaded["item_setting"] = true;
					
					vm.itemTypeDS.filter({ field:"id <>", value:3 });
					vm.categoryDS.filter({ field:"item_type_id <>", value:3 });
				}
			} else {
				window.location.replace(baseUrl + "admin");
			}
		});
	});	

	banhji.router.route("/service_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.serviceSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.serviceSetting;

			banhji.userManagement.addMultiTask("General Service Setting","service_setting",null);
			
			if(banhji.pageLoaded["service_setting"]==undefined){
				banhji.pageLoaded["service_setting"] = true;
				
				vm.categoryDS.filter({ field:"item_type_id", operator:"where_in", value: [4,6] });
				vm.itemTypeDS.filter({ field:"id", operator:"where_in", value: [4,6] });
				vm.itemGroupDS.filter({ field:"id", operator:"where_in", value: [3,4] });
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/item_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemReportCenter);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.itemReportCenter;
			
			if(banhji.pageLoaded["item_report_center"]==undefined){
				banhji.pageLoaded["item_report_center"] = true;
			};
			vm.pageLoad();
		};
	});
	banhji.router.route("/inventory_position_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.inventoryPositionSummary;
			banhji.userManagement.addMultiTask("Inventory Position Summary","inventory_position_summary",null);

			banhji.view.layout.showIn("#content", banhji.view.inventoryPositionSummary);
		}
	});
	banhji.router.route("/inventory_position_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.inventoryPositionDetail;
			banhji.userManagement.addMultiTask("Inventory Position Detail","inventory_position_detail",null);

			banhji.view.layout.showIn("#content", banhji.view.inventoryPositionDetail);
			vm.pageLoad();
		}
	});
	banhji.router.route("/inventory_sale_item_analysis", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.inventorySaleItemAnalysis;
			banhji.userManagement.addMultiTask("Inventory Sale Item Analysis","inventory_sale_item_analysis",null);

			banhji.view.layout.showIn("#content", banhji.view.inventorySaleItemAnalysis);
			banhji.inventorySale.set('startDate', new Date().getFullYear() + "-01-01");
			banhji.inventorySale.inventorySaleDB.dataSource.filter({
				logic: banhji.saleSummaryCustomer.get('filteredBy'),
				filters: [
					{field: "issued_date >=", value: kendo.toString(new Date().getFullYear() + "-01-01", "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd")}
				]
			});
			banhji.inventorySale.inventorySaleDB.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.inventorySale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.inventorySale.set('onHand', kendo.toString(e.response.onHand, 'n0'));
					banhji.inventorySale.set('sale', kendo.toString(e.response.sale, 'c2'));
					banhji.inventorySale.set('grossProfitMargin', kendo.toString(e.response.grossProfitMargin, 'p'));
				}
			});
		}
	});
	banhji.router.route("/inventory_turnover_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryTurnoverList);
			banhji.inventorySale.inventoryTurnoverList.dataSource.read();
			banhji.inventorySale.inventoryTurnoverList.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.inventorySale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.inventorySale.set('onHand', kendo.toString(e.response.onHand, 'n0'));
					banhji.inventorySale.set('turnover', kendo.toString(e.response.turnover, 'n0'));
				}
			});
		}
	});
	banhji.router.route("/inventory_movement_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryMovementSummary);
			banhji.inventorySale.inventoryMovementSummary.dataSource.read();
			banhji.inventorySale.inventoryMovementSummary.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.inventorySale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.inventorySale.set('onHand', kendo.toString(e.response.onHand, 'n0'));
					banhji.inventorySale.set('sale', kendo.toString(e.response.sale, 'n0'));
				}
			});
		}
	});
	banhji.router.route("/inventory_movement_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryMovementDetail);
			banhji.inventorySale.inventoryMovementDetail.dataSource.read();
			banhji.inventorySale.inventoryMovementDetail.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.inventorySale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.inventorySale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/inventory_sale_by_item", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventorySaleByItem);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventorySaleByItem;

			banhji.userManagement.addMultiTask("Inventory Sale By Item Analysis","inventory_sale_by_item",null);
			
			if(banhji.pageLoaded["inventory_sale_by_item"]==undefined){
				banhji.pageLoaded["inventory_sale_by_item"] = true;
			}
		}
	});
	banhji.router.route("/inventory_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);
			
			var vm = banhji.inventoryList;

			banhji.userManagement.addMultiTask("Inventory List","inventory_list",null);
			
			if(banhji.pageLoaded["inventory_list"]==undefined){
				banhji.pageLoaded["inventory_list"] = true;

				vm.vendorDS.filter({ field:"parent_id", operator:"where_related_contact_type", value: 2 });

				var categories = $("#categories").kendoDropDownList({
                    optionLabel: "(--- Category ---)",
                    dataTextField: "name",
                    dataValueField: "id",
                    dataSource: vm.categoryDS,
                    change: function(e) {
					    //var value = this.value();
					    vm.set("item_group_id", 0);
					}
                }).data("kendoDropDownList");

                var itemGroups = $("#itemGroups").kendoDropDownList({
                    autoBind: false,
                    cascadeFrom: "categories",
                    cascadeFromField: "category_id",
                    optionLabel: "(--- Group ---)",
                    dataTextField: "name",
                    dataValueField: "id",
                    dataSource: vm.itemGroupDS
                }).data("kendoDropDownList");


                function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":
						sdate = today;
					  	break;
					case "week":
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));
					  	break;
					case "month":
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();
                });
                
                start.max(end.value());
                end.min(start.value());

			}

			vm.pageLoad();
		}
	});	
	banhji.router.route("/inventory_purchase_by_vendor_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryPurchaseByVendorSummary);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryPurchaseByVendorSummary;

			banhji.userManagement.addMultiTask("Purchase By Supplier Summary","inventory_purchase_by_vendor_summary",null);		
			
			if(banhji.pageLoaded["inventory_purchase_by_vendor_summary"]==undefined){
				banhji.pageLoaded["inventory_purchase_by_vendor_summary"] = true;
				
			}
		}
	});
	banhji.router.route("/inventory_purchase_by_vendor_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryPurchaseByVendorDetail);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryPurchaseByVendorDetail;

			banhji.userManagement.addMultiTask("Purchase By Supplier Detail","inventory_purchase_by_vendor_detail",null);		
			
			if(banhji.pageLoaded["inventory_purchase_by_vendor_detail"]==undefined){
				banhji.pageLoaded["inventory_purchase_by_vendor_detail"] = true;
				
			}
		}
	});


	/*************************
	*   Cash Managment   *
	**************************/
	banhji.router.route("/cashs", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashDashboard);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);
			
			var vm = banhji.cashDashboard;
			banhji.userManagement.addMultiTask("Cash Dashboard","cashs",null);

			if(banhji.pageLoaded["cashs"]==undefined){
				banhji.pageLoaded["cashs"] = true;
				banhji.cashDashboard.graphDS.fetch();
				banhji.cashDashboard.topCashDS.read();
				banhji.cashDashboard.topCashDS.bind('requestEnd', function(e) {
					if(e.response) {
						kendo.culture(banhji.locale);
						banhji.cashDashboard.set('balance', kendo.toString(e.response.balance, 'c2'));
						banhji.cashDashboard.set('cashACNumber', e.response.cashACNumber);
					}
				});

				banhji.cashDashboard.topAdvaDS.read();
				banhji.cashDashboard.topAdvaDS.bind('requestEnd', function(e) {
					if(e.response) {
						kendo.culture(banhji.locale);
						banhji.cashDashboard.set('open', e.response.open);
						banhji.cashDashboard.set('overDue', e.response.overDue);
						banhji.cashDashboard.set('totalAdvance', kendo.toString(e.response.total_advance, 'c2'));
					}
				});
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/cash_center", function(){
		banhji.view.layout.showIn("#content", banhji.view.cashCenter);
		banhji.view.layout.showIn('#menu', banhji.view.menu);
		banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);
		var blank = new kendo.View('#blank-tmpl');
		var vm = banhji.cashCenter;
		banhji.cashCenter.accountTypeDS.read();
		banhji.userManagement.addMultiTask("Cash Center","cash_center",null);

		if(banhji.pageLoaded["cash_center"]==undefined){
			banhji.pageLoaded["cash_center"] = true;
		}
	});
	banhji.router.route("/cash(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.cash;

			banhji.userManagement.addMultiTask("Cash","cash",vm);
						
			banhji.view.layout.showIn("#content", banhji.view.cash);
			kendo.fx($("#slide-form")).slideIn("down").play();

			if(banhji.pageLoaded["cash"]==undefined){
				banhji.pageLoaded["cash"] = true;

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({
				    autoHideAfter: 5000,
				    width: 300,
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){
					e.preventDefault();

					if(validator.validate() && vm.get("isDuplicateNumber")==false){
		            	vm.save();

		            	notification.success("Save Successful");
			        }else{
			        	notification.error("Warning, please review it again!");
			        }
				});
			}

			vm.pageLoad(id);
		}
	});	
	banhji.router.route("/cash_deposit(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashDeposit);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashDeposit;
			banhji.userManagement.addMultiTask("Cash Deposit","cash_deposit",vm);
			
			if(banhji.pageLoaded["cash_deposit"]==undefined){
				banhji.pageLoaded["cash_deposit"] = true;

				var validator = $("#example").kendoValidator({
		        	rules: {
				        customRule1: function(input) {
				          	if (input.is("[name=txtRecurringName]") && vm.recurring_validate) {
				          		vm.set("recurring_validate", false);
				            	return $.trim(input.val()) !== "";
				          	}
				          	return true;
				        }
				    },
				    messages: {
				        customRule1: banhji.source.requiredMessage
				    }
		        }).data("kendoValidator");
				
		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveRecurring").click(function(e){
					e.preventDefault();

					vm.set("recurring_validate", true);
					
					if(validator.validate()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/cashier(/:id)", function(id){
		banhji.view.layout.showIn("#content", banhji.view.cashier);
		kendo.fx($("#slide-form")).slideIn("down").play();

		var vm = banhji.cashier;
		banhji.userManagement.addMultiTask("Cashier Dashboard","cashier",null);
		if(banhji.pageLoaded["cashier"]==undefined){
			banhji.pageLoaded["cashier"] = true;
			
			$("#ddlContact").kendoComboBox({
				placeholder: "លេខកូដ...",
				valuePrimitive: true,
                dataTextField: "fullname",
                dataValueField: "id",
                filter: "search",
                autoBind: false,
                minLength: 3,
                height: 400,
                dataSource: vm.contactDS,
                change: function(e) {
				    var value = this.value(),
				    data = this.dataSource.get(value);

				    vm.set("customer", data);
				    vm.transactionDS.filter({ field:"contact_id", value: value });
				    vm.loadInvoice(value, data.fullname, data.account_id);
				},
				template:'#=number# #=fullname#'
            });

	        $("#ddlCashAccount").kendoDropDownList({
	            optionLabel: "(--- Select ---)",
	            valuePrimitive: true,
	            dataTextField: "name",
	            dataValueField: "id",
	            dataSource: {
	                transport: {
						read: {
							url: apiUrl + "accounts",
							headers: {
								"Entity": getDB()
							},
							type: "GET",
							dataType: "json"
						}
					},
					schema 	: {
						model: {
							id: 'id'
						},
						data: 'results',
						total: 'count'
					},
					serverFiltering: true,
					filter: { field:"account_type_id", value: 6 }
				},
				template: '#=number# #=name#'
	        }).data("kendoDropDownList");

	        var validator = $("#example").kendoValidator().data("kendoValidator");
			var notification = $("#notification").kendoNotification({
			    autoHideAfter: 5000,
			    width: 300,
			    height: 50
			}).data('kendoNotification');

	        $("#save").click(function(e){
				e.preventDefault();

				if(validator.validate()){
	            	vm.save();

	            	notification.success("Save Successful");
		        }else{
		        	notification.error("Warning, please review it again!");
		        }
			});
		}
		vm.pageLoad(id);
	});
	banhji.router.route("/reconcile(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.reconcile);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.reconcile;
			banhji.userManagement.addMultiTask("Reconcile & Transfer","reconcile",vm);

			vm.pageLoad(id);
			
			if(banhji.pageLoaded["reconcile"]==undefined){
				banhji.pageLoaded["reconcile"] = true;

				$("#ddlCashAccount").kendoDropDownList({
		            optionLabel: "(--- Select ---)",
		            valuePrimitive: true,
		            dataTextField: "name",
		            dataValueField: "id",
		            dataSource: {
		                transport: {
							read: {
								url: apiUrl + "accounts",
								headers: {
									"Entity": getDB()
								},
								type: "GET",
								dataType: "json"
							}
						},
						schema 	: {
							model: {
								id: 'id'
							},
							data: 'results',
							total: 'count'
						},
						serverFiltering: true,
						filter: { field:"account_type_id", value: 6 }
					},
					template: '#=number# #=name#'
		        }).data("kendoDropDownList");

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({
				    autoHideAfter: 5000,
				    width: 300,
				    height: 50
				}).data('kendoNotification');
				
		        $("#save").click(function(e){
					e.preventDefault();

					if(validator.validate() && vm.get("isExisting")==false && vm.get("obj").transfered_amount>0){
		            	vm.save();

		            	notification.success("Save Successful");
			        }else{
			        	notification.error("Warning, please review it again!");
			        }
				});
			}
		}
	});
	banhji.router.route("/cash_receipt(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else {
			banhji.view.layout.showIn("#content", banhji.view.cashReceipt);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashReceipt;
			banhji.userManagement.addMultiTask("Cash Receipt","cash_receipt",vm);
			
			if(banhji.pageLoaded["cash_receipt"]==undefined){
				banhji.pageLoaded["cash_receipt"] = true;

				vm.paymentTermDS.read();

				var validator = $("#example").kendoValidator().data("kendoValidator");
		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/cash_payment(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashPayment);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashPayment;
			banhji.userManagement.addMultiTask("Cash Payment","cash_payment",vm);
			
			if(banhji.pageLoaded["cash_payment"]==undefined){
				banhji.pageLoaded["cash_payment"] = true;

				vm.paymentTermDS.read();

				var validator = $("#example").kendoValidator().data("kendoValidator");
		        $("#saveNew").click(function(e){
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#saveClose").click(function(e){
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/cash_flow_forecast(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashFlowForecast);
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashFlowForecast;
			banhji.userManagement.addMultiTask("Cash Flow Forecast","cash_flow_forecast",vm);
			
			if(banhji.pageLoaded["cash_flow_forecast"]==undefined){
				banhji.pageLoaded["cash_flow_forecast"] = true;
				
									
			}

			vm.pageLoad(id);
		}
	});
	banhji.router.route("/cash_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Cash Position","cash_report_center",null);
			
			if(banhji.pageLoaded["cash_report_center"]==undefined){
				banhji.pageLoaded["cash_report_center"] = true;	
			}
		}
	});
	banhji.router.route("/cash_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			var vm = banhji.cashList;
			banhji.userManagement.addMultiTask("Cash List","cash_list",null);
			
			if(banhji.pageLoaded["cash_list"]==undefined){
				banhji.pageLoaded["cash_list"] = true;
				
				vm.contactTypeDS.filter({ field:"parent_id", value:1 });
				vm.dataSource.filter({ field:"parent_id", operator:"where_related_contact_type", value:1 });

				$("#grid").kendoGrid({
				    dataSource: vm.dataSource,
				    toolbar: ["excel"],
		            excel: {
		                fileName: "Cash_List.xlsx",
		                filterable: true
		            },
		            reorderable: true,
				    groupable: true,
				    sortable: true,
				    pageable: true,
				    columns:[
				    	{ field: "number", title:"Number" },
				    	{ field: "surname", title:"Surname" },
				    	{ field: "name", title:"Name" },
				    	{ field: "contact_type", title:"Type" }
				    ]
				});
			}
		}
	});
	banhji.router.route("/cash_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			var vm = banhji.cashSetting;
			
			banhji.userManagement.addMultiTask("General Cash Setting","cash_setting",null);
			
			if(banhji.pageLoaded["cash_setting"]==undefined){
				banhji.pageLoaded["cash_setting"] = true;

				vm.contactTypeDS.filter({ field:"parent_id", value: 1 });
			}

			vm.pageLoad();
		}
	});
	//Cash Reports
	banhji.router.route("/cash_movement", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashMovement);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			let self = this;
			// this.cashAccount= [];
			var vm = banhji.cashMovement;
			// banhji.source.loadAcct()
			// .then(function(data){
			// 	self.cashAccount = data.filter(function(x){
			// 		return x.account_type_id == 10;
			// 	}).map(function(value){
			// 		return value.id;
			// 	});
			// 	vm.dataSource.filter({
			// 		field:'account_id', operator:'where_in', value:self.cashAccount
			// 	});
			// 	// console.log(self.cashAccount);
			// });

			// if(banhji.source.accountList.length>0) {
			// 	var cashAccount = banhji.source.accountList.map(function(x){
			// 	return x;
			// 	});
			// 	console.log(cashAccount);
			// } else {
			// 	console.log('no data');
			// }			
			
			banhji.userManagement.addMultiTask("Cash Movement","cash_movement",null);

			if(banhji.pageLoaded["cash_movement"]==undefined){
				banhji.pageLoaded["cash_movement"] = true;
						
			}

			vm.pageLoad();
		}
	});
	banhji.router.route("/cash_position_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.cashPositionReport;
			banhji.userManagement.addMultiTask("Cash Position Report","cash_position_report"); 

			banhji.view.layout.showIn("#content", banhji.view.cashPositionReport);
			banhji.cashSales.set('startDate', new Date().getFullYear() + "-01-01");
			banhji.cashSales.cashPositionReport.dataSource.filter({
				logic: banhji.saleSummaryCustomer.get('filteredBy'),
				filters: [
					{field: "issued_date >=", value: kendo.toString(new Date().getFullYear() + "-01-01", "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd")}
				]
			});
			banhji.cashSales.cashPositionReport.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.cashSales.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.cashSales.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.cashSales.set('totalCashSale', kendo.toString(e.response.totalCashSale, 'n0'));
					banhji.cashSales.set('totalCashReceipt', kendo.toString(e.response.totalCashReceipt, 'n0'));
					banhji.cashSales.set('cashPayment', kendo.toString(e.response.cashPayment, 'n0'));
					banhji.cashSales.set('cashExpense', kendo.toString(e.response.cashExpense, 'n0'));
					banhji.cashSales.set('cashPurchase', kendo.toString(e.response.cashPurchase, 'n0'));
					banhji.cashSales.set('totalSale', kendo.toString(e.response.totalSale, 'n0'));
					banhji.cashSales.set('totalPurchase', kendo.toString(e.response.totalPurchase, 'n0'));
				}
			});
		}
	});	
	banhji.router.route("/cash_collection_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.cashCollectionReport;
			banhji.userManagement.addMultiTask("Cash Collection Report","cash_collection_report"); 

			banhji.view.layout.showIn("#content", banhji.view.cashCollectionReport);
			banhji.cashSales.set('startDate', new Date().getFullYear() + "-01-01");
			banhji.cashSales.cashCollection.dataSource.filter({
				logic: banhji.saleSummaryCustomer.get('filteredBy'),
				filters: [
					{field: "issued_date >=", value: kendo.toString(new Date().getFullYear() + "-01-01", "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd")}
				]
			});
			banhji.cashSales.cashCollection.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.cashSales.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.cashSales.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.cashSales.set('segments', kendo.toString(e.response.segments, 'n0'));
				}
			});
		}
	});
	banhji.router.route("/cash_payment_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.cashPaymentReport;
			banhji.userManagement.addMultiTask("Cash Payment Report","cash_payment_report"); 

			banhji.view.layout.showIn("#content", banhji.view.cashPaymentReport);
			banhji.cashSales.set('startDate', new Date().getFullYear() + "-01-01");
			banhji.cashSales.cashPaymentReport.dataSource.filter({
				logic: banhji.saleSummaryCustomer.get('filteredBy'),
				filters: [
					{field: "issued_date >=", value: kendo.toString(new Date().getFullYear() + "-01-01", "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd")}
				]
			});
			banhji.cashSales.cashPaymentReport.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.cashSales.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.cashSales.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.cashSales.set('segments', kendo.toString(e.response.segments, 'n0'));
				}
			});
		}
	});


	/*Cash Management Dashboard*/
	banhji.router.route("/cash_management_dashboard", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashManagementDashboard);
			//banhji.view.layout.showIn('#menu', banhji.view.menu);
			//banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);
			
			var vm = banhji.cashDashboard;
			banhji.userManagement.addMultiTask("Cash Management Dashboard","cash_management_dashboard",null);

			if(banhji.pageLoaded["cash_management_dashboard"]==undefined){
				banhji.pageLoaded["cash_management_dashboard"] = true;
				banhji.cashDashboard.graphDS.fetch();
				banhji.cashDashboard.topCashDS.read();
				banhji.cashDashboard.topCashDS.bind('requestEnd', function(e) {
					if(e.response) {
						kendo.culture(banhji.locale);
						banhji.cashDashboard.set('balance', kendo.toString(e.response.balance, 'c2'));
						banhji.cashDashboard.set('cashACNumber', e.response.cashACNumber);
					}
				});

				banhji.cashDashboard.topAdvaDS.read();
				banhji.cashDashboard.topAdvaDS.bind('requestEnd', function(e) {
					if(e.response) {
						kendo.culture(banhji.locale);
						banhji.cashDashboard.set('open', e.response.open);
						banhji.cashDashboard.set('overDue', e.response.overDue);
						banhji.cashDashboard.set('totalAdvance', kendo.toString(e.response.total_advance, 'c2'));
					}
				});
			}

			vm.pageLoad();
		}
	});



	/*************************
	*   Reports Section   *
	**************************/
	banhji.router.route("/reports", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.reportDashboard);
			
			var vm = banhji.reportDashboard;
			banhji.userManagement.addMultiTask("Reports Dashboard","reports",null);

			if(banhji.pageLoaded["reports"]==undefined){
				banhji.pageLoaded["reports"] = true;
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/profitability_summary_job", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.profitabilitySummaryJob);
			
			var vm = banhji.profitabilitySummaryJob;
			banhji.userManagement.addMultiTask("Profitability Summary by Job","profitability_summary_job",null);

			if(banhji.pageLoaded["profitability_summary_job"]==undefined){
				banhji.pageLoaded["profitability_summary_job"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});
	banhji.router.route("/profitability_detail_job", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.profitabilityDetailJob);
			
			var vm = banhji.profitabilityDetailJob;
			banhji.userManagement.addMultiTask("Profitability Detail by Job","profitability_detail_job",null);

			if(banhji.pageLoaded["profitability_detail_job"]==undefined){
				banhji.pageLoaded["profitability_detail_job"] = true;

				vm.sorterChanges();
			}
			vm.pageLoad();
		}
	});



	/*************************
	*   Import Section   *
	**************************/
	banhji.router.route("/imports", function(){
		banhji.view.layout.showIn("#content", banhji.view.imports);
	});


	$(function() {
		banhji.router.start();
		banhji.source.pageLoad();
		console.log($(location).attr('hash').substr(2));

		var cognitoUser = userPool.getCurrentUser();
		cognitoUser.getSession(function(err, session) {
          	if(session) {
            	// window.location.replace(baseUrl + "rrd/");
          	} else {
            	window.location.replace(baseUrl + "login/");
          	}
        });

		function createCookie(name,value,days) {
		    if (days) {
		        var date = new Date();
		        date.setTime(date.getTime()+(days*24*60*60*1000000000000000));
		        var expires = "; expires="+date.toGMTString();
		    }
		    else var expires = "";
		    document.cookie = name+"="+value+expires+"; path=/";
		}
		function readCookie(name) {
		    var nameEQ = name + "=";
		    var ca = document.cookie.split(';');
		    for(var i=0;i < ca.length;i++) {
		        var c = ca[i];
		        while (c.charAt(0)==' ') c = c.substring(1,c.length);
		        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
		    }
		    return null;
		}
		function eraseCookie(name) {
		    createCookie(name,"");
		}
	});
</script>