<div id="wrapperApplication" class="container-fluid"></div>
<!-- template section starts -->
<script type="text/x-kendo-template" id="layout">
	<div id="menu"></div>			
	<div id="content" class="row-fluid container"></div>
</script>
<script type="text/x-kendo-template" id="blank-tmpl">
</script>
<script type="text/x-kendo-template" id="menu-tmpl">
	<div class="menu-hidden sidebar-hidden-phone menu-left hidden-print">
		<div class="navbar main" id="main-menu">
			<ul class="topnav">
				<li><a href="#"><img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/banhji-logo.png" style="height: 40px;"></a></li>
			</ul>
			<form class="navbar-form pull-left">
				<div class="btn-group">
				  	<a class="btn btn-inverse dropdown-toggle" data-toggle="dropdown" href="#">
				    	<i class="icon-th"></i>
				    	<span class="caret"></span>
				  	</a>
				  	<ul class="dropdown-menu">
				    	<li data-bind="click: searchContact"><a href="#"><i class="icon-user"></i> Contact</a></li>
				    	<li data-bind="click: searchTransaction"><a href="#"><i class="icon-random"></i> Transaction</a></li>
				    	<li data-bind="click: searchItem"><a href="#"><i class="icon-th-list"></i> Item</a></li>
				  	</ul>
				</div>
			  	<input type="text" class="span2 search-query" placeholder="Search Contact" id="search-placeholder" 
			  			data-bind="value: searchText" 
			  			style="background-color: #555555; color: #ffffff; border-color: #333333; height: 22px;">
			  	<button type="submit" class="btn btn-inverse" data-bind="click: search"><i class="icon-search"></i></button>
			</form>
			<ul class="topnav" id="secondary-menu">
			</ul> 
			<ul class="topnav pull-right">
				<li role="presentation" class="dropdown">
			  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"> <i class="icon-th-list"></i> <span class="caret"></span></a>
		  			<ul class="dropdown-menu ul-multiTaskList" data-template="multiTaskList-row-template" data-bind="source: multiTaskList">  				  				
		  			</ul>
			  	</li>
				<li role="presentation" class="dropdown">
			  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">[<span data-bind="text: getUsername"></span>] <span class="caret"></span></a>
		  			<ul class="dropdown-menu">  				  				
		  				<li><a href="#" data-bind="click: lang.changeToKh">ភាសាខ្មែរ</a></li>
    					<li><a href="#" data-bind="click: lang.changeToEn">English</a></li>
						<li class="divider"></li>	
						<li><a href="#/manage" data-bind="click: logout"><i class="icon-power-off"></i> Logout</a></li> 				
		  			</ul>
			  	</li>				
			</ul>
		</div>
	</div>
</script>
<script id="multiTaskList-row-template" type="text/x-kendo-template">	
    <li>
    	<a href="\#/#=url#">
    		#=name#
    		<span title="Remove" class="multiTaskList glyphicons remove_2 pull-right" data-bind="click: removeLink">
    			<i></i>
    		</span>
    	</a>

    </li>	
</script>
<script type="text/x-kendo-template" id="index">
	<div class="row-fluid">
		<div class="span6">
			<div class="row">
				<div class="span12" style="padding-left: 0; margin-left: 0; margin-top: 0;">
					<ul id="module-image">
						<li style="text-align:center;">
							<a href="#/customers">
								<img title="Customers Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/customers.png" alt="Customer">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span ></span>Customers</span>
						</li>
						<li style="text-align:center;">
							<a href="#/vendors">
								<img title="Supplier Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/supplier.png" alt="Vendor">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span ></span>Suppliers</span>
						</li>
						<li style="text-align:center;">
							<a href="#/inventories">
								<img title="Inventories Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/inventory.png" alt="Inventory">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span ></span>Products/Services</span>
						</li>
						<li style="text-align:center;">
							<a href="#">
								<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/attach_file.png" alt="Attachment">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span ></span>Documents</span>
						</li>
					</ul>
					<ul id="module-image">
						<li style="text-align:center;">
							<a href="#/cashs">
								<img title="Cash Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/1.png" alt="Cash Management">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000">Cash MGT.</span>
						</li>
						<li style="text-align:center;">
							<a href="#/accounting">
								<img title="Accounting Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/accounting.png" alt="Customer">							
								<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span data-bind="text: lang.lang.accounting"></span></span>
							</a>
						</li>
						<li style="text-align:center;">
							<a href="#/reports">
								<img title="Reports Module" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/report.png" alt="Reports">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span ></span>Reports</span>
						</li>
						<li style="text-align:center;">
							<a href="<?php echo base_url(); ?>admin">
								<img title="Setting" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/setting.png" alt="Admin">
								<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span data-bind="text: lang.lang.settings"></span></span>
							</a>
						</li>
					</ul>
				</div>
				
				<div class="span12" style="padding-left: 0; margin-left: 0; margin-top: 30px;">
					<h4 style="margin-left: 35px; width: 450px;"><span data-bind="text: lang.lang.subcribed_industry_modules"></span></h4>
					<ul id="module-image">
						<li style="text-align:center;">
							<a href="#">
								<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/web_store.png" alt="Customer">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span data-bind="text: lang.lang.web_store"></span></span>
						</li>
						<li style="text-align:center;">
							<a href="#/sale_tax">
								<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/tax.png" alt="Tax">
							</a>
							<span style="margin-top: 5px; font-size: 14px; font-weight: bold; color: #000000"><span data-bind="text: lang.lang.tax"></span></span>
						</li>
					</ul>	
				</div>
			</div>	
		</div>
		
		<!-- Welcome -->
		<div class="span6">
			<div class="row">
				<div class="span12">					

					<!-- Add New Board -->
					<div class="board-add">
						<div class="span6">
							<h2>Welcome on board!</h2>
							<p>
								To get you started with BanhJi, please have a look at this <a target="_blank" href="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/guide/welcome_guide.pdf">[Welcome Guide]</a>.
							</p>
						</div>
						<div class="span6">
							<div class="span12">
								<div class="span3">
									<a href="#/customer" class="center">
										<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/customers.ico" />
									</a>
								</div>
								<div class="span3">
									<a href="#/vendor" class="center">
										<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/suppliers.ico" />
									</a>
								</div>
								<div class="span3">
									<a href="#/item" class="center">
										<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
									</a>
								</div>
								<div class="span3">
									<a href="#/item_service" class="center">
										<img src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
									</a>
								</div>
							</div>
						</div>
					</div><!--End Add New Board -->

					<!-- Financial Board -->
					<div class="board-financial">
						<div class="span12">
							<h4 data-bind="text: companyName"></h4>
							<h2 style="color: #113051;">Financial Snapshot</h2>
							<span style="color: #000000;">As of:&nbsp;<span id="today-date" data-bind="text: today"></span></span><br/>
						</div>
					</div><!--End Financial Board -->

					<!-- Chart Board -->
					<div class="board-chart">
						<div class="span12">
							<div class="span6">
								<p>Performance</p>
								<table class="performance">
									<tr>
										<td>Income</td>
										<td></td>
										<td>0</td>
									</tr>
									<tr>
										<td>Expense</td>
										<td></td>
										<td>0</td>
									</tr>
									<tr>
										<td><b>Net Income</b></td>
										<td></td>
										<td><b>0</b></td>
									</tr>
								</table>
							</div>
							<div class="span6">
								<p>Position</p>
								<table class="position">
									<tr>
										<td>Assets</td>
										<td></td>
										<td>0</td>
									</tr>
									<tr>
										<td>Liabilities</td>
										<td></td>
										<td>0</td>
									</tr>
									<tr>
										<td><b>Equity</b></td>
										<td></td>
										<td><b>0</b></td>
									</tr>
								</table>
							</div>
						</div>
						
						<div class="span12">
							<div class="span6">
								<a href="#/customer_balance">
									<div class="widget-body alert-info welcome-nopadding">
										<p>RECEIVABLES</p>
								
										<div align="center" class="text-large strong" data-bind="text: ar"></div>
									
										<table width="100%">
											<tr align="center">
												<td>										
													<span data-bind="text: ar_open"></span>
													<br>
													<span>Open</span>
												</td>
												<td>
													<span data-bind="text: ar_customer"></span>
													<br>
													<span>Customer</span>
												</td>
												<td>
													<span data-bind="text: ar_overdue"></span>
													<br>
													<span>Overdue</span>
												</td>
											</tr>
										</table>
									</div>
								</a>
							</div>
							<div class="span6">
								

								<div class="widget-body  alert-info welcome-nopadding">
									<p>PAYABLES</p>
							
									<div align="center" class="text-large strong" data-bind="text: ap"></div>
								
									<table width="100%">
										<tr align="center">
											<td>										
												<span data-bind="text: ap_open"></span>
												<br>
												<span>Open</span>
											</td>
											<td>
												<span data-bind="text: ap_vendor"></span>
												<br>
												<span>Supplier</span>
											</td>
											<td>
												<span data-bind="text: ap_overdue"></span>
												<br>
												<span>Overdue</span>
											</td>
										</tr>
									</table>
								</div>
							</div>
						</div>

						<div class="span12">
							<div class="home-chart">
								<!-- Graph -->
								<div data-role="chart"
									 data-auto-bind="false"
					                 data-legend="{ position: 'top' }"
					                 data-series-defaults="{ type: 'column' }"
					                 data-tooltip='{
					                    visible: true,
					                    format: "{0}%",
					                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
					                 }'                 
					                 data-series="[
					                                 { field: 'cash_in', name: 'Cash In', categoryField:'month', color: '#236DA4' },
					                                 { field: 'cash_out', name: 'Cash Out', categoryField:'month', color: '#A6C9E3' }
					                             ]"	                             
					                 data-bind="source: graphDS"
					                 style="height: 250px;" ></div>
					            <!-- End Graph -->      
							</div>
						</div>
					</div><!--End Chart Board -->
					
				</div>
			</div>
		</div><!-- End Welcome -->
	</div>

	<div class="row-fluid">
		<div style="margin-top: 10px; margin-left: 0;" align="center">
			<p>© 2016 BanhJi PTE. Ltd. All rights reserved.</p>
		</div>	
	</div>		
</script>
<script id="searchAdvanced" type="text/x-kendo-template">
    <div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"><i></i></span>						
					</div>
			        
			        <h2>SEARCH</h2>
				    
				    <br>	
				    
				    <!-- Result -->
				    <span class="results"><span data-format="n0" data-bind="text: found"></span> result found <i class="icon-circle-arrow-down"></i></span>
					
					<div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-contact-template"
		                 data-bind="source: contactDS"></div>
		            <div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-transaction-template"
		                 data-bind="source: transactionDS"></div>
		            <div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-item-template"
		                 data-bind="source: itemDS"></div>
		            <div data-role="listview"
						 data-auto-bind="false"
						 data-selectable="true"				                 
		                 data-template="searchAdvanced-account-template"
		                 data-bind="source: accountDS"></div>					
					<!-- End Result -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="searchAdvanced-contact-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedContact">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/contact.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=surname# #=name#</h5>							
							<span>#=abbr# #=number#</span>							
							<br>
							<span>#=company#</span>
							<br>
							<span>#=contact_type#</span>
														
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>
<script id="searchAdvanced-transaction-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedTransaction">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/transaction.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=number#</h5>
							<span>#=amount#</span>
							<br>
							<span>#=issued_date#</span>					
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>
<script id="searchAdvanced-item-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedItem">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/item.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=name#</h5>
							<span>#=sku#</span>
							<br>
							<span>#=on_hand#</span>					
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>
<script id="searchAdvanced-account-template" type="text/x-kendo-template">
	<dl data-bind="click: selectedAccount">			
		<dt>
			<div class="widget widget-heading-simple widget-body-multiple widget-offers">
				<div class="widget-body">
					
					<!-- Media item -->
					<div class="media">
						<img class="media-object pull-left thumb hidden-tablet hidden-phone" 
							src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/journal.ico" 
							style="width: 100px; height: 100px;">
						<div class="media-body">
							<h5>#=name#</h5>
							<span>#=number#</span>				
						</div>
					</div>
					<!-- // Media item END -->
						
				</div>
			</div>
		</dt>											
	</dl>	
</script>





<!-- ***************************
*	Accounting Section        *
**************************** -->
<script id="accountingDashboard" type="text/x-kendo-template" >
	<div class="row-fluid">
		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2>ACCOUNTING MODULE</h2>
			        	<p>
			        		In this module, you can prepare your journal entry record, set your tax, 
			        		create segment, and determine your financial reporting standards.
			        	</p>
			        	<div class="supplier-icon">
						    <div class="span4">
						       	<a href="#/txn_item" class="center">
						       		<img title="Add Txn Item"  src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/add_txn_item.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/account" class="center">
						       		<img title="Add New Account" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/journal.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/segment" class="center">
						       		<img title="Add New Segment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/segment.ico" />
						       	</a>
						    </div>
						</div>
			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center ">
				<tr>	
					<td class="center">
						<a href="#/journal">
							<img title="Add Account" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/journal.png" width="110" height="200" />
							Journal
						</a>						
					</td>
					<td class="center">
						<a href="#/segment">
							<img title="Add Segment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/segment.png" width="110" height="200" />
							Segment
						</a>
					</td>
					<td class="center">
						<a href="#/">
							<img title="Add Importing Batch" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/importing_batch.png" width="110" height="200" />
							Import Batch
						</a>
					</td>				
				</tr>						
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8 dash-accounting">
			<div class="row">
				<div class="span6 accounting-right">
					<div class="financial-report">
						<p>
							Financial Reporting Standards: <b>Cambodia International Financial Reporting Standards for SMEs</b>
						</p>
						<a class="btn-download" href="http://www.ifrs.org/IFRS-for-SMEs/Pages/IFRS-for-SMEs-and-related-material.aspx#kh" target="_blank">Download This Standards</a>
						<p>Reporting Currency: <b>Khmer Riel (KHR)</b></p>
						<p>Fiscal year: <b>31 December</b></p>
					</div>
					<div class="account-stement">
						<h2>Statement of Financial Position</h2>
						<p>As of <?php echo date('d-M-Y') ?></p>
						<table width="100%">
							<tr>
								<td>
									<span>Current Assets</span>
								</td>
								<td>
									<span> 1,000</span>
								</td>
							</tr>
							<tr>
								<td>
									<span>Non-Current Assets</span>
								</td>
								<td>
									<span> 4,000</span>
								</td>
							</tr>
							
							<tr>
								<td>
									<span>Total Asset</span>
								</td>
								<td>
									<span> 5,000</span>
								</td>
							</tr>
							<tr>
								<td>
									<span>Current Liabilities</span>
								</td>
								<td>
									<span> 1,000</span>
								</td>
							</tr>
							<tr>
								<td>
									<span>Non-Current Liabilities</span>
								</td>
								<td>
									<span> 2,000</span>
								</td>
							</tr>
							<tr>
								<td>
									<span>Total Liabilities</span>
								</td>
								<td>
									<span> 3,000</span>
								</td>
							</tr>
							<tr>
								<td>
									<span>Equity</span>
								</td>
								<td>
									<span> 2,000</span>
								</td>
							</tr>
						</table>
					</div>


				</div>
				<div class="span6 accounting-management">

					<div class="span6 capital-box">
						<span>15</span>
						<p class="month">Transactions recorded</p>
					</div>
					<div class="span6 capital-box">
						<span>10</span>
						<p class="month">Unsettled accrual transactions</p>
					</div>
					<div class="span6 capital-box">
						<span>3X</span>
						<p class="month">Current Ratio</p>
					</div>
					<div class="span6 capital-box">
						<span>1X</span>
						<p class="month">Quick Ratio</p>
					</div>

					<table width="100%">
						<tr>
							<td>
								<span>Return on Capital Employed</span>
							</td>
							<td>
								<span>30.75%</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Gross Profit Margin</span>
							</td>
							<td>
								<span>49%</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Net Profit Margin</span>
							</td>
							<td>
								<span>33%</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Asset Turnover</span>
							</td>
							<td>
								<span>94%</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Account Receivable Collection Period</span>
							</td>
							<td>
								<span>128 days</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Inventory Turnover</span>
							</td>
							<td>
								<span>27 days</span>
							</td>
						</tr>							
					</table>



					<!-- Graph -->
					<div>
						<div id="accounting-chart" style="height: 250px; "></div>
					</div>
				</div>
			</div>

		

		</div>		

	</div>
</script>
<script id="accountingDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td>#:banhji.cashDashboard.topCustomerDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="accountingDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.cashDashboard.topARDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="accountingDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.cashDashboard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="accountingCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Account ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
								<input data-role="combobox"
					                   data-placeholder="Account Type..."
					                   data-template="account-type-list-tmpl"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: account_type_id,
					                              source: accountTypeDS"
					                   style="width: 100%" />									
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: dataSource.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: dataSource"						 
						 data-row-template="accountingCenter-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="accounCetner-textedit">
							<table width="100%">
								<tr>
									<td width="40%">Account Code:</td>
									<td width="60%">
										<span class="strong" data-bind="text: obj.number"></span>
									</td>
								</tr>
								<tr>
									<td>Account Title</td>
									<td>
										<span class="strong" data-bind="text: obj.name"></span>
									</td>
								</tr>
								<tr>
									<td>Sub of account:</td>
									<td>
										<span data-bind="text: subName"></span>
									</td>
								</tr>
								<tr>
									<td>Account Type:</td>
									<td>
										<span data-bind="text: typeName"></span>
									</td>
								</tr>								
								<tr>
									<td>Description:</td>
									<td>
										<span data-bind="text: obj.description"></span>
									</td>
								</tr>
								<tr>
									<td>Taxable:</td>
									<td>										
										<input type="checkbox" id="chbTaxable" class="k-checkbox" data-bind="checked: obj.is_taxable">
          								<label class="k-checkbox-label" for="chbTaxable"></label>
									</td>
								</tr>
							</table>

							<span class="btn btn-primary btn-icon glyphicons edit pull-right" data-bind="click: goEdit"><i></i>Edit</span>

							</div>
						</div>

						<div class="span6 account-center">
							<div class="row-fluid">
								<div class="span12" >
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadTransaction" style=" width: 425px; height:114px; background:#424242; margin-left:0;">
										<span class="glyphicons coins"><i></i></span>										
										<span class="txt">
											Balance as of today
											<span data-bind="text: balance"></span>
										</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5">
										<span class="glyphicons adjust_alt"><i></i></span>
										<span class="txt">
											<span data-bind="text: nature"></span>
											Nature Balance
										</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadTransaction">
										<span class="glyphicons random"><i></i></span>										
										<span class="txt">
											<span data-bind="text: totalTxn"></span>
											Transactions											
										</span>										
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input id="sorter" name="sorter"
				    	   data-role="dropdownlist"                   
				           data-value-primitive="true"
				           data-text-field="text"
				           data-value-field="value"
				           data-bind="value: sorter,
				                      source: sortList" />
				                                   
				        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
				        
				       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />

			            <button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Description</th>
								<th>Dr</th>
								<th>Cr</th>
								<th></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="accountingCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="accountingCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Invoice" || type=="Cash_Sale" || type=="Quote" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return" || type=="Journal"){#
				<a href="\#/#=type.toLowerCase()#/#=transaction_id#"><i></i> #=number#</a>						
			#}else{#
				#=number#
			#}#        	
        </td>
        <td>#=description#</td>
    	<td class="right">    		
    		#=kendo.toString(dr, locale=="km-KH"?"c0":"c", locale)#    		
    	</td>
    	<td class="right">
    		#=kendo.toString(cr, locale=="km-KH"?"c0":"c", locale)#
    	</td>    	
    	<td align="center">
			#if(type==="Invoice"){#
				<a href="\#/invoice/#=id#"><i></i> Pay</a>				   	
        	#}#
		</td>     	
    </tr>
</script>
<script id="accountingCenter-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				#if(sub_of_id>0){#
					&nbsp;&nbsp;
					<span>
						#=number#				
					</span>
					-
					<span>
						#if(name.length>25){#
							#=name.substring(0, 25)#...
						#}else{#
							#=name#
						#}#
					</span>
				#}else{#
					<span class="strong">
						#=number#				
					</span>
					-
					<span class="strong">
						#if(name.length>25){#
							#=name.substring(0, 25)#...
						#}else{#
							#=name#
						#}#
					</span>
				#}#				
			</div>
		</td>
	</tr>
</script>

<script id="account" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content">				
						
				    <div class="hidden-print">
				    	<div class="pull-right">
				    		<span class="glyphicons no-js remove_2" 
								data-bind="click: cancel"><i></i></span>						
						</div>

				        <h2>ACCOUNT</h2>				        				        				        	
				    </div>			   

				    <br>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlType">Account Type<span style="color:red">*</span></label>
								<input id="ddlType" name="ddlType" 
									   data-role="dropdownlist"					                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.account_type_id,
					                              source: accountTypeDS,
					                              events:{change:typeChanges}"
					                   data-option-label="Select Type..."
					                   required data-required-msg="required" style="width: 100%;" />
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtNumber">Account Code<span style="color:red">*</span></label>
								<input id="txtNumber" name="txtNumber" 
										class="k-textbox"
										data-bind="value: obj.number"										
										required data-required-msg="required" style="width: 100%;">								
							</div>
							<!-- // Group END -->
						</div>
				    </div>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtName">Account Name<span style="color:red">*</span></label>
								<input id="txtName" name="txtName" 
										class="k-textbox"
										data-bind="value: obj.name"										
										required data-required-msg="required" style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtNonLocalName">Non-Local Name</label>
								<input id="txtNonLocalName" name="txtNonLocalName" 
										class="k-textbox"
										data-bind="value: obj.name_2"
										style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
				    </div>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlSubOf">Sub Of Account</label>
								<input id="ddlSubOf" name="ddlSubOf" 
									   data-role="dropdownlist"
									   data-template="account-list-tmpl"					                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.sub_of_id,
					                              source: subAccountDS"
					                   data-option-label="Select Sub Account..."
					                   style="width: 100%;" />
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlStatus">Status<span style="color:red">*</span></label>
								<input id="ddlStatus" name="ddlStatus" 
									   data-role="dropdownlist"									   				                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.status,
					                              source: statusList"
					                   data-option-label="Select Status..."
					                   required data-required-msg="required" style="width: 100%;" />
							</div>
							<!-- // Group END -->
						</div>
				    </div>

				    <div class="row">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label><input type="checkbox" data-bind="checked: obj.is_taxable" /> Taxable</label>								
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtDescription">Description</label>
								<input id="txtDescription" name="txtDescription" 
										class="k-textbox"
										data-bind="value: obj.description" 
										style="height: 50px; width: 100%;">
							</div>
							<!-- // Group END -->
						</div>				    	
				    </div>

				    <br>

				    <div class="row well" data-bind="visible: showBank">
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtBankName">Bank Name</label>
								<input id="txtBankName" name="txtBankName" 
										class="k-textbox"
										data-bind="value: obj.bank_name"
										style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
				    	<div class="span6">														
							<!-- Group -->
							<div class="control-group">										
								<label for="txtBankAccountNumber">Bank Account No.</label>
								<input id="txtBankAccountNumber" name="txtBankAccountNumber" 
										class="k-textbox"
										data-bind="value: obj.bank_account_number"
										style="width: 100%;">
							</div>
							<!-- // Group END -->
						</div>
						
				    </div>

				    <br>

				    <!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>						
						<span class="btn btn-icon btn-default glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
					</div>
					<!-- // Form actions END -->						
			    	
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="txnItem" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>TRANSACTION ITEM</h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span8 well">							
							<div class="row-fluid">
								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName">Item Name <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name" 
							              		placeholder="item name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>
							<div class="row-fluid">
								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="ddlAccount">Account <span style="color:red">*</span></label>
							            <input id="ddlAccount" name="ddlAccount"
							            	data-header-template="account-header-tmpl"
							            	data-template="account-list-tmpl" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true"			           								           						
						            		data-bind="source: accountDS, value: obj.account_id"
						            		data-option-label="Select Account..."
						            		required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							
								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency">Currency <span style="color:red">*</span></label>
							            <input id="ddlCurrency" name="ddlCurrency" 
				              				data-role="dropdownlist"
				              				data-template="currency-list-tmpl"
						            		data-text-field="code"
			           						data-value-field="locale"
			           						data-value-primitive="true" 
						            		data-bind="source: currencyDS, value: obj.locale"
						            		data-option-label="Select Currency..."
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span4">
							<div class="row-fluid">
								<!-- Group -->
								<div class="control-group">								
									<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
						            <textarea id="txtDescription" name="txtDescription" class="k-textbox" 
										data-bind="value: obj.description" style="height: 110px; width: 100%;"></textarea>
								</div>																		
								<!-- // Group END -->
							</div>
						</div>
					</div>									

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>															 -->
						<span class="btn btn-icon btn-default glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="journal" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">				
						
				    <div class="hidden-print">
				    	<div class="pull-right">

				    		<span class="glyphicons no-js remove_2" 
								data-bind="click: cancel"><i></i></span>						
						</div>

				        <h2>JOURNAL ENTRY</h2>				        				        				        	
				    </div>			   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 150px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td>Type</td>
										<td>
											<input id="ddlType" name="ddlType"
												   data-role="dropdownlist"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.journal_type,
								                              source: types"							                   
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" 
								                   style="width: 100%;" />
										</td>
									</tr>
									<tr>
										<td>Currency</td>
										<td>
											<input id="cbbCurrency" name="cbbCurrency"
												   data-role="combobox"				                
								                   data-value-primitive="true"
								                   data-template="currency-list-tmpl"				   
								                   data-text-field="code"
								                   data-value-field="locale"
								                   data-bind="value: obj.locale, 
								                   			source: currencyDS, 
								                   			events: {change : setRate}"
								                   placeholder="Select currency..." 
								                   required data-required-msg="required" style="width: 100%" />										
										</td>
									</tr>									
								</table>
							</div>
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 150px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							            <li class="span1 glyphicons pencil active"><a href="#tab1-3" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab2-3" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons history"><a href="#tab3-3" data-toggle="tab"><i></i></a>
							            </li>								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							        <!-- Memo Tab content -->
							        <div class="tab-pane active" id="tab1-3">
							        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
							        		data-bind="value: obj.memo2" style="width:100%;" 
							        		placeholder="Please enter transaction purpose here ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab2-3">

							        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab3-3">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 1%;">No.</th>
				                <th style="width: 30%;">ACCOUNT</th>
				                <th>DESCRIPTION</th>
				                <th data-bind="visible: showRef" style="width: 7%;">REF</th>
				                <th data-bind="visible: showName" style="width: 15%;">NAME</th>
				                <th data-bind="visible: showJob" style="width: 7%;">JOB</th>
				                <th data-bind="visible: showSegment" style="width: 15%;">SEGMENT</th>
				                <th style="width: 15%;">DEBITS (Dr)</th>
				                <th style="width: 15%;">CREDITS (Cr)</th>			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview"
				        		data-template="journal-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span6 hidden-print">
							
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0; ">
									<li>
										<input type="checkbox" data-bind="checked: showRef" /> REF
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showName" /> NAME
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showJob" /> JOB
									</li>
									<li>
										<input type="checkbox" data-bind="checked: showSegment" /> SEGMENT
									</li>								
								</ul>
							</div>

							<a href="#/account" class="btn btn-default">Add New Account</a>						
							
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span6">
							<div class="box-generic">						
								<div class="row-fluid row-merge">
									<div class="span6">
										<div class="center">
											<h5 class="strong muted text-uppercase">Total Debit</h5>
											<span class="text-large strong text-primary" data-bind="text: dr"></span>
										</div>
									</div>
									<div class="span6">
										<div class="center muted">
											<h5 class="strong muted text-uppercase">Total Credit</h5>
											<span class="text-large strong" data-bind="text: cr"></span>
										</div>
									</div>
								</div>
							</div>
						</div>
						<!-- // Column END -->
						
					</div>
		           
		            <br>
					
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>										
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>
						<span class="btn btn-icon btn-warning glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="journal-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.journal.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="cbbAccounts" name="cbbAccounts" 
				   data-role="combobox"                   
                   data-value-primitive="true"
                   data-template="account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-header-template="account-header-tmpl"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."                                     
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>					
		<td data-bind="visible: showName">
			<input data-role="combobox"                   
                   data-value-primitive="true"
                   data-template="contact-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: contactDS"
                   data-placeholder="Add Name.."                    
                   style="width: 100%" />
		</td>
		<td data-bind="visible: showJob">
			<input id="ddlJob" name="ddlJob"
				   data-option-label="Add Job..." 
				   data-role="dropdownlist"                   
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: job_id,
                              source: jobDS"
                   data-placeholder="Add Job.."
                   style="width: 80px;" />	
		</td>		
		<td data-bind="visible: showSegment">
			<select data-role="multiselect"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="ntbDr" name="ntbDr" 
					data-role="numerictextbox" 
					data-format="n0" 
					data-bind="value: dr, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>
		<td class="right">
			<input id="ntbCr" name="ntbCr" 
					data-role="numerictextbox" 
					data-format="n0" 
					data-bind="value: cr, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />										
		</td>		
    </tr>   
</script>
<script id="currencyRate" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
					<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

					<h2 >Exchange Rate</h2>			    		   

				    <br>

					<!-- Collapsible Widget -->			
					<div class="widget">
					    <div class="widget-body">

					    	<div class="row-fluid">
						    	<div class="span6 alert alert-primary">Company currency: <span data-bind="text: baseCode"></span> </div>
						    	<div class="span6 alert alert-primary">Reporting currency: <span data-bind="text: reportCode"></span> </div>
					    	</div>

					    	<div class="hidden-print well">
					    		<input id="cbbCurrency" name="cbbCurrency"
									   data-role="combobox"				                
					                   data-value-primitive="true"
					                   data-template="currency-list-tmpl"				   
					                   data-text-field="code"
					                   data-value-field="locale"
					                   data-bind="value: currency_locale, 
					                   			source: currencyDS"
					                   placeholder="Add currency..." 
					                   required data-required-msg="required" style="width: 300px" />

					            <input id="sorter" name="sorter"
						    	   data-role="dropdownlist"                   
						           data-value-primitive="true"
						           data-text-field="text"
						           data-value-field="value"
						           data-bind="value: sorter,
						                      source: sortList" />
						                                   
						        <input id="sdate" name="sdate"						           
						           data-bind="value: sdate"
						           placeholder="From ..." />
						        
						       	<input id="edate" name="edate"						           
						           data-bind="value: edate"
						           placeholder="To ..." />

					            <button id="search" type="button" data-role="button"><i class="icon-search"></i></button>
				          		|
								<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>							
					    	</div>						

							<div align="center">
								<span id="strDate"></span>
							</div>

							<br>					
							
							<button class="btn btn-inverse hidden-print" data-bind="click: openWindow"><i class="icon-plus icon-white"></i> Add New Rate</button>
							&nbsp;
							<span class="hidden-print">Please click on the column header to sort based on currency.</span>

							<div data-role="grid"
								 data-sortable="true"							 
								 data-row-template="currencyRate-row-template"			                
				                 data-columns="[
	                                { 'field': 'date', 'title':'Date', width: 90 },
	                                { 'field': 'currency_id', 'title':'Code', width: 60 },
	                                { 'field': 'currency_id', 'title':'Country' },
	                                { 'field': 'rate', 'title':'Rate', width: 140 },
	                                { 'field': 'source', 'title':'Source', width: 70 },
	                                { 'field': 'method', 'title':'Method', width: 70 },
	                                { 'title':'', width: 130 }
	                             ]"
				                 data-bind="source: dataSource"></div>

				            <div data-role="pager" 
							    	data-auto-bind="false"
						            data-bind="source: dataSource"></div>

						    <span id="notification"></span>

						    <div id="window" data-role="window" data-visible="false" data-modal="true" data-resizable="false" data-iframe="true">				    	
								<table class="table table-borderless table-condensed cart_total" style="width: 400px;">
									<tr>
										<td>										
									    	<input data-role="combobox"
								                   data-placeholder="Select Currency"
								                   data-value-primitive="true"
								                   data-text-field="code"
								                   data-value-field="id"
								                   data-template="currencyRate-currency-template"
								                   data-bind="value: obj.locale,
								                              source: currencyDS"
								                   style="width: 100%" />
							            </td>
					            	</tr>
					            	<tr>
										<td>
							                <input id="date" name="date" 
							            		data-role="datepicker"			            		
					        					data-bind="value: obj.date" 
					        					data-format="dd-MM-yyyy"
					        					data-parse-formats="yyyy-MM-dd" 
					        					placeholder="dd-MM-yyyy" required data-required-msg="required"
					        					style="width: 100%" />
					        			</td>
					            	</tr>
					            	<tr>
										<td>
					        				<input type="textbox" class="k-textbox" 		                   
							                   data-bind="value: obj.rate"
							                   placeholder="Rate(per 1 unit of base currency) ..."
							                   style="width: 100%" />
							            </td>
					            	</tr>
				                </table>

				                <p>
				                	Note: The exchange rate here is equivalent to 1 unit of base currency.
				                </p>			               
					            
					            <div align="center">
									<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i>Save</span>
									<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i>Close</span>
								</div>					  
							</div>						

						</div> <!-- End Widget-Body List -->
					</div>
					<!-- // Collapsible Widget END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="currencyRate-row-template" type="text/x-kendo-tmpl">		
	<tr>			
		<td>#=kendo.toString(new Date(date), "dd-MM-yyyy")#</td>		
		<td>#=currency.length>0?currency[0].code:""#</td>
		<td>#=currency.length>0?currency[0].country:""#</td>
		<td align="right">#=rate#</td>					
		<td>#=source#</td>
		<td>#=method#</td>				
		<td>			
			<span data-bind="click: edit"><i class="icon-edit"></i> Edit</span>
    		|    		
    		<span data-bind="click: delete"><i class="icon-remove"></i> Delete</span>					
		</td>		
    </tr>   
</script>
<script id="currencyRate-currency-template" type="text/x-kendo-template">	
	#=code# #=country#
</script>
<script id="saleTax" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">

				<div class="hidden-print">
			    	<div class="pull-right">

			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"><i></i></span>						
					</div>

			        <h2>TAX</h2>
			        <div class="span6">
			        	<p>
				        	These are the tax items required by your countries. 
				        	You can add more tax items or edit the existing items. If you are not sure, please consult with your tax advisor.
				        </p>
			        </div>
			         <div class="span6">
			         	<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i>&nbsp&nbspAdd New Tax Type</button>
						
			        </div>
			        				        				        				        	
			    </div>			   

			    <br>

			    <!-- Tax Type Window -->
			    <div data-role="window"
		                 data-title="Tax Type"		                 
		                 data-width="350"
		                 data-height="273"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '35%'}"
		                 data-bind="visible: windowVisible">
		    		<table>
						<tr style="border-bottom: 8px #fff solid;">
							<td width="50%">Tax System</td>
							<td width="50%">
								<input data-role="dropdownlist"				            			               			   		                   
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.tax_system,
				                              source: typeList"
				                   style="width: 100%;" />
							</td>
						</tr>
						<tr style="border-bottom: 8px #fff solid;">
							<td>Tax Registration No.</td>
							<td>
								<input class="k-textbox" placeholder="type number ..." data-bind="value: obj.number" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px #fff solid;">
							<td>Agency</td>
							<td>
								<input class="k-textbox" placeholder="type agency ..." data-bind="value: obj.agency" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px #fff solid;">
							<td>Name</td>
							<td>
								<input class="k-textbox" placeholder="type name ..." data-bind="value: obj.name" style="width: 100%;">
							</td>
						</tr >
						<tr style="border-bottom: 8px #fff solid;">
							<td>Last End Date</td>
							<td>
								<input data-role="datepicker"
									data-format="dd-MM-yyyy"
									data-parse-formats="yyyy-MM-dd" 
									data-bind="value: obj.end_date"
									style="width: 100%;" />
							</td>
						</tr>
						<tr>
							<td>Last Submission Date</td>
							<td>
								<input data-role="datepicker"
									data-format="dd-MM-yyyy"
									data-parse-formats="yyyy-MM-dd" 
									data-bind="value: obj.submission_date"
									style="width: 100%;" />
						</td>
						</tr>
					</table>

					<br>

					<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i>Save</span>
					<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i>Close</span>  
				</div>
						
                <div class="row-fluid">
	                <div class="span12 table-tax">	                					
		            	<table class="table table-condensed">
		            		<thead style="background-color: #1E4E78; color: #fff; font-weight: bold">
		            			<tr>
		            				<th style="padding-left: 8px !important;">NUMBER</th>
		            				<th>NAME</th>
		            				<th>SYSTEM</th>
		            				<th>AGENCY</th>
		            				<th>END DATE</th>
		            				<th>SUBMISSION DATE</th>	            				
		            				<th></th>
		            			</tr>
		            		</thead>
		            		<tbody data-role="listview"			            			
					                data-template="saleTax-type-template"
					                data-bind="source: dataSource"></tbody>
		            	</table>
	            	</div>

	            <!-- Item Window -->
	            <div data-role="window"
		                 data-title="Tax Item"		                 
		                 data-width="285"
		                 data-height="170"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '37%'}"
		                 data-bind="visible: windowItemVisible">
            		<table>
						<tr style="border-bottom: 8px solid #fff;">
							<td width="34%">Item Name</td>
							<td>
								<input class="k-textbox" placeholder="type name ..." data-bind="value: item.name" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px solid #fff;">
							<td>Item Rate</td>
							<td>
								<input data-role="numerictextbox"
				                   data-format="p"
				                   data-min="0"
				                   data-max="0.99"
				                   data-step="0.1"                   
				                   data-bind="value: item.rate"
				                   style="width: 100%;">
							</td>
						</tr>
						<tr>
							<td>Account</td>
							<td>
								<input data-role="dropdownlist" id="ddlAccount"
					                   data-option-label="Select Account..."
					                   data-header-template="account-header-tmpl"
					                   data-template="account-list-tmpl"
					                   data-value-primitive="true"					                   
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: item.account_id,
					                              source: accountDS"
					                   style="width: 100%" />
							</td>
						</tr>
						
					</table>

					<br>

					<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: saveItem"><i></i>Save</span>
					<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindowItem"><i></i>Close</span>  
				</div>

				<h3 data-bind="text: taxName"></h3>

				<div class="row-fluid">
	            	<div class="span8">		                	
					    <table class="table table-bordered table-white">
		            		<thead>
		            			<tr>
		            				<th>Name</th>
		            				<th>Rate</th>
		            				<th>Account</th>		            					            				
		            				<th></th>
		            			</tr>
		            		</thead>
		            		<tbody data-role="listview"			            				
					                data-template="saleTax-item-template"
					                data-auto-bind="false"
					                data-bind="source: itemDS"></tbody>
		            	</table>
	            	</div>
            	</div>
			</div>							
			</div>
		</div>
	</div>
</script>
<script id="saleTax-type-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>#=number#</td>
    	<td>#=name#</td>
    	<td>#=tax_system#</td>
    	<td>#=agency#</td>
    	<td>#=kendo.toString(new Date(end_date), "dd-MM-yyyy")#</td>
    	<td>#=kendo.toString(new Date(submission_date), "dd-MM-yyyy")#</td>
    	<td>
    		<span data-bind="click: edit"><i class="icon-edit"></i> Edit</span>
    		|
    		<span data-bind="click: delete"><i class="icon-remove"></i> Delete</span>
    		|
    		<span data-bind="click: view"><i class="icon-view"></i> View Item</span>
    		|
    		<span data-bind="click: addItem"><i class="icon-plus icon-white"></i> Add Item</span>
    	</td>
   	</tr>
</script>
<script id="saleTax-item-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>#=name#</td>
    	<td>#=rate#</td>
    	<td>#=account[0].name#</td>     	 		
   		<td>
    		<span data-bind="click: editItem"><i class="icon-edit"></i> Edit</span>
    		|
    		<span data-bind="click: deleteItem"><i class="icon-remove"></i> Delete</span>
    	</td>
   	</tr>
</script>
<script id="recurring" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">				
					
			    <div class="hidden-print">
			    	<div class="pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back();"><i></i></span>						
					</div>

			        <h2>RECURRING TRANSACTION LISTS</h2>				        				        				        	
			    </div>

			    <br>			   
			   
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 1%;">No.</th>
			                <th>TEMPLATE NAME</th>
			                <th>NAME</th>
			                <th class="center" style="width: 10%">TYPE</th>
			                <th class="center">START DATE</th>
			                <th class="center">FREQUENCY</th>
			                <th></th>			                			                
			            </tr> 
			        </thead>
			        <tbody data-template="recurring-template"
			        		data-auto-bind="false"			        		
			        		data-bind="source: dataSource"></tbody>			        
			    </table>											

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="recurring-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">			
			#:banhji.recurring.dataSource.indexOf(data)+1#			
		</td>		
		<td>#=recurring_name#</td>
		<td>#=contact.length>0?contact[0].name:""#</td>
		<td class="center">#=type#</td>		
		<td class="center">#=kendo.toString(start_date, "dd-MMMM-yyyy")#</td>
		<td class="center">#=frequency#</td>
		<td class="right">
			<span class="btn btn-success btn-icon glyphicons edit" data-bind="click: goToTemplate" style="width: 80px;"><i></i> Edit</span>
			<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete" style="width: 80px;"><i></i> Delete</span>
		</td>
    </tr>   
</script>

<script id="accountingReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>PERIOD-END CLOSING REPORTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td width="50%">
								<h3><a href="#/journal_report">Journal Entry Report</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/general_ledger">General Ledger</a></h3>								
							</td>						
						</tr>
						<tr>
							<td width="50%">
								<p>
									Lists all accounting transactions within a period of time into debits and credits and displays them chronologically.

								</p>
								
							</td>
							<td width="50%">
								<p>
									Groups all accounting transactions by each account in your chart of accounts within a period of time into debits, credits, and balances. 

								</p>
							</td>
							
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/trial_balance">Trial Balance</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/transaction_list_date">Transaction List by Date</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Summarizes each account balance on your chart of accounts in the format of debit and credit within a period of time
								</p>
							</td>
							<td width="50%">
								<p>
									This is similar with journal entry; however, it does not include debit and credit. In addition, it includes not financial transactions, such as sale order or purchase order.

								</p>
							</td>
						</tr>

						<tr>
							<td width="50%">
								<h3><a href="#/recent_transactions_list">Recent Transactions List</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/reconciliation_report">Reconciliation Report</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Lists all transaction recorded or edited within the last five days.
								</p>
							</td>
							<td width="50%">
								<p>
									Lists of all reconciliation reports 
								</p>
							</td>
						</tr>

						<tr>
							<td width="50%">
							</td>
							<td width="50%">
								<h3><a href="#/">Period-End Closing Checklist</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
							</td>
							<td>
								
							</td>
						</tr>

					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>FINANCIAL STATEMENTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td >
								<h3><a href="#/statement_profit_loss">Statement of Profit or Loss</a></h3>
							</td>
							<td >
								<h3><a href="#/statement_financial_position">Statement of Financial Position</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Provides the progress of your company’s financial performance, summarized in a record of income generated and expenses incurred over a given period.

								</p>
								
							</td>
							<td >
								<p>
									Provides the snapshot of your company’s financial position on value and ownership. It is the relationship of the company’s assets, liabilities and equities as of a specific date.

								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/statement_profit_loss_comparison">Statement of Profit or Loss Comparison</a></h3>
							</td>
							<td >
								<h3><a href="#/statement_financial_position_comparison">Statement of Financial Position Comparison</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Shows a year-over-year comparison of your financial performance.
								</p>
							</td>
							<td >
								<p>
									Shows a year-over-year comparison of your financial position.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/statement_cash_flow">Statement of Cash Flow</a></h3>
							</td>
							<td >
								<h3><a href="#/statement_changes_equity">Statement of Changes in Equity</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Shows cash generated by your company operating activities, cash spent on investing in your company assets long term asset, and cash in or out from your own share or financial institutions.

								</p>
							</td>
							<td >
								<p>
									Shows the movement of your paid-up capital, dividends, the effects of changes in accounting policies and corrections of errors recognized in the period, and the profit or loss for a reporting period

								</p>
							</td>
						</tr>

					</table>
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 49%; padding-right: 8px !important;">
								<h3><a href="#/chart_of_account">Chart of Account </a></h3>
							</td>
							<td >
								<h3><a href="#/audit_trial_report">Audit Trial Report</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 49%; padding-right: 8px !important;">
								<p>
									Lists of all accounts with name, type, and balance.

								</p>
								
							</td>
							<td >
								<h3><a href="#/recurring_journal_list">Recurring Journal List</a></h3>							
							</td>
							
						</tr>
						<tr>
							<td >
							</td>
							<td >

							</td>
							
						</tr>
						
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="statement">
					<h2>Statement of Financial Position</h2>
					<p>As of xx/xx/xxxx</p>
					<table width="100%">
						<tr>
							<td>
								<span>Current Asset</span>
							</td>
							<td>
								<span> 1,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Properties, Plants & Equipment</span>
							</td>
							<td>
								<span> 1,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Investment Property</span>
							</td>
							<td>
								<span> 1,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Investment</span>
							</td>
							<td>
								<span> 1,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Other Asset</span>
							</td>
							<td>
								<span> 5,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Total Asset</span>
							</td>
							<td>
								<span> 1,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Current Liabilities</span>
							</td>
							<td>
								<span> 1,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Non-Current Liabilities</span>
							</td>
							<td>
								<span> 2,000</span>
							</td>
						</tr>
						<tr >
							<td>
								<span>Total Liabilities</span>
							</td>
							<td>
								<span> 3,000</span>
							</td>
						</tr>
						<tr>
							<td>
								<span>Equity</span>
							</td>
							<td>
								<span> 2,000</span>
							</td>
						</tr>
					</table>
				</div>
			</div>
			<div class="report-chart">				
				<div id="sale-report-chart">Chart</div>
			</div>
		</div>
	</div>
</script>
<script id="journalReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->
								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->
						
					</div>

					<div class="block-title">
						<h3 data-bind="text: banhji.institute.name"></h3>
						<h2>JOURNAL ENTRY REPORTS</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid journal_block">
						<div class="span4">
							<p>
								Total no. of transactions
							</p>
							<span>
								200
							</span>
						</div>
						<div class="span4">
							<p>
								Total Dr. Balance
							</p>
							<span>
								200
							</span>
						</div>
						<div class="span4">
							<p>
								Total Cr. Balance
							</p>
							<span>
								200
							</span>
						</div>
					</div>

					<table class="table table-borderless table-condensed">
			            <tr>
			                <th>TYPE</th>
			                <th>DATE</th>
			                <th>TXN#</th>
			                <th>TXN DESCRIPTION</th>
			                <th>ACCOUNT</th>                		                
			                <th class="right">DEBITS (Dr)</th>
			                <th class="right">CREDITS (Cr)</th>
			                <th><i class="icon-paper-clip"></i></th>		                
			            </tr> 
				        <tbody data-role="listview"
				        		data-template="journalReport-template"			        		
				        		data-bind="source: dataSource"></tbody>			        
				    </table>

		            <div data-role="pager" data-bind="source: dataSource"></div>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="journalReport-template" type="text/x-kendo-tmpl">
	#var sumDr =0, sumCr = 0;#
	#for(var i=0; i<line.length; i++){#
	#sumDr += line[i].dr / line[i].rate;#
	#sumCr += line[i].cr / line[i].rate;#
	<tr>
		<td style="color: black;">
			#if(i==0){#
				#if(type=="Invoice" || type=="Cash_Sale" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return" || type=="Purchase_Return" || type=="Cash_Advance" || type=="Cash_Receipt" || type=="Cash_Payment" || type=="Expense" || type=="Journal"){#
					<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=type#</a>					
				#}else if(type=="Cash_Purchase" || type=="Credit_Purchase"){#
					<a href="\#/purchase/#=id#"><i></i> #=type#</a>
				#}else if(type=="Deposit" || type=="Witdraw" || type=="Transfer"){#
					<a href="\#/cash_transaction/#=id#"><i></i> #=type#</a>				
				#}else{#
					#=type#
				#}#
			#}#
		</td>		
		<td style="color: black;">
			#if(i==0){#
				#=kendo.toString(new Date(issued_date), "dd-MMMM-yyyy")#
			#}#
		</td>
		<td style="color: black;">
			#if(i==0){#
				#if(type=="Invoice" || type=="Cash_Sale" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return" || type=="Purchase_Return" || type=="Cash_Advance" || type=="Cash_Receipt" || type=="Cash_Payment" || type=="Expense" || type=="Journal"){#
					<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>					
				#}else if(type=="Cash_Purchase" || type=="Credit_Purchase"){#
					<a href="\#/purchase/#=id#"><i></i> #=number#</a>
				#}else if(type=="Deposit" || type=="Witdraw" || type=="Transfer"){#
					<a href="\#/cash_transaction/#=id#"><i></i> #=number#</a>				
				#}else{#
					#=type#
				#}#
			#}#
		</td>		
		<td style="color: black;">
			#if(i==0){#
				#=memo#
			#}#
		</td>
		<td style="color: black;">
			#=line[i].account.length>0 ? line[i].account[0].name : ""#
		</td>			
		<td class="right" style="color: black;">
			#if(line[i].dr>0){#
				#=kendo.toString(line[i].dr / line[i].rate, "c0", banhji.institute.locale)#
			#}#
		</td>
		<td class="right" style="color: black;">
			#if(line[i].cr>0){#
				#=kendo.toString(line[i].cr / line[i].rate, "c0", banhji.institute.locale)#
			#}#
		</td>
		<td class="right"><i class="icon-paper-clip"></i></td>  			
    </tr>    
    #}# 
    <tr>
    	<td style="color: black;">Total:</td>
    	<td></td>    	
    	<td></td>
    	<td></td>
    	<td></td>    	
    	<td class="right strong" style="border-top-color: black; color: black;">
    		#=kendo.toString(sumDr, "c0", banhji.institute.locale)#
    	</td>
    	<td class="right strong" style="border-top-color: black; color: black;">
    		#=kendo.toString(sumCr, "c0", banhji.institute.locale)#
    	</td>
    	<td class="right"><i class="icon-paper-clip"></i></td>  	
    </tr>  
</script>
<script id="generalLedger" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->
								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->
						
					</div>
			    	
					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>General Ledger</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>TXN #</th>
							<th>TXN Description</th>							
							<th>Account</th>
							<th class="right">Debit</th>
							<th class="right">Credit</th>
							<th class="center">Balance</th>
							<th><i class="icon-paper-clip"></i></th>
						</tr>
						<tr>
							<td>10100 Cash & Cash Equivalent</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>
							<td>1,000.00</td>
							<td>Account Receivable</td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>					
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td>	
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>												
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>					
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						
						<tr class="bg-total">
							<th colspan="4">Total</th>
							<th colspan="5">(600.00)</th>
						</tr>
					</table>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="transactionListDate" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">	
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Grouped By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->
								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->
						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>TRANSACTION LIST BY DATE</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>TXN #</th>
							<th>TXN Description</th>							
							<th>Name</th>
							<th><i class="icon-paper-clip"></i></th>
						</tr>
						<tr>
							<td>10100 Cash & Cash Equivalent</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td><i class="icon-paper-clip"></i></td>				
						</tr>
						<tr>					
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>												
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>					
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						
						<tr>
							<th colspan="3">Total</th>
							<th colspan="3">(600.00)</th>
						</tr>
					</table>
				</div>
			</div>						
		</div>
	</div>
</script>
<script id="recentTransactionsList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons filter" href="#tab-1" data-toggle="tab"><i></i>Filter</a></li>
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Grouped By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->
								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->
						
					</div>
			    	
					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>RECENT TRANSACTION LIST</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Ordered By</th>
							<th>Last Recored Date</th>
							<th>Status</th>
							<th>TXN #</th>
							<th>TXN Description</th>							
							<th>Name</th>
							<th>Amount</th>
							<th><i class="icon-paper-clip"></i></th>
						</tr>
						<tr>
							<td>10100 Cash </td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>						
						</tr>
						<tr>					
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td> 
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>
						</tr>
						<tr>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>												
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>					
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>					
						</tr>
						<tr>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>
							<td></td>
							<td></td>
							<td><i class="icon-paper-clip"></i></td>				
						</tr>
						
						<tr>
							<th colspan="5">Total</th>
							<th colspan="4">(600.00)</th>
						</tr>
					</table>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="reconciliationReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">			
		    		<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>					

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Reconciliation Report</h2>
					</div>
					<br>
					<div class="clear"></div>
					<div class="col-sm-6" style="margin-bottom: 10px; float: none; display: inline-block;">As of :</div>
					<div class="col-sm-6" style="float: right; display: inline-block;">
						<input type="checkbox" id="cashCount" class="k-checkbox" data-bind="">
						<label class="k-checkbox-label" for="cashCount">Cash Count Sheet</label>
						&nbsp;
						<input type="checkbox" id="surpriseCheck" class="k-checkbox" data-bind="">
						<label class="k-checkbox-label" for="surpriseCheck">Surprise Check</label>
					</div>
					<table style="width:100%;" class="helloe">
						<tr>
							<th></th>
							<th colspan="2">KHMER REIL</th>
							<th colspan="2">US DOLLAR</th>
						</tr>
						<tr>
							<td style="background: #000;"></td>
							<td style="background: #C8D9F0; text-align: center;">Note</td>
							<td style="background: #C8D9F0; text-align: center;">Amount</td>
							<td style="background: #C8D9F0; text-align: center;">Note</td>
							<td style="background: #C8D9F0; text-align: center;">Amount</td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">1</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">2</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">5</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">10</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">20</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">50</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">100</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">500</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">1,000</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">2,000</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">5,000</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">10,000</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td style="background: #C8D9F0">20,000</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td colspan="2" style="background: #C8D9F0; text-align:right;">Total</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>

					<!-- <p style="margin-left: 18%; margin-top: 10px;">Exchange rate on the day of:</p> -->
										  
					<!-- <table class="table2">
						<tr>
							<td>Counted By:</td>
							<td ></td>
							<td>Position:</td>
							<td></td>
							<td>Date:</td>
							<td></td>
						</tr>
					</table> -->

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="trialBalance" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryCustomer">

			    	<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
						<!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">	
							    <!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons print" href="#tab-2" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
							    <!-- // Tabs Heading END -->
								<div class="widget-body">
								    <div class="tab-content">

								    	<!-- //GENERAL INFO -->
								          <div class="tab-pane active" id="tab-1">									
									        As of:
									       	<input data-role="datepicker"
								                   data-bind="value: as_of">

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->						       

								       
								    </div>
								</div>
							</div>
						</div>
					
					</div>

					<div class="block-title">
						<h3 data-bind="text: company.name"></h3>
						<h2>TRIAL BALANCE</h2>
						<p data-bind="text: displayDate"></p>
					</div>

					<div class="row-fluid journal_block">
						<div class="span4">
							<p>
								Account
							</p>
							<span data-bind="text: dataSource.total"></span>
						</div>
						<div class="span4">
							<p>
								Total Dr. Balance
							</p>
							<span data-bind="text: totalDr"></span>
						</div>
						<div class="span4">
							<p>
								Total Cr. Balance
							</p>
							<span data-bind="text: totalCr"></span>
						</div>
					</div>

					<table class="table table-borderless table-condensed">
						<thead>
				            <tr>
				                <th>CODE</th>
				                <th>NAME</th>
				                <th>TYPE</th>
				                <th class="right">DEBIT</th>
				                <th class="right">CREDIT</th>
				            </tr>
				        </thead>
				        <tbody data-template="trialBalance-template" data-bind="source: dataSource"></tbody>
				        <tfoot data-template="trialBalance-footer-template" data-bind="source: this"></tfoot>
					</table>					  
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="trialBalance-template" type="text/x-kendo-tmpl">	
	<tr>
		<td style="color: black;">
			#=number#
		</td>		
		<td style="color: black;">
			#=name#
		</td>
		<td style="color: black;">
			#=type#
		</td>						
		<td class="right" style="color: black;">
			#if(dr!==0){#
				#=kendo.toString(dr, "c", banhji.locale)#
			#}#
		</td>
		<td class="right" style="color: black;">
			#if(cr!==0){#
				#=kendo.toString(cr, "c", banhji.locale)#
			#}#
		</td>		
    </tr>    
</script>
<script id="trialBalance-footer-template" type="text/x-kendo-template">
    <tr class="bg-total">
        <td>TOTAL:</td>        
        <td></td>
        <td></td>        
        <td class="right">
            #: totalDr() #
        </td>
        <td class="right">
            #: totalCr() #
        </td>
    </tr>
</script>
<script id="chartOfAccount" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">						
				<div id="example" class="k-content saleSummaryCustomer">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					
					<div class="row-fluid">	
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Grouped By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Chart of Account</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center">NUMBER</th>
				                <th class="center">NAME</th>
				                <th class="center">TYPE</th>			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview"
				        		data-template="chartOfAccount-template"			        		
				        		data-bind="source: dataSource"></tbody> 
				    </table>
		            <div data-role="pager" data-bind="source: dataSource"></div>					  

				</div>
			</div>						
		</div>
	</div>
</script>
<script id="chartOfAccount-template" type="text/x-kendo-tmpl">	
	<tr>
		<td style="color: black;">
			#=number#
		</td>		
		<td style="color: black;">
			#=name#
		</td>
		<td style="color: black;">
			#=account_type.length>0 ? account_type[0].name : ""#
		</td>				
    </tr>    
</script>
<script id="statementProfitLoss" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Profit or Loss</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">2016</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td class="right">KHR</td>
						</tr>
						<tr>
							<td>Revenue</td>
							<td><a href="">10</a></td>
							<td class="right">680,000</td>
						</tr>
						<tr>
							<td>Cost</td>
							<td></td>
							<td class="right">(400,000)</td>
						</tr>
						<tr>
							<td class="bold">Gross Profit</td>
							<td></td>
							<td class="right bold-border">280,000</td>
						</tr>
						<tr>
							<td>Distribution costs</td>
							<td></td>
							<td class="right">(8,580)</td>
						</tr>
						<tr>
							<td>Administrative Expense</td>
							<td></td>
							<td class="right">(50,000)</td>
						</tr>
						<tr>
							<td>Finance Costs</td>
							<td><a href="">10</a></td>
							<td class="right">(22,300)</td>
						</tr>
						<tr>
							<td>Share of profit of associate</td>
							<td><a href="">10</a></td>
							<td class="right">42,100</td>
						</tr>
						<tr>
							<td class="bold">Profit before Tax</td>
							<td><a href="">10</a></td>
							<td class="right bold-border">241,220</td>
						</tr>
						<tr>
							<td>Income tax expense</td>
							<td><a href="">10</a></td>
							<td class="right">(60,305)</td>
						</tr>
						<tr>
							<td class="bold">Profit for the year from continuing operations</td>
							<td></td>
							<td class="right bold-border">180,915</td>
						</tr>
						<tr>
							<td>Loss for the year discoutinued operations</td>
							<td><a href="">10</a></td>
							<td class="right">(24,780)</td>
						</tr>
						<tr>
							<td class="bold">Profit for the year</td>
							<td></td>
							<td class="right bold-border border-bottom">156,135</td>
						</tr>
					</table>

		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementFinancialPosition" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Financial Position</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    	
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">2016</th>
						</tr>
						<tr>
							<td class="bold">ASSET</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Non-Current Asset</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Properties, Plants, & Equipment</td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">138,923,361</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Freehold Land</td>
							<td><a href="">1</a></td>
							<td class="right">123,670,644</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Building & Structure</td>
							<td><a href="">1</a></td>
							<td class="right">9,848,345</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Electrical Systems, Machineries and Improvement</td>
							<td><a href="">1</a></td>
							<td class="right">838,559</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Automobiles & Vehicles</td>
							<td><a href="">1</a></td>
							<td class="right">123,670,644</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Furniture, Fixtures & Fittings</td>
							<td><a href="">1</a></td>
							<td class="right">663,429</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Computer and Related Equipment</td>
							<td><a href="">1</a></td>
							<td class="right">286,688</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Equipments, Electricles Device & Tools</td>
							<td>1</td>
							<td class="right">779,835</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Heavy Machinaries</td>
							<td><a href="">1</a></td>
							<td class="right">341505</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Completed Investment Properties</td>
							<td><a href="">1</a></td>
							<td class="right">3,701,848</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">I​nvestment Properties under-construction</td>
							<td><a href="">1</a></td>
							<td class="right">10,087,257</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Subsidiaries</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Non-Current Asset</i></td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">152,712,466</td>
						</tr>
						<tr>
							<td class="bold">Current Assets</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Inventory</td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">389,142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Raw Material</td>
							<td><a href="">1</a></td>
							<td class="right">175,561,951</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Working-in-progress</td>
							<td><a href="">1</a></td>
							<td class="right">80,575,454</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Finished goods</td>
							<td><a href="">1</a></td>
							<td class="right">205,523,139</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Operating Equipment</td>
							<td><a href="">1</a></td>
							<td class="right">142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Trade Receivables</td>
							<td><a href="">1</a></td>
							<td class="right">142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Properties Sale Receivable</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Installment Payment Scheme</td>
							<td><a href="">1</a></td>
							<td class="right">205,523,139</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Mortgage Payment Scheme</td>
							<td><a href="">1</a></td>
							<td class="right">9,003,967</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">AR from Related Parties</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Other receivables</td>
							<td><a href="">1</a></td>
							<td class="right">34,859</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Interest Receivable</td>
							<td><a href="">1</a></td>
							<td class="right">138,835</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Prepayment & Deposit</td>
							<td><a href="">1</a></td>
							<td class="right">3,741,185</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Cash and Cash Equivalent</td>
							<td><a href="">1</a></td>
							<td class="right">7,359,195</td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Current Assets</i></td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">419,215,778</td>
						</tr>
						<tr>
							<td class="bold">TOTAL ASSETS</td>
							<td><a href="">1</a></td>
							<td class="right bold under-bottom">571,928,244</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">EQUITY & LIABILITIES</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Shareholders Equity</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Share Capital</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Retained Earning</td>
							<td></td>
							<td ></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Shareholders Equity</i></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Non-Current Liabilities</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest Bearing Loans and Borrowing</td>
							<td><a href="">10</a></td>
							<td class="right">36,445,536</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Long term Loan based on Customer Portfolio</td>
							<td><a href="">10</a></td>
							<td class="right">60,334,222</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Long term loan from Related Parties</td>
							<td><a href="">11</a></td>
							<td class="right">9,429,028</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Land Purchase Payable</td>
							<td><a href="">12</a></td>
							<td class="right">150,595,772</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Deposit for Sale of Properties inventory</td>
							<td><a href="">13</a></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Installment Payment Scheme</td>
							<td><a href=""></a></td>
							<td class="right">95,979,147</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Mortgage Payment Scheme</td>
							<td><a href=""></a></td>
							<td class="right">76,736,253</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Other Deposit</td>
							<td><a href=""></a></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Non-Current Liabilities</i></td>
							<td><a href=""></a></td>
							<td class="right bold">429,519,958</td>
						</tr>
						<tr>
							<td>Current Liabilities</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Trade Payable</td>
							<td><a href="">14</a></td>
							<td class="right">5,720,691</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Short term Bank Borrowing (OD)</td>
							<td><a href="">9</a></td>
							<td class="right">7,645,991</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Current Customer Deposit & Prepayment</td>
							<td><a href="">13</a></td>
							<td class="right">11,837,636</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Accrued Expenses (including bonus)</td>
							<td><a href="">15</a></td>
							<td class="right">280,607</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Salary Payable</td>
							<td><a href="">16</a></td>
							<td class="right">1,074,153</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest Payable</td>
							<td><a href=""></a></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">General Provision</td>
							<td><a href=""></a></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Current Tax Payable</td>
							<td><a href=""></a></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Current Liabilities</i></td>
							<td><a href=""></a></td>
							<td class="right bold-border border-bottom">126,558,805</td>
						</tr>
						<tr>
							<td class="bold">Total Liabilities</td>
							<td><a href=""></a></td>
							<td class="right bold border-bottom">556,078,762</td>
						</tr>
						<tr>
							<td class="bold fontBig">Total Liabilities</td>
							<td><a href=""></a></td>
							<td class="right bold under-bottom">556,078,762</td>
						</tr>
					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementProfitLossComparison" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Profit or Loss Comparison</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">2016</th>
							<th class="pull-right">2015</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td class="right">KHR</td>
							<td class="right">KHR</td>
						</tr>
						<tr>
							<td>Revenue</td>
							<td>10</td>
							<td class="right">680,000</td>
							<td class="right">525,000</td>
						</tr>
						<tr>
							<td>Cost</td>
							<td></td>
							<td class="right">(400,000)</td>
							<td class="right">(300,000)</td>
						</tr>
						<tr>
							<td class="bold">Gross Profit</td>
							<td></td>
							<td class="right bold-border">280,000</td>
							<td class="right bold-border">225,000</td>
						</tr>
						<tr>
							<td>Distribution costs</td>
							<td></td>
							<td class="right">(8,580)</td>
							<td class="right">(5,830)</td>
						</tr>
						<tr>
							<td>Administrative Expense</td>
							<td></td>
							<td class="right">(50,000)</td>
							<td class="right">(40,000)</td>
						</tr>
						<tr>
							<td>Finance Costs</td>
							<td><a href="">1</a></td>
							<td class="right">(22,300)</td>
							<td class="right">(19,700)</td>
						</tr>
						<tr>
							<td>Share of profit of associate</td>
							<td><a href="">1</a></td>
							<td class="right">42,100</td>
							<td class="right">38,560</td>
						</tr>
						<tr>
							<td class="bold">Profit before Tax</td>
							<td><a href="">1</a></td>
							<td class="right bold-border">241,220</td>
							<td class="right bold-border">198,030</td>
						</tr>
						<tr>
							<td>Income tax expense</td>
							<td><a href="">1</a></td>
							<td class="right">(60,305)</td>
							<td class="right">(47,508)</td>
						</tr>
						<tr>
							<td class="bold">Profit for the year from continuing operations</td>
							<td></td>
							<td class="right bold-border">180,915</td>
							<td class="right bold-border">150,522</td>
						</tr>
						<tr>
							<td>Loss for the year discoutinued operations</td>
							<td><a href="">1</a></td>
							<td class="right">(24,780)</td>
							<td class="right">(2,000)</td>
						</tr>
						<tr>
							<td class="bold">Profit for the year</td>
							<td></td>
							<td class="right bold-border border-bottom">156,135</td>
							<td class="right bold-border border-bottom">148,522</td>
						</tr>
					</table>

		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementFinancialPositionComparison" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Financial Position Comparison</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    	
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">2015</th>
							<th class="right">2016</th>
						</tr>
						<tr>
							<td class="bold">ASSET</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Non-Current Asset</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Properties, Plants, & Equipment</td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">138,923,361</td>
							<td class="right bold-border border-bottom">138,923,361</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Freehold Land</td>
							<td><a href="">1</a></td>
							<td class="right">123,670,644</td>
							<td class="right">123,670,644</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Building & Structure</td>
							<td><a href="">1</a></td>
							<td class="right">9,848,345</td>
							<td class="right">9,848,345</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Electrical Systems, Machineries and Improvement</td>
							<td><a href="">1</a></td>
							<td class="right">838,559</td>
							<td class="right">838,559</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Automobiles & Vehicles</td>
							<td><a href="">1</a></td>
							<td class="right">123,670,644</td>
							<td class="right">123,670,644</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Furniture, Fixtures & Fittings</td>
							<td><a href="">1</a></td>
							<td class="right">663,429</td>
							<td class="right">663,429</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Computer and Related Equipment</td>
							<td><a href="">1</a></td>
							<td class="right">286,688</td>
							<td class="right">286,688</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Equipments, Electricles Device & Tools</td>
							<td><a href="">1</a></td>
							<td class="right">779,835</td>
							<td class="right">779,835</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Heavy Machinaries</td>
							<td><a href="">1</a></td>
							<td class="right">341505</td>
							<td class="right">341505</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Completed Investment Properties</td>
							<td><a href="">1</a></td>
							<td class="right">3,701,848</td>
							<td class="right">3,701,848</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">I​nvestment Properties under-construction</td>
							<td><a href="">1</a></td>
							<td class="right">10,087,257</td>
							<td class="right">10,087,257</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Subsidiaries</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Non-Current Asset</i></td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">152,712,466</td>
							<td class="right bold-border border-bottom">152,712,466</td>
						</tr>
						<tr>
							<td class="bold">Current Assets</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Inventory</td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">389,142,635</td>
							<td class="right bold-border border-bottom">389,142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Raw Material</td>
							<td><a href="">1</a></td>
							<td class="right">175,561,951</td>
							<td class="right">175,561,951</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Working-in-progress</td>
							<td><a href="">1</a></td>
							<td class="right">80,575,454</td>
							<td class="right">80,575,454</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Finished goods</td>
							<td><a href="">1</a></td>
							<td class="right">205,523,139</td>
							<td class="right">205,523,139</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Operating Equipment</td>
							<td><a href="">1</a></td>
							<td class="right">142,635</td>
							<td class="right">142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Trade Receivables</td>
							<td><a href="">1</a></td>
							<td class="right">142,635</td>
							<td class="right">142,635</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Properties Sale Receivable</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Installment Payment Scheme</td>
							<<td><a href="">1</a></td>
							<td class="right">205,523,139</td>
							<td class="right">205,523,139</td>
						</tr>
						<tr>
							<td class="paddingLeft40">Mortgage Payment Scheme</td>
							<td><a href="">1</a></td>
							<td class="right">9,003,967</td>
							<td class="right">9,003,967</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">AR from Related Parties</td>
							<td><a href="">1</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Other receivables</td>
							<td><a href="">1</a></td>
							<td class="right">34,859</td>
							<td class="right">34,859</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Interest Receivable</td>
							<td><a href="">1</a></td>
							<td class="right">138,835</td>
							<td class="right">138,835</td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Prepayment & Deposit</td>
							<td><a href="">1</a></td>
							<td class="right">3,741,185</td>
							<td class="right">3,741,185</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 ">Cash and Cash Equivalent</td>
							<td><a href="">1</a></td>
							<td class="right">7,359,195</td>
							<td class="right">7,359,195</td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Current Assets</i></td>
							<td><a href="">1</a></td>
							<td class="right bold-border border-bottom">419,215,778</td>
							<td class="right bold-border border-bottom">419,215,778</td>
						</tr>
						<tr>
							<td class="bold">TOTAL ASSETS</td>
							<td></td>
							<td class="right bold under-bottom">571,928,244</td>
							<td class="right bold under-bottom">571,928,244</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">EQUITY & LIABILITIES</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Shareholders Equity</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Share Capital</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Retained Earning</td>
							<td></td>
							<td ></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Shareholders Equity</i></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Non-Current Liabilities</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest Bearing Loans and Borrowing</td>
							<td><a href="">10</a></td>
							<td class="right">36,445,536</td>
							<td class="right">36,445,536</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Long term Loan based on Customer Portfolio</td>
							<td><a href="">10</a></td>
							<td class="right">60,334,222</td>
							<td class="right">60,334,222</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Long term loan from Related Parties</td>
							<td><a href="">11</a></td>
							<td class="right">9,429,028</td>
							<td class="right">9,429,028</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Land Purchase Payable</td>
							<td><a href="">12</a></td>
							<td class="right">150,595,772</td>
							<td class="right">150,595,772</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Deposit for Sale of Properties inventory</td>
							<td><a href="">13</a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Installment Payment Scheme</td>
							<td><a href=""></a></td>
							<td class="right">95,979,147</td>
							<td class="right">95,979,147</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Mortgage Payment Scheme</td>
							<td><a href=""></a></td>
							<td class="right">76,736,253</td>
							<td class="right">76,736,253</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Other Deposit</td>
							<td><a href=""></a></td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Non-Current Liabilities</i></td>
							<td><a href=""></a></td>
							<td class="right bold">429,519,958</td>
							<td class="right bold">429,519,958</td>
						</tr>
						<tr>
							<td>Current Liabilities</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Trade Payable</td>
							<td><a href="">14</a></td>
							<td class="right">5,720,691</td>
							<td class="right">5,720,691</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Short term Bank Borrowing (OD)</td>
							<td><a href="">9</a></td>
							<td class="right">7,645,991</td>
							<td class="right">7,645,991</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Current Customer Deposit & Prepayment</td>
							<td><a href="">13</a></td>
							<td class="right">11,837,636</td>
							<td class="right">11,837,636</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Accrued Expenses (including bonus)</td>
							<td><a href="">15</a></td>
							<td class="right">280,607</td>
							<td class="right">280,607</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Salary Payable</td>
							<td><a href="">16</a></td>
							<td class="right">1,074,153</td>
							<td class="right">1,074,153</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest Payable</td>
							<td><a href=""></a></td>
							<td class="right">-</td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">General Provision</td>
							<td><a href=""></a></td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Current Tax Payable</td>
							<td><a href=""></a></td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20 bold"><i>Total Current Liabilities</i></td>
							<td><a href=""></a></td>
							<td class="right bold-border border-bottom">126,558,805</td>
							<td class="right bold-border border-bottom">126,558,805</td>
						</tr>
						<tr>
							<td class="bold">Total Liabilities</td>
							<td><a href=""></a></td>
							<td class="right bold border-bottom">556,078,762</td>
							<td class="right bold border-bottom">556,078,762</td>
						</tr>
						<tr>
							<td class="bold fontBig">Total Liabilities</td>
							<td><a href=""></a></td>
							<td class="right bold under-bottom">556,078,762</td>
							<td class="right bold under-bottom">556,078,762</td>
						</tr>
					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementCashFlow" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement of Cash Flow</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th>Note</th>
							<th class="right">12/31/2016</th>
						</tr>
						<tr>
							<td class="bold fontBig">OPERATING ACTIVITIES</td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td>Profit before tax</td>
							<td class="right"></td>
							<td class="right">46,471</td>
						</tr>
						<tr>
							<td class="bold">Adjustment to reconcile profit before tax to net cash flows</td>
							<td></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Depreciation of property, plant, and equipment</td>
							<td></td>
							<td class="right">36,049</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Amortization and impairment of intangible assets</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Allowance/ (Reversal of allowance)</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Gain from bargain purchase</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Gain on disposal of property, plant and equipment</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Gain on disposal of investment properties</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Finance Costs</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest income</td>
							<td></td>
							<td class="right">-</td>
						</tr>
						<tr>
							<td class="bold">Operating profit before working capital changes</td>
							<td></td>
							<td class="right bold-border border-bottom">82,520</td>
						</tr>
						<tr>
							<td class="bold">Changes in working capital</td>
							<td></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (Increase) in receivables</td>
							<td></td>
							<td class="center">(17,573)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (Increase) in prepayment and accrued income</td>
							<td></td>
							<td class="center">(7,095)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (increase) in development properties for sale</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Decrease/ (Increase) in inventory</td>
							<td></td>
							<td class="right">(16,176)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">(Decrease)/ Increase in trade, other payables and accruals</td>
							<td></td>
							<td class="center">186,183</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Movement in customer deposits</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="bold">Cash generated from/ (used in) operations</td>
							<td></td>
							<td class="right bold">145,338</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Income tax paid</td>
							<td></td>
							<td class="right bold">1,370</td>
						</tr>
						<tr>
							<td class="bold bold-border border-bottom">Net cash generated from/ (used in) operating activities</td>
							<td class="bold-border border-bottom"></td>
							<td class="right bold-border border-bottom">226,488</td>
						</tr>
						<tr>
							<td class="bold fontBig">INVESTING ACTIVITIES</td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Capital injection</td>
							<td></td>
							<td class="center">472,472</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Purchase of property, plant and equipment</td>
							<td></td>
							<td class="center">(217,210)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from disposal of investment property</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from disposal of property, plant, and equipment</td>
							<td></td>
							<td class="center">18,777</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Property_Land</td>
							<td></td>
							<td class="center">(55,000)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in Property_Building</td>
							<td></td>
							<td class="center">(2,000)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Investment in subsidiaries</td>
							<td></td>
							<td class="center">(203,000)</td>
						</tr>
						<tr>
							<td class="bold bold-border border-bottom">Net cash generated from/ (used in) operating activities</td>
							<td class="bold-border border-bottom"></td>
							<td class="right bold-border border-bottom">14,038</td>
						</tr>
						<tr>
							<td class="bold fontBig">FINANCING ACTIVITIES</td>
							<td class="right"></td>
							<td class="right"></td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from borrowing</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Repayment of borrowing</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Proceeds from issue of share capital</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Dividends paid to share holders</td>
							<td></td>
							<td class="center">(331,061)</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest received</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="paddingLeft20">Interest paid</td>
							<td></td>
							<td class="center">-</td>
						</tr>
						<tr>
							<td class="bold-border">Net cash generated from/ (used in)financing activities</td>
							<td class="right bold-border"></td>
							<td class="right bold-border">(331,061)</td>
						</tr>
						<tr>
							<td class="bold-border">Net increase in cash and cash equivalents</td>
							<td class="right bold-border"></td>
							<td class="right bold-border">(90,534)</td>
						</tr>
						<tr>
							<td class="bold">Cash and cash equivalents at the beginning of the period</td>
							<td class="right"></td>
							<td class="right">690,892</td>
						</tr>
						<tr>
							<td class="bold-border border-bottom">Cash and cash equivalents at 31 December 2016</td>
							<td class="right bold-border border-bottom"></td>
							<td class="right bold-border border-bottom">600,358</td>
						</tr>
						<tr>
							<td class=""></td>
							<td class="right"></td>
							<td class="right">600,358</td>
						</tr>

					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="statementChangesEquity" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background ">
			<div class="container-960">	
				<div id="example" class="k-content saleSummaryStatement">
					<span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<div class="block-title">
						<h3>Company is Name</h3>
						<h2>Statement Changes Equity</h2>
						<p>for the year ended 31 December 2016</p>
					</div>
			    
					<table width="100%">
						<tr>
							<th></th>
							<th class="center">Share Retained</th>
							<th class="center">Capital Earning</th>
							<th class="center">Total</th>
						</tr>
						<tr>
							<td></td>
							<td class="center bold">USD</td>
							<td class="center bold">USD</td>
							<td class="center bold">USD</td>
						</tr>
						<tr>
							<td>Balance as at 01 January 2015</td>
							<td class="right">1,000,000</td>
							<td class="right">84,202</td>
							<td class="right">1,084,202</td>
						</tr>
						<tr>
							<td>Capital injection</td>
							<td class="right">1,000,000</td>
							<td class="right">-</td>
							<td class="right">1,000,000</td>
						</tr>
						<tr>
							<td>Net profit during the year of 2015</td>
							<td class="right bigBorderbottom">-</td>
							<td class="right bigBorderbottom">80,481</td>
							<td class="right bigBorderbottom">80,481</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Balance as at 31 December 2015</td>
							<td class="right bold bigBordertop under-bottom">2,000,000</td>
							<td class="right bold bigBordertop under-bottom">164,683</td>
							<td class="right bold bigBordertop under-bottom">2,164,683</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Balance as at 01 January 2016</td>
							<td class="right">2,000,000</td>
							<td class="right">164,683</td>
							<td class="right">2,164,683</td>
						</tr>
						<tr>
							<td>Capital injection</td>
							<td class="right">-</td>
							<td class="right"></td>
							<td class="right">0</td>
						</tr>
						<tr>
							<td>Realized profit inter-company sale</td>
							<td class="right"></td>
							<td class="right">0</td>
							<td class="right"></td>
						</tr>
						<tr>
							<td>Net profit during the year of 2016</td>
							<td class="right bigBorderbottom">-</td>
							<td class="right bigBorderbottom">-327,700</td>
							<td class="right bigBorderbottom">-327,700</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td class="bold">Balance as at 31 December 2016</td>
							<td class="right bold bigBordertop under-bottom">2,000,000</td>
							<td class="right bold bigBordertop under-bottom">-163,017</td>
							<td class="right bold bigBordertop under-bottom">1,836,983</td>
						</tr>
					</table>
		        </div>		        
			</div>							
		</div>
	</div>
</script>
<script id="recurringJournalList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">				
						
				    <span class="glyphicons no-js remove_2 pull-right" 
							onclick="javascript: window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">	
					  	 <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Grouped By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->
								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->				
					</div>
					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Recurring Journal List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<br>			   
				   
					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 1%;">No.</th>
				                <th style="width: 30%">NAME</th>
				                <th class="center" style="width: 10%">TYPE</th>
				                <th class="center">START DATE</th>
				                <th class="center">FREQUENCY</th>
				                <th></th>			                			                
				            </tr> 
				        </thead>
				        <tbody></tbody>			        
				    </table>											

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="auditTrialReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Audit Trial Report</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>N Edit</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>N Delete</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>N Adjustment</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Account</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Date</th>
							<th>Type</th>
							<th>Last modified by</th>
							<th>Modified by</th>
							<th>Name</th>							
							<th>Description</th>
							<th>Account</th>
							<th>Dr</th>
							<th>Cr</th>
							<th>Status</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>

<script id="accountingSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>General Accounting Setting</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong">Financial Reporting Standards</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong">Chart of Accounts Condition</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Segments Setting</span></a>
	            </li>
	            <li><a href="#tab4-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Transaction Item </span></a>
	            </li>
	            <li><a href="#tab5-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Tax Setting </span></a>
	            </li>	                        
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- Tab Branch content -->
	            <div class="tab-pane active" id="tab1-1">
	            	<p>The selected Financial Reporting Standard</p>
	            	<div class="tab1-aacountsetting">
	            		<p>
	            			BanhJi does not guarantee the full compliance with above selected financial reporting 
	            			standards. We only provide the recommended format of the financial statements of selected standard.
	            		</p>
	            		<a href="" class="btn-change">Change</a>
	            	</div>
	            	<p class="noted">
	            		<b>Noted:</b>
	            		BanhJi does not guarantee the full compliance with above selected financial reporting 
	            		standards. We only provide the recommended format of the financial statements of selected standard. 
	            	</p>	            
	            </div>
	            <!-- // Tab Branch content END -->

	            <!-- Tab Contact Type content -->
	            <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-method-template"
				                data-template="customerSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // Tab Contact Type content END -->

	            <!-- Tab Block content -->
	            <div class="tab-pane" id="tab3-1">
            		<div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="term ..." data-bind="value: paymentTerm">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th>Term</th>
	            				<th>%</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-term-template"
				                data-template="customerSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Block content END -->

	        </div>
	    </div>

	</div>
</script>
<script id="accountingSetting-contact-type-template" type="text/x-kendo-tmpl">                  
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			#if(is_system=="0"){#
	   			<div class="edit-buttons">       
			        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
			   	</div>
		   	#}#
   		</td>
   	</tr>
</script>
<script id="accountingSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="accountingSetting-payment-method-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="accountingSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="accountingSetting-payment-term-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
    		 #:term#
   		</td>
   		<td>
    		 #:discount_percentage#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="accountingSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="term" required="required" validationMessage="required" />
                <span data-for="term" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="accountingList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="container-fluid">
			<div class="row-fluid">
				<div class="span12">
					<div id="example" class="k-content">
						<div class="hidden-print">
							<span class="pull-right glyphicons no-js remove_2" 
								onclick="javascript:window.history.back()"><i></i></span>

							<input data-role="dropdownlist"
							   data-option-label="(--- TYPE ---)"
			                   data-auto-bind="false"
			                   data-value-primitive="true"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: contact_type_id,
			                              source: contactTypeDS" />

							<button id="search" type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
							<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
						</div>

						<h3 align="center"><span data-bind="text: lang.lang.customer_list"></span></h3>
				
						<div id="grid"></div>					
					    					
					</div> <!-- //End div example--> 
				</div><!-- //End div span12-->
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>

<script id="segment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">

				<div class="hidden-print">
			    	<div class="pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"><i></i></span>						
					</div>

			        <h2>Segment</h2>
			        <div class="span6">
			        	<p>
				        	Segment is important for monitoring or in-depth analysis of your company performance. There are two default segments created. You can edit or add more segment and its items.
				        </p>
			        </div>
			         <div class="span6">
			         	<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i>&nbsp&nbspAdd New Segment</button>
						
			        </div>
			        				        				        				        	
			    </div>			   

			    <br>

			    <!-- Window -->
			    <div data-role="window"
		                 data-title="Segment"		                 
		                 data-width="280"
		                 data-height="165"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '37%'}"
		                 data-bind="visible: windowVisible">
			    	<table>							
						<tr style="border-bottom: 8px solid #fff;">
							<td width="40%">NAME</td>
							<td>
								<input class="k-textbox" placeholder="name..." data-bind="value: obj.name" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px solid #fff;">
							<td>CODE LENGTH</td>
							<td>
								<input class="k-textbox" placeholder="Code Length..." data-bind="value: obj.code_length" style="width: 100%;">
							</td>
						</tr>
						<tr>
							<td>STATUS</td>
							<td>
								<input data-role="dropdownlist"						                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.status,
					                              source: statusList"
					                   style="width: 100%;" />
							</td>
						</tr>							
					</table>

					<br>

					<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i>Save</span>
					<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i>Close</span>  
				</div>
						
                <div class="row-fluid">
	                <div class="span12 table-segment">	                					
		            	<table class="table table-condensed">
		            		<thead style="background-color: #1E4E78; color: #fff; font-weight: bold">
		            			<tr>
		            				<th>NAME</th>
		            				<th>CODE</th>
		            				<th>STATUS</th>		            					            				
		            				<th></th>
		            			</tr>
		            		</thead>
		            		<tbody data-role="listview"			            			
					                data-template="segment-template"
					                data-bind="source: dataSource"></tbody>
		            	</table>
	            	</div>

	            <!-- Item Window -->
	            <div data-role="window"
		                 data-title="Segment Item"		                 
		                 data-width="250"
		                 data-height="201"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '37%'}"		                 
		                 data-bind="visible: windowItemVisible">
            		<table>
						<tr style="border-bottom: 8px solid #fff;">
							<td width="35%">CODE</td>
							<td>
								<input class="k-textbox" placeholder="type code ..." data-bind="value: item.code" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px solid #fff;">
							<td>NAME</td>
							<td>
								<input class="k-textbox" placeholder="type name ..." data-bind="value: item.name" style="width: 100%;">
							</td>
						</tr>
						<tr style="border-bottom: 8px solid #fff;">
							<td>STATUS</td>
							<td>
								<input data-role="dropdownlist"						                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: item.status,
						                              source: statusList"
						                   style="width: 100%;" />
							</td>
						</tr>
						<tr>
							<td>SEGMENT</td>
							<td>
								<input data-role="dropdownlist"
					                   data-option-label="Select Segment..."
					                   data-value-primitive="true"					                   
					                   data-text-field="name"
					                   data-header-template="segment-header-tmpl"
					                   data-value-field="id"
					                   data-bind="value: item.segment_id,
					                              source: dataSource"
					                   style="width: 100%" />
							</td>
						</tr>
						
					</table>

					<br>

					<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: saveItem"><i></i>Save</span>
					<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindowItem"><i></i>Close</span>  
				</div>

				<h3 data-bind="text: objName"></h3>

				<div class="row-fluid">
	            	<div class="span8">		                	
					    <table class="table table-bordered table-white">
		            		<thead>
		            			<tr>
		            				<th>CODE</th>
		            				<th>NAME</th>
		            				<th>SEGMENT</th>
		            				<th>STATUS</th>		            					            				
		            				<th></th>
		            			</tr>
		            		</thead>
		            		<tbody data-role="listview"			            				
					                data-template="segment-item-template"
					                data-auto-bind="false"
					                data-bind="source: itemDS"></tbody>
		            	</table>
	            	</div>
            	</div>
			</div>							
			</div>
		</div>
	</div>
</script>
<script id="segment-template" type="text/x-kendo-tmpl">                    
    <tr>    	
    	<td>#=name#</td>
    	<td>#=code_length#</td>
    	<td>#=status#</td>    	
    	<td>
    		<span data-bind="click: edit"><i class="icon-edit"></i> Edit</span>
    		|
    		<span data-bind="click: delete"><i class="icon-remove"></i> Delete</span>
    		|
    		<span data-bind="click: view"><i class="icon-view"></i> View Item</span>
    		|
    		<span data-bind="click: addItem"><i class="icon-plus icon-white"></i> Add Item</span>
    	</td>
   	</tr>
</script>
<script id="segment-item-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>#=code#</td>
    	<td>#=name#</td>
    	<td>#=segment[0].name#</td>
    	<td>#=status#</td>     	 		
   		<td>
    		<span data-bind="click: editItem"><i class="icon-edit"></i> Edit</span>
    		|
    		<span data-bind="click: deleteItem"><i class="icon-remove"></i> Delete</span>
    	</td>
   	</tr>
</script>



<!-- ***************************
*	Employee Section            *
**************************** -->
<script id="employeeDashboard" type="text/x-kendo-template">

	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
					
			        <td valign="top">
			        	<h2>EMPLOYEE</h2>
			        	<p>
			        		In here, you can manage your employee information, and other related transactions.
			        	</p>
			        	<div class="supplier-icon">
					       	<div class="span4">
						       	<a href="#/employee" class="center">
						       		<img title="Add Employee" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/employees.ico" />
						       	</a>
						       </div>
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div>

			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center">
				<tr>
					<td class="center">
						<a href="#/cash_advance">
							<img title="Add Cash Advance" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_advance.png" width="110" height="200" />
							Advance
						</a>						
					</td>
					<td class="center">
						<a href="#/expense">
							<img title="Add Expense" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/expense.png" width="110" height="200" />
							Expense
						</a>
					</td>
					<td class="center">
						<a href="#/cash_transaction">				
							<img title="Add Cash Transaction" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_transaction.png" width="110" height="200" />						
							Cash Tnx.
						</a>					
					</td>					
				</tr>							
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span>Expense</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary">
							
							<div align="center" class="text-large strong" data-bind="text: sale"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%">										
										<span data-bind="text: sale_customer"></span>
										<br>
										<span>Employee</span>
									</td>
									<td width="33%">
										<span data-bind="text: sale_product"></span>
										<br>
										<span>Product</span>
									</td>
									<td width="33%">
										<span data-bind="text: sale_order"></span>
										<br>
										<span>Order</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span>Order</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info">
							
							<div align="center" class="text-large strong" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td width="50%">										
										<span data-bind="text: order_avg"></span>
										<br>
										<span>Average</span>
									</td>
									<td width="50%">
										<span data-bind="text: order_open"></span>
										<br>
										<span>Open</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span>Receivable</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%">										
										<span data-bind="text: ar_open"></span>
										<br>
										<span>Open</span>
									</td>
									<td width="33%">
										<span data-bind="text: ar_customer"></span>
										<br>
										<span>Customer</span>
									</td>
									<td width="33%">
										<span data-bind="text: ar_overdue"></span>
										<br>
										<span>Overdue</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">
					<h4>Top 5 Employees</h4>					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 1%;" class="center">#</th>
				                <th>Name</th>			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="customerDashBoard-top-customer-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>			
				</div>						
			</div>

			<!-- Graph -->
			<div>
				<div id="graph" style="height: 100%;"></div>
			</div>

		</div>		

	</div>
</script>
<script id="employeeDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td>#:banhji.customerDashboard.topCustomerDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="employeeDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.customerDashboard.topARDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="employeeDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.customerDashboard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="employeeCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Employee ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
																
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: contactDS"
						 data-auto-bind="false" 
						 data-row-template="employeeCenter-customer-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							        	<li style="font-size: large; color: black; font-weight: bold;">
							            	<span data-bind="text: obj.number"></span>
							            	
							            	<span data-bind="text: obj.fullname"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-7"><i></i></span>
							            </li>							           
							            <li class="glyphicons riflescope"><span data-toggle="tab" data-target="#tab2-7"><i></i></span>
							            </li>							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab3-7"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab4-7"><i></i></span>
							            </li>
							            <li class="glyphicons edit"><span data-bind="click: goEditContact"><i></i></span>
							            </li>							            							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-7" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashadvance">Cash Advance</span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goExpense">Expense</span>								            			
								            		</td>								            	
							            	</table>
							            </div>
							            <!-- // Transactions Tab content END -->

							            <!-- SEARCH Tab content -->
							            <div id="tab2-7" class="tab-pane box-generic">
							                <input data-role="dropdownlist"
							                	   data-auto-bind="false"
						            			   data-option-label="Select Customer Type..."					            			   		                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: contact_type_id,
								                              source: contactTypeDS"
								                   style="width: 100%"/>

							                <input data-role="dropdownlist"
						            			   data-option-label="Select Currency..."
						            			   data-template="currency-list-tmpl"					            			   		                   
								                   data-value-primitive="true"
								                   data-text-field="code"
								                   data-value-field="id"
								                   data-bind="value: currency_id,
								                              source: currencyDS"
								                   style="width: 100%"/>

								            <br><br>
								            <span class="btn btn-primary btn-icon glyphicons search pull-right" data-bind="click: search"><i></i> <span data-bind="text: lang.lang.search"></span></span>
								            <br>
							            </div>
							            <!-- // SEARCH Tab content END -->							            

							            <!-- INFO Tab content -->
							            <div id="tab3-7" class="tab-pane box-generic">
							            	<div class="row-fluid">
								            	<div class="span6">
										
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons user"><i></i> <span data-bind="text: obj.wnumber"></span> <span data-bind="text: obj.fullname"></span></h4>
														</div>
														<div class="widget-body">
															<ul class="unstyled icons margin-none">
																<li class="glyphicons group"><i></i> <span data-bind="text: obj.contact_type"></span></li>
																<li class="glyphicons phone"><i></i> <span data-bind="text: obj.phone"></span></li>
																<li class="glyphicons envelope"><i></i> <span data-bind="text: obj.email"></li>
																<li class="glyphicons calendar"><i></i> <span data-bind="text: obj.registered_date"></li>
															</ul>
														</div>
													</div>
													<!-- // Bio END -->
													
												</div>
												<div class="span6">
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons edit" data-bind="click: goEditContact"><i></i> <span data-bind="text: lang.lang.edit"></span></h4>
														</div>
														<div class="widget-body">
															<p><i class="icon-home"></i> <span data-bind="text: obj.address"></span></p>
														</div>
													</div>
													<!-- // Bio END -->
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab4-7" class="tab-pane box-generic">

										    <div class="chat-controls">															
												<form class="margin-none">
													<div class="row-fluid">
														<div class="span10">
															<input type="text" name="message" class="input-block-level margin-none" data-bind="value: note" placeholder="កំណត់Memo ...">
														</div>
														<div class="span2">
															<span class="btn btn-block btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.save"></span></span>
														</div>
													</div>
												</form>															
											</div>

											<br>

									    	<div data-role="grid"
									    	 	 data-height="100"
					 							 data-scrollable="{virtual: true}"									                 
								                 data-row-template="customerCenter-note-tmpl"
								                 data-bind="source: noteDS"
								                 data-columns="[{title: ''}]"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt">Total Advance<span data-bind="text: balance" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadDeposit">
										<span class="glyphicons briefcase"><i></i></span>
										<span class="txt">Business Adva<span data-bind="text: deposit" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons circle_exclamation_mark"><i></i></span>
										<span class="txt"><span data-bind="text: outInvoice"></span> Open</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadOverInvoice">
										<span class="glyphicons turtle"><i></i></span>
										<span class="txt"><span data-bind="text: overInvoice"></span> Over Due</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input id="sorter" name="sorter"
				    	   data-role="dropdownlist"                   
				           data-value-primitive="true"
				           data-text-field="text"
				           data-value-field="value"
				           data-bind="value: sorter,
				                      source: sortList" />
				                                   
				        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
				        
				       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />

			            <button id="search" type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Amount</th>
								<th>Status</th>
								<th>Action</th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="customerCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="employeeCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Invoice" || type=="Cash_Sale" || type=="Quote" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return"){#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>						
			#}else{#
				#=number#
			#}#        	
        </td>
    	<td class="right">
    		#if(type=="GDN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else{#
    			#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<td>        	
        	#if(type==="Invoice"){#
        		#if(status==="0" || status==="2") {#
        			# var date = new Date(), dueDate = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else {#
					Paid
				#}#
        	#}else if(type==="Sale_Order" || type==="GDN"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#
        	#}else if(type==="Quote"){#        		
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Approved        			
        		#}#
        	#}#			
		</td>    	
    	<td align="center">
			#if(type==="Invoice"){#
				<a href="\#/invoice/#=id#"><i></i> Send</a>

				#if(status==="0" || status==="2"){#					
					| <a href="\#/cashier/#=id#"><i></i> Pay</a>
				#}#        	
			#}else if(type==="Sale_Order"){#
        		#if(status==="0"){#
        			
        		#}#
        	#}else if(type==="Quote"){#
        		<a href="\#/quote/#=id#"><i></i> Send</a>        		
        		#if(status==="0"){#
        			
        		#}#
        	#}else if(type==="GDN"){#        		
        		#if(status==="0"){#
        			
        		#}#
        	#}#
		</td>     	
    </tr>
</script>
<script id="employeeCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				<span class="strong">
					#=number# #=fullname#				
				</span>
			</div>
		</td>
	</tr>
</script>
<script id="employeeCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>

<script id="employee" type="text/x-kendo-template">
	<div class="container-960">	
		<div class="row-fluid">		    
			<div class="span12">			
				<div id="example" class="k-content">

					<!-- Collapsible Widget -->			
					<div class="widget">
					    <div class="widget-head">
					    	<span class="btn btn-primary pull-right" 
									onclick="javascript:window.history.back()">X</span>
					        
					        <h4 class="heading glyphicons circle_info"><i></i> Employee</h4>							        	
					    </div>
					    <div class="widget-body">

					    	<div class="row-fluid">
					    		<div class="span6 well">

									<div class="row-fluid">

										<div class="span6">														
											<!-- Group -->
											<div class="control-group">										
												<label for="ddlContactType">Employee Type<span style="color:red">*</span></label>
												<input id="ddlContactType" name="ddlContactType"
													   data-role="dropdownlist"
													   data-option-label="(--- Select ---)"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.contact_type_id,
									                   			  disabled: obj.is_pattern, 
									                              source: contactTypeDS,
									                              events:{change: contactTypeChanges}"
									                   required data-required-msg="required"
									                   style="width: 100%;" />									            
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">							
												<label for="number"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>
						              			<input id="number" name="number" class="k-textbox"
							              				data-bind="value: obj.number, disabled: obj.is_pattern" 
							              				placeholder="e.g. ID0001" required data-required-msg="required"
							              				style="width: 100%;" />
							              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
											</div>
											<!-- // Group END -->											
										</div>
									</div>
									
									<div class="row-fluid">
										<div class="span6">						
											<!-- Group -->
											<div class="control-group">
												<label for="surname"><span data-bind="text: lang.lang.surname"></span> <span style="color:red">*</span></label>
							              		<input id="surname" name="surname" class="k-textbox" data-bind="value: obj.surname, disabled: obj.is_pattern" 
									              		placeholder="surname ..." required data-required-msg="required"
									              		style="width: 100%;" />
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">								
												<label for="name"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
									            <input id="name" name="name" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
									              		placeholder="name ..." required data-required-msg="required"
									              		style="width: 100%;" />
											</div>																		
											<!-- // Group END -->
										</div>
									</div>
								</div>

								<div class="span6">
									<div class="row-fluid">	
										<!-- Map -->
										<div id="map" class="span12" style="height: 130px;"></div>
									</div>

									<div class="separator line bottom"></div>

								
								</div>
							</div>								
									
							<!-- // Inner Tabs -->
							<div class="row-fluid">								
								<div class="box-generic">
								    <!-- //Tabs Heading -->
								    <div class="tabsbar tabsbar-1">
								        <ul class="row-fluid row-merge">						            
								            <li class="span2 glyphicons usd active">
								            	<a href="#tab1" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.account"></span></a>
								            </li>								           							            
								            <li class="span2 glyphicons nameplate_alt">
								            	<a href="#tab2" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.info"></span></a>
								            </li>
								            <li class="span2 glyphicons paperclip">
								            	<a href="#tab3" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.info"></span></a>
								            </li>
								            									           						            					            
								        </ul>
								    </div>
								    <!-- // Tabs Heading END -->

								    <div class="tab-content">
								        <!-- //ACCOUNTING INFO -->
								        <div class="tab-pane active" id="tab1">
								        	
								        	<div class="row-fluid">

								            	<div class="span3">													
													<!-- Group -->
													<div class="control-group">										
														<label for="ddlAD">Advance Account<span style="color:red">*</span></label>
														<input id="ddlAD" name="ddlAD"
															   data-role="dropdownlist"
															   data-header-template="account-header-tmpl"
															   data-option-label="(--- Select ---)"											                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.account_id,
											                              source: adDS"
											                   required data-required-msg="required"											                              
											                   style="width: 100%;" />									            
													</div>
													<!-- // Group END -->													
												</div>												
												<div class="span3">
													<!-- Group -->
													<div class="control-group">
														<label for="ddlSA">Salary Account<span style="color:red">*</span></label>
														<input id="ddlSA" name="ddlSA"
															   data-role="dropdownlist"
															   data-option-label="(--- Select ---)"											                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-header-template="account-header-tmpl"
											                   data-value-field="id"
											                   data-bind="value: obj.salary_account_id,
											                              source: saDS"
											                   required data-required-msg="required"											                              
											                   style="width: 100%;" />
												    </div>
													<!-- // Group END -->	
												</div>
												<div class="span3">
													<!-- Group -->
													<div class="control-group">
														<label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
											            <input id="currency" name="currency" 
											            	data-role="dropdownlist"
											            	data-value-primitive="true"
											                data-text-field="code"
											                data-value-field="id"
															data-bind="value: obj.currency_id, source: currencyDS"
															data-option-label="(--- Select ---)" 
															required data-required-msg="required" style="width: 100%;" />
													</div>													
												</div>																																				
									        </div>	
									        <div class="separator line bottom"></div>
							        	</div>
								        <!-- //ACCOUNTING INFO END -->								        

								        <!-- //GENERAL INFO -->
								        <div class="tab-pane" id="tab2">
							            	<table class="table table-borderless table-condensed cart_total">						            	
							            		<tr>
									                <td><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></td>
									              	<td>
									              		<input id="customerStatus" name="customerStatus" 
									              				data-role="dropdownlist"
											            		data-text-field="name"
								           						data-value-field="id"
								           						data-value-primitive="true" 
											            		data-bind="source: statusList, value: obj.status"
											            		data-option-label="(--- Select ---)"
											            		required data-required-msg="ត្រូវការ ស្ថានភាព" />
									              	</td>							              	
									            	<td><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></td>
									              	<td>
									              		<input id="registered_date" name="registered_date" 
										            		data-role="datepicker"			            		
							            					data-bind="value: obj.registered_date" 
							            					data-format="dd-MM-yyyy"
							            					data-parse-formats="yyyy-MM-dd" 
							            					placeholder="dd-MM-yyyy" required data-required-msg="required" />
									              	</td>
									            </tr>									            
									            <tr>
									                <td><span data-bind="text: lang.lang.email"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" /></td>							              	
									            	<td><span data-bind="text: lang.lang.phone"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" /></td>
									            </tr>									           							            
									            <tr>
									            	<td><span data-bind="text: lang.lang.address"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." />							              	
									            	<td><span data-bind="text: lang.lang.memo"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." /></td>
									            </tr>
									            <tr>
									            	<td><label for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> <i class="icon-share"></i></label></td>
									              	<td><input class="k-textbox" data-bind="value: obj.bill_to" placeholder="bill to ..." />							              	
									            	<td><span data-bind="text: lang.lang.ship_to"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.ship_to" placeholder="ship to ..." /></td>									              	
									            </tr>							            							            								            								            			            
									        </table>
							        	</div>
								        <!-- //GENERAL INFO END -->	
								        <div class="tab-pane" id="tab3">	
								        	<input name="files"
							                   type="file"
							                   data-role="upload"
							                   data-async="{ saveUrl: 'save', removeUrl: 'remove', autoUpload: false }">								     
								        </div>						        
								    </div>
								</div>
							</div>

							<br>											
							
							<!-- Form actions -->
							<div align="center">
								<span id="notification"></span>

								<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i><span data-bind="text: lang.lang.save"></span></span>
								<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i><span data-bind="text: lang.lang.delete"></span></span>
								<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
							</div>
							<!-- // Form actions END -->

						</div> <!-- End Widget-Body List -->
					</div>
					<!-- // Collapsible Widget END -->				          					                
			    											
				</div> <!-- // End div example-->  
			</div> <!-- // End div span12-->
		</div> <!-- // End div row-fluid-->	
	</div> 	 
</script>
<script id="employee-contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="employeeReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>EMPLOYEE REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports on employee related transactions.   
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Inventory Position Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/">Inventory Sale by Item Analysis</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase 
									order and sale order. In addition, it also includes average cost and price.
								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory 
									with analysis of average gross profit margin.
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/">Inventory Position Detail</a></h3>
							</td>
							<td >
								<h3><a href="#/">Inventory Turnover List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for 
									each inventory within a period of time.
								</p>
							</td>
							<td >
								<p>
									Provides analysis of inventory turnover days by each inventory.
								</p>
							</td>
						</tr>
					</table>					
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Inventory List</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/">Recurring Inventory Template List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Lists the products you purchase and sold. The following 
									information is included: name, description, cost, sales price, and quantity on hand.s						

								</p>
								
							</td>
							<td >
							</td>							
						</tr>
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Inventory Balance</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>6</span>
								<br>
								<span>Inventory items </span>
							</td>
							<td>
								<span>1</span>
								<br>
								<span>Categories</span>
							</td>
							<td>
								<span>10%</span>
								<br>
								<span>Average Margin</span>
							</td>
							<td>
								<span>20 days</span>
								<br>
								<span>Turnover Days</span>
							</td>
						</tr>
					</table>
				</div>
				<div id="sale-report-chart">Chart</div>
			</div>
		</div>
	</div>
</script>

<script id="cashAdvance" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<div class="hidden-print pull-right">
		    		<span class="glyphicons no-js remove_2" 
						data-bind="click: cancel"><i></i></span>						
				</div>

		        <h2>CASH ADVANCE</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 150px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr data-bind="visible: isEdit">				
									<td>No.</td>
									<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
								</tr>
								<tr>
									<td>Date</td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd" 
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>								
								<tr>
									<td>Currency</td>
									<td>
										<input id="cbbCurrency" name="cbbCurrency"
													   data-role="combobox"				                
									                   data-value-primitive="true"
									                   data-template="currency-list-tmpl"				   
									                   data-text-field="code"
									                   data-value-field="locale"
									                   data-bind="value: obj.locale, 
									                   			source: currencyDS, 
									                   			events: {change : setRate}"
									                   placeholder="Add currency..." 
									                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>
								<tr>
									<td>Employee</td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"
											   data-auto-bind="false"
											   data-header-template="employee-header-tmpl"                  
							                   data-value-primitive="true"
							                   data-template="cashAdvance-contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																							
							</table>
						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 150px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						            <li class="span1 glyphicons pencil active"><a href="#tab1-3" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab2-3" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons history"><a href="#tab3-3" data-toggle="tab"><i></i></a>
						            </li>								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						        <!-- Memo Tab content -->
						        <div class="tab-pane active" id="tab1-3">
						        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
						        		data-bind="value: obj.memo2" style="width:100%;" 
						        		placeholder="Please enter transaction purpose here ..."></textarea>
						        </div>
						        <!-- // Memo Tab content END -->

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab2-3">	

						        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
						            
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th>File Name</th>
								                <th>Description</th>
								                <th>Date</th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab3-3">							            	
						            
						            <div class="span5">

							        	<input data-role="combobox"
						                   data-placeholder="Select existing recuring ..."
						                   data-value-primitive="true"
						                   data-auto-bind="false"
						                   data-text-field="recurring_name"
						                   data-value-field="id"
						                   data-bind="value: obj.recurring_id,
						                              source: recurringDS,
						                              events:{ change:applyRecurring }"
						                   style="width: 100%" />

						                <br><br>

						                <div align="right">
							                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
							            </div>

						            </div>

						            <div class="span7">

							            <table style="width: 100%">
							            	<tr align="right">
							            		<td>
							            			Name
							            		</td>
							            		<td>
							            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 40%;" />
							            			Start
									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%;" />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td>
								            		Every
								            	</td>
							            		<td>
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td>
								            		On
								            	</td>							            	
								            	<td>

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							        </div>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->								        

						    </div>
						</div>

				    </div>
				</div>

				<div class="box-generic">
					<div class="row-fluid">
						<div class="span3">
							<!-- Group -->
							<div class="control-group">										
								<label for="txtExpectedDate">Expected Date</label>
								<input id="txtExpectedDate" name="txtExpectedDate" 
										data-role="datepicker"
										data-format="dd-MM-yyyy"
										data-parse-formats="yyyy-MM-dd" 
										data-bind="value: obj.due_date" 
										required data-required-msg="required"
										style="width:100%;" />									            
							</div>
							<!-- // Group END -->
						</div>

						<div class="span3">
							<!-- Group -->
							<div class="control-group">										
								<label for="ddlPaymentMethod">Method</label>
								<input id="ddlPaymentMethod" name="ddlPaymentMethod"
									   data-role="dropdownlist"								                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-header-template="cash-payment-method-header-tmpl"
					                   data-value-field="id"
					                   data-bind="value: obj.payment_method_id,
					                              source: paymentMethodDS"							                   
					                   data-option-label="(--- Select ---)"
					                   required data-required-msg="required" 
					                   style="width: 100%;" />									            
							</div>
							<!-- // Group END -->
						</div>

						<div class="span3">
							<!-- Group -->
							<div class="control-group">										
								<label for="cbbAccount">Cash Account</label>
								<input id="cbbAccount" name="cbbAccount"
									   data-role="combobox"                   
					                   data-value-primitive="true"
					                   data-header-template="account-header-tmpl"                  
					                   data-template="account-list-tmpl"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.account_id,
					                              source: cashAccountDS"
					                   data-placeholder="Select Account.."					                                      
					                   required data-required-msg="required" style="width: 100%" />									            
							</div>
							<!-- // Group END -->
						</div>

						<div class="span3">
							<!-- Group -->
							<div class="control-group">										
								<label for="cbbAccount">Segment</label>
								<select data-role="multiselect"
									   data-value-primitive="true"
									   data-header-template="segment-header-tmpl"							   
									   data-item-template="cashAdvance-segment-tmpl"				    
									   data-value-field="id" 
									   data-text-field="code"
									   data-bind="value: obj.segments, 
									   			source: segmentItemDS,
									   			events:{ change: transactionSegmentChanges }"
									   data-placeholder="Add Segment.."				   
									   style="width: 100%" /></select>									            
							</div>
							<!-- // Group END -->
						</div>
					</div>
				</div>				
				
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 1%;">No.</th>			                
			                <th style="width: 20%;">ACCOUNT</th>
			                <th>DESCRIPTION</th>
			                <th data-bind="visible: showRef" style="width: 7%;">REF</th>			                
			                <th data-bind="visible: showSegment" style="width: 15%;">SEGMENT</th>
			                <th style="width: 15%;">AMOUNT</th>			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="cashAdvance-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span6 hidden-print">
						
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" data-bind="checked: showRef" /> REF
								</li>
								<li>
									<input type="checkbox" data-bind="checked: showSegment" /> SEGMENT
								</li>								
							</ul>
						</div>

												
						
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span6">
						<table class="table table-borderless table-condensed cart_total">
							<tbody>								
								<tr>
									<td class="right">Total:</td>
									<td class="right strong"><span data-bind="text: total"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic" align="right" style="background-color: #0B0B3B;">
					<span id="notification"></span>

					<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
					<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>										
					<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>
					<span class="btn btn-icon btn-warning glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashAdvance-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.cashAdvance.lineDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"                   
                   data-value-primitive="true"
                   data-header-template="account-header-tmpl"                  
                   data-template="cashAdvance-account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: advAccountDS"
                   data-placeholder="Add Account.."
                   data-list-width="400"                    
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>			
		<td data-bind="visible: showSegment">
			<select data-role="multiselect"
				   data-value-primitive="true"				   
				   data-item-template="cashAdvance-segment-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox" 
					data-format="n0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>			
    </tr>   
</script>
<script id="cashAdvance-account-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# #=name#
	</span>
</script>
<script id="cashAdvance-contact-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# #=surname# #=name#
	</span>
</script>
<script id="cashAdvance-segment-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=name# (#=segment[0].name#)
	</span>
</script>

<script id="expense" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<div class="hidden-print pull-right">
		    		<span class="glyphicons no-js remove_2" 
						data-bind="click: cancel"><i></i></span>						
				</div>

		        <h2>EXPENSE</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 190px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr data-bind="visible: isEdit">				
									<td>No.</td>
									<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
								</tr>
								<tr>
									<td>Date</td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd" 
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>								
								<tr>
									<td>Employee</td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"
											   data-auto-bind="false"                   
							                   data-value-primitive="true"
							                   data-header-template="employee-header-tmpl"
							                   data-template="contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																							
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: {
								        backgroundColor: bgColor}">
								<div align="left">AMOUNT PAID</div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>
						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 190px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						            <li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons circle_info"><a href="#tab2-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i></a>
						            </li>								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						        <!-- Option Tab content -->
						        <div class="tab-pane active" id="tab1-4">
						        	<table class="table table-borderless table-condensed cart_total">
						        		<tr>
							        		<td colspan="2">
							        			<table>
						            				<tr>
						            					<td>
									            			<input type="radio" value="Direct_Expense" class="k-radio"
									            					name="payOption" id="payOption1"
									            					data-bind="checked: obj.type, 
									            								events:{ change: typeChanges }"> 
									            			<label class="k-radio-label" for="payOption1">DIRECT PAYMENT</label>
									            		</td>
									            		<td>
												            <input type="radio" value="Reimbursement" class="k-radio"
												            		name="payOption" id="payOption2"
												            		data-bind="checked: obj.type, 
												            					events:{ change: typeChanges }"> 
												            <label class="k-radio-label" for="payOption2">REIMBURSEMENT</label>
										            	</td>
										            	<td>
												            <input type="radio" value="Advance_Settlement" class="k-radio"
												            		name="payOption" id="payOption3"
												            		data-bind="checked: obj.type, 
												            					events:{ change: typeChanges }"> 
												            <label class="k-radio-label" for="payOption3">ADVANCE SETTLEMENT</label>
										            	</td>
										            </tr>
									            </table>
							        		</td>
						        		</tr>
							        	<tr>
							        		<td>Cash Account</td>
							        		<td>
							        			<input id="cbbAccount" name="cbbAccount"
													   data-role="combobox"                   
									                   data-value-primitive="true"
									                   data-header-template="account-header-tmpl"                 
									                   data-template="account-list-tmpl"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                              source: cashAccountDS"
									                   data-placeholder="Select Account.."					                                      
									                   required data-required-msg="required" style="width: 100%" />
							        		</td>
							        	</tr>
							        	<tr data-bind="visible: showCashAdvance">
							        		<td>Cash Advance</td>
							        		<td>
							        			<input data-role="combobox"                   
									                   data-value-primitive="true"
									                   data-auto-bind="false"                   
									                   data-template="reference-list-tmpl"
									                   data-text-field="number"
									                   data-value-field="id"
									                   data-bind="value: obj.reference_id,
									                              source: referenceDS,
									                              events: { change: referenceChanges }"
									                   data-placeholder="Select Cash Advance.." style="width: 100%" />	
							        		</td>
							        	</tr>
						        	</table>
						        </div>
						        <!-- // Option Tab content END -->

						        <!-- Info Tab content -->
						        <div class="tab-pane" id="tab2-4">
						        	<table class="table table-borderless table-condensed cart_total">						        		
						        		<tr>
											<td>Currency</td>
											<td>
												<input id="cbbCurrency" name="cbbCurrency"
													   data-role="combobox"											                    
									                   data-value-primitive="true"
									                   data-template="currency-list-tmpl"
									                   data-text-field="code"
									                   data-value-field="id"
									                   data-bind="value: obj.locale,
									                              source: currencyDS,
									                              events:{ change: setRate }"
									                   data-placeholder="Type Name.."                    
									                   required data-required-msg="required" style="width: 100%" />
											</td>
										</tr>
							        	<tr>
											<td>Segments</td>
											<td>
												<select data-role="multiselect"
													   data-value-primitive="true"
													   data-header-template="segment-header-tmpl"							   
													   data-item-template="segment-list-tmpl"				    
													   data-value-field="id" 
													   data-text-field="code"
													   data-bind="value: obj.segments, 
													   			source: segmentItemDS,
													   			events:{ change: transactionSegmentChanges }"
													   data-placeholder="Add Segment.."				   
													   style="width: 100%" /></select>
											</td>
										</tr>							        	
						        	</table>
						        </div>
						        <!-- // Info Tab content END -->

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab3-4">

						        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>					            	
						            
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th>File Name</th>
								                <th>Description</th>
								                <th>Date</th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab4-4">							            	
						            
						            <div class="span5">

							        	<input data-role="combobox"
						                   data-placeholder="Select existing recuring ..."
						                   data-value-primitive="true"
						                   data-auto-bind="false"
						                   data-text-field="recurring_name"
						                   data-value-field="id"
						                   data-bind="value: obj.recurring_id,
						                              source: recurringDS,
						                              events:{ change:applyRecurring }"
						                   style="width: 100%" />

						                <br><br>

						                <div align="right">
							                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
							            </div>

						            </div>

						            <div class="span7">

							            <table style="width: 100%">
							            	<tr align="right">
							            		<td>
							            			Name
							            		</td>
							            		<td>
							            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 40%;" />
							            			Start
									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%;" />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td>
								            		Every
								            	</td>
							            		<td>
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td>
								            		On
								            	</td>							            	
								            	<td>

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							        </div>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->								        

						    </div>
						</div>

				    </div>
				</div>							
				
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 1%;">No.</th>			                
			                <th style="width: 20%;">ACCOUNT</th>
			                <th>DESCRIPTION</th>
			                <th style="width: 15%;">SUPPLIER</th>
			                <th style="width: 8%;">INVOICE#</th>
			                <th style="width: 13%;">DATE</th>			                			                
			                <th data-bind="visible: showSegment" style="width: 10%;">SEGMENT</th>			                
			                <th style="width: 15%;">AMOUNT</th>
			                <th style="width: 11%;">TAX</th>			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="expense-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span4 hidden-print">
						
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" id="chbSegment" class="k-checkbox" data-bind="checked: showSegment" />												
									<label class="k-checkbox-label" for="chbSegment">SEGMENT</label>
								</li>								
							</ul>
						</div>

						<br><br>
						<div class="well">
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
							<br>						
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
						</div>
					</div>
					<!-- Column END -->

					<div class="span4">
						<table class="table table-condensed table-striped table-white" data-bind="visible: showCashAdvance">
							<tbody>								
								<tr>
									<td class="right">Total Cash Advanced:</td>
									<td class="right strong"><span data-bind="text: credit"></span></td>
								</tr>
								<tr>
									<td class="right">Amount Due:</td>
									<td class="right strong"><span data-bind="text: remain"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					
					<!-- Column -->
					<div class="span4">
						<table class="table table-condensed table-striped table-white">
							<tbody>
								<tr>
									<td class="right">Sub Total:</td>
									<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
								</tr>								
								<tr>
									<td class="right">Total Tax:</td>
									<td class="right strong"><span data-bind="text: tax"></span></td>
								</tr>																
								<tr>
									<td class="right"><h4>Total:</h4></td>
									<td class="right strong"><h4 data-bind="text: total"></h4></td>
								</tr>																
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic" align="right" style="background-color: #0B0B3B;">
					<span id="notification"></span>

					<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
					<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>										
					<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>
					<span class="btn btn-icon btn-warning glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="expense-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.expense.lineDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="cbbAccounts" name="cbbAccounts-#:uid#"
				   data-role="combobox"                   
                   data-value-primitive="true" 
                   data-header-template="account-header-tmpl"                 
                   data-template="account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: expenseAccountDS"
                   data-placeholder="Add Account.."                                     
                   required data-required-msg="required" style="width: 100%" />	
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input data-role="combobox" id="ddlVendor"                  
                   data-value-primitive="true" 
                   data-header-template="vendor-header-tmpl"                  
                   data-template="contact-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: supplierDS"
                   data-placeholder="Add Supplier.." style="width: 100%" />	
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>
		<td>
			<input id="issuedDate" name="issuedDate" 
					data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: reference_date" 
					required data-required-msg="required"
					style="width:100%;" />
		</td>							
		<td data-bind="visible: showSegment">
			<select data-role="multiselect"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>
		<td>
			<input data-role="combobox"   id="ccbTaxItem"                			   
                   data-text-field="name"                   
                   data-value-field="id"
                   data-header-template="tax-header-tmpl"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>			
    </tr>   
</script>





<!-- ***************************
*	Vendor Section            *
**************************** -->
<script id="vendorDashboard" type="text/x-kendo-template">
	<div class="row-fluid">
		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2>SUPPLIER</h2>
			        	<p>
			        		In here, you can manage your supplier information, and other related transactions.
			        	</p>
			        	<div class="supplier-icon">
					       	<div class="span4">
						       	<a href="#/vendor" class="center">
						       		<img title="Add Suppliers" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/suppliers.ico" />
						       	</a>
						       </div>
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div>
			        </td>
			 	</tr>
			</table>

			<table class="table table-borderless table-condensed table-vertical-center">
				<tr>
					<td class="center">
						<a href="#/purchase_order">
							<img title="Add Purchase Order" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase_order.png" width="110" height="200" />
							PO
						</a>						
					</td>
					<td class="center">
						<a href="#/grn">
							<img title="Add Received Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/received_note.png" width="110" height="200" />
							GRN
						</a>
					</td>
					<td class="center">
						<a href="#/vendor_deposit">
							<img title="Add Supplier Deposit" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/supplier_deposit.png" width="110" height="200" />
							Deposit
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center">
						<a href="#/purchase">
							<img title="Add Purchase" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase.png" width="110" height="200" />
							Purchase
						</a>
					</td>
					<td class="center">
						<a href="#/purchase_return">
							<img title="Add Purchase Return" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/purchase_return.png" width="110" height="200" />
							Pur.Return
						</a>
					</td>
					<td class="center">						
						<a href="#/cash_payment">
							<img title="Add Cash Payment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_payment.png" width="110" height="200" />
							PayBill
						</a>						
					</td>										
				</tr>				
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span>Purchase</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary">
							
							<div align="center" class="text-large strong" data-bind="text: purchase"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: purchase_supplier"></span>
										<br>
										<span>Supplier</span>
									</td>
									<td>
										<span data-bind="text: purchase_product"></span>
										<br>
										<span>Product</span>
									</td>
									<td>
										<span data-bind="text: purchase_order"></span>
										<br>
										<span>Order</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span>Purchase Order</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info">
							
							<div align="center" class="text-large strong" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: order_avg"></span>
										<br>
										<span>Average</span>
									</td>
									<td>
										<span data-bind="text: order_open"></span>
										<br>
										<span>Open</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span>Payable</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" data-bind="text: ap"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: ap_open"></span>
										<br>
										<span>Open</span>
									</td>
									<td>
										<span data-bind="text: ap_customer"></span>
										<br>
										<span>Supplier</span>
									</td>
									<td>
										<span data-bind="text: ap_overdue"></span>
										<br>
										<span>Overdue</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">
					<h4></h4>					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>				                
				                <th class="center" colspan="2">Top 5 Suppliers</th>			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="vendorDashboard-top-vendor-template"
			                 data-bind="source: topContactDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" colspan="2">Top 5 A/P Balance</th>
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="vendorDashboard-top-ap-template"
			                 data-bind="source: topAPDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" colspan="2">Top 5 Products</th>			                		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="vendorDashboard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
	                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
	                             ]"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>            
            </div>
            <!-- End Graph -->

		</div>
	</div>
</script>
<script id="vendorDashboard-top-vendor-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td style="width: 1%">#:banhji.vendorDashboard.topContactDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="vendorDashboard-top-ap-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="width: 1%">#:banhji.vendorDashboard.topAPDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="vendorDashboard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="width: 1%">#:banhji.vendorDashboard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="vendorCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="number or name ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
								<input data-role="combobox"
									   data-value-primitive="true"
					                   data-placeholder="Supplier Type..."					                   
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: contact_type_id,
					                              source: contactTypeDS"
					                   style="width: 100%" />									
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total()"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: contactDS"						  
						 data-row-template="vendorCenter-vendor-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							            <li style="font-size: large; color: black; font-weight: bold;">							            	
							            	<span data-bind="text: obj.surname"></span>
							            	<span data-bind="text: obj.name"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-3"><i></i></span>
							            </li>							            							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab2-3"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab3-3"><i></i></span>
							            </li>
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">							           

							            <!-- TRANSACTIONS Tab content -->
							            <div id="tab1-3" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-inverse" data-bind="click: goPO">Purchase Order</span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goPurchase">Purchase</span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goGRN">Goods Received Note</span>								            			
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goPurchaseReturn">Purchase Return</span>								            			
								            		</td>
								            	</tr>								            	
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goDeposit">Deposit</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goPayBill">Pay Bills</span>								            			
								            		</td>
								            	</tr>								            	
							            	</table>
							            </div>
							            <!-- // TRANSACTIONS Tab content END -->							            						            

							            <!-- INFO Tab content -->
							            <div id="tab2-3" class="tab-pane box-generic">
							            	<div class="row-fluid">
								            	<div class="span6">
										
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons user"><i></i> <span data-bind="text: obj.number"></span> <span data-bind="text: obj.fullname"></span></h4>
														</div>
														<div class="widget-body">
															<ul class="unstyled icons margin-none">
																<li class="glyphicons group"><i></i> Type: <span data-bind="text: obj.contact_type"></span></li>
																<li class="glyphicons phone"><i></i> Phone: <span data-bind="text: obj.phone"></span></li>
																<li class="glyphicons envelope"><i></i> Email: <span data-bind="text: obj.email"></span></li>
																<li class="glyphicons calendar"><i></i> Registered: <span data-bind="text: obj.registered_date"></span></li>
															</ul>
														</div>
													</div>
													<!-- // Bio END -->
													
												</div>
												<div class="span6">
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons edit" data-bind="click: goEditContact"><i></i> <span data-bind="text: lang.lang.edit"></span></h4>
														</div>
														<div class="widget-body">
															<p><i class="icon-home"></i> <span data-bind="text: obj.address"></span></p>
														</div>
													</div>
													<!-- // Bio END -->
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab3-3" class="tab-pane box-generic">

										    <div class="chat-controls">															
												<form class="margin-none">
													<div class="row-fluid">
														<div class="span10">
															<input type="text" name="message" class="input-block-level margin-none" data-bind="value: note" placeholder="កំណត់Memo ...">
														</div>
														<div class="span2">
															<span class="btn btn-block btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.save"></span></span>
														</div>
													</div>
												</form>															
											</div>

											<br>

									    	<div data-role="grid"
									    	 	 data-height="100"
					 							 data-scrollable="{virtual: true}"									                 
								                 data-row-template="vendorCenter-note-tmpl"
								                 data-bind="source: noteDS"
								                 data-columns="[{title: ''}]"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt">Balance<span data-bind="text: balance" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadPO">
										<span class="glyphicons truck"><i></i></span>
										<span class="txt">PO<span data-bind="text: po" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons circle_exclamation_mark"><i></i></span>
										<span class="txt"><span data-bind="text: openInvoice"></span> Open</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadOverInvoice">
										<span class="glyphicons turtle"><i></i></span>
										<span class="txt"><span data-bind="text: overInvoice"></span> Over Due</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input id="sorter" name="sorter"
				    	   data-role="dropdownlist"                   
				           data-value-primitive="true"
				           data-text-field="text"
				           data-value-field="value"
				           data-bind="value: sorter,
				                      source: sortList" />
				                                   
				        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
				        
				       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />

			            <button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Amount</th>
								<th>Status</th>
								<th>Action</th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="vendorCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="vendorCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Purchase_Order" || type=="GRN" || type=="Purchase_Return"){#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>
			#}else if(type=="Cash_Purchase" || type=="Credit_Purchase"){#
					<a href="\#/purchase/#=id#"><i></i> #=type#</a>						
			#}else{#
				#=number#
			#}#        	
        </td>
    	<td class="right">
    		#if(type=="GRN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else{#
    			#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<td>        	
        	#if(type==="Purchase" || type==="Expense"){#
        		#if(status==="0" || status==="2") {#
        			# var date = new Date(), dueDate = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else {#
					Paid
				#}#
        	#}else if(type==="PO" || type==="GRN"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#        	
        	#}#			
		</td>    	
    	<td align="center">
			#if(type==="Purchase"){#
				<a href="\#/purchase/#=id#"><i></i> Send</a>

				#if(status==="0" || status==="2"){#					
					| <a href="\#/purchase/#=id#"><i></i> Pay</a>
				#}#
			#}else if(type==="Expense"){#
        		<a href="\#/expense/#=id#"><i></i> Send</a>

				#if(status==="0" || status==="2"){#					
					| <a href="\#/expense/#=id#"><i></i> Pay</a>
				#}#        	
        	#}else if(type==="GDN"){#        		
        		#if(status==="0"){#
        			
        		#}#
        	#}#
		</td>     	
    </tr>
</script>
<script id="vendorCenter-vendor-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body strong">
				<span>#=abbr##=number#</span>
				#if(company){#
					<span>#=company#</span>
				#}else{#
					<span>#=surname#</span> <span>#=name#</span>
				#}#
			</div>
		</td>
	</tr>
</script>
<script id="vendorCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>

<script id="vendor" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>SUPPLIER</h2>			    		   

				    <br>

				    <!-- Top Part -->
			    	<div class="row-fluid">
			    		<div class="span6 well">

							<div class="row-fluid">

								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlContactType">Supplier Type <span style="color:red">*</span></label>
										<input id="ddlContactType" name="ddlContactType"
											   data-role="dropdownlist"
											   data-header-template="vendor-type-header-tmpl"
											   data-option-label="(--- Select ---)"									                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_type_id,
							                   			  disabled: obj.is_pattern, 
							                              source: contactTypeDS,
							                              events:{change: contactTypeChanges}"
							                   required data-required-msg="required"
							                   style="width: 100%;" />									            
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtAbbr"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" required data-required-msg="required"
					              				style="width: 55px;" />
					              		-
					              		<input id="txtNumber" name="txtNumber" class="k-textbox"					              			   					                   
							                   data-bind="value: obj.number, 
							                   			  disabled: obj.is_pattern, 
							                   			  events:{change: checkExistingNumber}"
							                   placeholder="eg. 001" required data-required-msg="required"
							                   style="width: 125px;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->											
								</div>
							</div>
							
							<div class="row-fluid">
								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="surname"><span data-bind="text: lang.lang.surname"></span> <span style="color:red">*</span></label>
					              		<input id="surname" name="surname" class="k-textbox" data-bind="value: obj.surname, disabled: obj.is_pattern" 
							              		placeholder="surname ..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="name"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
							            <input id="name" name="name" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="name ..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>
							
							<div class="row-fluid" data-bind="visible: isCompany">
								<div class="span6">
									<!-- Group -->
									<div class="control-group">
										<label for="companyName"><span data-bind="text: lang.lang.organization_name"></span> </label>
										<input id="companyName" name="companyName" class="k-textbox" data-bind="value: obj.company, disabled: obj.is_pattern"									
												placeholder="e.g. PCG & Partner"
												style="width: 100%;" />	
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">
										<label for="vatNo">Sale TAX Number</label>								
					            		<input id="vatNo" name="vatNo" class="k-textbox" data-bind="value: obj.vat_no, disabled: obj.is_pattern" 
												placeholder="e.g. 01234567897"
												style="width: 100%;" />												
									</div>					
									<!-- // Group END -->
								</div>
							</div>

						</div>

						<div class="span6">
							<div class="row-fluid">	
								<!-- Map -->
								<div id="map" class="span12" style="height: 130px;"></div>
							</div>

							<div class="separator line bottom"></div>

							<div class="row-fluid">	
								<div class="span6">									
									<!-- Group -->
									<div class="control-group">
						    			<label for="latitute"><span data-bind="text: lang.lang.latitute"></span> </label>
										<div class="input-prepend">
											<span class="add-on glyphicons direction"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.latitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>
									</div>									
									<!-- // Group END -->
								</div>	
								
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">
						    			<label for="longtitute"><span data-bind="text: lang.lang.longtitute"></span> </label>
						    			<div class="input-prepend">
											<span class="add-on glyphicons google_maps"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.longtitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>										
									</div>
									<!-- // Group END -->
								</div>										
							</div>
						</div>
					</div>								
							
					<!-- // Bottom Part -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">
						        	<li class="span2 glyphicons nameplate_alt active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.info"></span></a>
						            </li>						            
						            <li class="span2 glyphicons usd">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.account"></span></a>
						            </li>
						            <li class="span2 glyphicons credit_card">
						            	<a href="#tab3" data-toggle="tab"><i></i> Payment</a>
						            </li>
						            <li class="span2 glyphicons parents">
						            	<a href="#tab4" data-toggle="tab"><i></i> <span data-bind="text: lang.lang.agents"></span></a>
						            </li>						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- //GENERAL INFO -->
						        <div class="tab-pane active" id="tab1">
					            	<table class="table table-borderless table-condensed cart_total">						            	
					            		<tr>
							                <td><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></td>
							              	<td>
							              		<input id="customerStatus" name="customerStatus" 
							              				data-role="dropdownlist"
									            		data-text-field="name"
						           						data-value-field="id"
						           						data-value-primitive="true" 
									            		data-bind="source: statusList, value: obj.status"
									            		data-option-label="(--- Select ---)"
									            		required data-required-msg="required" />
							              	</td>							              	
							            	<td><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></td>
							              	<td>
							              		<input id="registered_date" name="registered_date" 
								            		data-role="datepicker"			            		
					            					data-bind="value: obj.registered_date, disabled: obj.is_pattern" 
					            					data-format="dd-MM-yyyy"
					            					data-parse-formats="yyyy-MM-dd" 
					            					placeholder="dd-MM-yyyy" required data-required-msg="required" />
							              	</td>
							            </tr>
							            <tr>
							                <td><span data-bind="text: lang.lang.gender"></span></td>
							              	<td><select data-role="dropdownlist" data-bind="source: genders, value: obj.gender"></select></td>							              	
							            	<td><span data-bind="text: lang.lang.phone"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" /></td>
							            </tr>
							            <tr>
							            	<td>Country</td>
							              	<td>
							              		<input data-role="dropdownlist"
							              			   data-option-label="(--- Select ---)"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.country_id,
									                              source: countryDS" />
							              	</td>							            								              	
							            	<td><span data-bind="text: lang.lang.email"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" />							            	
							            </tr>
							            <tr>
							            	<td>City</td>
							              	<td><input class="k-textbox" data-bind="value: obj.city" placeholder="city name ..." />							              	
							            	<td>Post Code</td>
							              	<td><input class="k-textbox" data-bind="value: obj.post_code" placeholder="e.g. 12345" />
							            </tr>
							            <tr>
							            	<td><span data-bind="text: lang.lang.address"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." />									            								              	
							            	<td><span data-bind="text: lang.lang.memo"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." /></td>							              	
							            </tr>									            
							            <tr>
							            	<td>
							            		<label for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> <i class="icon-share"></i></label>											            
							            	</td>
							            	<td>
							            		<input class="k-textbox" data-bind="value: obj.bill_to" placeholder="bill to ..." />
							            	</td>
							            	<td>
							            		<span data-bind="text: lang.lang.ship_to"></span>										            
							            	</td>
							            	<td>
							            		<input class="k-textbox" data-bind="value: obj.ship_to" placeholder="ship to ..." />
							            	</td>
							            </tr>							            							            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //GENERAL INFO END -->

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane" id="tab2">
						        	
						        	<div class="row-fluid">

						            	<div class="span3">													
											<!-- Group -->
											<div class="control-group">										
												<label for="ddlAP">Account Payable <span style="color:red">*</span></label>
												<input id="ddlAP" name="ddlAP"
													   data-role="dropdownlist"
													   data-header-template="account-header-tmpl"
													   data-template="account-list-tmpl"
													   data-option-label="(--- Select ---)"											                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                              source: apDS"
									                   required data-required-msg="required"											                              
									                   style="width: 100%;" />									            
											</div>
											<!-- // Group END -->													
										</div>												
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlTradeDiscountAccount">Trade Discount <span style="color:red">*</span></label>
												<input id="ddlTradeDiscountAccount" name="ddlTradeDiscountAccount"
														   data-role="dropdownlist"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"
														   data-option-label="(--- Select ---)"												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.trade_discount_id,
										                              source: tradeDiscountDS"
										                   required data-required-msg="required"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlSettlementDiscountAccount">Settlement Discount <span style="color:red">*</span></label>
												<input id="ddlSettlementDiscountAccount" name="ddlSettlementDiscountAccount"
														   data-role="dropdownlist"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"
														   data-option-label="(--- Select ---)"												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.settlement_discount_id,
										                              source: settlementDiscountDS"
										                   required data-required-msg="required"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlPrePaymentAccount">Prepayment Account <span style="color:red">*</span></label>
												<input id="ddlPrePaymentAccount" name="ddlPrePaymentAccount"
														   data-role="dropdownlist"
														   data-option-label="(--- Select ---)"
														   data-header-template="account-header-tmpl"
														   data-template="account-list-tmpl"												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.deposit_account_id,
										                              source: prepaidAccountDS"
										                   required data-required-msg="required"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->	
										</div>
																																		
							        </div>								        										        

							        <div class="separator line bottom"></div>

							        <div class="row-fluid">

							        	<div class="span3">						
								            <label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
								            <input id="currency" name="currency" 
								            	data-role="dropdownlist"
								            	data-template="currency-list-tmpl"
								            	data-value-primitive="true"
								                data-text-field="code"
								                data-value-field="locale"
												data-bind="value: obj.locale, source: currencyDS"
												data-option-label="(--- Select ---)" 
												required data-required-msg="required" style="width: 100%;" />
								        </div>

										<div class="span3">
											<!-- Group -->
											<div class="control-group">
												<label for="ddlTax">Tax</label>
												<input id="ddlTax" name="ddlTax"
														   data-role="dropdownlist"
														   data-header-template="tax-header-tmpl"
														   data-option-label="(--- Select ---)"																   												                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.tax_item_id,
										                              source: taxItemDS"											                              
										                   style="width: 100%;" />
										    </div>
											<!-- // Group END -->
										</div>

										<!-- Group -->
										<div class="span3">	
									        <div class="control-group">
												<label for="txtCreditLimit"><span data-bind="text: lang.lang.credit_limit"></span> </label>								              		
									            <input data-role="numerictextbox"
									                   data-format="n"
									                   data-min="0"										                   
									                   data-bind="value: obj.credit_limit"										                  
									                   style="width: 100%;">
											</div>
										</div>												

									</div>
					        	</div>
						        <!-- //ACCOUNTING END -->

						        <!-- //PAYMENT -->
						        <div class="tab-pane" id="tab3">
						        	
					            	<table class="table table-borderless table-condensed cart_total">						            	
					            		<tr>							            			
							                <td>Payment Method</td>
							              	<td>
							              		<input id="ddlPaymentMethod" name="ddlPaymentMethod"
													data-role="dropdownlist"
													data-header-template="vendor-payment-method-header-tmpl"
									            	data-value-primitive="true"
									                data-text-field="name"
									                data-value-field="id"
													data-bind="value: obj.payment_method_id, source: paymentMethodDS"
													data-option-label="(--- Select ---)" 
													style="width: 100%;" />
							              	</td>
							              	<td>Payment Term</td>
							              	<td>
							              		<input id="ddlPaymentTerm" name="ddlPaymentTerm"
													data-role="dropdownlist"
													data-header-template="vendor-payment-term-header-tmpl"
									            	data-value-primitive="true"
									                data-text-field="name"
									                data-value-field="id"
													data-bind="value: obj.payment_term_id, source: paymentTermDS" 
													data-option-label="(--- Select ---)"
													style="width: 100%;" />
							              	</td>									            	
							            </tr>
							            <tr>
							                <td>Bank Name</td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_name" placeholder="bank name ..." style="width: 100%;" /></td>							              	
							            	<td>Account Number</td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_account_number" placeholder="account number ..." style="width: 100%;" /></td>
							            </tr>									           							            
							            <tr>
							            	<td>Account Name</td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_account_name" placeholder="account name ..." style="width: 100%;" />							              	
							            	<td>Bank Address</td>
							              	<td><input class="k-textbox" data-bind="value: obj.bank_address" placeholder="bank address ..." style="width: 100%;" /></td>
							            </tr>
							            <tr>
							            	<td>Name On Check</td>
							            	<td><input class="k-textbox" data-bind="value: obj.name_on_cheque" placeholder="name on check ..." style="width: 100%;" /></td>
							            	<td></td>
							            	<td></td>
							            </tr>									            						            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //PAYMENT END -->						        

						        <!-- //CONTACT PERSON -->
						        <div class="tab-pane" id="tab4">
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyContactPerson"><i></i> <span data-bind="text: lang.lang.new_agent"></span></span>
						        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.department"></span></th>						                
								                <th><span data-bind="text: lang.lang.phone"></span></th>
								                <th><span data-bind="text: lang.lang.email"></span></th>
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="vendor-contact-person-row-tmpl" 
								        		data-bind="source: contactPersonDS">
								        </tbody>										        						        
								    </table>
					        	</div>
						        <!-- //CONTACT PERSON END -->

						    </div>
						</div>
					</div>

					<br>											
					
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>						
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>
						<span class="btn btn-icon btn-default glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>					
					</div>
					<!-- // Form actions END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="vendor-contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="purchaseOrder" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>PURCHASE ORDER</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Supplier</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"											                    
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="vendor-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">AMOUNT QUOTED</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-4" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													Balance:
													<span data-bind="text: balance"></span>
												</td>
												<td>
													Credit Allowed:
													<span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
								            <tr>
								            	<td>Expected Date</td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>
								            <tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"							   
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-4">

							        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->	        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab4-4">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 20%;">QUANTITY</th>
				                <th style="width: 13%;">COST</th>
				                <th style="width: 1%;" data-bind="visible: showDiscount">DISCOUNT</th>			                
				                <th style="width: 10%;">AMOUNT</th>
				                <th style="width: 11%;">TAX</th>			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="purchaseOrder-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
	  									<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
									</li>															
								</ul>
							</div>
							
							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for internal ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>					
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="purchaseOrder-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.purchaseOrder.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"
					data-role="dropdownlist"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-header-template="item-measurement-header-tmpl"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"
				   data-header-template="tax-header-tmpl"			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>				
    </tr>   
</script>

<script id="grn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
    				onclick="javascript:window.history.back()"
					data-bind="click: cancel"><i></i></span>

		        <h2>GOODS RECEIVE NOTE</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 190px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr data-bind="visible: isEdit">				
									<td>No.</td>
									<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
								</tr>
								<tr>
									<td>Date</td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd" 
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>								
								<tr>
									<td>Supplier</td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"											                    
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-header-template="vendor-header-tmpl"
							                   data-template="contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																															
							</table>

							<div class="strong" style="margin-bottom:0;width: 100%; padding: 10px;" align="center"
								data-bind="style: {
								        backgroundColor: bgColor}">
								<div align="left">TOTAL QUANTITY</div>
								<h2 data-bind="text: total" align="right"></h2>

							</div>

						</div>						
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 190px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons adress_book"><a href="#tab2-4" data-toggle="tab"><i></i> Address</a>
						            </li>						            
						            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
						            </li>						            
						            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i></a>
						            </li>						            								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- Options Tab content -->
						        <div class="tab-pane active" id="tab1-4">						            
						            <table class="table table-borderless table-condensed cart_total">								            							           
										<tr>
											<td>Job</td>
											<td>
												<input id="ddlJob" name="ddlJob"
													   data-role="dropdownlist"
													   data-header-template="job-header-tmpl"
													   data-template="job-list-tmpl"
													   data-auto-bind="false"				                
									                   data-value-primitive="true"									                   				   
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.job_id, 
									                   			source: jobDS"
									                   data-option-label="Add job..." 
									                   style="width: 100%" />										
											</td>
										</tr>
										<tr>							            				
											<td>
							            		Reference	            						            		
							            	</td>
							            	<td>
												<input data-role="combobox"
														data-template="reference-list-tmpl"
														data-auto-bind="false"
							              				data-value-primitive="true"
														data-text-field="number" 
							              				data-value-field="id"						              				 
							              				data-bind="value: obj.reference_id,
							              							source: referenceDS,						              							
							              							events:{change: referenceChanges}" 
							              				style="width: 100%" />
											</td>
										</tr>	
						            </table>						            
						        </div>
						        <!-- // Options Tab content END -->

						        <!-- Address Tab content -->
						        <div class="tab-pane" id="tab2-4">
						        	Billing Address
									<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
									
									Delivery Address
									<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
											
						        </div>
						        <!-- // Address Tab content END -->

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab3-4">

						        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
						            
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th>File Name</th>
								                <th>Description</th>
								                <th>Date</th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->						        

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab4-4">							            	
						            
						            <div class="span5">

							        	<input data-role="combobox"
						                   data-placeholder="Select existing recuring ..."
						                   data-value-primitive="true"
						                   data-auto-bind="false"
						                   data-text-field="recurring_name"
						                   data-value-field="id"
						                   data-bind="value: obj.recurring_id,
						                              source: recurringDS,
						                              events:{ change:applyRecurring }"
						                   style="width: 100%" />

						                <br><br>

						                <div align="right">
							                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
							            </div>

						            </div>

						            <div class="span7">

							            <table style="width: 100%">
							            	<tr align="right">
							            		<td>
							            			Name
							            		</td>
							            		<td>
							            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 40%;" />
							            			Start
									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%;" />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td>
								            		Every
								            	</td>
							            		<td>
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td>
								            		On
								            	</td>							            	
								            	<td>

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							        </div>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->						        								        

						    </div>
						</div>

				    </div>
				</div>

				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th class="center" style="width: 1%;">No.</th>			                
			                <th>ITEMS</th>
			                <th>DESCRIPTION</th>
			                <th style="width: 20%;">QUANTITY</th>			                			                			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="grn-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span4">	
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>									
						
						<!-- Add New Item -->
						<ul class="topnav addNew">
							<li role="presentation" class="dropdown ">
						  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
						  			Add New Item
			    					<span class="caret"></span>
						  		</a>
					  			<ul class="dropdown-menu addNewItem">  				  				
					  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
					  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
					  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
					  				<li><a href='#/item_service'>Add New Services</a></li>
					  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
					  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
					  			</ul>
						  	</li>				
						</ul>
						<!--End Add New Item -->

						<br><br>
						<div class="well">
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
							<br>						
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
						</div>
					</div>
					<!-- Column END -->

					<!-- Column -->
					<div class="span4" align="center">
						<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span4">
						<table class="table table-condensed table-striped table-white">
							<tbody>																								
								<tr>
									<td class="right"><h4>Total:</h4></td>
									<td class="right strong"><h4 data-format="n0" data-bind="text: obj.amount"></h4></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>	           
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="grn-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.grn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"
					data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"            
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>						
    </tr>   
</script>

<script id="vendorDeposit" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

		        <h2>Supplier Deposit</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 150px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr data-bind="visible: isEdit">				
									<td>No.</td>
									<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
								</tr>
								<tr>
									<td>Date</td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd" 
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>
								<tr>
									<td>Suppliers</td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"											                    
							                   data-value-primitive="true"
							                   data-header-template="vendor-header-tmpl"
							                   data-template="contact-list-tmpl"
							                   data-auto-bind="false"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type Name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>													
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: {backgroundColor: amtDueColor}">
								<div align="left">AMOUNT DEPOSITED</div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>

						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 150px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active" ><a href="#tab1-4" data-toggle="tab" ><i></i></a>
						            </li>
						            <li class="span1 glyphicons pencil"><a href="#tab2-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span2 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i>Recuring</a>
						            </li>								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- Option Tab content -->
						    	<div class="tab-pane active" id="tab1-4">
							       	<table class="table table-borderless table-condensed cart_total">						
										<tr>
											<td style="width: 15%">Deposit To</td>
											<td style="width: 40%">
												<input id="cbbAccount" name="cbbAccount"
													   data-role="combobox"                   
									                   data-value-primitive="true"
									                   data-header-template="account-header-tmpl"                
									                   data-template="account-list-tmpl"
									                   data-text-field="name"								                  
									                   data-value-field="id"
									                   data-bind="value: obj.account_id,
									                   			  source: depositAccountDS"
									                   data-placeholder="Add Account.."					                                      
									                   required data-required-msg="required" style="width: 100%" />
											</td>
										</tr>
										<tr>
											<td style="width: 10%">Segment</td>
											<td style="width: 40%">
												<select data-role="multiselect"
											   data-value-primitive="true"
											   data-header-template="segment-header-tmpl"							   
											   data-item-template="segment-list-tmpl"				    
											   data-value-field="id" 
											   data-text-field="code"
											   data-bind="value: obj.segments, 
											   			source: segmentItemDS,
											   			events:{ change: segmentChanges }"
											   data-placeholder="Add Segment.."				   
											   style="width: 100%" /></select>
											</td>														
										</tr>
										<tr>							            				
											<td>
							            		Reference	            						            		
							            	</td>
							            	<td>
												<input data-role="combobox"
														data-template="reference-list-tmpl"
														data-auto-bind="false"
							              				data-value-primitive="true"
														data-text-field="number" 
							              				data-value-field="id"	 
							              				data-bind="value: obj.reference_id,
							              							source: referenceDS,						              							
							              							events:{change: referenceChanges}" 
							              				placeholder="Select Reference" style="width: 100%" />
											</td>
										</tr>									
									</table>
						   		</div>
						   		<!-- Option Tab content END -->

						        <!-- Memo Tab content -->
						        <div class="tab-pane" id="tab2-4">
						        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
						        		data-bind="value: obj.memo2" style="width:100%;" 
						        		placeholder="Please enter transaction purpose here ..."></textarea>
						        </div>
						        <!-- // Memo Tab content END -->

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab3-4">
						        	 <p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
						            
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th>File Name</th>
								                <th>Description</th>
								                <th>Date</th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab4-4">							            	
						            
						            <div class="span5">

							        	<input data-role="combobox"
						                   data-placeholder="Select existing recuring ..."
						                   data-value-primitive="true"
						                   data-auto-bind="false"
						                   data-text-field="recurring_name"
						                   data-value-field="id"
						                   data-bind="value: obj.recurring_id,
						                              source: recurringDS,
						                              events:{ change:applyRecurring }"
						                   style="width: 100%" />

						                <br><br>

						                <div align="right">
							                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
							            </div>

						            </div>

						            <div class="span7">

							            <table style="width: 100%">
							            	<tr align="right">
							            		<td>
							            			Name
							            		</td>
							            		<td>
							            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 40%;" />
							            			Start
									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%;" />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td>
								            		Every
								            	</td>
							            		<td>
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td>
								            		On
								            	</td>							            	
								            	<td>

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							        </div>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->								        

						    </div>
						</div>

				    </div>
				</div>								
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 1%;">No.</th>			               
			                <th style="width: 30%;">ACCOUNT</th>
			                <th>DESCRIPTION</th>
			                <th style="width: 10%;">REF</th>			                
			                <th style="width: 15%;">AMOUNT</th>			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="vendorDeposit-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span6 hidden-print">
						
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>	
						
						<!-- Add New Item -->
						<ul class="topnav addNew">
							<li role="presentation" class="dropdown ">
						  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
						  			Add New Item
			    					<span class="caret"></span>
						  		</a>
					  			<ul class="dropdown-menu addNewItem">  				  				
					  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
					  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
					  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
					  				<li><a href='#/item_service'>Add New Services</a></li>
					  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
					  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
					  			</ul>
						  	</li>				
						</ul>
						<!--End Add New Item -->
						 

					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span6">
						<table class="table table-borderless table-condensed cart_total">
							<tbody>								
								<tr>
									<td class="right">Total:</td>
									<td class="right strong"><span data-bind="text: total"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="vendorDeposit-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.vendorDeposit.lineDS.indexOf(data)+1#			
		</td>				
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"                   
                   data-value-primitive="true"
                   data-header-template="account-header-tmpl"                  
                   data-template="account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."
                   data-list-width="400"                    
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>		
		<td class="right">
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox" 
					data-format="c"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>			
    </tr>   
</script>

<script id="purchase" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>PURCHASE</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Supplier</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"											                    
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="vendor-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">AMOUNT RECEIVED</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>
							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab2-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab3-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">
							            	<tr>
							            		<td style="width: 40%">
							            			<table>
							            				<tr>
							            					<td>
										            			<input type="radio" value="Cash_Purchase" class="k-radio"
										            					name="payOption" id="payOption1"
										            					data-bind="checked: obj.type, 
										            								events:{ change: typeChanges }"> 
										            			<label class="k-radio-label" for="payOption1">CASH</label>
										            		</td>
										            		<td>
													            <input type="radio" value="Credit_Purchase" class="k-radio"
													            		name="payOption" id="payOption2"
													            		data-bind="checked: obj.type, 
													            					events:{ change: typeChanges }"> 
													            <label class="k-radio-label" for="payOption2">CREDIT</label>
											            	</td>
											            </tr>
										            </table>
							            		</td>
							            		<td style="width: 60%" data-bind="invisible: isCash">
							            			Due Date						            			
								            		<input id="txtDueDate" name="txtDueDate" class="pull-right"
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" />
							            		</td>						            		
							            	</tr>							            
											<tr>
								            	<td>
								            		Bill No.
								            		<input class="k-textbox pull-right" data-bind="value: obj.reference_no" style="width: 170px;" />
								            	</td>
								            	<td>
								            		Bill Date
								            		<input id="txtBillDate" name="txtBillDate" class="pull-right" 
								            				data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.bill_date" />							            		
								            	</td>
								            </tr>
											<tr>
								            	<td>Account</td>				
												<td>
													<input id="ddlAccount" name="ddlAccount" 
															data-role="dropdownlist"
															data-auto-bind="false"														
								              				data-value-primitive="true"
								              				data-header-template="account-header-tmpl"
								              				data-template="account-list-tmpl"
															data-text-field="name" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.account_id,
								              							source: accountDS"
								              				data-option-label="Select Account..."
								              				required data-required-msg="required" 
								              				style="width: 100%" />
												</td>
											</tr>																				
											<tr>							            				
												<td>
								            		Reference	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-auto-bind="false"
								              				data-value-primitive="true"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	
										<table class="table table-borderless table-condensed cart_total">
											<tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"							   
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>
											<tr data-bind="invisible: isCash">
								            	<td>Payment Term</td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-header-template="vendor-payment-term-header-tmpl"					              				 
								              				data-bind="value: obj.payment_term_id,
								              							source: paymentTermDS"
								              				data-option-label="Select Term..." 
								              				style="width: 100%" />
												</td>
											</tr>
											<tr data-bind="visible: isCash">
								            	<td>Payment Method</td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-header-template="vendor-payment-method-header-tmpl"						              				 
								              				data-bind="value: obj.payment_method_id,
								              							source: paymentMethodDS"
								              				data-option-label="Select Method..." 
								              				style="width: 100%" />
												</td>
											</tr>							            
								            <tr data-bind="visible: isCash">
								            	<td>Check No</td>				
												<td>
													<input class="k-textbox" data-bind="value: obj.check_no" style="width: 100%" />
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">

							        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Middle Part -->
					<div class="box-generic">

					    <!-- Tabs Heading -->
					    <div class="tabsbar tabsbar-2">
					        <ul class="row-fluid row-merge">
					        	<li class="span6 glyphicons cargo active"><a href="#tab1-2" data-toggle="tab"><i></i> ITEMS / EXPENSE</a>
					            </li>
					            <li class="span6 glyphicons circle_plus"><a href="#tab2-2" data-toggle="tab"><i></i> ADDITIONAL COSTS</a>
					            </li>				            					            								            
					        </ul>
					    </div>
					    <!-- // Tabs Heading END -->

					    <div class="tab-content">

					    	<!-- Item Tab content -->
					        <div class="tab-pane active" id="tab1-2">						            
					        	<!-- Item List -->
								<table class="table table-bordered table-primary table-striped table-vertical-center">
							        <thead>
							            <tr>
							                <th class="center" style="width: 1%;">No.</th>			                
							                <th>ITEMS</th>
							                <th>DESCRIPTION</th>
							                <th style="width: 20%;">QUANTITY</th>
							                <th style="width: 10%;">COST</th>
							                <th style="width: 1%;" data-bind="visible: showDiscount">DISCOUNT</th>			                
							                <th class="center" style="width: 15%;">AMOUNT</th>
							                <th class="center" style="width: 11%;">TAX</th>
							                <th class="center" style="width: 1%;" data-bind="visible: showAdditionalCost">+Cost</th>			                			                			                
							            </tr> 
							        </thead>
							        <tbody data-role="listview" 
							        		data-template="purchase-item-line-template" 
							        		data-auto-bind="false"
							        		data-bind="source: lineDS"></tbody>			        
							    </table>

							    <!-- Item Add Row part -->
					            <div class="row">		
															
									<div class="span12">
										<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

										<div class="btn-group">
											<div class="leadcontainer">
												
											</div>
											<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
											<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
												<li>
													<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
													<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
												</li>
												<li>
													<input type="checkbox" id="chbAdditionalCost" class="k-checkbox" data-bind="checked: showAdditionalCost" />												
													<label class="k-checkbox-label" for="chbAdditionalCost">ADDITIONAL COST</label>
												</li>																									
											</ul>
										</div>

										<!-- Add New Item -->
										<ul class="topnav addNew">
											<li role="presentation" class="dropdown ">
										  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
										  			Add New Item
							    					<span class="caret"></span>
										  		</a>
									  			<ul class="dropdown-menu addNewItem">  				  				
									  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
									  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
									  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
									  				<li><a href='#/item_service'>Add New Services</a></li>
									  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
									  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
									  			</ul>
										  	</li>				
										</ul>
										<!--End Add New Item -->

									</div>										
									
								</div>

								<br>

							    <!-- Account List -->				
								<table class="table table-bordered table-primary table-striped table-vertical-center">
							        <thead>
							            <tr>
							                <th style="width: 1%;">No.</th>			                
							                <th style="width: 20%;">ACCOUNT</th>
							                <th>DESCRIPTION</th>
							                <th data-bind="visible: showRef" style="width: 7%;">REF</th>			                
							                <th data-bind="visible: showSegment" style="width: 15%;">SEGMENT</th>
							                <th class="center" style="width: 15%;">AMOUNT</th>
							                <th class="center" style="width: 11%;">TAX</th>			                			                
							            </tr> 
							        </thead>
							        <tbody data-role="listview" 
							        		data-template="purchase-account-line-template" 
							        		data-auto-bind="false"
							        		data-bind="source: accountLineDS"></tbody>			        
							    </table>
							    <!-- Add Row Account -->
							    <div>
									<button class="btn btn-inverse" data-bind="click: addRowAccount"><i class="icon-plus icon-white"></i></button>												

									<div class="btn-group">
										<div class="leadcontainer">
											
										</div>
										<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
										<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
											<li>											
												<input type="checkbox" id="chbReference" class="k-checkbox" data-bind="checked: showRef" />												
												<label class="k-checkbox-label" for="chbReference">REFERENCE</label>
											</li>
											<li>											
												<input type="checkbox" id="chbSegment" class="k-checkbox" data-bind="checked: showSegment" />												
												<label class="k-checkbox-label" for="chbSegment">SEGMENT</label>
											</li>															
										</ul>
									</div>

									<!-- Add New Item -->
									<ul class="topnav addNew">
										<li role="presentation" class="dropdown ">
									  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
									  			Add New Item
						    					<span class="caret"></span>
									  		</a>
								  			<ul class="dropdown-menu addNewItem">  				  				
								  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
								  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
								  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
								  				<li><a href='#/item_service'>Add New Services</a></li>
								  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
								  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
								  			</ul>
									  	</li>				
									</ul>
									<!--End Add New Item -->
																
								</div>

					        </div>
					        <!-- // Item Tab content END -->

					        <!-- Additional Cost Tab content -->
					        <div class="tab-pane" id="tab2-2">				        	
								<table class="table table-bordered table-primary table-striped table-vertical-center">
							        <thead>
							            <tr>
							                <th class="center" style="width: 1%;">No.</th>			                
							                <th>TYPE</th>
							                <th>SUPPLIER</th>
							                <th>INV.#</th>
							                <th>DATE</th>
							                <th data-bind="visible: showDueDateColumn">DUE DATE</th>
							                <th>DESCRIPTION</th>						                						                			                
							                <th class="center" style="width: 15%;">AMOUNT</th>
							                <th class="center" style="width: 11%;">TAX</th>			                			                			                
							            </tr> 
							        </thead>
							        <tbody data-role="listview" 
							        		data-template="purchase-additional-cost-template" 
							        		data-auto-bind="false"
							        		data-bind="source: additionalCostDS"></tbody>			        
							    </table>

							    <!-- Add Row part -->
					            <div class="row-fluid">		
															
									<div class="span8">

										<table>
											<tr>
												<td>
													<button class="btn btn-inverse" data-bind="click: addRowAdditionalCost"><i class="icon-plus icon-white"></i></button>

													<div class="btn-group">
														<div class="leadcontainer">
															
														</div>
														<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
														<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
															<li>
																<input type="checkbox" id="chbDueDateColumn" class="k-checkbox" data-bind="checked: showDueDateColumn" />												
																<label class="k-checkbox-label" for="chbDueDateColumn">DUE DATE</label>
															</li>																										
														</ul>
													</div>
												</td>
												<td>Additional Cost Apply:</td>
												<td>
													<input type="radio" name="engine" id="engine1" class="k-radio" value="Equal" 
															data-bind="checked: obj.additional_apply,
																		events:{ change: changes }">
										            <label class="k-radio-label" for="engine1">EQUAL</label>
							            		</td>						            	
							            		<td>						         
										            <input type="radio" name="engine" id="engine2" class="k-radio" value="Weighted"
										            		data-bind="checked: obj.additional_apply,
																		events:{ change: changes }">
										            <label class="k-radio-label" for="engine2">WEIGHTED</label>
							            		</td>
							            	</tr>
							            </table>
									</div>

									<div class="span4">
										<table class="table table-condensed table-striped table-white">
											<tbody>
												<tr>												
													<td class="right">Costs Allocated:</td>
													<td class="right strong" width="40%"><span data-bind="text: additional_cost"></span></td>
												</tr>
											</tbody>
										</table>
									</div>										
									
								</div>
					        </div>
					        <!-- // Additional Cost Tab content END -->				        						        								        

					    </div>
					</div>							    	    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">														
							<div class="span12 well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for internal ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>
									<tr>
										<td class="right">
											Deposit:
											<span class="strong" data-format="n" data-bind="text: total_deposit"></span>										
										</td>
										<td class="right strong">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-min="0"							                                      
								                   data-bind="value: obj.deposit,
								                              events: { change: changes }"
								                   style="width: 90%;">
										</td>
									</tr>								
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="purchase-item-line-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.purchase.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input
					id="ddlMesurement"
					data-role="dropdownlist"                  
                   data-text-field="measurement"
                   data-header-template="item-measurement-header-tmpl"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-header-template="tax-header-tmpl"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>
		<td class="center" data-bind="visible: showAdditionalCost">
			<span data-format="n" data-bind="text: additional_cost"></span>
						
			<input type="checkbox" data-bind="checked: additional_applied,
										events:{ change: changes }" />
							
		</td>				
    </tr>   
</script>
<script id="purchase-account-line-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowAccount }"></i>
			#:banhji.purchase.accountLineDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="cbbAccounts" name="cbbAccounts-#:uid#"
				   data-role="combobox"                   
                   data-value-primitive="true"
                   data-header-template="account-header-tmpl"                  
                   data-template="account-list-tmpl"                                     
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: expenseAccountDS"
                   data-placeholder="Add Account.."
                   data-list-width="400"                    
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>			
		<td data-bind="visible: showSegment">
			<select data-role="multiselect"
				   data-value-primitive="true"				   
				   data-item-template="segment-list-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItemAccount-#:uid#"
				   data-role="combobox"                   			   
                   data-text-field="name"
                    data-header-template="tax-header-tmpl"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>			
    </tr>   
</script>
<script id="purchase-additional-cost-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRowAdditionalCost }"></i>
			#:banhji.purchase.additionalCostDS.indexOf(data)+1#			
		</td>			
		<td>
			<input id="ddlType-#:uid#" name="ddlType-#:uid#"
				   data-role="dropdownlist"                   
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: type,
                              source: typeList,
                              events:{ change : typeColumnChanges }"                                       
                   required data-required-msg="required" style="width: 100%" />	
		</td>
		<td>
			<input id="ddlVendor"
					data-role="combobox"                   
                   data-value-primitive="true"
                   data-header-template="vendor-header-tmpl"
                   data-template="contact-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: contactListDS"
                   data-placeholder="Add Name.."                    
                   style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>
		<td>
			<input id="txtIssuedDate" name="txtIssuedDate" 
					data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: issued_date"
					style="width:100%;" />
		</td>
		<td data-bind="visible: showDueDateColumn">
			<input data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: due_date"
					style="width:100%;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: memo"					
					style="width: 100%; margin-bottom: 0;" />
		</td>				
		<td class="right">
			<input id="txtSubTotal-#:uid#" name="txtSubTotal-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" 
					data-bind="value: sub_total, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>		
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-header-template="tax-header-tmpl"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>			
    </tr>   
</script>

<script id="purchaseReturn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<div class="hidden-print pull-right">
		    		<span class="glyphicons no-js remove_2" 
						data-bind="click: cancel"><i></i></span>						
				</div>

		        <h2>PURCHASE RETURN</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 190px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr data-bind="visible: isEdit">				
									<td>No.</td>
									<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
								</tr>
								<tr>
									<td>Date</td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd" 
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>								
								<tr>
									<td>Supplier</td>
									<td>
										<input id="cbbContact" name="cbbContact"
											   data-role="combobox"											                    
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-header-template="vendor-header-tmpl"
							                   data-template="contact-list-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.contact_id,
							                              source: contactDS,
							                              events:{ change: contactChanges }"
							                   data-placeholder="Type name.."                    
							                   required data-required-msg="required" style="width: 100%" />
									</td>
								</tr>																															
							</table>

							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: {
								        backgroundColor: bgColor}">
								<div align="left">AMOUNT PAID</div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>

						</div>						
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 190px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
						            </li>						            
						            <li class="span1 glyphicons pen"><a href="#tab2-5" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons adress_book"><a href="#tab3-5" data-toggle="tab"><i></i></a>
						            </li>						            
						            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
						            </li>						            
						            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i></a>
						            </li>						            								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- Options Tab content -->
						        <div class="tab-pane active" id="tab1-5">						            
						            <table class="table table-borderless table-condensed cart_total">										
										<tr>							            				
											<td>Related Purchase</td>
							            	<td>
												<input data-role="combobox"														
														data-auto-bind="false"
							              				data-value-primitive="true"
							              				data-template="reference-list-tmpl"
														data-text-field="number" 
							              				data-value-field="id"						              				 
							              				data-bind="value: obj.reference_id,
							              							source: referenceDS,
							              							enabled: bolReference,						              							
							              							events:{change: referenceChanges}"
							              				placeholder="Type number..." 
							              				style="width: 100%" />
											</td>
										</tr>
										<tr>
											<td>Currency</td>
											<td>
												<input id="cbbCurrency" name="cbbCurrency"
													   data-role="combobox"				                
									                   data-value-primitive="true"
									                   data-template="currency-list-tmpl"				   
									                   data-text-field="code"
									                   data-value-field="locale"
									                   data-bind="value: obj.locale, 
									                   			source: currencyDS, 
									                   			events: {change : setRate}"
									                   placeholder="Add currency..." 
									                   required data-required-msg="required" style="width: 100%" />										
											</td>
										</tr>						            	
										<tr>
											<td>Segments</td>
											<td>
												<select data-role="multiselect"
													   data-value-primitive="true"	
													   data-header-template="segment-header-tmpl"							   
													   data-item-template="segment-list-tmpl"				    
													   data-value-field="id" 
													   data-text-field="code"
													   data-bind="value: obj.segments, 
													   			source: segmentItemDS,
													   			events:{ change: segmentChanges }"
													   data-placeholder="Add Segment.."				   
													   style="width: 100%" /></select>
											</td>
										</tr>
										<tr>
											<td>Job</td>
											<td>
												<input id="ddlJob" name="ddlJob"
													   data-role="dropdownlist"
													   data-header-template="job-header-tmpl"
													   data-template="job-list-tmpl"
													   data-auto-bind="false"				                
									                   data-value-primitive="true"									                   				   
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.job_id, 
									                   			source: jobDS"
									                   data-option-label="Add job..." 
									                   style="width: 100%" />										
											</td>
										</tr>	
						            </table>						            
						        </div>
						        <!-- // Options Tab content END -->						        

						        <!-- Memo Tab content -->
						        <div class="tab-pane" id="tab2-5">
						        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
									<br>						
									<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for internal ..."></textarea>
						        </div>
						        <!-- // Memo Tab content END -->

						        <!-- Address Tab content -->
						        <div class="tab-pane" id="tab3-5">
						        	Billing Address
									<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
									
									Delivery Address
									<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
											
						        </div>
						        <!-- // Address Tab content END -->						        

						        <!-- Attach Tab content -->
						        <div class="tab-pane" id="tab4-5">

						        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
						            
						            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

						            <table class="table table-bordered">
								        <thead>
								            <tr>			                
								                <th>File Name</th>
								                <th>Description</th>
								                <th>Date</th>
								                <th style="width: 13%;"></th>                			                
								            </tr> 
								        </thead>
								        <tbody data-role="listview" 
								        		data-template="attachment-list-tmpl" 
								        		data-auto-bind="false"
								        		data-bind="source: attachmentDS"></tbody>			        
								    </table>

						        </div>
						        <!-- // Attach Tab content END -->					        

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab5-5">							            	
						            
						            <div class="span5">

							        	<input data-role="combobox"
						                   data-placeholder="Select existing recuring ..."
						                   data-value-primitive="true"
						                   data-auto-bind="false"
						                   data-text-field="recurring_name"
						                   data-value-field="id"
						                   data-bind="value: obj.recurring_id,
						                              source: recurringDS,
						                              events:{ change:applyRecurring }"
						                   style="width: 100%" />

						                <br><br>

						                <div align="right">
							                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
							            </div>

						            </div>

						            <div class="span7">

							            <table style="width: 100%">
							            	<tr align="right">
							            		<td>
							            			Name
							            		</td>
							            		<td>
							            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 40%;" />
							            			Start
									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%;" />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td>
								            		Every
								            	</td>
							            		<td>
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td>
								            		On
								            	</td>							            	
								            	<td>

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							        </div>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->						        								        

						    </div>
						</div>

				    </div>
				</div>

				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th class="center" style="width: 1%;">No.</th>			                
			                <th>ITEMS</th>
			                <th>DESCRIPTION</th>
			                <th style="width: 20%;">QUANTITY</th>
			                <th style="width: 13%;">PRICE</th>		                
			                <th style="width: 1%;" data-bind="visible: showDiscount">DISCOUNT</th>			                
			                <th class="center" style="width: 10%;">AMOUNT</th>
			                <th class="center" style="width: 11%;">TAX</th>		                			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="saleReturn-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span8">
						<table class="table table-condensed table-white">
							<tr>
								<td>						
									<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												
								
									<div class="btn-group">
										<div class="leadcontainer">
											
										</div>
										<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
										<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
											<li>
												<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
												<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
											</li>																
										</ul>
									</div>
									
									<!-- Add New Item -->
									<ul class="topnav addNew">
										<li role="presentation" class="dropdown ">
									  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
									  			Add New Item
						    					<span class="caret"></span>
									  		</a>
								  			<ul class="dropdown-menu addNewItem">  				  				
								  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
								  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
								  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
								  				<li><a href='#/item_service'>Add New Services</a></li>
								  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
								  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
								  			</ul>
									  	</li>				
									</ul>
									<!--End Add New Item -->
									


								</td>						
								<td class="right">Amount Paid:</td>
								<td class="left strong">
									<span data-format="n" data-bind="text: obj.amount_paid"></span>
								</td>							
								<td class="right">Remaining:</td>
								<td class="left strong">
									<span data-format="n" data-bind="text: remain"></span>
								</td>
							</tr>							
						</table>						

						<table class="table table-bordered table-inverse table-striped table-vertical-center" data-bind="visible: showReturn">
					        <thead>
					            <tr>
					            	<th class="center" style="width: 1%;">
					            		<button type="button" data-role="button" data-bind="click: addRowOption"><i class="icon-plus"></i></button>
					            	</th>
					            	<th style="width: 30%">TYPE OF RETURN</th>					               
					                <th>CONDITION</th>					                		                
					                <th style="width: 20%">AMOUNT</th>		                			                			                
					            </tr> 
					        </thead>
					        <tbody data-role="listview" 
					        		data-template="saleReturn-return-line-template" 
					        		data-auto-bind="false"
					        		data-bind="source: returnDS"></tbody>			        
					    </table>
													
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span4">
						<table class="table table-condensed table-striped table-white">
							<tbody>
								<tr>
									<td class="right">Subtotal:</td>
									<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
								</tr>								
								<tr>
									<td class="right">Total Discount:</td>
									<td class="right strong">
										<span data-bind="text: discount"></span>
                   					</td>
								</tr>
								<tr>
									<td class="right">Total Tax:</td>
									<td class="right strong"><span data-bind="text: tax"></span></td>
								</tr>																
								<tr>
									<td class="right"><h4>Total:</h4></td>
									<td class="right strong"><h4 data-bind="text: total"></h4></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>	           
				
				<!-- Form actions -->
				<div class="box-generic" align="right" style="background-color: #0B0B3B;">
					<span id="notification"></span>

					<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
					<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>
					<!-- <span id="saveSend" class="btn btn-icon btn-warning glyphicons envelope" style="width: 80px;"><i></i> Save Send</span>										 -->
					<span id="savePrint" class="btn btn-icon btn-default glyphicons print" data-bind="click: cancel" style="width: 80px;"><i></i> Save Print</span>
					<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="purchaseReturn-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.saleReturn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"
					data-role="dropdownlist"                  
                   data-text-field="measurement"
                   data-header-template="item-measurement-header-tmpl"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>					
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
				   data-role="combobox" 
				   data-header-template="tax-header-tmpl"                  			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="purchaseReturn-return-line-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRowOption }"></i>					
		</td>			
		<td>
			<input id="ddlOption-#:uid#" name="ddlOption-#:uid#"
				   data-role="dropdownlist"				                      			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: type, 
                   			  source: optionList,
                   			  events:{ change: optionChanges }"
                   data-option-label="Select Option..." 
                   style="width: 100%" />            
		</td>
		<td>
			<input id="cbbInvoice-#:uid#" name="cbbInvoice-#:uid#"
				   data-role="combobox"
				   data-template="reference-list-tmpl"				                      			   
                   data-text-field="number"
                   data-value-field="id"
                   data-bind="value: reference_id, 
                   			  source: invoiceDS,
                   			  visible: showInvoice,
                   			  events:{ change: invoiceChanges }"
                   placeholder="Select Invoice..." 
                   style="width: 100%" />

            <input id="ddlAccount-#:uid#" name="ddlAccount-#:uid#"
				   data-role="dropdownlist"
				   data-template="account-list-tmpl"				                      			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id, 
                   			  source: accountDS,
                   			  visible: showAccount"                   
                   style="width: 100%" />            
		</td>						
		<td>
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox" 
					data-format="n" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>								
    </tr>   
</script>

<script id="vendorSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>General Supplier Setting</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong">Supplier Type</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong">Payment Method</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Payment Term</span></a>
	            </li>	                       
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- Tab Contact Type content -->
	            <div class="tab-pane active" id="tab1-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="Enter New Vendor Type here ..." data-bind="value: contactTypeName">
					    <button class="btn btn-default" type="button" data-bind="click: addContactType"><i class="icon-plus"></i> Add Type</button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Type</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
		            			data-edit-template="vendorSetting-edit-contact-type-template"
				                data-template="vendorSetting-contact-type-template"
				                data-bind="source: contactTypeDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Contact Type content END -->

	            <!-- PAYMENT METHOD -->
	            <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i> Add Method</button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="vendorSetting-edit-payment-method-template"
				                data-template="vendorSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // PAYMENT METHOD END -->

	            <!-- PAYMENT TERM -->
	            <div class="tab-pane" id="tab3-1">
            		<div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="net due ..." data-bind="value: paymentTermNetDue">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="period ..." data-bind="value: paymentTermPeriod">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i> Add Term</button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th>Net Due</th>
	            				<th>Dis. Period</th>
	            				<th>Dis. %</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="vendorSetting-edit-payment-term-template"
				                data-template="vendorSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // PAYMENT TERM END -->

	        </div>
	    </div>

	</div>
</script>
<script id="vendorSetting-contact-type-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		        <span class="k-button" data-bind="click: goPattern">Pattern</span>
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="vendorSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="vendorSetting-payment-method-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="vendorSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="vendorSetting-payment-term-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>
    		#:net_due#
   		</td>
   		<td>
    		#:discount_period#
   		</td>
   		<td>
    		#:discount_percentage#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="vendorSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="netDue" required="required" validationMessage="required" />
                <span data-for="netDue" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_period" name="period" required="required" validationMessage="required" />
                <span data-for="period" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>

<script id="vendorReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>EXPENSE/PURCHASE MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports in different ways to help analyze what 
					you spent and their impact on your cash flow and performance. 
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/expenses_purchase_summary_supplier">Expenses/ Purchase Summary by Supplier</a></h3>
							</td>
							<td >
								<h3><a href="#/suppliers_transaction_list">Suppliers Transaction List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes total expenses/ purchase for each suppliers within a period of time.
								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each suppliers
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/expenses_purchase_detail_supplier">Expenses/Purchase Detail by Supplier</a></h3>
							</td>
							<td >
								<h3><a href="#/deposit_detail_supplier">Deposit Detail by Supplier</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual expenses/ purchase transactions by date for each supplier within a period of time.
								</p>
							</td>
							<td >
								<p>
									Provides detailed information about supplier deposit for specific order, prepayment, or credit.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/purchase_summary_product_services">Purchase Summary by Product/ Services</a></h3>
							</td>
							<td >
								<h3><a href="#/open_purchase_order">Open Purchase Order</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Summarizes total expenses/ purchase for each product/ service within a period of time. 
								</p>
							</td>
							<td >
								<p>
									Lists all the open purchase order grouped by suppliers including the original amount as well.
								</p>
							</td>
						</tr>
						<tr>
							<td >
								<h3><a href="#/purchase_detail_product_services">Purchase Detail by Product/ Services</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual sale transactions by date for each product/ service with a period of time.
								</p>
							</td>
						</tr>

					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>PAYABLES MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/suppliers_balance_summary">Suppliers Balance Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/suppliers_balance_detail">Suppliers Balance Detail</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Show each supplier’s total outstanding balances.
								</p>
								
							</td>
							<td >
								<p>
									Lists individual unpaid bill for each supplier
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/payables_aging_summary">Payables Aging Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/payables_aging_detail">Payables Aging Detail</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all unpaid bills for the current period, 30, 60, 90, and more than 90 days, grouped by individual suppliers. 
								</p>
							</td>
							<td >
								<p>
									Lists individual unpaid bills, grouped by suppliers. This includes due date, outstanding days (aging days), and amount.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/list_bills_paid">List of bills to be paid</a></h3>
							</td>
							<td >
								<h3><a href="#/bill_payment_list">Bill Payment List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all unpaid invoices, grouped by Due today and Overdue.
								</p>
							</td>
							<td >
								<p>
									Lists of paid bills for the select period of time, group by method of payments.
								</p>
							</td>
						</tr>						

					</table>
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<h3><a href="#/product_service_list">Product/ Service List</a></h3>
							</td>
							<td >
								<h3><a href="#/supplier_list">Supplier List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 48%; padding-right: 8px !important;" >
								<p>
									Lists the products and services you purchase. The following information is included: name, 
									description, cost, sales price, and quantity on hand.

								</p>
								
							</td>
							<td >
								<p>
									Lists of all active suppliers
								</p>
							</td>							
						</tr>
						<tr>
							<td>
							</td>
							<td >
								<h3><a href="#/customer_recurring">Recurring Supplier Template List</a></h3>								
							</td>
						</tr>
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Expenses/ Purchase Overview</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>6</span>
								<br>
								<span>Suppliers</span>
							</td>
							<td>
								<span>0</span>
								<br>
								<span>Products</span>
							</td>
							<td>
								<span>0</span>
								<br>
								<span>Order</span>
							</td>
						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
			</div>
			<div class="report-chart">
				<div class="widget-body receivable-overview" style="background-color: LightGray">
					<h2>PAYABLES MANAGEMENT</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>6</span>
								<br>
								<span>Open</span>
							</td>
							<td>
								<span>0</span>
								<br>
								<span>Supplier</span>
							</td>
							<td>
								<span>0</span>
								<br>
								<span>Overdue</span>
							</td>
							<td>
								<span>20 Days</span>
								<br>
								<span>Payable Payment Days</span>
							</td>
						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
			</div>
		</div>
	</div>
</script>
<script id="expensesPurchaseSummarySupplier" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Expenses/ Purchase Summary by Supplier</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Segment</p>
									<span>2</span>
								</div>
								<div class="span6">
									<p>Total Customer</p>
									<span>7</span>
								</div>	
									
							</div>
						</div>
						<div class="span7">
							<div class="total-sale">
								<p>Total Sale</p>
								<span>121,500.00</sapn>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>CUSTOMER</th>
							<th>TOTAL SALE</th>
						</tr>
						<tr>
							<td>Phonm Penh Branch</td>
							<td>13,000.00</td>
						</tr>
						<tr>							
							<td style="padding-left:30px !important;">A S Co.,Ltd</td>
							<td style="padding-left:30px !important;">8,500.00</td>
						</tr>
						<tr>
							<td style="padding-left:30px !important;">Bon Bon</td>
							<td style="padding-left:30px !important;">10,000.00</td>
						</tr>
						<tr>
							<td>Battambang Branch</td>
							<td>13,000.00</td>
						</tr>
						<tr>
							<td style="padding-left:30px !important;">Bon Bon</td>
							<td style="padding-left:30px !important;">20,000.00</td>
						</tr>
						<tr>
							<td style="padding-left:30px !important;">Sok Chan</td>
							<td style="padding-left:30px !important;">25,000.00</td>
						</tr>
						<tr>
							<td style="padding-left:30px !important;">Yellow Trading</td>
							<td style="padding-left:30px !important;">30,000.00</td>
						</tr>						
						<tr>
							<th>Total</th>
							<th>121,500.00</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="expensesPurchaseDetailSupplier" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Expenses/ Purchase Detail by Supplier</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<p>Total Customers</p>
								<span></span>
							</div>

						</div>
						<div class="span7">
							<div class="total-sale">
								<p>Total Sale</p>
								<span></sapn>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>Reference</th>
							<th>Customer</th>
							<th>Memo</th>
							<th>Item/service</th>
							<th>Qty</th>
							<th>Price</th>
							<th>Amount</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<th colspan="5">Total</th>
							<th colspan="4">-</th>
						</tr>
					</table>

					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="purchaseSummaryProductServices" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Purchase Summary by Product/ Services</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Product/services</p>
									<span>2</span>
								</div>
								<div class="span6">
									<p>AVG Sale</p>
									<span>600</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span>1,200.00</span>
								</div>
								<div class="span6">
									<p>Gross Profit Margin</p>
									<span>50%</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th></th>
							<th>Qty</th>
							<th>Amount</th>
							<th>Sale %</th>
							<th>AVG Price</th>							
							<th>Cost</th>
							<th>Gross Profit Margin</th>
						</tr>
						<tr>						
							<td>Cement</td>
							<td>100</td>
							<td>500</td>
							<td>33%</td>
							<td>5.00</td>
							<td>4.00</td>
							<td>25%</td>
						</tr>
						<tr>
							<td>Window</td>
							<td>200</td>
							<td>700</td>
							<td>67%</td>
							<td>3.50</td>
							<td>2</td>
							<td>75%</td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<th>Total</th>
							<th>300.00</th>
							<th colspan="2">1,200.00</th>
							<th colspan="2">4.25</th>
							<th>50%</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="openPurchaseOrder" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Open Purchase Order</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Product Items on Hand</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Purchase Order</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Order</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item Name</th>
							<th>Description</th>
							<th>Type</th>
							<th>Sale Tax</th>							
							<th>Record P</th>
							<th>Cost</th>
							<th>Sale Price</th>
							<th>QOH</th>
							<th>Suppliers</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>					
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<th colspan="9" style="text-align: left; padding-left: 8px !important;">Total</th>
						</tr>
					</table>

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="purchaseDetailProductServices" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Purchase Detail by Product/Service</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Product</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Total Purchase</p>
									<span>-</span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Product</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Qty on Hand</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>No</th>
							<th>Memo</th>							
							<th>Item/Service</th>
							<th>Qty</th>
							<th>Price</th>
							<th>Amount</th>
						</tr>
						<tr>
							<td>Products Name</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>							
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>							
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>							
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>							
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>							
						</tr>
						<tr>
							<th style="text-align: center; " colspan="4">Total</th>
							<th colspan="4">-</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="suppliersTransactionList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Suppliers Transaction List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span4">
									<p>Total Suppliers</p>
									<span>2</span>
								</div>
								<div class="span4">
									<p>Cash Purchase</p>
									<span>500</span>
								</div>	
								<div class="span4">
									<p>Cash Payment</p>
									<span>1,200</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Purchase</p>
									<span>2,700.00</span>
								</div>
								<div class="span6">
									<p>Suppliers Balance</p>
									<span>2,200.00</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th></th>
							<th>Type</th>
							<th>Date</th>
							<th>No</th>
							<th>Memo</th>							
							<th>Account</th>
							<th>Amount</th>
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td>							
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>							
						</tr>
						
						<tr>
							<th colspan="4">Total</th>
							<th colspan="3">(600.00)</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="depositDetailSupplier" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Deposit Detail by Supplier</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">								
								<p>Number of Customer Deposit</p>
								<span>5</span>								
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">								
								<p>Customer Deposit Balance</p>
								<span>5</span>								
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th></th>
							<th>Type</th>
							<th>Date</th>
							<th>No</th>
							<th>Memo</th>							
							<th>Account</th>
							<th>Amount</th>
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td>							
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>							
						</tr>
						
						<tr>
							<th colspan="4">Total</th>
							<th colspan="3">(600.00)</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="suppliersBalanceSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Suppliers Balance Summary</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Suppliers</p>
									<span>2</span>
								</div>	
								<div class="span6">
									<p>Number Suppliers</p>
									<span>1,200</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Suppliers Balance</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Open Credit Purchase</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Supplier Name</th>
							<th>Account Payable Balance</th>
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
						</tr>
						<tr>
							<td>Account Receivable</td>
							<td>1,000.00</td>							
						</tr>
						<tr>
							<td>Cash on hand</td>
							<td>500.00</td>							
						</tr>
						<tr>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>Account Payable Balance</td>
							<td>1,200.00</td>							
						</tr>
						<tr>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>							
						</tr>
						<tr>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>							
						</tr>
						<tr>					
							<td>Sub-total</td>
							<td>(2,100.00)</td>							
						</tr>
						
						<tr>
							<th>Total</th>
							<th
							>(600.00)</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="suppliersBalanceDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Supplier Balance Detail</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Supplier</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Number Supplier</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Supplier Balance</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Opean Credit Purchase</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>No</th>
							<th>Memo</th>							
							<th>Item/service</th>
							<th>Qty</th>
							<th>Cost</th>
							<th>Amount</th>
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>
							<td></td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td>
							<td></td>						
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>
							<td></td>						
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>
							<td></td>					
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>
							<td></td>					
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>
							<td></td>						
						</tr>
						
						<tr>
							<th colspan="4">Total</th>
							<th colspan="4">(600.00)</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="payablesAgingSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Payables Aging Summary</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Purchase</p>
									<span>#</span>
								</div>	
								<div class="span6">
									<p>Supplier Balance</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>NUmber of Supplier</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Average Aging</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th></th>
							<th>Current</th>
							<th>1-30</th>
							<th>31-60</th>
							<th>61-90</th>							
							<th>Over 90</th>
							<th>Total</th>
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td>							
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Account Receivable</td>
							<td>1,200.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>							
						</tr>
						
						<tr>
							<th >Total</th>
							<th >1,200.00</th>
							<th >1,200.00</th>
							<th >1,200.00</th>
							<th >1,200.00</th>
							<th >1,200.00</th>
							<th >1,200.00</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="payablesAgingDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Payables Aging Detail</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Purchase</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Supplier Balance</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Supplier</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Average Aging</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th></th>
							<th>Type</th>
							<th>Date</th>
							<th>Num</th>
							<th>Due Date</th>							
							<th>Aging</th>
							<th>Segment</th>
							<th>Balance</th>
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Account Receivable</td>
							<td>1,000.00</td>
							<td></td>						
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Cash on hand</td>
							<td>500.00</td>
							<td></td>						
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td></td>
							<td>Account Receivable</td>
							<td>1,200.00</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Cash on hand</td>
							<td>(1,200.00)</td>	
							<td></td>						
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td></td>
							<td>Cash on hand</td>
							<td>(2,100.00)</td>							
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>							
						</tr>
						
						<tr>
							<th colspan="4">Total</th>
							<th colspan="4">(600.00)</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="listBillsPaid" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>List of bills to be paid</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Purchase</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Supplier Balance</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Supplier Balance</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Average Aging</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>Num</th>
							<th>Name</th>							
							<th>Due Date</th>
							<th>Status</th>
							<th>Segment</th>
							<th>Balance</th>
							
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Open</td>
							<td>1,000.00</td>
							<td></td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Over due 15 Days</td>
							<td>500.00</td>
							<td></td>						
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Over due 61 Days</td>
							<td>1,200.00</td>
							<td></td>						
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Open</td>
							<td>(1,200.00)</td>
							<td></td>					
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Open</td>
							<td>(2,100.00)</td>
							<td></td>					
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>
							<td></td>						
						</tr>
						
						<tr>
							<th colspan="4">Total</th>
							<th colspan="4">(600.00)</th>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="billPaymentList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Bill Payment List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Customer Balance</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Customter Balance</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Number</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>Num</th>
							<th>Name</th>							
							<th>Invoice Date</th>
							<th>Status</th>
							<th>Aging</th>
							<th>Balance</th>
							
						</tr>
						<tr>
							<td>Sovan Tevy</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0001</td>
							<td>anmsjssd</td>
							<td>Paid</td>
							<td>1,000.00</td>
							<td></td>							
						</tr>
						<tr>
							<td></td>						
							<td>Cash Sale</td>
							<td></td>
							<td>SR-0003</td>
							<td>anmsjssd</td>
							<td>Paid</td>
							<td>500.00</td>
							<td></td>						
						</tr>
						<tr>
							<td>Toni</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>						
							<td>Invoice</td>
							<td>7/1/16</td>
							<td>IV-0015</td>
							<td>asg</td>
							<td>Paid</td>
							<td>1,200.00</td>
							<td></td>						
						</tr>
						<tr>
							<td></td>						
							<td>Cash Receipt</td>
							<td></td>
							<td>CR-0122</td>
							<td>ss</td>
							<td>Paid</td>
							<td>(1,200.00)</td>
							<td></td>					
						</tr>
						<tr>
							<td></td>						
							<td>Deposit</td>
							<td></td>
							<td>DS-0123</td>
							<td>aa</td>
							<td>Paid</td>
							<td>(2,100.00)</td>
							<td></td>					
						</tr>
						<tr>
							<td></td>						
							<td>Sub-total</td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>(2,100.00)</td>
							<td></td>						
						</tr>
						
						<tr>
							<th colspan="4">Total</th>
							<th colspan="4">(600.00)</th>
						</tr>
					</table>					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="productServiceList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Product/ Service List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Product Items on Hand</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Service Items</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Service Items on Hand</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item Name</th>
							<th>Description</th>
							<th>Type</th>
							<th>Sale Tax</th>							
							<th>Record P</th>
							<th>Cost</th>
							<th>Sale Price</th>
							<th>QOH</th>
							<th>Suppliers</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>					
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<th colspan="9" style="text-align: left; padding-left: 8px !important;">Total</th>
						</tr>
					</table>

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="supplierList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Supplier List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p></p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Total Supplier</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span12">
									<p>AVG Purchase per Supplier</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th></th>
							<th>SUP</th>
							<th>Supplier</th>
							<th>Supplier Type</th>
							<th>Gender</th>							
							<th>Country</th>
							<th>City</th>
							<th>Address</th>
							<th>VAT</th>
							<th>Phone</th>
							<th>Email</th>
							<th>Post Code</th>
							<th>Balance</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>					
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<th colspan="13" style="text-align: left; padding-left: 8px !important;">Total</th>
						</tr>
					</table>

				</div>		
			</div>
		</div>
	</div>
</script>





<!-- ***************************
*	Customer Section               *
**************************** -->
<script id="customerDashboard" type="text/x-kendo-template">

	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2>CUSTOMER</h2>
			        	<p>
			        		In here, you can manage your customer information, revenues, collections, and other related transactions.
			        	</p>
			        	<div class="supplier-icon">
					       	<div class="span4">
						       	<a href="#/customer" class="center">
						       		<img title="Add Customers" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/customers.ico" />
						       	</a>
						       </div>
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div>
			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center">
				<tr>
					<td class="center">
						<a href="#/quote">
							<img title="Add Quote" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/quotation.png" width="110" height="200" />
							Quotation
						</a>						
					</td>
					<td class="center">
						<a href="#/sale_order">
							<img title="Add Sale Order" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_order.png" width="110" height="200" />
							Sale Order
						</a>
					</td>
					<td class="center">
						<a href="#/customer_deposit">
							<img title="Add Customer Deposit" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/customer_deposit.png" width="110" height="200" />
							Deposit
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center">
						<a href="#/cash_sale">
							<img title="Add Cash Sale" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_receipt.png" width="110" height="200" />
							Cash Sale
						</a>
					</td>
					<td class="center">
						<a href="#/invoice">
							<img title="Add Invoice" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/invoice.png" width="110" height="200" />
							Invoice
						</a>
					</td>
					<td class="center">						
						<a href="#/cash_receipt">
							<img title="Add Cash Receipt" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_receipt.png" width="110" height="200" />
							Cash Receipt
						</a>						
					</td>										
				</tr>
				<tr>				
					<td class="center">
						<a href="#/gdn">
							<img title="Add Delivery Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/delivery_note.png" width="110" height="200" />
							Delivery Note
						</a>
					</td>
					<td class="center">
						<a href="#/sale_return">
							<img title="Add Sale Return" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/sale_return.png" width="110" height="200" />
							Sale Return
						</a>
					</td>				
					<td class="center">
						<a href="#/statement">
							<img title="Add Statement" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/statement.png" width="110" height="200" />
							Statement
						</a>
					</td>
				</tr>				
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons coins"><i></i></span>Sale</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary">
							
							<div align="center" class="text-large strong" data-bind="text: sale"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%">										
										<span data-bind="text: sale_customer"></span>
										<br>
										<span>Customer</span>
									</td>
									<td width="33%">
										<span data-bind="text: sale_product"></span>
										<br>
										<span>Product</span>
									</td>
									<td width="33%">
										<span data-bind="text: sale_order"></span>
										<br>
										<span>Order</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons cart_in"><i></i></span>Order</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info">
							
							<div align="center" class="text-large strong" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td width="50%">										
										<span data-bind="text: order_avg"></span>
										<br>
										<span>Average</span>
									</td>
									<td width="50%">
										<span data-bind="text: order_open"></span>
										<br>
										<span>Open</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading"><span class="glyphicons credit_card"><i></i></span>Receivable</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td width="33%">										
										<span data-bind="text: ar_open"></span>
										<br>
										<span>Open</span>
									</td>
									<td width="33%">
										<span data-bind="text: ar_customer"></span>
										<br>
										<span>Customer</span>
									</td>
									<td width="33%">
										<span data-bind="text: ar_overdue"></span>
										<br>
										<span>Overdue</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">								
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" colspan="2">Top 5 Customers</th>				                			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="customerDashBoard-top-customer-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>				           
				            <tr>
				                <th class="center" colspan="2">Top 5 A/R Balance</th>				                			                
				            </tr>					        
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="customerDashBoard-top-ar-template"
			                 data-bind="source: topARDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>				           
				            <tr>
				                <th class="center" colspan="2">Top 5 Products</th>				                			                
				            </tr>					        
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="customerDashBoard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
	                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
	                             ]"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>
            <!-- End Graph -->
            </div>
		</div>		

	</div>		
</script>
<script id="customerDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td style="width: 1%">#:banhji.customerDashboard.topCustomerDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="customerDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="width: 1%">#:banhji.customerDashboard.topARDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="customerDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="width: 1%">#:banhji.customerDashboard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>

<script id="customerCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="Customer ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
								<input data-role="combobox"
					                   data-placeholder="Customer Type..."
					                   data-value-primitive="true"					                   
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: contact_type_id,
					                              source: contactTypeDS"
					                   style="width: 100%" />									
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid"
						 data-auto-bind="false"						 
						 data-bind="source: contactDS"
						 data-row-template="customerCenter-customer-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							        	<li style="font-size: large; color: black; font-weight: bold;">							            	
							            	<span data-bind="text: obj.fullname"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-4"><i></i></span>
							            </li>							            							            
							            <li class="glyphicons circle_info"><span data-toggle="tab" data-target="#tab2-4"><i></i></span>
							            </li>							            
							            <li class="glyphicons pen"><span data-toggle="tab" data-target="#tab3-4"><i></i></span>
							            </li>
							            <li class="glyphicons edit"><span data-bind="click: goEditContact"><i></i></span>
							            </li>
							            <li class="glyphicons paperclip"><span data-toggle="tab" data-target="#tab4-4"><i></i></span>
							            </li>							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-4" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-inverse" data-bind="click: goQuote">Quote</span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goDeposit">Deposit</span>								            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goSaleOrder">Sale Order</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashSale">Cash Sale</span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goSaleReturn">Sale Return</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goInvoice">Invoice</span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>								            		
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goGDN">GDN</span>
								            		</td>
								            		<td class="center">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashReceipt">Receive Payment</span>								            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-inverse" data-bind="click: goStatement">Statement</span>
								            		</td>
								            		<td>
								            			
								            		</td>
								            	</tr>
							            	</table>
							            </div>
							            <!-- // Transactions Tab content END -->							           					            

							            <!-- INFO Tab content -->
							            <div id="tab2-4" class="tab-pane box-generic">
							            	<div class="row-fluid">
								            	<div class="span6">
										
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons user"><i></i> <span data-bind="text: obj.wnumber"></span> <span data-bind="text: obj.fullname"></span></h4>
														</div>
														<div class="widget-body">
															<ul class="unstyled icons margin-none">
																<li class="glyphicons group"><i></i> <span data-bind="text: obj.contact_type"></span></li>
																<li class="glyphicons phone"><i></i> <span data-bind="text: obj.phone"></span></li>
																<li class="glyphicons envelope"><i></i> <span data-bind="text: obj.email"></li>
																<li class="glyphicons calendar"><i></i> <span data-bind="text: obj.registered_date"></li>
															</ul>
														</div>
													</div>
													<!-- // Bio END -->
													
												</div>
												<div class="span6">
													<!-- Bio -->
													<div class="widget widget-heading-simple widget-body-gray margin-none">
														<div class="widget-head">
															<h4 class="heading glyphicons edit" data-bind="click: goEditContact"><i></i> <span data-bind="text: lang.lang.edit"></span></h4>
														</div>
														<div class="widget-body">
															<p><i class="icon-home"></i> <span data-bind="text: obj.address"></span></p>
														</div>
													</div>
													<!-- // Bio END -->
												</div>
											</div>
							            </div>
							            <!-- // INFO Tab content END -->

							            <!-- NOTE Tab content -->
							            <div id="tab3-4" class="tab-pane box-generic">

										    <div class="chat-controls">															
												<form class="margin-none">
													<div class="row-fluid">
														<div class="span10">
															<input type="text" name="message" class="input-block-level margin-none" data-bind="value: note" placeholder="កំណត់Memo ...">
														</div>
														<div class="span2">
															<span class="btn btn-block btn-primary" data-bind="click: saveNote"><span data-bind="text: lang.lang.save"></span></span>
														</div>
													</div>
												</form>															
											</div>

											<br>

									    	<div data-role="grid"
									    	 	 data-height="100"
					 							 data-scrollable="{virtual: true}"									                 
								                 data-row-template="customerCenter-note-tmpl"
								                 data-bind="source: noteDS"
								                 data-columns="[{title: ''}]"></div>
											
							            </div>
							            <!-- // NOTE Tab content END -->

							            <!-- Attach Tab content -->
								        <div class="tab-pane" id="tab4-4">							            	
								            
								            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

								            <table class="table table-bordered">
										        <thead>
										            <tr>			                
										                <th>File Name</th>
										                <th>Description</th>
										                <th>Date</th>
										                <th style="width: 13%;"></th>                			                
										            </tr> 
										        </thead>
										        <tbody data-role="listview" 
										        		data-template="attachment-list-tmpl" 
										        		data-auto-bind="false"
										        		data-bind="source: attachmentDS"></tbody>			        
										    </table>

								        </div>
								        <!-- // Attach Tab content END -->							            								            

							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt">Balance<span data-bind="text: balance" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadDeposit">
										<span class="glyphicons briefcase"><i></i></span>
										<span class="txt">Deposit<span data-bind="text: deposit" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons circle_exclamation_mark"><i></i></span>
										<span class="txt"><span data-bind="text: outInvoice"></span> Open</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadOverInvoice">
										<span class="glyphicons turtle"><i></i></span>
										<span class="txt"><span data-bind="text: overInvoice"></span> Over Due</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input id="sorter" name="sorter"
				    	   data-role="dropdownlist"                   
				           data-value-primitive="true"
				           data-text-field="text"
				           data-value-field="value"
				           data-bind="value: sorter,
				                      source: sortList" />
				                                   
				        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
				        
				       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />

			            <button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Amount</th>
								<th>Status</th>
								<th>Action</th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="customerCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="customerCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Invoice" || type=="Cash_Sale" || type=="Quote" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return" || type=="Cash_Receipt"){#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>						
			#}else if(type=="Credit" || type=="Deposit"){#
				<a href="\#/customer_deposit/#=id#"><i></i> #=number#</a>			
			#}else{#
				#=number#
			#}#        	
        </td>
    	<td class="right">
    		#if(type=="GDN"){#
    			#=kendo.toString(amount, "n0")#
    		#}else{#
    			#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#
    		#}#
    	</td>
    	<td>        	
        	#if(type==="Invoice"){#
        		#if(status==="0" || status==="2") {#
        			# var date = new Date(), dueDate = new Date(due_date).getTime(), toDay = new Date(date).getTime(); #
					#if(dueDate < toDay) {#
						Over Due #:Math.floor((toDay - dueDate)/(1000*60*60*24))# days
					#} else {#
						#:Math.floor((dueDate - toDay)/(1000*60*60*24))# days to pay
					#}#
				#} else {#
					Paid
				#}#
        	#}else if(type==="Sale_Order" || type==="GDN"){#
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Done        			
        		#}#
        	#}else if(type==="Quote"){#        		
        		#if(status==="0"){#
        			Open
        		#}else{#
        			Approved        			
        		#}#
        	#}#			
		</td>    	
    	<td align="center">
			#if(type==="Invoice"){#
				#if(status==="0" || status==="2"){#
					<a id="linkPay" name="linkPay" data-bind="click: payInvoice">Pay</a>					
				#}#			
        	#}else if(type==="Sale_Order"){#
        		#if(status==="0"){#
        			
        		#}#
        	#}else if(type==="Quote"){#        		        		
        		#if(status==="0"){#
        			
        		#}#
        	#}else if(type==="GDN"){#        		
        		#if(status==="0"){#
        			
        		#}#
        	#}#
		</td>     	
    </tr>
</script>
<script id="customerCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body strong">				
				<span>#=abbr##=number#</span>
				<span>#=name#</span>
			</div>
		</td>
	</tr>
</script>
<script id="customerCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>

<script id="customer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>CUSTOMER</h2>			    		   

				    <br>

				    <!-- Top Part -->
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlContactType"><span data-bind="text: lang.lang.customer_type"></span> <span style="color:red">*</span></label>
										<input id="ddlContactType" name="ddlContactType"
												   data-role="dropdownlist"
												   data-header-template="account-type-header-tmpl"       
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_type_id,
								                   			  disabled: obj.is_pattern,
								                              source: contactTypeDS,
								                              events:{change: contactTypeChanges}"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />																				            
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6" style="padding-right: 0;">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtAbbr"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>										
				              			<br>
				              			<input id="txtAbbr" name="txtAbbr" class="k-textbox"
					              				data-bind="value: obj.abbr, 
					              						   disabled: obj.is_pattern" 
					              				placeholder="eg. AB" required data-required-msg="required"
					              				style="width: 55px;" />
					              		-
					              		<input id="txtNumber" name="txtNumber" class="k-textbox"					              			   					                   
							                   data-bind="value: obj.number, 
							                   			  disabled: obj.is_pattern, 
							                   			  events:{change: checkExistingNumber}"
							                   placeholder="eg. 001" required data-required-msg="required"
							                   style="width: 125px;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->											
								</div>
							</div>
							
							<div class="row">
								<div class="span12">	
									<!-- Group -->
									<div class="control-group">								
										<label for="fullname">Full Name <span style="color:red">*</span></label>
							            <input id="fullname" name="fullname" class="k-textbox" 
							            		data-bind="value: obj.name, 
							            					disabled: obj.is_pattern,
							            					attr: { placeholder: phFullname }" 
							              		required data-required-msg="required"
							              		style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>

							<div class="row">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="customerStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="customerStatus" name="customerStatus" 
							              				data-role="dropdownlist"
									            		data-text-field="name"
						           						data-value-field="id"
						           						data-value-primitive="true" 
									            		data-bind="source: statusList, value: obj.status"
									            		data-option-label="(--- Select ---)"
									            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="registeredDate"><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></label>
							            <input id="registeredDate" name="registeredDate" 
								            		data-role="datepicker"			            		
					            					data-bind="value: obj.registered_date, disabled: obj.is_pattern" 
					            					data-format="dd-MM-yyyy"
					            					data-parse-formats="yyyy-MM-dd" 
					            					placeholder="dd-MM-yyyy" required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->
								</div>
							</div>																					
						</div>
						<div class="span6">
							<div class="row-fluid">	
								<!-- Map -->
								<div id="map" class="span12" style="height: 130px;"></div>
							</div>

							<div class="separator line bottom"></div>

							<div class="row-fluid">	
								<div class="span6">									
									<!-- Group -->
									<div class="control-group">
						    			<label for="latitute"><span data-bind="text: lang.lang.latitute"></span> </label>
										<div class="input-prepend">
											<span class="add-on glyphicons direction"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.latitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>
									</div>									
									<!-- // Group END -->
								</div>	
								
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">
						    			<label for="longtitute"><span data-bind="text: lang.lang.longtitute"></span> </label>
						    			<div class="input-prepend">
											<span class="add-on glyphicons google_maps"><i></i></span>
											<input type="text" class="input-large span12" data-bind="value: obj.longtitute, events:{change: loadMap}" placeholder="012345.67897">
										</div>										
									</div>
									<!-- // Group END -->
								</div>										
							</div>
						</div>
					</div>								
							
					<!-- // Bottom Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons nameplate_alt active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
						            </li>								            
						            <li class="span2 glyphicons usd">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.account"></span></span></a>
						            </li>
						            <li class="span2 glyphicons parents">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span><span ></span>Contact</span></a>
						            </li>						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- //GENERAL INFO -->
						        <div class="tab-pane active" id="tab1">
					            	<table class="table table-borderless table-condensed cart_total">					            		
							            <tr>
							                <td>VAT Number</td>
							              	<td>
					            				<input class="k-textbox" data-bind="value: obj.vat_no" 
													placeholder="e.g. 01234567897" style="width: 100%;" />									
							              	</td>							              	
							            	<td><span data-bind="text: lang.lang.phone"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" style="width: 100%;" /></td>
							            </tr>
							            <tr>
							            	<td>Country</td>
							              	<td>
							              		<input data-role="dropdownlist"
							              			   data-option-label="(--- Select ---)"									                   
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: obj.country_id,
									                              source: countryDS" style="width: 100%;" />
							              	</td>							            								              	
							            	<td><span data-bind="text: lang.lang.email"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" style="width: 100%;" />							            	
							            </tr>
							            <tr>
							            	<td>City</td>
							              	<td><input class="k-textbox" data-bind="value: obj.city" placeholder="city name ..." style="width: 100%;" />							              	
							            	<td>Post Code</td>
							              	<td><input class="k-textbox" data-bind="value: obj.post_code" placeholder="e.g. 12345" style="width: 100%;" />
							            </tr>							            
							            <tr>
							            	<td><span data-bind="text: lang.lang.address"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." style="width: 100%;" />									            								              	
							            	<td><span data-bind="text: lang.lang.memo"></span></td>
							              	<td><input class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." style="width: 100%;" /></td>							              	
							            </tr>									            
							            <tr>
							            	<td>
							            		<label for="txtBillTo" data-bind="click: copyBillTo">Billed To <i class="icon-share"></i></label>											            
							            	</td>
							            	<td>
							            		<textarea rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="billed to ..."></textarea>
							            	</td>
							            	<td>Delivered To</td>
							            	<td>
							            		<textarea rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="delivered to ..."></textarea>
							            	</td>
							            </tr>							            							            							            								            								            			            
							        </table>
					        	</div>
						        <!-- //GENERAL INFO END -->

						        <!-- //ACCOUNTING -->
						        <div class="tab-pane" id="tab2">
						        	
						        	<div class="row-fluid">								        		
						            	<div class="span3">
											<label for="ddlAR"><span data-bind="text: lang.lang.account_receiveable"></span> <span style="color:red">*</span></label>
											<input id="ddlAR" name="ddlAR"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.account_id,
								                              source: arDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />													
										</div>
										<div class="span3">
											<label for="ddlRA"><span data-bind="text: lang.lang.revenue_account"></span> <span style="color:red">*</span></label>
											<input id="ddlRA" name="ddlRA"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl" 
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.ra_id,
								                              source: raDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />													
										</div>
										<div class="span3">
											<label for="ddlDepositAccount">Deposit Acccount <span style="color:red">*</span></label>
											<input id="ddlDepositAccount" name="ddlDepositAccount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.deposit_account_id,
								                              source: depositDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />													
										</div>
										<div class="span3">
											<label for="ddlTradeDiscount">Trade Discount <span style="color:red">*</span></label>
											<input id="ddlTradeDiscount" name="ddlTradeDiscount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.trade_discount_id,
								                              source: tradeDiscountDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />														
										</div>												
							        </div>

							        <div class="separator line bottom"></div>

							        <div class="row-fluid">
						        		<div class="span3">						
								            <label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
								            <input id="currency" name="currency" 
								            	data-role="dropdownlist"
								            	data-template="currency-list-tmpl"
								            	data-value-primitive="true"
								                data-text-field="code"
								                data-value-field="locale"
												data-bind="value: obj.locale, source: currencyDS"
												data-option-label="(--- Select ---)" 
												required data-required-msg="required" style="width: 100%;" />
								        </div>
						            	<div class="span3">
											<label for="ddlPaymentTerm"><span data-bind="text: lang.lang.payment_term"></span></label>
											<input id="ddlPaymentTerm" name="ddlPaymentTerm"
												data-header-template="customer-term-header-tmpl"
												data-role="dropdownlist"
								            	data-value-primitive="true"
								                data-text-field="name"
								                data-value-field="id"
												data-bind="value: obj.payment_term_id, source: paymentTermDS" 
												data-option-label="(--- Select ---)"
												style="width: 100%;" />
										</div>
										<div class="span3">
											<label for="ddlPaymentMethod"><span data-bind="text: lang.lang.payment_method"></span></label>
											<input id="ddlPaymentMethod" name="ddlPaymentMethod"
												data-header-template="customer-payment-method-header-tmpl"
												data-role="dropdownlist"
								            	data-value-primitive="true"
								                data-text-field="name"
								                data-value-field="id"
												data-bind="value: obj.payment_method_id, source: paymentMethodDS"
												data-option-label="(--- Select ---)" 
												style="width: 100%;" />
										</div>
										<div class="span3">
											<label for="ddlSettlementDiscount">Settlement Discount <span style="color:red">*</span></label>
											<input id="ddlSettlementDiscount" name="ddlSettlementDiscount"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"      
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.settlement_discount_id,
								                              source: settlementDiscountDS"
								                   data-option-label="(--- Select ---)"
								                   required data-required-msg="required" style="width: 100%;" />														
										</div>												
							        </div>

							        <div class="separator line bottom"></div>

							        <div class="row-fluid">
							        	<div class="span3">
											<label for="ddlTaxItem">Tax </label>
											<input id="ddlTaxItem" name="ddlTaxItem"
												   data-role="dropdownlist"								
												   data-header-template="tax-header-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.tax_item_id,
								                              source: taxItemDS"
								                   data-option-label="(--- Select ---)"
								                   style="width: 100%;" />
										</div>	
								        <div class="span3">
											<label for="txtCreditLimit"><span data-bind="text: lang.lang.credit_limit"></span> </label>								              		
								            <input data-role="numerictextbox"
								                   data-format="n"
								                   data-min="0"										                   
								                   data-bind="value: obj.credit_limit"										                  
								                   style="width: 100%;">
										</div>																							
									</div>
					        	</div>
						        <!-- //ACCOUNTING END -->						       

						        <!-- //CONTACT PERSON -->
						        <div class="tab-pane" id="tab3">
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyContactPerson"><i></i> <span ></span>New Contact Person</span>
						        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.department"></span></th>						                
								                <th><span data-bind="text: lang.lang.phone"></span></th>
								                <th><span data-bind="text: lang.lang.email"></span></th>
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="contact-person-row-tmpl" 
								        		data-bind="source: contactPersonDS">
								        </tbody>										        						        
								    </table>
					        	</div>
						        <!-- //CONTACT PERSON END -->
						    </div>
						</div>
					</div>

					<br>											
					
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>						
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
						<span class="btn btn-icon btn-default glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="quote" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>QUOTE</h2>

				    <br>
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Customer</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"											                    
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">AMOUNT QUOTED</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-4" data-toggle="tab"><i></i> </a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i> Recuring</a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">										
								            <tr>
												<td>
													Balance:
													<span data-bind="text: balance"></span>
												</td>
												<td>
													Credit Allowed:
													<span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>										
											<tr>
												<td>Sale Rep</td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name.."
										                   style="width: 100%" />
												</td>
											</tr>
								            <tr>
								            	<td>Valid Until</td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>
											<tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl" 
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>											
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-4">							            	
							            <p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab4-4">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table class="table table-borderless table-condensed cart_total">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"                 
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"          
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 15%;">QUANTITY</th>
				                <th style="width: 10%;">PRICE</th>
				                <th style="width: 10%;" data-bind="visible: showDiscount">DISCOUNT</th>			                
				                <th style="width: 10%;">AMOUNT</th>
				                <th style="width: 10%;">TAX</th>			                			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="quote-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>											 
	 									<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
	  									<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>

									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>								
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>															
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="quote-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.quote.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="account-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" 
					name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" 
					style="width: 40%;" />

			<input 	id="ddlMesurement"
					data-role="dropdownlist"					
					data-header-template="item-measurement-header-tmpl"                 
                	data-text-field="measurement"
                   	data-value-field="measurement_id"
                   	data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input 	id="txtPrice-#:uid#" 
					name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input 	id="ccbTaxItem" 
					name="ccbTaxItem-#:uid#"
					data-header-template="tax-header-tmpl"
				   	data-role="combobox"                   			   
                   	data-text-field="name"
                   	data-value-field="id"
                   	data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   	style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="saleOrder" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">				    
			    	
		    		<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>					

			        <h2>SALE ORDER</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Customer</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"											                    
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: {backgroundColor: amtDueColor}">
									<div align="left">AMOUNT ORDERED</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i> Recuring</a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
												<td>
													Balance: <span data-bind="text: balance"></span>
												</td>										
												<td>
													Credit Allowed: <span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
								            <tr>
								            	<td>Expected Date</td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>							           
											<tr>							            				
												<td>
								            		Reference	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-auto-bind="false"
								              				data-value-primitive="true"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">							                        	
											<tr>
												<td>Sale Rep</td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>
											<tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"		   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Select job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">
							         	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 15%;">QUANTITY</th>
				                <th style="width: 10%;">PRICE</th>
				                <th style="width: 10%;" data-bind="visible: showDiscount">DISCOUNT</th>
				                <th style="width: 10%;" data-bind="visible: showRequiredDate">DELIV.DATE</th>               
				                <th style="width: 10%;">AMOUNT</th>
				                <th style="width: 10%;">TAX</th>
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="saleOrder-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
      									<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
									</li>
									<li>
										<input type="checkbox" id="chbRequiredDate" class="k-checkbox" data-bind="checked: showRequiredDate">
      									<label class="k-checkbox-label" for="chbRequiredDate">Delivery DATE</label>
									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>								
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="saleOrder-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.saleOrder.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" 
					data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement"  data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"                
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>
		<td class="center" data-bind="visible: showRequiredDate">
			<input data-role="datepicker"
					data-format="dd-MM-yyyy"
					data-parse-formats="yyyy-MM-dd" 
					data-bind="value: required_date"
					style="width:100%;" />
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
					data-header-template="tax-header-tmpl"
				   data-role="combobox"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="customerDeposit" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>Customer Deposit</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 150px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>
									<tr>
										<td>Customers</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: {backgroundColor: amtDueColor}">
									<div align="left">AMOUNT DEPOSITED</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 150px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active" ><a href="#tab1-4" data-toggle="tab" ><i></i></a>
							            </li>
							            <li class="span1 glyphicons pencil"><a href="#tab2-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span2 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i>Recuring</a>
							            </li>								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Option Tab content -->
							    	<div class="tab-pane active" id="tab1-4">
								       	<table class="table table-borderless table-condensed cart_total">						
											<tr>
												<td>Deposit To</td>
												<td>
													<input id="cbbAccount" name="cbbAccount"
														   data-role="combobox"                   
										                   data-value-primitive="true"
										                   data-header-template="account-header-tmpl"           
										                   data-template="account-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                   			  source: depositAccountDS"
										                   data-placeholder="Add Account.."					                                      
										                   required data-required-msg="required" style="width: 100%" />
												</td>						            								            	
											</tr>
											<tr>
												<td>Segment</td>
												<td>
													<select data-role="multiselect"
												   data-value-primitive="true"
												   data-header-template="segment-header-tmpl"
												   data-item-template="segment-list-tmpl"				    
												   data-value-field="id" 
												   data-text-field="code"
												   data-bind="value: obj.segments, 
												   			source: segmentItemDS,
												   			events:{ change: segmentChanges }"
												   data-placeholder="Add Segment.."				   
												   style="width: 100%" /></select>
												</td>													
											</tr>
											<tr>							            				
												<td>
								            		Reference	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-auto-bind="false"
								              				data-value-primitive="true"
															data-text-field="number" 
								              				data-value-field="id"	 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				placeholder="Select Reference" style="width: 100%" />
												</td>
											</tr>
										</table>
							   		</div>
							   		<!-- // Option Tab content END -->

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
							        		data-bind="value: obj.memo2" style="width:100%;" 
							        		placeholder="Please enter transaction purpose here ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-4">
							        	 <p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab4-4">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th style="width: 1%;">No.</th>			               
				                <th style="width: 30%;">ACCOUNT</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 15%;">REFERENCE</th>			                
				                <th style="width: 15%;">AMOUNT</th>			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="customerDeposit-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row">
			
						<!-- Column -->
						<div class="span6">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>
							
							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

						</div>
						<!-- Column END -->


						
						<!-- Column -->
						<div class="span6">
							<table class="table table-borderless table-condensed cart_total">
								<tbody>								
									<tr>
										<td class="right">Total:</td>
										<td class="right strong"><span data-bind="text: total"></span></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>
		           
		            <br>

					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="customerDeposit-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.customerDeposit.lineDS.indexOf(data)+1#			
		</td>				
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"                   
                   data-value-primitive="true"
                   data-header-template="account-header-tmpl"                   
                   data-template="account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."
                   data-list-width="400"                    
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>		
		<td class="" >
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox"
					data-spinners="false" 
					data-format="c" 
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%; text-align: right;" /> 						
		</td>			
    </tr>   
</script>
<script id="cashSale" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>CASH SALE</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Customer</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">AMOUNT RECEIVED</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i> Recuring</a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
								            	<td>Payment Method</td>				
												<td>
													<input data-role="dropdownlist"
								              				data-value-primitive="true"
								              				data-header-template="customer-payment-method-header-tmpl"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-bind="value: obj.payment_method_id,
								              							source: paymentMethodDS"
								              				data-option-label="Select method..."							              				 
								              				style="width: 100%" />
												</td>
											</tr>
								            <tr>
								            	<td>Cash Account</td>							            	
							            		<td>
							            			<input id="ddlCash" name="ddlCash"
							            				data-role="dropdownlist"
							            				data-header-template="account-header-tmpl"
							            				data-template="account-list-tmpl"
							              				data-value-primitive="true"
														data-text-field="name" 
							              				data-value-field="id"
							              				data-bind="value: obj.account_id,
							              							source: cashAccountDS"
							              				data-option-label="Select Account..." 
							              				required data-required-msg="required" 
							              				style="width: 100%" />
												</td>							            	
								            </tr>
								            <tr>
								            	<td>Check Number</td>							            	
							            		<td>
													<input class="k-textbox" placeholder="type check number ..." data-bind="value: obj.check_no" style="width: 100%;">
												</td>							            	
								            </tr>
											<tr>							            				
												<td>
								            		Reference	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-auto-bind="false"
								              				data-value-primitive="true"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">
											<tr>
												<td>
													Balance:
													<span data-bind="text: balance"></span>
												</td>
												<td>
													Credit Allowed:
													<span data-format="n" data-bind="text: obj.credit_allowed"></span>
												</td>
											</tr>
											<tr>
												<td>Sale Rep</td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>		            	
											<tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"	   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">

							        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 15%;">QUANTITY</th>
				                <th style="width: 10%;">PRICE</th>
				                <th style="width: 10%;" data-bind="visible: showDiscount">DISCOUNT</th>	                
				                <th style="width: 10%;">AMOUNT</th>
				                <th style="width: 10%;">TAX</th>
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="cashSale-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
	  									<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for internal ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>
									<tr>
										<td class="right">
											Deposit:
											<span class="strong" data-format="n" data-bind="text: total_deposit"></span>										
										</td>
										<td class="right strong">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-min="0"							                                      
								                   data-bind="value: obj.deposit,
								                              events: { change: changes }"
								                   style="width: 90%;">
										</td>
									</tr>								
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashSale-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.cashSale.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
					data-header-template="tax-header-tmpl"
				   data-role="combobox"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>				
    </tr>   
</script>
<script id="invoice" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>INVOICE</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Customer</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
												   data-auto-bind="false"											                    
								                   data-value-primitive="true"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">AMOUNT DUE</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons circle_info"><a href="#tab3-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">							            
											<tr>
								            	<td>
								            		Term					            						            		
								            	</td>				
												<td>
													<input data-role="dropdownlist"														
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"	
								              				data-header-template='customer-term-header-tmpl'					              				 
								              				data-bind="value: obj.payment_term_id,
								              							source: paymentTermDS,
								              							events:{ change: setTerm }"
								              				data-option-label="Select Term..." 
								              				style="width: 100%" />
												</td>
											</tr>
								            <tr>
								            	<td>Due Date</td>
								            	<td>
								            		<input id="txtDueDate" name="txtDueDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.due_date" 
															required data-required-msg="required"
															style="width:100%;" />
								            	</td>
								            </tr>
											<tr>							            				
												<td>
								            		Reference	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-auto-bind="false"
								              				data-value-primitive="true"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->

							        <!-- Info Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	
										<table class="table table-borderless table-condensed cart_total">
											<tr>
												<td>
													Balance:
													<span data-bind="text: balance"></span>
												</td>
												<td>
													Credit Allowed:
													<span data-format="n" data-bind="text: obj.credit_allowed"></span> 
												</td>
											</tr>						            
								            <tr>
												<td>Sale Rep</td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>						            	
											<tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"								   
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>											
							            </table>
												
							        </div>
							        <!-- // Info Tab content END -->

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">

							        	 <p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 20%;">QUANTITY</th>
				                <th style="width: 13%;">PRICE</th>
				                <th style="width: 1%;" data-bind="visible: showDiscount">DISCOUNT</th>			                
				                <th style="width: 10%;">AMOUNT</th>
				                <th style="width: 11%;">TAX</th>			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="invoice-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding-left: 10px">
									<li>
										<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount">
      									<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
									</li>															
								</ul>
							</div>

							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->
							
							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
							</div>
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>
									<tr>
										<td class="right">
											Deposit:
											<span class="strong" data-format="n" data-bind="text: total_deposit"></span>										
										</td>
										<td class="right strong">
											<input data-role="numerictextbox"
								                   data-format="n"
								                   data-min="0"							                                      
								                   data-bind="value: obj.deposit,
								                              events: { change: changes }"
								                   style="width: 90%;">
										</td>
									</tr>								
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->					

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="invoice-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.invoice.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false" 
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
					data-header-template="tax-header-tmpl"
				   data-role="combobox"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>				
    </tr>   
</script>
<script id="gdn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>GOODS Delivery NOTE</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Customer</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">TOTAL QUANTITY</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-4" data-toggle="tab"><i></i> Option</a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab2-4" data-toggle="tab"><i></i> Address</a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab3-4" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab4-4" data-toggle="tab"><i></i> Recuring</a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-4">						            
							            <table class="table table-borderless table-condensed cart_total">							           							           
											<tr>
												<td>Deliver By</td>
												<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>
											<tr>							            				
												<td>
								            		Reference	            						            		
								            	</td>
								            	<td>
													<input data-role="combobox"
															data-template="reference-list-tmpl"
															data-auto-bind="false"
								              				data-value-primitive="true"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,						              							
								              							events:{change: referenceChanges}" 
								              				style="width: 100%" />
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab2-4">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab3-4">
							        	 <p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab4-4">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>

							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 20%;">QUANTITY</th>			                			                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="gdn-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span4">	
							<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>
							
							<!-- Add New Item -->
							<ul class="topnav addNew">
								<li role="presentation" class="dropdown ">
							  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
							  			Add New Item
				    					<span class="caret"></span>
							  		</a>
						  			<ul class="dropdown-menu addNewItem">  				  				
						  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
						  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
						  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
						  				<li><a href='#/item_service'>Add New Services</a></li>
						  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
						  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
						  			</ul>
							  	</li>				
							</ul>
							<!--End Add New Item -->

							<br><br>
							<div class="well">
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
								<br>						
								<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							</div>
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span4" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span4">
							<table class="table table-condensed table-striped table-white">
								<tbody>																								
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-format="n0" data-bind="text: obj.amount"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="gdn-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.gdn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>						
    </tr>   
</script>
<script id="saleReturn" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>SALE RETURN</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="box-generic well" style="height: 190px;">				
								<table class="table table-borderless table-condensed cart_total">									
									<tr data-bind="visible: isEdit">				
										<td>No.</td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
									</tr>
									<tr>
										<td>Date</td>
										<td class="right">
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy"
													data-parse-formats="yyyy-MM-dd" 
													data-bind="value: obj.issued_date, 
																events:{ change : setRate }" 
													required data-required-msg="required"
													style="width:100%;" />
										</td>
									</tr>								
									<tr>
										<td>Customer</td>
										<td>
											<input id="cbbContact" name="cbbContact"
												   data-role="combobox"
								                   data-value-primitive="true"
								                   data-auto-bind="false"
								                   data-header-template="contact-header-tmpl"
								                   data-template="contact-list-tmpl"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.contact_id,
								                              source: contactDS,
								                              events:{ change: contactChanges }"
								                   data-placeholder="Type Name.."                    
								                   required data-required-msg="required" style="width: 100%" />
										</td>
									</tr>																															
								</table>

								<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
									data-bind="style: { backgroundColor: amtDueColor}">
									<div align="left">AMOUNT RETURN</div>
									<h2 data-bind="text: total" align="right"></h2>
								</div>

							</div>						
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons pen"><a href="#tab2-5" data-toggle="tab"><i></i></a>
							            </li>
							            <li class="span1 glyphicons adress_book"><a href="#tab3-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons paperclip"><a href="#tab4-5" data-toggle="tab"><i></i></a>
							            </li>						            
							            <li class="span1 glyphicons history"><a href="#tab5-5" data-toggle="tab"><i></i></a>
							            </li>						            								            
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-5">						            
							            <table class="table table-borderless table-condensed cart_total">										
											<tr>							            				
												<td>Related Invoices</td>
								            	<td>
													<input data-role="combobox"														
															data-auto-bind="false"
								              				data-value-primitive="true"
								              				data-template="reference-list-tmpl"
															data-text-field="number" 
								              				data-value-field="id"						              				 
								              				data-bind="value: obj.reference_id,
								              							source: referenceDS,
								              							enabled: bolReference,						              							
								              							events:{change: referenceChanges}"
								              				placeholder="Select Invoice..." 
								              				style="width: 100%" />
												</td>
											</tr>			            	
											<tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>
											<tr>
												<td>Job</td>
												<td>
													<input id="ddlJob" name="ddlJob"
														   data-role="dropdownlist"
														   data-header-template="job-header-tmpl"
														   data-template="job-list-tmpl"
														   data-auto-bind="false"				                
										                   data-value-primitive="true"									                   				   
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.job_id, 
										                   			source: jobDS"
										                   data-option-label="Add job..." 
										                   style="width: 100%" />										
												</td>
											</tr>	
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->						        

							        <!-- Memo Tab content -->
							        <div class="tab-pane" id="tab2-5">
							        	<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
										<br>						
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>
							        </div>
							        <!-- // Memo Tab content END -->

							        <!-- Address Tab content -->
							        <div class="tab-pane" id="tab3-5">
							        	Billing Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.bill_to" placeholder="Billing to ..."></textarea>								
										
										Delivery Address
										<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.ship_to" placeholder="Shipping to ..."></textarea>	
												
							        </div>
							        <!-- // Address Tab content END -->						        

							        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab4-5">
							        	 <p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>							            	
							            
							            <input id="files" name="files"
							                   type="file"
							                   data-role="upload"
							                   data-show-file-list="false"
							                   data-bind="events: { 
					                   				select: onSelect
							                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->						        

							        <!-- Recuring Tab content -->
							        <div class="tab-pane" id="tab5-5">							            	
							            
							            <div class="span5">

								        	<input data-role="combobox"
							                   data-placeholder="Select existing recuring ..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="recurring_name"
							                   data-value-field="id"
							                   data-bind="value: obj.recurring_id,
							                              source: recurringDS,
							                              events:{ change:applyRecurring }"
							                   style="width: 100%" />

							                <br><br>
							                
							                <div align="right">
								                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
								            </div>

							            </div>

							            <div class="span7">

								            <table style="width: 100%">
								            	<tr align="right">
								            		<td>
								            			Name
								            		</td>
								            		<td>
								            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
								            					placeholder="Recurring name.." 
								            					style="width: 40%;" />
								            			Start
										                <input data-role="datepicker"
																data-format="dd-MM-yyyy"
																data-parse-formats="yyyy-MM-dd"
																data-bind="value: obj.start_date"
																style="width: 40%;" />
								            		</td>
								            	</tr>
								            	<tr align="right">
								            		<td>
									            		Every
									            	</td>
								            		<td>
									            		<input data-role="numerictextbox"
										                   data-format="n0"
										                   data-min="0"								                   
										                   data-bind="value: obj.interval"
										                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.frequency,
											                              source: frequencyList,
											                              events: { change: frequencyChanges }"
											                   style="width: 45%;" />
									            	</td>
								            	</tr>
									            <tr align="right">
									            	<td>
									            		On
									            	</td>							            	
									            	<td>

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month,
											                   			  visible: showMonth,
											                              source: monthList"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.month_option,
											                   			  visible: showMonthOption,
											                              source: monthOptionList,
											                              events: { change: monthOptionChanges }"										                   
											                   style="width: 45%;" />

									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.week,
											                   			  visible: showWeek,
											                              source: weekDayList"										                  
											                   style="width: 45%;" />										            
											        
									            		<input data-role="dropdownlist"									                   
											                   data-value-primitive="true"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: obj.day,
											                   			  visible: showDay,
											                              source: dayList"										                   
											                   style="width: 45%;" />

									            	</td>
									            </tr>
								            </table>

								        </div>									     
							            
							        </div>
							        <!-- // Recuring Tab content END -->						        								        

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>ITEMS</th>
				                <th>DESCRIPTION</th>
				                <th style="width: 15%;">QUANTITY</th>
				                <th style="width: 10%;">PRICE</th>
				                <th style="width: 10%;" data-bind="visible: showDiscount">DISCOUNT</th>	                
				                <th style="width: 10%;">AMOUNT</th>
				                <th style="width: 10%;">TAX</th>		                			                			                
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="saleReturn-template" 
				        		data-auto-bind="false"
				        		data-bind="source: lineDS"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span6">
							<table class="table table-condensed table-white">
								<tr>
									<td>						
										<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

										<div class="btn-group">
											<div class="leadcontainer">
												
											</div>
											<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
											<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
												<li>
													<input type="checkbox" id="chbDiscount" class="k-checkbox" data-bind="checked: showDiscount" />												
													<label class="k-checkbox-label" for="chbDiscount">DISCOUNT</label>
												</li>																
											</ul>
										</div>

										<!-- Add New Item -->
										<ul class="topnav addNew">
											<li role="presentation" class="dropdown ">
										  		<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
										  			Add New Item
							    					<span class="caret"></span>
										  		</a>
									  			<ul class="dropdown-menu addNewItem">  				  				
									  				<li><a href='#/item'>Add New Inventory for Sale</a></li>
									  				<li><a href='#/non_inventory_part'>Add New Other Inventory</a></li>
									  				<li><a href='#/fixed_asset'>Add New Fixed Assets</a></li>
									  				<li><a href='#/item_service'>Add New Services</a></li>
									  				<li><a href='#/txn_item'>Add New Transaction</a></li>  				
									  				<li><a href='#/other_charge'>Add New Other Charge</a></li> 				
									  			</ul>
										  	</li>				
										</ul>
										<!--End Add New Item -->

									</td>			
									<td class="right">
										Amount Paid:
										<span data-format="n" data-bind="text: obj.amount_paid"></span>
									</td>							
									<td class="right">
										Remaining:
										<span data-format="n" data-bind="text: remain"></span>
									</td>
								</tr>							
							</table>						

							<table class="table table-bordered table-inverse table-striped table-vertical-center" data-bind="visible: showReturn">
						        <thead>
						            <tr>
						            	<th class="center" style="width: 1%;">
						            		<button type="button" data-role="button" data-bind="click: addRowOption"><i class="icon-plus"></i></button>
						            	</th>
						            	<th style="width: 30%">TYPE OF RETURN</th>					               
						                <th>CONDITION</th>					                		                
						                <th style="width: 20%">AMOUNT</th>		                			                			                
						            </tr> 
						        </thead>
						        <tbody data-role="listview" 
						        		data-template="saleReturn-return-line-template" 
						        		data-auto-bind="false"
						        		data-bind="source: returnDS"></tbody>			        
						    </table>
														
						</div>
						<!-- Column END -->

						<!-- Column -->
						<div class="span3" align="center">
							<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />	
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span3">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>
									<tr>
										<td class="right">Total Tax:</td>
										<td class="right strong"><span data-bind="text: tax"></span></td>
									</tr>																
									<tr>
										<td class="right"><h4>Total:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->							

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="saleReturn-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.saleReturn.lineDS.indexOf(data)+1#			
		</td>		
		<td>
			<input id="ccbItem" name="ccbItem-#:uid#"
				   data-role="combobox"
				   data-header-template="item-header-tmpl"
				   data-template="item-list-tmpl"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_id, 
                   			  source: itemDS,
                   			  events:{ change: itemChanges }"
                   placeholder="Add Item..." 
                   required data-required-msg="required" style="width: 100%" />			
		</td>		
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>
			<input id="txtQuantity-#:uid#" name="txtQuantity-#:uid#" 
					data-role="numerictextbox" 
					data-format="n0" data-min="0"
					data-spinners="false"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 40%;" />

			<input id="ddlMesurement" data-role="dropdownlist"
					data-header-template="item-measurement-header-tmpl"                  
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="value: measurement_id,
                   			  source: item_prices,
                   			  events:{ change: measurementChanges }"
                   data-option-label="UM"
                   style="width: 57%;" />
		</td>					
		<td>
			<input id="txtPrice-#:uid#" name="txtPrice-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false"
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>					
		<td class="center" data-bind="visible: showDiscount">
			<input data-role="numerictextbox"
                   data-format="p0"
                   data-min="0"
                   data-max="0.99"
                   data-step="0.1"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 65px;">			
		</td>				
		<td class="right">
			<span data-format="n" data-bind="text: amount"></span> 						
		</td>
		<td>
			<input id="ccbTaxItem" name="ccbTaxItem-#:uid#"
					data-header-template="tax-header-tmpl"
				   data-role="combobox"                   			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: tax_item_id, 
                   			  source: taxItemDS,
                   			  events:{ change: changes }"
                   style="width: 100%" />			
		</td>						
    </tr>   
</script>
<script id="saleReturn-return-line-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRowOption }"></i>					
		</td>			
		<td>
			<input id="ddlOption-#:uid#" name="ddlOption-#:uid#"
				   data-role="dropdownlist"				                      			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: type, 
                   			  source: optionList,
                   			  events:{ change: optionChanges }"
                   data-option-label="Select Option..." 
                   style="width: 100%" />            
		</td>
		<td>
			<input id="cbbInvoice-#:uid#" name="cbbInvoice-#:uid#"
				   data-role="combobox"
				   data-template="reference-list-tmpl"				                      			   
                   data-text-field="number"
                   data-value-field="id"
                   data-bind="value: reference_id, 
                   			  source: invoiceDS,
                   			  visible: showInvoice,
                   			  events:{ change: invoiceChanges }"
                   placeholder="Select Invoice..." 
                   style="width: 100%" />

            <input id="ddlAccount-#:uid#" name="ddlAccount-#:uid#"
				   data-role="dropdownlist"
				   data-template="account-list-tmpl"				                      			   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id, 
                   			  source: accountDS,
                   			  visible: showAccount"                   
                   style="width: 100%" />            
		</td>						
		<td>
			<input id="txtAmount-#:uid#" name="txtAmount-#:uid#" 
					data-role="numerictextbox" 
					data-format="n"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>								
    </tr>   
</script>

<script id="statement" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content saleSummaryCustomer">
					
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					
					<br>
					<br>
					
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //DATE -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
							        	<!-- //DATE END -->
								        
										<!-- //FILTERS -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlContact"><span ></span>Filtered by</label>
													<input id="ddlContact" name="ddlContact"
														   data-role="combobox"
														   data-template="contact-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: contact_id,
										                              source: contactDS"
										                   data-option-label="(--- Select ---)"
										                   style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlSortBy"><span ></span>Sorted By</label>
													<input id="ddlSortBy" name="ddlSortBy"
														   data-role="dropdownlist"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>
							        	<!-- //FILTERS END -->

							        	<!-- PRINT -->
								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //PRINT END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>
					
					<div class="block-title">
						<h3 data-bind="text: company.name"></h3>
						<h2>Statement</h2>
						<p data-bind="text: displayDate"></p>
					</div>
					<div class="customer-name">
						<p><b>Customer Name: Test</b></p>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Date</th>
							<th>Ref</th>
							<th>Description</th>
							<th>Due Date</th>
							<th>Charge</th>							
							<th>Credit</th>
							<th>Total</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>					
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>					
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>				
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>						
						</tr>
						<tr>
							<th colspan="7" style="text-align:right; color: #fff; padding-right: 8px !important;">Account Current Balance</th>
						</tr>						
					</table>
					<table class="table-statement">
						<tr>
							<td rowspan="2" align="center">Aging</td>
							<td>Current</td>
							<td>1-30</td>
							<td>31-60</td>
							<td>61-90</td>
						</tr>
						<tr>
							<td>Amount</td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>							
			</div>
		</div>
	</div>
</script>
<!-- <script id="statement" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">

							
				<div class="widget">
				    <div class="widget-head hidden-print">
				    	<span class="btn btn-primary pull-right" 
								onclick="javascript:window.history.back()">X</span>
				        
				        <h4 class="heading glyphicons notes"><i></i>Statement</h4>							        	
				    </div>
				    <div class="widget-body">					
					
						<div class="hidden-print">
					    	<input id="sorter" name="sorter"
					    	   data-role="dropdownlist"                   
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList" />
					                                   
					        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
					        
					       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />						        	                    	            	
					  		
					  		<button id="search" type="button" data-role="button"><i class="icon-search"></i></button>
					  		|
							<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>					    	
					    </div>

					    <br>					    

					    <div align="center">
							<h3>Statement</h3>
							
							<span id="strDate"></span>														
						</div>

						<div class="well">
							<table class="table table-invoice">
								<tbody>
									<tr>
										<td style="width: 50%;">											
											<h2 data-bind="text: company.name"></h2>
											<address class="margin-none">												
												<p data-bind="text: company.address"></p>												
												<abbr>Email:</abbr> <span data-bind="text: company.email"></span> <br> 
												<abbr>Phone:</abbr> <span data-bind="text: company.mobile"></span> <br>
												<abbr>Tel:</abbr> <span data-bind="text: company.phone"></span>
											</address>
										</td>
										<td class="right">											
											<h2 data-bind="text: obj.fullname"></h2>
											<address class="margin-none">
												<p data-bind="text: obj.bill_to"></p>
												<abbr>Email:</abbr> <span data-bind="text: obj.email"></span> <br> 
												<abbr>Phone:</abbr> <span data-bind="text: obj.phone"></span>												
											</address>
											<br>
											<div style="font-size: x-large;">Total: <span data-bind="text: total"></span></div>
										</td>
									</tr>
								</tbody>
							</table>
						</div>

						<br>			        
					    
					    <div id="gridAging"></div>

					    <br>

					    <table id="grid">			                
			                <thead>
			                    <tr>
			                        <th>Date</th>
			                        <th>Description</th>
			                        <th>Amount</th>			                        
			                    </tr>
			                </thead>
			                <tbody></tbody>
			            </table>	
						
					</div> 
				</div>
				

			</div>							
			</div>
		</div>
	</div>
</script> -->
<script id="statement-row-template" type="text/x-kendo-template">	
	<tr data-uid="#: uid #">
		<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
		<td>#=description#</td>
		<td align="right">#=kendo.toString(amount, "c", locale)#</td>		
	</tr>
</script>

<script id="customerSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>General Customer Setting</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong">Customer Type</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong">Payment Method</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Payment Term</span></a>
	            </li>
	            <li><a href="#tab4-1" class="glyphicons list" data-toggle="tab"><i></i><span class="strong">Custom Forms</span></a>
	            </li>	                        
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- CUSTOMER TYPE -->
	            <div class="tab-pane active" id="tab1-1">
	            	<div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="input customer type ..." data-bind="value: contactTypeName">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="input abbr ..." data-bind="value: contactTypeAbbr">
					    <select class="span3" id="appendedInputButtons" data-bind="value: contactTypeCompany" >
			                <option value="0">Not A Company</option>
			                <option value="1">It Is A Company</option>			                
			            </select>
					    <button class="btn btn-default" type="button" data-bind="click: addContactType"><i class="icon-plus"></i> Add Type</button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Type</th>
	            				<th>Abbr</th>
	            				<th>Is Company</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="customerSetting-edit-contact-type-template"
				                data-template="customerSetting-contact-type-template"
				                data-bind="source: contactTypeDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // CUSTOMER TYPE END -->

	            <!-- PAYMENT METHOD -->
	            <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i> Add Method</button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-method-template"
				                data-template="customerSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // PAYMENT METHOD END -->

	            <!-- PAYMENT TERM -->
	            <div class="tab-pane" id="tab3-1">
            		<div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="net due ..." data-bind="value: paymentTermNetDue">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="period ..." data-bind="value: paymentTermPeriod">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i> Add Term</button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th>Net Due</th>
	            				<th>Dis. Period</th>
	            				<th>Dis. %</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-term-template"
				                data-template="customerSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // PAYMENT TERM END -->

	            <!-- Tab Invocice Custom content -->
	            <div class="tab-pane" id="tab4-1">
            		
	            	<table class="table table-bordered table-condensed table-striped table-primary table-vertical-center checkboxs">
	            		<thead>
	            			<tr class="widget-head">
	            				<th class="center">Name</th>
	            				<th class="center">Form Type</th>
	            				<th class="center">Last Edited</th>
	            				<th class="center">Action</th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
								 data-selectable="false"
				                 data-template="customerSetting-form-template"
				                 data-bind="source: txnTemplateDS">				            
	            		</tbody>
	            	</table>
	            	<a id="addNew" class="btn-icon btn-primary glyphicons ok_2" href="#/invoice_custom" style="width: 110px;"><i></i>Add New</a>
	            </div>
	            <!-- // Tab Invoice Custom content END -->

	        </div>
	    </div>

	</div>
</script>
<script id="customerSetting-contact-type-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>
    		#:abbr#
   		</td>
   		<td>
    		#if(is_company=="1"){#
    			Yes
    		#}else{#
    			No
    		#}#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		        <span class="k-button" data-bind="click: goPattern">Pattern</span>
		   	</div>		   	
   		</td>   		
   	</tr>
</script>
<script id="customerSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <dl>                
            <dd>
                <select data-bind="value: is_company" >
	                <option value="0">Not a company</option>
	                <option value="1">It is a company</option>			                
	            </select>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="customerSetting-payment-method-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="customerSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="customerSetting-payment-term-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>
    		#:net_due#
   		</td>
   		<td>
    		#:discount_period#
   		</td>
   		<td>
    		#:discount_percentage#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#		        
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="customerSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="netDue" required="required" validationMessage="required" />
                <span data-for="netDue" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_period" name="period" required="required" validationMessage="required" />
                <span data-for="period" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="customerSetting-form-template" type="text/x-kendo-template">
	<tr>
		<td ><a style="text-align: left; padding-left: 10px;" href="\\#/invoice_custom/#= id # "> #=name#  </a></td>
		<td style="text-align: left; padding-left: 10px!important;"> 
			#= type.replace("_"," ")# 
		</td>
		<td class="center"> #if( updated_at ){ # 
				#=kendo.toString(new Date(updated_at),"D")# 
			 #}else{ #
			 	#=kendo.toString(new Date(created_at),"D")# 
			 #}#
		</td>
		<td class="center">
			<a class="btn-action glyphicons pencil btn-success" href="\\#/invoice_custom/#= id # "><i></i></a>
			<a data-bind="click: deleteForm" class="btn-action glyphicons remove_2 btn-danger"><i></i></a>
		</td>
	</tr>
</script>

<script id="job" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">

					<div class="hidden-print">
				    	<div class="pull-right">

				    		<span class="glyphicons no-js remove_2" 
								data-bind="click: cancel"><i></i></span>						
						</div>

				        <h2>JOB</h2>				        				        				        	
				    </div>			   

				    <br>

				    <div data-role="window"
		                 data-title="Job"		                 
		                 data-width="600"
		                 data-actions="{}"
		                 data-position="{top: '30%', left: '30%'}"
		                 data-height="300"
		                 data-bind="visible: isVisible">

						<table class="table table-bordered table-primary table-striped table-vertical-center">							
							<tr>
								<td>Name</td>
								<td>
									<input class="k-textbox" placeholder="type name ..." data-bind="value: obj.name" style="width: 100%;">
								</td>
							</tr>
							<tr>
								<td>Description</td>
								<td>
									<input class="k-textbox" placeholder="type description ..." data-bind="value: obj.description" style="width: 100%;">
								</td>
							</tr>
							<tr>
								<td>Customer</td>
								<td>
									<input data-role="combobox"
										   data-template="contact-list-tmpl"				            			               			   		                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.contact_id,
						                              source: contactDS"
						                   style="width: 100%;" />
								</td>
							</tr>							
						</table>

						<br>

						<div align="center">
							<span class="btn btn-icon btn-primary glyphicons ok_2" data-bind="click: save" style="width: 80px;"><i></i> Save</span>
							<span class="btn btn-icon btn-danger glyphicons remove_2" data-bind="click: closeWindow" style="width: 80px;"><i></i> Close</span>						
						</div>
					</div>
					
					<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i> Add New Job</button>
					                                					
	            	<table class="table table-bordered table-primary table-striped table-vertical-center">
	            		<thead style="background-color: blue; color: #fff; font-weight: bold">
	            			<tr>	            				
	            				<th>NAME</th>
	            				<th>DESCRIPTION</th>
	            				<th>CUSTOMER</th>	            					            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"			            			
				                data-template="job-template"
				                data-bind="source: dataSource"></tbody>
	            	</table>
	            </div>	            						
			</div>
		</div>
	</div>
</script>
<script id="job-template" type="text/x-kendo-tmpl">                    
    <tr>    	
    	<td>#=name#</td>
    	<td>#=description#</td>
    	<td>
    		#if(contact.length>0){#
    			#if(contact[0].company){#
    				#=contact[0].company#
    			#}else{#
    				#=contact[0].surname# #=contact[0].name#
    			#}#
    		#}#
    	</td>    	
    	<td>
    		<span data-bind="click: edit"><i class="icon-edit"></i> Edit</span>
    		|
    		<span data-bind="click: delete"><i class="icon-remove"></i> Delete</span>
    	</td>
   	</tr>
</script>

<script id="customerReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">

		<div class="span7">
			<div class="row-fluid sale-report">				
				<h2>SALE MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports in 
					different ways to help analyze your revenue performance.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td width="50%">
								<h3><a href="#/sale_summary_customer">Sale Summary by Customer</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/customer_transaction_list">Customer Transaction List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td width="50%">
								<p>
									Summarizes total sales for each customer within a period 
									of time so you can see which ones generate the most revenue for you.
								</p>
								
							</td>
							<td width="50%">
								<p>
									List of all transactions related to and grouped by each customer, including invoice, cash sale
								</p>
							</td>
							
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/sale_detail_customer">Sale Detail by Customer</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/deposit_detail_customer">Deposit Detail by Customer</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Lists individual sale transactions by date for each customer with a period of time.
								</p>
							</td>
							<td width="50%">
								<p>
									Provides detailed information about customer deposit for specific order, prepayment, or credit.
								</p>
							</td>
						</tr>

						<tr>
							<td width="50%">
								<h3><a href="#/sale_summary_product">Sale Summary by Product/ Services</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/sale_detail_product">Sale Detail by Product/ Services</a></h3>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<p>
									Summarizes total sales for each product/ service within a period of time. In addition, it also includes gross profit margin, quantity, amount, cost, and average prices. 
								</p>
							</td>
							<td width="50%">
								<p>
									Lists individual sale transactions by date for each product/ service with a period of time.
								</p>
							</td>
						</tr>
						<tr>
							<td width="50%">
								<h3><a href="#/sale_job_engagement">Sale by Job/Engagement</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/sale_order_list">Sale Order List</a></h3>
							</td>
						</tr>
					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>RECEIVABLE MANAGEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports.
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td >
								<h3><a href="#/customer_balance_summary">Customer Balance Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_balance_detail">Customer Balance Detail</a></h3>								
							</td>						
						</tr>
						<tr>
							<td>
								<p>
									Show each customer’s total outstanding balances.
								</p>
								
							</td>
							<td >
								<p>
									Lists individual unpaid invoices for each customer
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/receivable_aging_summary">Receivable Aging Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/receivable_aging_detail">Receivable Aging Detail</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all unpaid invoices for the current period, 30, 60, 90, 
									and more than 90 days, grouped by individual customers.
								</p>
							</td>
							<td >
								<p>
									Lists individual unpaid invoices, grouped by customer. This includes due date, 
									outstanding days (aging days), and amount.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/list_invoices_collect">List of invoices to be collected</a></h3>
							</td>
							<td >
								<h3><a href="#/collect_report">Collection Report</a></h3>
							</td>
						</tr>
						<tr>
							<td>
								<p>
									Lists all unpaid invoices, grouped by Due today and Overdue.
								</p>
							</td>
							<td >
								<p>
									Lists of collected invoices for the select period of time, group by method of payment.
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/invoice_list">Invoice List</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_list">Customer List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Shows a chronological list of all your invoices for a selected date range.
								</p>
							</td>
							<td >
								<p>
									List of all active customers
								</p>
							</td>
						</tr>

					</table>
				</div>
			</div>
			
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<h3><a href="#/customer_recurring">Recurring Customer Template List</a></h3>
							</td>
							<td >
								<h3><a href="#/customer_setting">Payment Method & Term List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 48%; padding-right: 8px !important;">
								<p></p>								
							</td>
							<td>
								<p>
									List the types of payments and the term that determine due date for payment from customers.
								</p>
							</td>
							
						</tr>
						<tr >
							<td></td>														
						</tr>

					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>SALE OVERVIEW</h2>
					<div align="center" class="text-large strong" data-bind="text: sale"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: sale_customer"></span>
								<br>
								<span>Customer</span>
							</td>
							<td>
								<span data-bind="text: sale_product"></span>
								<br>
								<span>Product</span>
							</td>
							<td>
								<span data-bind="text: order"></span>
								<br>
								<span>Order</span>
							</td>
							<td >
								<span data-bind="text: sale_order"></span>
								<br>
								<span>Sale Order</span>
							</td>

						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
	            </div>
			</div>
			<div class="report-chart">
				<div class="widget-body receivable-overview" style="background-color: LightGray">
					<h2>RECEIVABLES MANAGEMENT</h2>
					<div align="center" class="text-large strong" data-bind="text: ar"></div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span data-bind="text: ar_open"></span>
								<br>
								<span>Open</span>
							</td>
							<td>										
								<span data-bind="text: ar_customer"></span>
								<br>
								<span>Customer</span>
							</td>
							<td>
								<span data-bind="text: ar_overdue"></span>
								<br>
								<span>Overdue</span>
							</td>
							<td>
								<span data-bind="text: collection_day"></span> days
								<br>
								<span>Collection Days</span>
							</td>
						</tr>
					</table>
				</div>
				<!-- Graph -->
				<div class="home-chart">
					<div data-role="chart"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
		                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
	            <!-- End Graph -->
            </div>
			</div>
		</div>
	</div>
</script>
<script id="saleSummaryCustomer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: saleSummary.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleSummary.filterDB, events: {change: saleSummary.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleSummary.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="block-title">
						<h4 data-bind="text: companyName"></h4>
						<h2>Sale Summary by Customer</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<p>Total Customer</p>
								<span data-bind="text: count"></span>
							</div>

						</div>
						<div class="span7">
							<div class="total-sale">
								<p>Total Sale</p>
								<span data-bind="text: total"></span>
							</div>
						</div>
					</div>
					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th><span>Customer</span></th>
								<th><span>Total Sale</span></th>
							</tr>
						</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
				                data-template="sale-summary-tmpl"
				                data-bind="source: saleSummary.dataSource" >
				        </tbody>
	            	</table>

				</div>
			</div>
		</div>
	</div>	
</script>
<script id="sale-summary-tmpl" type="text/x-kendo-template">
	<tr>
		<td>#=customer#</td>
		<td align="right">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="customerTransactionList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: customerTransaction.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: customerTransaction.filterDB, events: {change: customerTransaction.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: detailSummary.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Customer Transaction List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span4">
									<p>Total Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span4">
									<p>Cash Sale</p>
									<span>500</span>
								</div>
								<div class="span4">
									<p>Cash Receipt</p>
									<span>1,200</span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-sale">
								<div class="span6">
									<p>Total Sale</p>
									<span data-bind="text: total"></span>
								</div>
								<div class="span6">
									<p>Customer Balance</p>
									<span>2,200.00</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Sale Rep</th>
								<th>Amount</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: customerTransaction.dataSource"
									 data-template="customertransactionlist-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="customertransactionlist-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="saleDetailCustomer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: detailSummary.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: detailSummary.filterDB, events: {change: detailSummary.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: detailSummary.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Sale Detail by Customer</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<p>Total Customers</p>
								<span data-bind="text: count"></span>
							</div>

						</div>
						<div class="span7">
							<div class="total-sale">
								<p>Total Sale</p>
								<span data-bind="text: total"></sapn>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>Item/service</th>
								<th>Qty</th>
								<th>Price</th>
								<th>Amount</th>
							</tr>
						</thead>
						<tbody data-role="listview" data-bind="source: detailSummary.dataSource" data-auto-bind="false" data-template="saleDetailCustomerReportItem">
						</tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="4"><span data-bind="text: total"></span></th>
							</tr>
						</tfoot>
					</table>

				</div>
			</div>
		</div>
	</div>
	<br>
	<hr>
	<br>
</script>
`<script id="saleDetailCustomerReportItem" type="text/x-kendo-template">
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td></td>
				<td></td>
				<td></td>
				<td align="right">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>
				#if(items[i].lines.length >0) {#
					#for(var x = 0; x < items[i].lines.length; x++) {#
						<tr style="font-weight: italic">
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td>#=items[i].lines[x].name#</td>
							<td>#=items[i].lines[x].quantity#</td>
							<td>#=kendo.toString(items[i].lines[x].price, 'c2')#</td>
							<td align="right">#=kendo.toString(items[i].lines[x].amount, 'c2')#</td>
						</tr>
					#}#
				#}#
		#}#
	#}#
	<tr style="font-weight: 700; ">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td align="right">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="saleSummaryProduct" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: summaryProductSale.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: summaryProductSale.filterDB, events: {change: summaryProductSale.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: summaryProductSale.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Sale Summary by Product/Services</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Product/services</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>AVG Sale</p>
									<span data-bind="text: total_avg"></span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span data-bind="text: total_sale"></span>
								</div>
								<div class="span6">
									<p>Gross Profit Margin</p>
									<span data-bind="text: gpm"></span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>ITEM</th>
								<th>QTY</th>
								<th>AMOUNT</th>
								<th>AVG PRICE</th>
								<th>COST</th>
								<th>GROSS PROFIT MARGIN</th>								
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: summaryProductSale.dataSource"
									 data-template="saleSummary-product-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="4"><span data-bind="text: total"></span></th>
							</tr>
						</tfoot>
					</table>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="saleSummary-product-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td>#=qty#</td>
		<td>#=kendo.toString(amount, 'c2')#</td>
		<td>#=avg_price#</td>		
		<td>#=cost#</td>
		<td>#=gross_profit_margin#</td>
	</tr>
</script>
<script id="depositDetailCustomer" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: depositDetail.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: depositDetail.filterDB, events: {change: depositDetail.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: depositDetail.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Deposit Detail By Customer</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<p>Number of Customer Deposit</p>
								<span data-bind="text: count"></span>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<p>Customer Deposit Balance</p>
								<span data-bind="text: total"></span>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>Amount</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: depositDetail.dataSource"
									 data-template="cusotmerDeposit-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>


				</div>
			</div>
		</div>
	</div>
</script>
<script id="cusotmerDeposit-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: 700;">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="saleDetailProduct" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: detailCustomerSale.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: detailCustomerSale.filterDB, events: {change: detailCustomerSale.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: detailCustomerSale.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Sale Detail by Product/Service</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Product/services</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Total Sale</p>
									<span data-bind="text: total"></span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Product Sale</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Qty on Hand</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>QTY</th>
								<th>PRICE</th>
								<th>AMOUNT</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: detailCustomerSale.dataSource"
									 data-template="productSale-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>


				</div>
			</div>
		</div>
	</div>
</script>
<script id="productSale-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td>#=items[i].qty#</td>
				<td>#=items[i].price#</td>
				<td>#=items[i].amount#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		
	</tr>
</script>
<script id="customerBalanceSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: summaryBalance.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: summaryBalance.filterDB, events: {change: summaryBalance.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: summaryBalance.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>	

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Customer Balance Summary</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Number Customer</p>
									<span>1,200</span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Customer Balance</p>
									<span data-bind="text: total"></span>
								</div>
								<div class="span6">
									<p>Open Invoice</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th><span>CUSTOMER NAME</span></th>
								<th><span>ACCOUNT RECEIVABLE BALANCE</span></th>
							</tr>
						</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
				                data-template="balance-summary-tmpl"
				                data-bind="source: summaryBalance.dataSource" >
				        </tbody>
	            	</table>
				</div>
			</div>
		</div>
	</div>
</script>
<script id="balance-summary-tmpl" type="text/x-kendo-template">
	<tr>
		<td>#=customer#</td>
		<td align="right">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="customerBalanceDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: saleDetail.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleDetail.filterDB, events: {change: saleDetail.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleDetail.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Customer Balance Detail</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Open Invoice</p>
									<span data-bind="text: openInvoice"></span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Total Customer Balance</p>
									<span data-bind="text: total"></span>
								</div>								
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>								
								<th>AMOUNT</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: saleDetail.dataSource"
									 data-template="customerBalanceDetail-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3"><span data-bind="text: total"></span></th>
							</tr>
						</tfoot>
					</table>


				</div>
			</div>
		</div>
	</div>
</script>
<script id="customerBalanceDetail-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>		
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>				
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
</script>
<script id="receivableAgingSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: receivableAging.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: receivableAging.filterDB, events: {change: receivableAging.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: receivableAging.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Receivable Aging Summary</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Average Aging</p>
									<span>-</span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Customer Balance</p>
									<span data-bind="text: total"></span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>CURRENT</th>
								<th>1-30</th>
								<th>31-60</th>
								<th>61-90</th>
								<th>OVER 90</th>
								<th>TOTAL</th>							
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: receivableAging.dataSource"
									 data-template="receivableAginglist-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>


				</div>
			</div>
		</div>
	</div>
</script>
<script id="receivableAginglist-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td>#=kendo.toString(underThirty, 'c2')#</td>
		<td>#=kendo.toString(thirty, 'c2')#</td>
		<td>#=kendo.toString(sixty, 'c2')#</td>
		<td>#=kendo.toString(ninety, 'c2')#</td>
		<td>#=kendo.toString(overNinety, 'c2')#</td>
		<td>#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="receivableAgingDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: receivableDetail.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: receivableDetail.filterDB, events: {change: receivableDetail.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: receivableDetail.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Receivable Aging Detail</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span data-bind="text: total"></span>
								</div>
								<div class="span6">
									<p>Cash Receipt</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Average Aging</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>Aging</th>
								<th>Balance</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: receivableDetail.dataSource"
									 data-template="receivableAgingDetaillist-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="receivableAgingDetaillist-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td>#=items[i].outstanding#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="listInvoicesCollect" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: listInvoice.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: listInvoice.filterDB, events: {change: listInvoice.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: listInvoice.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>List Invoices Collect</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span data-bind="text: total"></span>
								</div>
								<div class="span6">
									<p>Customer Balance</p>
									<span>-</span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Customer Balance</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Average Aging</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>Balance</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: listInvoice.dataSource"
									 data-template="listInvoicesCollectlist-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>


				</div>
			</div>
		</div>
	</div>
</script>
<script id="listInvoicesCollectlist-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="collectReport" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: collectReportDB.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: collectReportDB.filterDB, events: {change: collectReportDB.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: collectReportDB.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3 data-bind="text: institute.name"></h3>
						<h2>Collect Report</h2>
						<p>From <span data-bind="text: startDate"></span> to <span data-bind="text: endDate"></p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Customer Balance</p>
									<span data-bind="text: total"></span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>NUmber of Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Number</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>Balance</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: collectReportDB.dataSource"
									 data-template="collectReportlist-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="3">Total</th>
								<th colspan="5">(600.00)</th>
							</tr>
						</tfoot>
					</table>

				</div>
			</div>
		</div>
	</div>
</script>
<script id="collectReportlist-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="invoiceList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">
			    	<span class="pull-right glyphicons no-js remove_2"
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: invoiceListDB.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: invoiceListDB.filterDB, events: {change: invoiceListDB.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: invoiceListDB.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Invoice List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Customer Balance</p>
									<span data-bind="text: total"></span>
								</div>
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Number of Customer</p>
									<span data-bind="text: count"></span>
								</div>
								<div class="span6">
									<p>Number</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Due Date</th>
								<th>Memo</th>
								<th>Status</th>
								<th>Segment</th>
								<th>Balance</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: invoiceListDB.dataSource"
									 data-template="invoice-list-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="4">(600.00)</th>
							</tr>
						</tfoot>
					</table>

				</div>
			</div>
		</div>
	</div>
</script>
<script id="invoice-list-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].due_date#</td>
				<td>#=items[i].memo#</td>
				<td>#=items[i].status#</td>
				<td>#if (items[i].segments.length){#
					#for (var x=0; x<items[i].segments.length; x++) {#
						#=items[i].segments[x].code#
						<br>

					#}#
				#}#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="customerList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content">
					<div class="hidden-print">
						<span class="pull-right glyphicons no-js remove_2" 
							onclick="javascript:window.history.back()"><i></i></span>

						<input data-role="dropdownlist"
						   data-option-label="Select Type..."		                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: contact_type_id,
		                              source: contactTypeDS" />

		                <input data-role="dropdownlist"
						   data-option-label="Select Status..."		                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: status,
		                              source: statusList" />

						<button id="search" type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
						<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
					</div>

					<h3 align="center" data-bind="text: lang.lang.customer_list"></h3>

					<br>
			
					<div data-role="grid"
						 data-groupable="true"
						 data-sortable="true"
						 data-pageable="true"			                 		                 
		                 data-columns="[
                             { field: 'number', title:'Number' },
                             { field: 'surname', title:'Surname' },
                             { field: 'name', title:'Name' },
                             { field: 'contact_type_id', title:'Type', template:'#=contact_type#' },
                             { field: 'phone', title:'Phone' },
                             { field: 'status', title:'Status', template:'#=status==1?&quot;Active&quot;:&quot;Inactive&quot;#' }
                                                       ]"
		                 data-bind="source: dataSource"></div>

				</div> <!-- //End div example-->				
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>
<script id="customerBalance" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content">									

					<div class="box-generic hidden-print">
						
						<span class="pull-right glyphicons no-js remove_2" 
							onclick="javascript:window.history.back()"><i></i></span>

						Type:
						<input data-role="dropdownlist"
						   data-option-label="Select Type..."		                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: contact_type_id,
		                              source: contactTypeDS" />

		                Status:
		                <input data-role="dropdownlist"
						   data-option-label="Select Status..."		                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: status,
		                              source: statusList" />

		                As of Date:
		                <input data-role="datepicker"	                       
		                   data-format="dd-MM-yyyy"
		                   data-parse-formats="yyyy-MM-dd"
		                   data-bind="value: date"
		                   placeholder="Pick A Date..." />

						<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
						<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
					</div>

					<br>

					<h3 align="center">Customer Balance</h3>

					<br>

					<div class="row-fluid row-merge">
						<div class="col-md-6">
							<div class="innerAll padding-bottom-none-phone">
								<a href="" class="widget-stats widget-stats-gray widget-stats-4">
									<span class="txt">Total Customer </span>
									<span class="count" data-format="n0" data-bind="text: dataSource.total()"></span>
									<span class="glyphicons user"><i></i></span>
									<div class="clearfix"></div>
									<i class="icon-play-circle"></i>
								</a>
							</div>
						</div>						
						<div class="col-md-6">
							<div class="innerAll padding-bottom-none-phone">
								<a href="" class="widget-stats widget-stats-primary widget-stats-4">
									<span class="txt">Total Balance As Of <span data-format="dd-MM-yyyy" data-bind="text: date"></span> </span>
									<span class="count" data-bind="text: total"></span>
									<span class="glyphicons coins"><i></i></span>
									<div class="clearfix"></div>
									<i class="icon-play-circle"></i>
								</a>
							</div>
						</div>												
					</div>

					<br>					
			
					<div data-role="grid"
						 data-auto-bind="false"
						 data-groupable="true"
						 data-sortable="true"
						 data-pageable="true"			                 		                 
		                 data-columns="[
                            { field: 'number', title:'Number' },
                            { field: 'fullname', title:'Name' },                             
                            { field: 'contact_type_id', title:'Type', template:'#=contact_type#' },
                            { field: 'balance', title:'Balance', 
                            	template:'#=kendo.toString(balance, &quot;c0&quot;, banhji.locale)#', 
                            	attributes:{style:'text-align:right;'} 
                            }
                         ]"
		                 data-bind="source: dataSource"></div>

				</div> <!-- //End div example-->				
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>

<script id="saleJobEngagement" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: saleJob.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleJob.filterDB, events: {change: saleJob.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleJob.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>	


					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Sale by Job/Engagement</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Total Sale</p>
									<span data-bind="text: saleNumber"></span>
								</div>
								<div class="span6">
									<p>Number of Customer</p>
									<span data-bind="text: count"></span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Customer Balance</p>
									<span data-bind="text: total"></span>
								</div>								
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Type</th>
								<th>Date</th>
								<th>No</th>
								<th>Memo</th>
								<th>Segment</th>
								<th>Amount</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: saleJob.dataSource"
									 data-template="saleJobEngagement-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="3">(600.00)</th>
							</tr>
						</tfoot>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="saleJobEngagement-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=group#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	# if (items.length) {#
		#for(var i= 0; i <items.length; i++) {#
			<tr>
				<td>&nbsp;&nbsp;#=items[i].type#</td>
				<td>#=items[i].date#</td>
				<td>#=items[i].number#</td>
				<td>#=items[i].memo#</td>

				<td>#if (items[i].segments.length){#
					#for (var x=0; x<items[i].segments.length; x++) {#
						#=items[i].segments[x].code#
						<br>

					#}#
				#}#</td>
				<td style="text-align: right;">#=kendo.toString(items[i].amount, 'c2')#</td>
			</tr>

		#}#
	#}#
	<tr style="font-weight: bold; color: red">
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right;">#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>
<script id="saleOrderList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>
					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<div class="widget-body">
									<div class="tab-content">
										<div class="tab-pane active" id="tab-1">
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList,
									                      events: {change: dateChange}" />

									        <input id="sdate" name="sdate"
									        	   data-role="datepicker"
										           data-bind="value: startDate, events: {change: dateMax}"
										           placeholder="From ..." />

									       	<input id="edate" name="edate"
									       		   data-role="datepicker"
										           data-bind="value: endDate, events: {change: dateMin}"
										           placeholder="To ..." />

										  	 <button type="button" data-role="button" data-bind="click: saleOrderDB.search"><i class="icon-search"></i></button>							
									    </div>
									    <div class="tab-pane" id="tab-2">
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleOrderDB.filterDB, events: {change: saleOrderDB.filterChange}"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="source: saleOrderDB.sortDB"										                              
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />							         										
												</div>																															
											</div>
				        				</div>
				        				<div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Sale Order List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Product Items on Hand</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Customer Order</p>
									<span>#</span>
								</div>
								<div class="span6">
									<p>Order</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<thead>
							<tr>
								<th>Customer Name</th>
								<th>Sale Order</th>
								<th>Item</th>
								<th>Memo Date</th>
								<th>Cost</th>
								<th>QTY</th>
								<th>Price</th>
								<th>Balance</th>
							</tr>
						</thead>
						<tbody data-role="listview"
									 data-bind="source: saleOrderDB.dataSource"
									 data-template="saleOrder-list-temp"
						></tbody>
						<tfoot>
							<tr>
								<th colspan="4">Total</th>
								<th colspan="4">(600.00)</th>
							</tr>
						</tfoot>
					</table>

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="saleOrder-list-temp" type="text/x-kendo-template" >
	# kendo.culture(banhji.customerSale.locale); #
	<tr style="font-weight: bold">
		<td>#=customer#</td>
		<td>#=SO#</td>
		<td>#=item#</td>
		<td>#=memo#</td>
		<td>#=kendo.toString(cost, 'c2')#</td>
		<td>#=kendo.toString(qty, 'n')#</td>
		<td>#=kendo.toString(price, 'c2')#</td>
		<td>#=kendo.toString(amount, 'c2')#</td>
	</tr>
</script>


<script id="invoiceCustom" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>
			        <h2 style="padding:0 15px;"">CUSTOM FORMS</h2>
				    <br>	
				    <div class="row" style="margin-left:0;">			   				
						<div class="span4">	
							<div class="span12">
								<select class="span12 selectType" 
									data-role="dropdownlist" 
									data-value-primitive="true" 
									data-text-field="name" 
									data-value-field="id" 
									data-bind="value: obj.type, 
												source: selectTypeList, 
												events:{change: onChange}" ></select>
							</div>
							<div class="span12" style="margin-bottom: 10px;">
								<input type="text" id="formName" name="Form Name" class="k-textbox" placeholder="Form Name" required validationMessage="" data-bind="value: obj.name" style="width: 100%;" />
							</div>
							<div class="span12">
								<h2 class="btn btn-block btn-primary">Form Style</h2>
								<div class="row formstyle">
									<div id="formStyle"
										 data-role="listview"
										 data-selectable="true"
						                 data-template="invoiceCustom-txn-form-template"
						                 data-bind="source: txnFormDS"
						                 style="overflow: auto">
						            </div>
						        </div>
							</div>
							<div class="span12" style="margin-left:0; margin-top: 10px;">
								<h2 class="btn btn-block btn-primary">Form Color</h2>
								<div class="colorPalatte span12">
									<div class="" style="margin-top: 15px;">
										<div data-selectable="true" data-bind="value: obj.color, events: { change : colorCC }" data-tile-size='{ width: 60, height: 35 }' data-role="colorpalette" data-columns="6" data-palette='[ "#ffffff", "#000000", "#eeece1", "#1f497d", "#4f81bd", "#c0504d", "#9bbb59", "#dbeef3", "#8064a2", "#f79646", "#f2f2f2", "#7f7f7f", "#ddd9c3", "#c6d9f0", "#dbe5f1", "#f2dcdb", "#ebf1dd", "#e5e0ec"]'></div>
                                	</div>
                                </div>
							</div>
						</div>
						<div class="span8" id="invFormContent" style="padding-left:0;padding-right: 0;width: 63%;border:1px solid #eee;margin-bottom:20px;">

						</div>
					</div>
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>									
					</div>
					<!-- // Form actions END -->
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="invoiceForm" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>
			        <h2>PREVIEW FORM</h2>
				    <br>	
				    <div class="row" style="margin-left:0;">	 				
						<div class="span10" id="invFormContent" style="min-height: 300px;border:1px solid #ccc; margin: 0 auto;float:none;padding-bottom:20px;margin-bottom: 30px;">	
							<div id="loading-inv" style="margin-left: -15px;text-align: center;position: absolute;width: 100%; height: 100%;background: rgba(142, 159, 167, 0.8);z-index: 9999;">
								<i class="fa fa-circle-o-notch fa-spin" style="font-size: 50px;color: #fff;position: absolute; top: 45%;left: 45%"></i>
							</div>
						</div>
					</div>
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="savePrint" class="btn btn-icon btn-primary glyphicons print" data-bind="click: printGrid" style="width: 60px;"><i></i> Print</span>								
					</div>
					<!-- // Form actions END -->
				</div>							
			</div>
		</div>
	</div>
</script>
<script id="invoiceForm1" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន៖ <span data-bind="text: company.address"></span></pre>
                    <pre>Address      </pre>
                    <pre>ទូរស័ព្ទលេខ៖ <span data-bind="text: company.phone"></span></pre>
                    <pre>Telephone N<sup>o</sup></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<h1>វិក្កយបត្រ</h1>
            <h2>invoice</h2>
            <div class="clear">
            	<div class="cover-customer">
                	<h5>អតិថិជន​ / Customer :</h5>
                    <div class="clear">
                    	<div class="left">
                    		<p>ឈ្មោះ​ក្រុមហ៊ុន ឬ​អតិថិជន</p>
                            <span>Company name / Customer</span>
                        </div>
                        <div class="left dotted-ruler" style="width: 62%;">
                        	<p style="font-weight:bold" data-bind="text: obj.contact[0].name"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>ទូរស័ព្ទ​លេខ</p>
                            <span>Telephone N<sup>o</sup></span>
                        </div>
                        <div class="left dotted-ruler" style="width: 78%;">
                        	<p style="font-weight:bold" data-bind="text: obj.contact[0].phone"></p>
                        </div>
                    </div>
                </div>
                <div class="cover-inv-number">
                	<div class="clear">
                    	<div class="left">
                    		<p>លេខ​រៀង​វិក្កយ​បត្រ៖</p>
                            <span>​​Invoice N<sup>o</sup></span>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.number"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>កាល​បរិច្ឆេទ៖</p>
                            <span>​​Date</span>
                        </div>
                        <div class="left dotted-ruler" style="width: 57%;">
                        	<p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                        </div>
                    </div>
                </div>
            </div>
        	<div class="clear">
            	<table cellpadding="0" cellspacing="0" border="1" style="width:100%;margin-top: 2%;">
                	<thead>
                        <tr class="main-color" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding:5px;font-weight: bold;">សរុប (បូក​បញ្ចូល​ទាំង​អាករ)​<br />Total (VAT included)</td>
                            <td data-bind="text: obj.amount"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm2" type="text/x-kendo-template">
	<div class="inv1">
    	<div class="head">
        	<div class="logo">
            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
            </div>
            <div class="cover-name-company">
            	<h2 ></h2>
                <h3 data-bind="text: company.name"></h3>
                <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span>
                </div>
                <div class="clear">
                	<pre>អាស័យ​ដ្ឋាន៖ <span data-bind="text: company.address"></span></pre>
                    <pre>Address      </pre>
                    <pre>ទូរស័ព្ទលេខ៖ <span data-bind="text: company.phone"></span></pre>
                    <pre>Telephone N<sup>o</sup></pre>
                </div>
            </div>
        </div>
        <div class="content">
        	<h1>វិក្កយបត្រអាករ</h1>
            <h2>invoice</h2>
            <div class="clear">
            	<div class="cover-customer" style="width: 80%;">
                	<h5>អតិថិជន​ / Customer :</h5>
                    <div class="clear">
                    	<div class="left">
                    		<p>ឈ្មោះ​ក្រុមហ៊ុន ឬ​អតិថិជន</p>
                            <span>Company name / Customer</span>
                        </div>
                        <div class="left dotted-ruler" style="width: 42%;">
                        	<p style="font-weight:bold" data-bind="text: obj.contact[0].name"></p>
                        </div>
                    </div>
                    <div class="clear">
                    	<div class="left">
                    		<p>ទូរស័ព្ទ​លេខ</p>
                            <span>Telephone N<sup>o</sup></span>
                        </div>
                        <div class="left dotted-ruler" style="width: 52%;">
                        	<p style="font-weight:bold" data-bind="text: obj.contact[0].phone"></p>
                        </div>
                    </div>
                    <div class="vattin">
                	<p>លេខ​អត្ត​សញ្ញាណ​កម្ម អតប (VATTIN)</p><span id="vat_number" data-bind="text: company.vat_number"></span><p style="font-size:8px;font-weight:normal;margin-left: 8px;">(ប្រសិន​បើ​មាន / If any)</p>
                	</div>
                </div>
                <div class="cover-inv-number" style="width: 20%;">
                	<div style="position: absolute;left:-70%;width:165%; ">
                        <div class="clear">
                            <div class="left">
                                <p>លេខ​រៀង​វិក្កយ​បត្រ៖</p>
                                <span>​​Invoice N<sup>o</sup></span>
                            </div>
                            <div class="left dotted-ruler" style="width: 46%;">
                                <p style="font-weight:bold" data-bind="text: obj.number"></p>
                            </div>
                        </div>
                        <div class="clear">
                            <div class="left">
                                <p>កាល​បរិច្ឆេទ៖</p>
                                <span>​​Date</span>
                            </div>
                            <div class="left dotted-ruler" style="width: 59%;">
                                <p style="font-weight:bold" data-bind="text: obj.issued_date"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        	<div class="clear inv2">
            	<table cellpadding="0" cellspacing="0" border="1" style="width:100%;margin-top: 2%;">
                	<thead>
                        <tr class="main-color" data-bind="style: {backgroundColor: obj.color}">
                            <th>ល.រ<br />N<sup>0</sup></th>
                            <th>បរិយាយ​មុខ​ទំនិញ<br />Description</th>
                            <th>បរិមាណ<br />Quantity</th>
                            <th>ថ្លៃឯកតា​<br />Unit Price</th>
                            <th>ថ្លៃ​ទំនិញ<br />Amount</th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 2px" id="formListView" data-role="listview"
										 data-auto-bind="false"
						                 data-template="invoiceForm-lineDS-template"
						                 data-bind="source: lineDS">
                    </tbody>
                    <tfoot>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុប​<br />Sub Total</td>
                            <td data-bind="text: obj.sub_total"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">អាករ​លើ​តម្លៃ​បន្ថែម ១០%<br />VAT (10%)</td>
                            <td data-bind="text: obj.tax"></td>
                        </tr>
                        <tr>
                        	<td colspan="4" style="text-align:right;padding-right:10px;font-weight:bold;">សរុបរួម​<br />Grand Total</td>
                            <td data-bind="text: obj.amount"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="foot">
        	<div class="cover-signature">
            	<div class="singature" style="float:left">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នក​ទិញ<br />Customer's Signature & Name</p>
                </div>
                <div class="singature" style="float:right">
                	<p>ហត្ថលេខា និងឈ្មោះ​អ្នកលក់<br />Seller's Signature & Name</p>
                </div>
            </div>
            <h6>សម្គាល់៖ <span>ច្បាប់​ដើម​សម្រាប់​អ្នក​ទិញ ច្បាប់​ចម្លង​សម្រាប់​អ្នក​លក់</span><br /><span style="font-size: 10px"><strong>Note:</strong> Original invoice for customer, copied invoice for seller</span></h6>
        </div>
    </div>
</script>
<script id="invoiceForm6" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<b>Delivered to</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title">Sale Order</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span3">TERM OF PAYMENT</div>
        		<div class="span3">MODE OF PAYMENT</div>
        		<div class="span3">Delivery DATE</div>
        		<div class="span3">SALE REP</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th width="90">CODE</th>
        				<th>ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th>QTY</th>
        				<th>UNIT PRICE</th>
        				<th width="80">Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>ACCEPTED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm7" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<b>Delivered to</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title">Sale Order</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span3">TERM OF PAYMENT</div>
        		<div class="span3">MODE OF PAYMENT</div>
        		<div class="span3">Delivery DATE</div>
        		<div class="span3">SALE REP</div>
        	</div>
        	<table class="span12" style="border-left: none;border-bottom: none;">
        		<thead>
        			<tr>
        				<th width="90">CODE</th>
        				<th>ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th>QTY</th>
        				<th>UNIT PRICE</th>
        				<th width="80">Total</th>
        			</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template6"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr style="border-left:none">
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="background: #10253f;text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>ACCEPTED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm8" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;">Sale Order</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price"><p>TOTAL ORDER <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span3" style="margin-right: 26px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<b>Delivered to</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span3">TERM OF PAYMENT</div>
        		<div class="span3">MODE OF PAYMENT</div>
        		<div class="span3">Delivery DATE</div>
        		<div class="span3">SALE REP</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th width="200">ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th width="80">QTY</th>
        				<th width="80">UNIT PRICE</th>
        				<th width="100">Total</th>
        			</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template8"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>ACCEPTED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm9" type="text/x-kendo-template">
	<div class="inv1 pcg-border pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:45px;">
        			<p class="form-title" style="margin-bottom: 15px;">Sale Order</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price"><p>TOTAL ORDER <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span3" style="margin-right: 26px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<b>Delivered to</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span3">TERM OF PAYMENT</div>
        		<div class="span3">MODE OF PAYMENT</div>
        		<div class="span3">Delivery DATE</div>
        		<div class="span3">SALE REP</div>
        	</div>
        	<table class="span12" style="border-left: none;border-bottom: none;">
        		<thead>
        			<tr>
        				<th width="200">ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th width="80">QTY</th>
        				<th width="80">UNIT PRICE</th>
        				<th width="100">Total</th>
        			</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template8"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr style="border-left:none">
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APPROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>ACCEPTED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm10" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<br>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title">Quotation</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span4">TERM OF PAYMENT</div>
        		<div class="span4">MODE OF PAYMENT</div>
        		<div class="span4">VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th width="90">CODE</th>
        				<th>ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th>QTY</th>
        				<th>UNIT PRICE</th>
        				<th width="80">Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template10"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="90">PREPARED BY</td><td width="120"></td>
        			<td width="80">POSITION</td><td width="80"></td>
        			<td>DATE</td><td width="120"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APPROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm11" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span3">
        			<br>
        		</div>
        		<div class="span4" style="float:right;">
        			<p class="form-title">Quotation</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span4">TERM OF PAYMENT</div>
        		<div class="span4">MODE OF PAYMENT</div>
        		<div class="span4">VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" style="border-left: 0;border-bottom: 0;">
        		<thead>
        			<tr>
        				<th width="90">CODE</th>
        				<th>ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th>QTY</th>
        				<th>UNIT PRICE</th>
        				<th width="80">Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template10"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr style="border-left:0">
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="3"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APPROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm12" type="text/x-kendo-template">
	<div class="inv1 pcg">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:65px;">
        			<p class="form-title" style="margin-bottom: 15px;">QUOTATION</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>TOTAL ORDER <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span3">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span4">TERM OF PAYMENT</div>
        		<div class="span4">MODE OF PAYMENT</div>
        		<div class="span4">VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" rules="rows">
        		<thead>
        			<tr>
        				<th width="200">ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th width="80">QTY</th>
        				<th width="80">UNIT PRICE</th>
        				<th width="100">Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template12"
						data-bind="source: lineDS">
        		<tfoot>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm13" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5" style="margin-right: 30px;">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" >
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear" style="margin: 20px 0;">
        		<div class="span4" style="margin-right:65px;">
        			<p class="form-title" style="margin-bottom: 15px;">QUOTATION</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        			<div class="span12 main-color order-price" data-bind="style: {backgroundColor: obj.color}"><p>TOTAL ORDER <span data-bind="text: obj.amount"></span></p></div>
        		</div>
        		<div class="span3">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        	</div>
        	<div class="span12 mid-title main-color" data-bind="style: {backgroundColor: obj.color}">
        		<div class="span4">TERM OF PAYMENT</div>
        		<div class="span4">MODE OF PAYMENT</div>
        		<div class="span4">VALIDITY PERIOD</div>
        	</div>
        	<table class="span12" style="border-left:none;border-bottom: none;">
        		<thead>
        			<tr>
        				<th width="200">ITEM DESCRIPTION</th>
        				<th>UM</th>
        				<th width="80">QTY</th>
        				<th width="80">UNIT PRICE</th>
        				<th width="100">Total</th>
        			</tr>
        		</thead>
        		<tbody style="margin-top: 2px" id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template12"
						data-bind="source: lineDS">
        		<tfoot style="border-left:none;">
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">SUB TOTAL</td>
        				<td style="background-color: #eee;" data-bind="text: obj.sub_total"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" style="text-align: left;padding-left: 10px;color: #000;font-weight:bold;">TAX (Rate:       )</td>
        				<td style="background-color: #eee;" data-bind="text: obj.tax"></td>
        			</tr>
        			<tr>
        				<td style="border:none;" colspan="2"></td>
        				<td colspan="2" class="main-color" data-bind="style: {backgroundColor: obj.color}" style="text-align: center;color: #fff;font-weight:bold;">GRAND TOTAL</td>
        				<td style="background-color: #dce6f2;" data-bind="text: obj.amount"></td>
        			</tr>
        		</tfoot>
        	</table>
        	<table class="span12" rules="rows" style="margin-top: 20px;">
        		<tr>
        			<td width="120">PREPARED BY</td><td width="100"></td>
        			<td>POSITION</td><td width="100"></td>
        			<td>DATE</td><td width="80"></td>
        		</tr>
        		<tr>
        			<td>REVIEWED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        		<tr>
        			<td>APROVED BY</td><td></td>
        			<td>POSITION</td><td></td>
        			<td>DATE</td><td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceForm14" type="text/x-kendo-template">
	<div class="inv1 pcg pcg-border">
        <div class="content clear">
        	<div class="span5">
        		<div class="logo" style="width: 50%">
	            	<img data-bind="attr: { src: company.logo, alt: company.name, title: company.name }" />
	            </div>
        	</div>
        	<div class="span7">
        		<div class="span5">
        			<p data-bind="text: company.name"></p>
        			<p><b>Address:</b> <span data-bind="text: company.address"></span></p>
        		</div>
        		<div class="span5" style="float:right">
        			<p><b>Tel: </b><span data-bind="text: company.phone"></span></p>
        			<p><b>Email: </b><span data-bind="text: company.email"></span></p>
        			<p><b>Website: </b><span data-bind="text: company.website"></span></p>
        		</div>
        	</div>
        	<div class="span12 clear mid-header" style="background:none;">
        		<div class="span3" style="margin-right: 15px;">
        			<b>Customer Information</b><br><br>
        			<p><span data-bind="text: obj.contact[0].name"></span><br>
        			<b>Address: </b> <span data-bind="text: obj.contact[0].address"></span>
        			</p>
        		</div>
        		<div class="span6" style="float:right;">
        			<p class="form-title" style="font-size: 30px;">Delivery Address NOTE</p>
        			<p><b>Sale Order Date : </b><span data-bind="text: obj.issued_date"></span></p>
        			<p><b>Sale Order No. : </b><span data-bind="text: obj.number"></span></p>
        		</div>
        	</div>
        	<table class="span12">
        		<tr>
        			<td style="background: #c6d9f1" width="150"><b>SALE ORDER #</b></td>
        			<td width="100"><b></b></td>
        			<td width="150" style="background: #c6d9f1"><b>INVOICE #</b></td>
        			<td><b></b></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1"><b>JOB/ CONTRACT #</b></td>
        			<td><b></b></td>
        			<td style="background: #c6d9f1"><b></b></td>
        			<td><b></b></td>
        		</tr>
        	</table>
        	<table class="span12" style="margin: 5px 0;">
        		<thead>
        			<tr>
        				<th width="50">NO</th>
        				<th>ITEM CODE</th>
        				<th>DESCRIPTION</th>
        				<th>UM</th>
        				<th>QTY</th>
        				<th>REMARK</th>
        			</tr>
        		</thead>
        		<tbody id="formListView" 
        				data-role="listview"
						data-auto-bind="false"
						data-template="invoiceForm-lineDS-template14"
						data-bind="source: lineDS">
        	</table>
        	<table class="span12">
        		<tr>
        			<td style="background: #c6d9f1" width="150">ISSUED BY</td>
        			<td width="100"></td>
        			<td width="150" style="background: #c6d9f1">DATE</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">DELIVERED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">RECEIVED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE/TIME</td>
        			<td></td>
        		</tr>
        		<tr>
        			<td style="background: #c6d9f1">ACKNOWLEDGED BY</td>
        			<td></td>
        			<td style="background: #c6d9f1">DATE/TIME</td>
        			<td></td>
        		</tr>
        	</table>
        </div>
    </div>
</script>
<script id="invoiceCustom-txn-form-template" type="text/x-kendo-template">
	<a class="span4 #= type #" data-id="#= id #" data-bind="click: selectedForm" style="padding-right: 0; width: 32%;">
    	<img src="<?php echo base_url(); ?>assets/invoice/img/#= image_url #.jpg" alt="#: name # image" />
    </a>
</script>
<script id="invoiceForm-lineDS-template" type="text/x-kendo-template">
	<tr>
		<td><i>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</i></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template3" type="text/x-kendo-template">
	<tr>
		<td><i>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</i></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template4" type="text/x-kendo-template">
	<tr>
		<td><i>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</i></td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td></td>
		<td></td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template5" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;</td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td></td>
		<td></td>
		<td></td>
		<td></td>
		<td style="text-align: right; padding-right: 5px;"></td>
		<td style="text-align: right; padding-right: 5px;"></td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template6" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;</td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="background-color: \\#eee">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template8" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="background-color: \\#eee">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template10" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">&nbsp;</td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="background-color: \\#eee">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template12" type="text/x-kendo-template">
	<tr>
		<td style="text-align: left; padding-left: 5px;">#= description.length>0 ? description: "&nbsp;"#</td>
		<td style="text-align: left; padding-left: 5px;">#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;">#= kendo.toString(price, "c", locale) #</td>
		<td style="background-color: \\#eee;text-align: right; padding-right: 5px;">#= kendo.toString(amount, "c", locale) #</td>
	</tr>
</script>
<script id="invoiceForm-lineDS-template14" type="text/x-kendo-template">
	<tr>
		<td>#:banhji.invoiceForm.lineDS.indexOf(data)+1#</td>
		<td style="text-align: left; padding-left: 5px;"></td>
		<td style="text-align: left; padding-left: 5px;">#= description#</td>
		<td>#= item_prices.length>0 ? item_prices[0].measurement : "" #</td>
		<td>#= quantity#</td>
		<td style="text-align: right; padding-right: 5px;"></td>
	</tr>
</script>


<!--Customer Report-->


<!--End-Customer Report-->


<!-- ***************************
*	Cashier Section      	  *
**************************** -->
<script id="cashier" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">				
			<div class="span12">
				<div id="example" class="k-content">
					<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

					<h3><span data-bind="text: lang.lang.cashier"></span></h3>

					<div class="row-fluid">
						<div class="span3">
							<br>

							<input id="ddlContact" data-bind="value: customer_id" style="width: 100%"  />

							<br><br>							
					      					
							<h5><i class="icon-info-sign"></i> <span data-bind="text: lang.lang.customer_info"></span></h5>				
							<table width="100%" style="background-color:Silver; color:black;">
								<tr>
									<td colspan="2">
										<i class="icon-user icon-li icon-fixed-width"></i> 
										<span data-bind="text: customer.fullIdName"></span>										
									</td>																			
								</tr>
								<tr>
									<td colspan="2">								
										<span data-bind="text: lang.lang.balance"></span>: <span data-bind="text: customer.balance"></span>
										<span data-bind="text: customer.currency[0].code">
									</td>
								</tr>
								<tr>
									<td colspan="2">
										<span data-bind="text: lang.lang.deposit"></span>: <span data-bind="text: customer.deposit"></span>
										<span data-bind="text: customer.currency[0].code">
									</td>							
								</tr>
								<tr>
									<td>
										<i class="icon-money icon-li icon-fixed-width"></i> <span data-bind="text: customer.currency[0].code"></span>
									</td>
									<td>
										<i class="icon-phone icon-li icon-fixed-width"></i> <span data-bind="text: customer.phone"></span>
									</td>
								</tr>											
								<tr>
									<td colspan="2">
										<i class="icon-home icon-li icon-fixed-width"></i> <span data-bind="text: customer.address"></span>
									</td>						
								</tr>
							</table>

							<br>			
							
							<h5><i class="icon-list"></i> <span data-bind="text: lang.lang.activities"></span></h5>

							<table class="table table-bordered table-striped table-white">
						        <thead>
						            <tr>
						            	<th><span data-bind="text: lang.lang.date"></span></th>						                
						                <th><span data-bind="text: lang.lang.type"></span></th>						                
						                <th><span data-bind="text: lang.lang.amount"></span></th>						                						                
						            </tr>
						        </thead>
						        <tbody data-role="listview"
						        		data-auto-bind="false"					        		 
						        		data-template="cashier-transaction-row-template" 
						        		data-bind="source: transactionDS"></tbody>						        					        
						    </table>
							
							<div id="pager" class="k-pager-wrap"					    		
				             	data-role="pager"
				             	data-auto-bind="false" 
				             	data-bind="source: transactionDS"></div>
						
						</div> <!-- //End span3 -->

						<div id="exampleValidator" class="span9">
							<div class="row-fluid">
								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a href="javascript:void(0)" class="widget-stats widget-stats-gray widget-stats-4"> 
											<span class="txt"><span data-bind="text: lang.lang.customer"></span></span>
											<span class="count" data-bind="text: total_customer"></span>
											<span class="glyphicons user"><i></i></span>
											<div class="clearfix"></div>
											<i class="icon-play-circle"></i> 
										</a>
									</div>
								</div>

								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a href="#/wPayment_summary" class="widget-stats widget-stats-primary widget-stats-4">
											<span class="txt"><span data-bind="text: lang.lang.today_payment"></span></span>
											<span class="count"><span data-bind="text: total_payment" style="font-size: 35px;"></span></span>
											<span class="glyphicons coins"><i></i></span>
											<div class="clearfix"></div>
											<i class="icon-play-circle"></i>
										</a>
									</div>
								</div>

								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a href="#/reconcile" class="widget-stats widget-stats-inverse widget-stats-5">
											<span class="glyphicons refresh"><i></i></span>
											<span class="txt"><span data-bind="text: lang.lang.reconcile"></span> &<br><br> <span data-bind="text: lang.lang.transfer"></span></span>
											<div class="clearfix"></div>
										</a>
									</div>
								</div>				

							</div> <!-- //End row-fluid -->
														
							<br>

							<table class="table table-bordered table-striped table-white">
						        <thead>
						            <tr>
						                <th></th>
						                <th><span data-bind="text: lang.lang.no"></span></th>						                
						                <th><span data-bind="text: lang.lang.date"></span></th>
						                <th><span data-bind="text: lang.lang.name"></span></th>
						                <th><span data-bind="text: lang.lang.invoice"></span></th>
						                <th class="right"><span data-bind="text: lang.lang.amount"></span></th>
						                <th class="right"><span data-bind="text: lang.lang.pay"></span></th>							                
						            </tr>
						        </thead>
						        <tbody data-role="listview"
						        		data-auto-bind="false"					        		 
						        		data-template="cashier-row-template" 
						        		data-bind="source: invoiceList"></tbody>
						        <tfoot data-template="cashier-footer-template" 
						        		data-bind="source: this"></tfoot>						        
						    </table>						    

							<br>
							
							<span id="notification"></span>

							<div class="row-fluid">
								<div class="span4">						
									<table>
										<tr>
											<td><span data-bind="text: lang.lang.payment_date"></span></td>
						              		<td>
						              			<input id="txtPaymentDate" name="txtPaymentDate" 
						              				data-role="datepicker" 
						              				data-format="dd-MM-yyyy"
						              				data-parse-formats="dd-MM-yyyy"
							              			data-bind="value: payment_date" 
							              			required data-required-msg="ត្រូវការ ថ្ងៃទទួលប្រាក់" />
											</td>
										</tr>										
										<tr>
						                    <td><span data-bind="text: lang.lang.payment_method"></span></td>
						                  	<td>
						                  		<input id="ddlPaymentMethod" id="ddlPaymentMethod"
						                  			   data-role="dropdownlist"
									                   data-auto-bind="false"
									                   data-value-primitive="true"
									                   data-text-field="name"
									                   data-value-field="id"
									                   data-bind="value: payment_method_id,
									                              source: paymentMethodDS"									                   
									                   required data-required-msg="ត្រូវការ វីធីបង់ប្រាក់" />						                  					                  		
						                  	</td>
						                <tr>
										<tr>
							                <td><span data-bind="text: lang.lang.cheque"></span></td>
							                <td><input id="check_no" class="k-textbox" data-bind="value: check_no" style="width: 161px;" /></td>
							            <tr>
							            <tr>
											<td><span data-bind="text: lang.lang.cash_account"></span></td>
											<td>
												<input id="ddlCashAccount" name="ddlCashAccount" 
														data-bind="value: account_id" 
														required data-required-msg="required" />												
											</td>
										</tr>										
									</table>							
								</div>																
								<div class="span4">
									<table>	
										<tr>
											<td><span data-bind="text: lang.lang.total_payment"></span>:</td>
											<td align="right"><span data-bind="text: pay_amount"></span></td>
										</tr>									
										<tr>
											<td><span data-bind="text: lang.lang.discount"></span>:</td>
											<td>
												<input data-role="numerictextbox" 
														data-format="c0" data-culture="km-KH" 
														data-bind="value: discount, events: {change : change}" />
											</td>
										</tr>
										<tr>
											<td><span data-bind="text: lang.lang.fine"></span>:</td>							
											<td>
												<input data-role="numerictextbox" 
														data-format="c0" data-culture="km-KH" 
														data-bind="value: fine, events: {change : change}" />
											</td>
										</tr>										
										<tr>
											<td><span data-bind="text: lang.lang.remain"></span>:</td>
											<td align="right"><span data-bind="text: remain"></span></td>
										</tr>
									</table>		          	
								</div>

								<div class="span4">
									<div class="innerAll padding-bottom-none-phone">
										<a id="save" name="save" class="widget-stats widget-stats-info widget-stats-4">
											<span class="txt"><span data-bind="text: lang.lang.save"></span></span>
											<span class="count" style="font-size: 35px;" data-bind="text: receive_amount"></span>
											<span class="glyphicons cart_in"><i></i></span>
											<div class="clearfix"></div>
											<i class="icon-play-circle"></i>
										</a>
									</div>								
								</div>
							</div>							

						</div> <!-- //End span9 -->
					</div>
				</div> <!-- //End example -->
			</div>
		</div>
	</div>
</script>
<script id="cashier-transaction-row-template" type="text/x-kendo-tmpl">
    <tr>        
        <td>#:kendo.toString(new Date(issued_date), "dd-MM-yy")#</td>
        <td>#:type# </td>
        <td align="right">#:kendo.toString(kendo.parseFloat(amount), "c", locale)#</td>        
   	</tr>
</script>
<script id="cashier-row-template" type="text/x-kendo-tmpl">		
	<tr id="rowGrid-#:id#">
		<td>
			<input type="checkbox" data-bind="checked: isPay, events:{change: checkPay}">			
		</td>
		<td class="sno">1</td>			
		<td>#:kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>		
		<td>#=fullname#</td>
		<td>#:number#</td>				
		<td class="right">#:kendo.toString(amount, "c", locale)#</td>
		<td class="right">
			<input data-role="numerictextbox" 
					data-format="c" data-culture=#:locale#
					data-bind="value: pay_amount, events: {change : change}" 
					style="width: 120px;">
			<i class="icon-trash" data-bind="events: { click: remove "></i>						
		</td>				
    </tr>   
</script>
<script id="cashier-footer-template" type="text/x-kendo-template">
    <tr>    	
        <td class="right" colspan="7" style="font-size:30px;">
            Total: #:total()#
        </td>
    </tr>
</script>

<script id="reconcile" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="container-fluid">
			<div class="row-fluid">
				<div class="span12">
					<div id="example" class="k-content">						
						
						<span class="pull-right glyphicons no-js remove_2" 
							onclick="javascript:window.history.back()"><i></i></span>							

						<div align="center">
							<h4>Reconcile & Transfer</h4>							
							<span data-bind="text: str_date()"></span>
							<br>
							by
							<span data-bind="text: cashier_name"></span>
						</div>

						<table class="table table-bordered table-white">
		            		<thead>
		            			<tr>
		            				<th>Cash</th>	            				
		            				<th>Dollar Qty</th>
		            				<th>Riel Qty</th>
		            				<th>Dollar Amt</th>
		            				<th>Riel Amt</th>	            				
		            				<th>Dollar Qty Transfer</th>
		            				<th>Riel Qty Transfer</th>
		            				<th>Dollar Amt Transfer</th>
		            				<th>Riel Amt Transfer</th>		            				
		            			</tr>
		            		</thead>
		            		<tbody id="lvReconcileItem" data-role="listview"
		            				data-auto-bind="false"			            			
					                data-template="denominationRowTemplate"
					                data-bind="source: reconcileItemDS">
					        </tbody>
		            	</table>

						<br>

						<div class="row-fluid">
							<!-- //Reconcile -->
							<div class="span6">
								<h4 class="heading">Reconcile</h4>

								<table class="table table-condensed">
									<tr>
										<td>Total Paid Today</td>
										<td></td>											
										<td class="right"><span class="count" data-bind="text: obj.received_amount"></span> ៛</td>												
									</tr>
									<tr>
										<td>Remain</td>
										<td></td>											
										<td class="right" style="border-bottom: 1px solid black;"><span class="count" data-bind="text: obj.previous_amount"></span> ៛</td>												
									</tr>
									<tr>
										<td>Cash (A)</td>
										<td></td>												
										<td class="right"><span class="count" data-bind="text: obj.total_cash1"></span> ៛</td>
									</tr>

									<!-- Reconcile -->
									<tr>
										<td>Dollar</td>
										<td>
											$ <span class="count" data-bind="text: obj.usd_amount"></span> x
											<input data-role="numerictextbox" data-format="c0" data-culture="km-KH" data-min="0" data-bind="value: obj.rate, events:{change:change}"  style="width:90px;">
										</td>
										<td class="right"><span class="count" data-bind="text: obj.usd2khr_amount"></span> ៛</td>												
									</tr>
									<tr>
										<td>Riel</td>
										<td></td>
										<td class="right" style="border-bottom: 1px solid black;"><span class="count" data-bind="text: obj.total_cash2"></span> ៛</td>												
									</tr>
									<tr>
										<td>Actual Cash (B)</td>
										<td></td>												
										<td class="right"><span class="count" data-bind="text: obj.reconciled_amount"></span> ៛</td>
									</tr>
									<tr id="reconcileAmount">
										<td>Reconcile(A-B)</td>
										<td></td>												
										<td class="right"><span class="count" data-bind="text: obj.reconciled_amount"></span> ៛</td>
									</tr>																				
								</table>
							</div>

							<!-- //Transfer -->
							<div class="span6">								
								<h4 class="heading">Cash Transfer</h4>								
								
								<table class="table table-condensed">
									<tr>
										<td>Dollar Transfer</td>
										<td>
											$ <span class="count" data-bind="text: obj.transfer_usd"></span> x
											<input data-role="numerictextbox" data-format="c0" data-culture="km-KH" data-min="0" data-bind="value: obj.rate, events:{change:change}"  style="width:90px;">												
										</td>
										<td class="right"><span class="count" data-bind="text: obj.usd2khr_transfer_amount"></span> ៛</td>												
									</tr>
									<tr>
										<td>Riel Transfer</td>
										<td></td>
										<td class="right" style="border-bottom: 1px solid black;"><span class="count" data-bind="text: obj.transfer_khr"></span> ៛</td>												
									</tr>
									<tr>
										<td>Total Transfer</td>
										<td></td>												
										<td class="right"><span class="count" data-bind="text: obj.transfered_amount"></span> ៛</td>
									</tr>
									<tr>
										<td>Balance</td>
										<td></td>												
										<td class="right"><span class="count" data-bind="text: obj.balance"></span> ៛</td>
									</tr>
									<tr>
										<td>Transfer Account</td>
										<td>
											<input id="ddlCashAccount" name="ddlCashAccount" 
													data-bind="value: obj.transfer_account_id" 
													required data-required-msg="required" />
										</td>
										<td>
											<!-- Class here -->
						              	</td>
									</tr>
									<tr class="top">
										<td>Memo:</td>
										<td colspan="2">
											<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo"></textarea>
										</td>										
									</tr>								
								</table>																																			
							</div>									
						</div>

						<!-- Form actions -->
						<div align="right" data-bind="invisible: isExisting">
							<span id="notification"></span>

							<span class="btn btn-icon btn-success glyphicons share" data-bind="click: transferAll"><i></i>Transfer All</span>
							<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i>Save</span>							
							<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i>Cancel</span>
						</div>
						<!-- // Form actions END -->

					</div><!-- //End div example-->
				</div><!-- //End div span12-->
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>
<script id="denominationRowTemplate" type="text/x-kendo-tmpl">		
	<tr>				
		<td class="right">#=denomination#</td>
		<td>
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: usd_qty, events: {change : change}" #: denomination>100 ? disabled="disabled" : "" # >
		</td>
		<td>
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: khr_qty, events: {change : change}" #: denomination<100 ? disabled="disabled" : "" # >
		</td>
		<td class="right">#:kendo.toString(usd_amount,'c')#</td>
		<td class="right">#:kendo.toString(khr_amount,'c0','km-KH')#</td>

		<td bgcolor="silver">
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: usd_transfer, events: {change : change}" #: denomination>100 ? disabled="disabled" : "" # >
		</td>
		<td bgcolor="silver">
			<input data-role="numerictextbox" data-format="n0" data-min="0" style="width:90px;"
				data-bind="value: khr_transfer, events: {change : change}" #: denomination<100 ? disabled="disabled" : "" # >
		</td>
		<td bgcolor="silver" class="right">#:kendo.toString(usd_transfer_amount,'c')#</td>
		<td bgcolor="silver" class="right">#:kendo.toString(khr_transfer_amount,'c0','km-KH')#</td>					
    </tr>   
</script>

<script id="cashTransaction" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<div class="hidden-print pull-right">
		    		<span class="glyphicons no-js remove_2" 
						data-bind="click: cancel"><i></i></span>						
				</div>

		        <h2>CASH TRANSACTION</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="box-generic well" style="height: 150px;">				
							<table class="table table-borderless table-condensed cart_total">									
								<tr data-bind="visible: isEdit">				
									<td>No.</td>
									<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" /></td>
								</tr>
								<tr>
									<td>Date</td>
									<td class="right">
										<input id="issuedDate" name="issuedDate" 
												data-role="datepicker"
												data-format="dd-MM-yyyy"
												data-parse-formats="yyyy-MM-dd" 
												data-bind="value: obj.issued_date, 
															events:{ change : setRate }" 
												required data-required-msg="required"
												style="width:100%;" />
									</td>
								</tr>
								<tr>
									<td>Type</td>
									<td>
										<input id="ddlType" name="ddlType"
											   data-role="dropdownlist"								                   
							                   data-value-primitive="true"
							                   data-header-template="cash-type-header-tmpl"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.type,
							                              source: types,
							                              events:{ change: typeChanges }"							                   
							                   data-option-label="(--- Select ---)"
							                   required data-required-msg="required" 
							                   style="width: 100%;" />
									</td>
								</tr>
								<tr>
									<td>Currency</td>
									<td>
										<input id="cbbCurrency" name="cbbCurrency"
												data-bind="value: obj.locale,
							                              events:{change:setRate}" 
							                    placeholder="Select currency ..." 
							                    required data-required-msg="required" 
							                    style="width: 100%;" />
									</td>
								</tr>															
							</table>
						</div>
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 150px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						            <li class="span1 glyphicons pencil active"><a href="#tab1-3" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons paperclip"><a href="#tab2-3" data-toggle="tab"><i></i></a>
						            </li>
						            <li class="span1 glyphicons history"><a href="#tab3-3" data-toggle="tab"><i></i></a>
						            </li>								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						        <!-- Memo Tab content -->
						        <div class="tab-pane active" id="tab1-3">
						        	<textarea id="memo2" cols="0" rows="4" class="k-textbox" 
						        		data-bind="value: obj.memo2" style="width:100%;" 
						        		placeholder="Please enter transaction purpose here ..."></textarea>
						        </div>
						        <!-- // Memo Tab content END -->

						        <!-- Attach Tab content -->
							        <div class="tab-pane" id="tab2-3">

							        	<p>File Type: [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>						            	
							            
							            <input id="files" name="files"
						                   type="file"
						                   data-role="upload"
						                   data-show-file-list="false"
						                   data-bind="events: { 
				                   				select: onSelect
						                   }">

							            <table class="table table-bordered">
									        <thead>
									            <tr>			                
									                <th>File Name</th>
									                <th>Description</th>
									                <th>Date</th>
									                <th style="width: 13%;"></th>                			                
									            </tr> 
									        </thead>
									        <tbody data-role="listview" 
									        		data-template="attachment-list-tmpl" 
									        		data-auto-bind="false"
									        		data-bind="source: attachmentDS"></tbody>			        
									    </table>

							        </div>
							        <!-- // Attach Tab content END -->

						        <!-- Recuring Tab content -->
						        <div class="tab-pane" id="tab3-3">							            	
						            
						            <div class="span5">

							        	<input data-role="combobox"
						                   data-placeholder="Select existing recuring ..."
						                   data-value-primitive="true"
						                   data-auto-bind="false"
						                   data-text-field="recurring_name"
						                   data-value-field="id"
						                   data-bind="value: obj.recurring_id,
						                              source: recurringDS,
						                              events:{ change:applyRecurring }"
						                   style="width: 100%" />

						                <br><br>

						                <div align="right">
							                <span id="saveRecurring" class="btn btn-icon btn-default glyphicons history"><i></i> Save Recurring</span>						                
							            </div>

						            </div>

						            <div class="span7">

							            <table style="width: 100%">
							            	<tr align="right">
							            		<td>
							            			Name
							            		</td>
							            		<td>
							            			<input class="k-textbox" data-bind="value: obj.recurring_name" 
							            					placeholder="Recurring name.." 
							            					style="width: 40%;" />
							            			Start
									                <input data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd"
															data-bind="value: obj.start_date"
															style="width: 40%;" />
							            		</td>
							            	</tr>
							            	<tr align="right">
							            		<td>
								            		Every
								            	</td>
							            		<td>
								            		<input data-role="numerictextbox"
									                   data-format="n0"
									                   data-min="0"								                   
									                   data-bind="value: obj.interval"
									                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.frequency,
										                              source: frequencyList,
										                              events: { change: frequencyChanges }"
										                   style="width: 45%;" />
								            	</td>
							            	</tr>
								            <tr align="right">
								            	<td>
								            		On
								            	</td>							            	
								            	<td>

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month,
										                   			  visible: showMonth,
										                              source: monthList"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.month_option,
										                   			  visible: showMonthOption,
										                              source: monthOptionList,
										                              events: { change: monthOptionChanges }"										                   
										                   style="width: 45%;" />

								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.week,
										                   			  visible: showWeek,
										                              source: weekDayList"										                  
										                   style="width: 45%;" />										            
										        
								            		<input data-role="dropdownlist"									                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.day,
										                   			  visible: showDay,
										                              source: dayList"										                   
										                   style="width: 45%;" />

								            	</td>
								            </tr>
							            </table>

							        </div>									     
						            
						        </div>
						        <!-- // Recuring Tab content END -->								        

						    </div>
						</div>

				    </div>
				</div>

				<h4 data-bind="text: headerTop"></h4>				
				<table class="table table-borderless table-condensed cart_total">						
					<tr>
						<td style="width: 10%">ACCOUNT</td>
						<td style="width: 40%">
							<input id="cbbAccount" name="cbbAccount"
								   data-role="combobox"                   
				                   data-value-primitive="true"
				                   data-header-template="account-header-tmpl"                 
				                   data-template="cashTransaction-account-list-tmpl"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.account_id,
				                              source: accountDS"
				                   data-placeholder="Add Account.."					                                      
				                   required data-required-msg="required" style="width: 100%" />
						</td>
						<td style="width: 10%">Segment</td>
						<td style="width: 40%">
							<select data-role="multiselect"
								   data-value-primitive="true"
								   data-header-template="segment-header-tmpl"							   
								   data-item-template="cashTransaction-segment-tmpl"				    
								   data-value-field="id" 
								   data-text-field="code"
								   data-bind="value: obj.segments, 
								   			source: segmentItemDS,
								   			events:{ change: transactionSegmentChanges }"
								   data-placeholder="Add Segment.."				   
								   style="width: 100%" /></select>
						</td>							
					</tr>									
				</table>				

				<h4 data-bind="text: headerBottom"></h4>
				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th style="width: 1%;">No.</th>
			                <th style="width: 20%;">ACCOUNT</th>
			                <th style="width: 20%;">METHOD</th>
			                <th>DESCRIPTION</th>
			                <th data-bind="visible: showRef" style="width: 7%;">REF</th>
			                <th data-bind="visible: showName" style="width: 15%;">NAME</th>
			                <th data-bind="visible: showSegment" style="width: 15%;">SEGMENT</th>
			                <th style="width: 15%;">AMOUNT</th>			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="cashTransaction-template" 
			        		data-auto-bind="false"
			        		data-bind="source: lineDS"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span6 hidden-print">
						
						<button class="btn btn-inverse" data-bind="click: addRow"><i class="icon-plus icon-white"></i></button>												

						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" data-bind="checked: showRef" /> REF
								</li>
								<li>
									<input type="checkbox" data-bind="checked: showName" /> NAME
								</li>
								<li>
									<input type="checkbox" data-bind="checked: showSegment" /> SEGMENT
								</li>								
							</ul>
						</div>						
						
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span6">
						<table class="table table-borderless table-condensed cart_total">
							<tbody>								
								<tr>
									<td class="right">Total:</td>
									<td class="right strong"><span data-bind="text: total"></span></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>
	           
	            <br>
				
				<!-- Form actions -->
				<div class="box-generic" align="right" style="background-color: #0B0B3B;">
					<span id="notification"></span>

					<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
					<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>										
					<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>
					<span class="btn btn-icon btn-warning glyphicons remove_2" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashTransaction-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td class="center">
			<i class="icon-trash" data-bind="events: { click: remove }"></i>
			#:banhji.cashTransaction.lineDS.indexOf(data)+1#			
		</td>	
		<td>
			<input id="cbbAccounts" name="cbbAccounts"
				   data-role="combobox"                   
                   data-value-primitive="true"  
                   data-header-template="account-header-tmpl"                 
                   data-template="cashTransaction-account-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: account_id,
                              source: accountDS"
                   data-placeholder="Add Account.."
                   data-list-width="400"                    
                   required data-required-msg="required" style="width: 100%" />	
		</td>
		<td>
			<input id="ddlPaymentMethod" name="ddlPaymentMethod"
				   data-role="dropdownlist"                   
                   data-value-primitive="true"                   
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: payment_method_id,
                              source: paymentMethodDS"
                   data-option-label="Select method.."
                   data-list-width="400"                    
                   required data-required-msg="required" style="width: 100%" />	
		</td>		
		<td>
			<input name="description" 
					type="text" class="k-textbox" 
					data-bind="value: description"					
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td data-bind="visible: showRef">
			<input type="text" class="k-textbox" 
					data-bind="value: reference_no"				
					style="width: 100%; margin-bottom: 0;" />		
		</td>					
		<td data-bind="visible: showName">
			<input data-role="combobox"                   
                   data-value-primitive="true"
                   data-template="cashTransaction-contact-list-tmpl"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: contact_id,
                              source: contactDS"
                   data-placeholder="Add Name.."                    
                   style="width: 100%" />
		</td>		
		<td data-bind="visible: showSegment">
			<select data-role="multiselect"
				   data-value-primitive="true"				   
				   data-item-template="cashTransaction-segment-tmpl"				    
				   data-value-field="id" 
				   data-text-field="code"
				   data-bind="value: segments, 
				   			source: segmentItemDS,
				   			events:{ change: segmentChanges }"
				   data-placeholder="Add Segment.."				   
				   style="width: 100%" /></select>					
		</td>
		<td class="right">
			<input id="txtAmount" name="txtAmount" 
					data-role="numerictextbox" 
					data-format="n0"
					data-spinners="false"
					data-bind="value: amount, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" /> 						
		</td>			
    </tr>   
</script>
<script id="cashTransaction-account-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# #=name#
	</span>
</script>
<script id="cashTransaction-contact-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# #=surname# #=name#
	</span>
</script>
<script id="cashTransaction-segment-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=name# (#=segment[0].name#)
	</span>
</script>

<script id="cashReceipt" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
				    
			    	<span class="glyphicons no-js remove_2 pull-right" 
		    				onclick="javascript:window.history.back()"
							data-bind="click: cancel"><i></i></span>

			        <h2>CASH RECEIPT</h2>			    		   

				    <br>				   				
						
					<!-- Upper Part -->
					<div class="row-fluid">
						<div class="span4">
							<div class="widget widget-heading-simple widget-body-primary widget-employees">		
								<div class="widget-body padding-none">			
									<div class="row-fluid row-merge">
										<div class="listWrapper">
											<div class="innerAll">							
												<form autocomplete="off" class="form-inline">
													<div class="widget-search separator bottom">
														<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
														<div class="overflow-hidden">
															<input type="search" placeholder="Invoice Number..." data-bind="value: searchText, events:{change: enterSearch}">
														</div>
													</div>
													<div class="select2-container" style="width: 100%;">								
														<input id="cbbContact" name="cbbContact"
															   data-role="combobox"    
											                   data-value-primitive="true"
											                   data-header-template="contact-header-tmpl"
											                   data-template="contact-list-tmpl"
											                   data-text-field="name"
											                   data-value-field="id"
											                   data-bind="value: contact_id,
											                              source: contactDS,
											                              events:{ change: contactChanges }"
											                   data-placeholder="Customer..."                    
											                   style="width: 100%" />									
													</div>
												</form>					
											</div>
										</div>
									</div>
								</div>
							</div>
							
							<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
								data-bind="style: { backgroundColor: amtDueColor}">
								<div align="left">AMOUNT RECEIVED</div>
								<h2 data-bind="text: total" align="right"></h2>
							</div>												
						</div>					   

						<div class="span8">

							<div class="box-generic" style="height: 190px;">

							    <!-- Tabs Heading -->
							    <div class="tabsbar tabsbar-2">
							        <ul class="row-fluid row-merge">
							        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-2" data-toggle="tab"><i></i> </a>
							            </li>
							            <li class="span1 glyphicons info"><a href="#tab2-2" data-toggle="tab"><i></i> </a>
							            </li>
							        </ul>
							    </div>
							    <!-- // Tabs Heading END -->

							    <div class="tab-content">

							    	<!-- Options Tab content -->
							        <div class="tab-pane active" id="tab1-2">						            
							            <table class="table table-borderless table-condensed cart_total">
							            	<tr>
												<td>Date</td>
												<td class="right">
													<input id="issuedDate" name="issuedDate" 
															data-role="datepicker"
															data-format="dd-MM-yyyy"
															data-parse-formats="yyyy-MM-dd" 
															data-bind="value: obj.issued_date, 
																		events:{ change : issuedDateChanges }" 
															required data-required-msg="required"
															style="width:100%;" />
												</td>
											</tr>							            
											<tr>
								            	<td>
								            		Payment Method					            						            		
								            	</td>				
												<td>
													<input id="ddlPaymentMethod" name="ddlPaymentMethod"
															data-role="dropdownlist"								
															data-header-template="customer-payment-method-header-tmpl"
								              				data-value-primitive="true"
															data-text-field="name" 
								              				data-value-field="id"
								              				data-bind="value: obj.payment_method_id,
								              							source: paymentMethodDS"
								              				data-option-label="Select Method..."
								              				required data-required-msg="required" 
								              				style="width: 100%" />
												</td>
											</tr>
											<tr>
								            	<td>Cash Account</td>							            	
							            		<td>
													<input id="ddlCashAccount" name="ddlCashAccount" 
														data-role="dropdownlist"
														data-header-template="account-header-tmpl"
														data-template="account-list-tmpl"
							              				data-value-primitive="true"
														data-text-field="name" 
							              				data-value-field="id"
							              				data-bind="value: obj.account_id,
							              							source: accountDS"
							              				data-option-label="Select Account..."
							              				required data-required-msg="required" 
							              				style="width: 100%" />
												</td>							            	
								            </tr>							            
								            <tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>											
							            </table>						            
							        </div>
							        <!-- // Options Tab content END -->

							        <!-- INFO Tab content -->
							        <div class="tab-pane" id="tab2-2">						            
							            <table class="table table-borderless table-condensed cart_total">
											<tr>
								            	<td>Collector</td>							            	
							            		<td>
													<input id="cbbEmployee" name="cbbEmployee"
														   data-role="combobox"
										                   data-value-primitive="true"
										                   data-header-template="employee-header-tmpl"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.employee_id,
										                              source: employeeDS"
										                   data-placeholder="Type Name..." 
										                   style="width: 100%" />
												</td>							            	
								            </tr>				            
								            <tr>
												<td>Segments</td>
												<td>
													<select data-role="multiselect"
														   data-value-primitive="true"
														   data-header-template="segment-header-tmpl"
														   data-item-template="segment-list-tmpl"				    
														   data-value-field="id" 
														   data-text-field="code"
														   data-bind="value: obj.segments, 
														   			source: segmentItemDS,
														   			events:{ change: segmentChanges }"
														   data-placeholder="Add Segment.."				   
														   style="width: 100%" /></select>
												</td>
											</tr>											
							            </table>						            
							        </div>
							        <!-- // INFO Tab content END -->

							    </div>
							</div>

					    </div>
					</div>

					<!-- Item List -->
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th class="center" style="width: 1%;">No.</th>			                
				                <th>DATE</th>
				                <th>NAME</th>
				                <th>INVOICE</th>
				                <th data-bind="visible: showCheckNo" style="width: 10%">CHECK NO</th>
				                <th style="width: 15%">AMOUNT</th>			                
				                <th style="width: 15%">DISCOUNT</th>
				                <th style="width: 15%">PAY</th>
				            </tr> 
				        </thead>
				        <tbody data-role="listview" 
				        		data-template="cashReceipt-template" 
				        		data-auto-bind="false"
				        		data-bind="source: dataSource"></tbody>			        
				    </table>			    
									
		            <!-- Bottom part -->
		            <div class="row-fluid">
			
						<!-- Column -->
						<div class="span5">
							
							<div class="btn-group">
								<div class="leadcontainer">
									
								</div>
								<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
								<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
									<li>
										<input type="checkbox" id="chbCheckNo" class="k-checkbox" data-bind="checked: showCheckNo">
	  									<label class="k-checkbox-label" for="chbCheckNo">CHECK NO</label>
									</li>															
								</ul>
							</div>

							<br>

							<textarea cols="0" rows="2" class="k-textbox" style="width:49%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>												
							<textarea cols="0" rows="2" class="k-textbox" style="width:50%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
						</div>
						<!-- Column END -->
						
						<!-- Column -->
						<div class="span7">
							<table class="table table-condensed table-striped table-white">
								<tbody>
									<tr>
										<td class="right">Total Received:</td>
										<td class="right strong"><span data-bind="text: pay"></span></td>
										<td class="right">Subtotal:</td>
										<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
									</tr>								
									<tr>
										<td class="right">Remaining:</td>
										<td class="right strong"><span data-bind="text: remain"></span></td>
										<td class="right">Total Discount:</td>
										<td class="right strong">
											<span data-bind="text: discount"></span>
	                   					</td>
									</tr>																
									<tr>
										<td></td>
										<td></td>
										<td class="right"><h4>Total Due:</h4></td>
										<td class="right strong"><h4 data-bind="text: total"></h4></td>
									</tr>								
								</tbody>
							</table>
						</div>
						<!-- // Column END -->
						
					</div>	           
					
					<!-- Form actions -->
					<div class="box-generic bg-action-button">
						<div id="ntf1" data-role="notification"></div>

						<!-- Delete Confirmation -->
						<div data-role="window"
			                 data-title="Delete Confirmation"
			                 data-width="350"
			                 data-height="200"
			                 data-iframe="true"
			                 data-modal="true"
			                 data-visible="false"
			                 data-position="{top:'40%',left:'35%'}"
			                 data-actions="{}"
			                 data-resizable="false"
			                 data-bind="visible: showConfirm"
			                 style="text-align:center;">
			                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
						    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
						    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
			            </div>
			            <!-- // Delete Confirmation -->

						<div class="row">
							<div class="span3">
								<input data-role="dropdownlist"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.transaction_template_id,
					                              source: txnTemplateDS"
					                   data-option-label="Select Template..." />
							</div>
							<div class="span9" align="right">
								<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
								<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
								<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
								<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
								<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
							</div>
						</div>
					</div>
					<!-- // Form actions END -->								

				</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashReceipt-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.cashReceipt.dataSource.indexOf(data)+1#			
		</td>		
		<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
		<td>#=contact[0].name#</td>		
		<td>#=reference.length>0?reference[0].number:""#</td>
		<td data-bind="visible: showCheckNo">
			<input type="text" class="k-textbox" 
					data-bind="value: check_no"
					style="width: 100%; margin-bottom: 0;" />
		</td>		
		<td class="center">
			#=reference.length>0 ? kendo.toString(reference[0].amount - amount_paid, "c", locale) : 0#			
		</td>		
		<td class="center">
			<input data-role="numerictextbox"
				   data-culture="#:locale#"
                   data-format="c0"
                   data-min="0"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>
		<td class="center">
			<input data-role="numerictextbox"
				   data-culture="#:locale#"
                   data-format="c0"
                   data-min="0"                   
                   data-bind="value: amount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>
    </tr>   
</script>

<script id="cashPayment" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
			<div id="example" class="k-content">					
			    
		    	<span class="glyphicons no-js remove_2 pull-right" 
	    				onclick="javascript:window.history.back()"
						data-bind="click: cancel"><i></i></span>

		        <h2>CASH PAYMENT</h2>			    		   

			    <br>				   				
					
				<!-- Upper Part -->
				<div class="row-fluid">
					<div class="span4">
						<div class="widget widget-heading-simple widget-body-primary widget-employees">		
							<div class="widget-body padding-none">			
								<div class="row-fluid row-merge">
									<div class="listWrapper">
										<div class="innerAll">							
											<form autocomplete="off" class="form-inline">
												<div class="widget-search separator bottom">
													<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
													<div class="overflow-hidden">
														<input type="search" placeholder="Bill Number..." data-bind="value: searchText, events:{change: enterSearch}">
													</div>
												</div>
												<div class="select2-container" style="width: 100%;">								
													<input id="cbbContact" name="cbbContact"
														   data-role="combobox"
														   data-header-template="vendor-header-tmpl"										                    
										                   data-value-primitive="true"
										                   data-template="contact-list-tmpl"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: contact_id,
										                              source: contactDS,
										                              events:{ change: contactChanges }"
										                   data-placeholder="Supplier..."                    
										                   style="width: 100%" />									
												</div>
											</form>					
										</div>
									</div>
								</div>
							</div>
						</div>
						
						<div class="strong" style="margin-bottom:0; width: 100%; padding: 10px;" align="center"
							data-bind="style: { backgroundColor: amtDueColor}">
							<div align="left">AMOUNT PAID</div>
							<h2 data-bind="text: total" align="right"></h2>
						</div>												
					</div>					   

					<div class="span8">

						<div class="box-generic" style="height: 190px;">

						    <!-- Tabs Heading -->
						    <div class="tabsbar tabsbar-2">
						        <ul class="row-fluid row-merge">
						        	<li class="span1 glyphicons cogwheels active"><a href="#tab1-1" data-toggle="tab"><i></i> </a>
						            </li>		            								            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">

						    	<!-- Options Tab content -->
						        <div class="tab-pane active" id="tab1-1">						            
						            <table class="table table-borderless table-condensed cart_total">
						            	<tr>
											<td>Date</td>
											<td class="right">
												<input id="issuedDate" name="issuedDate" 
														data-role="datepicker"
														data-format="dd-MM-yyyy"
														data-parse-formats="yyyy-MM-dd" 
														data-bind="value: obj.issued_date, 
																	events:{ change : issuedDateChanges }" 
														required data-required-msg="required"
														style="width:100%;" />
											</td>
										</tr>							            
										<tr>
							            	<td>
							            		Payment Method					            						            		
							            	</td>				
											<td>
												<input id="ddlPaymentMethod" name="ddlPaymentMethod"
														data-role="dropdownlist"
														data-header-template="vendor-payment-method-header-tmpl"														
							              				data-value-primitive="true"
														data-text-field="name" 
							              				data-value-field="id"						              				 
							              				data-bind="value: obj.payment_method_id,
							              							source: paymentMethodDS"
							              				data-option-label="Select Method..."
							              				required data-required-msg="required" 
							              				style="width: 100%" />
											</td>
										</tr>
										<tr>
							            	<td>Cash Account</td>							            	
						            		<td>
												<input id="ddlCashAccount" name="ddlCashAccount" 
													data-role="dropdownlist"
													data-header-template="account-header-tmpl"
													data-template="account-list-tmpl"														
						              				data-value-primitive="true"
													data-text-field="name" 
						              				data-value-field="id"						              				 
						              				data-bind="value: obj.account_id,
						              							source: accountDS"
						              				data-option-label="Select Account..."
						              				required data-required-msg="required" 
						              				style="width: 100%" />
											</td>							            	
							            </tr>							            
							            <tr>
											<td>Segments</td>
											<td>
												<select data-role="multiselect"
													   data-value-primitive="true"	
													   data-header-template="segment-header-tmpl"							   
													   data-item-template="segment-list-tmpl"				    
													   data-value-field="id" 
													   data-text-field="code"
													   data-bind="value: obj.segments, 
													   			source: segmentItemDS,
													   			events:{ change: segmentChanges }"
													   data-placeholder="Add Segment.."				   
													   style="width: 100%" /></select>
											</td>
										</tr>											
						            </table>						            
						        </div>
						        <!-- // Options Tab content END -->					        								        

						    </div>
						</div>

				    </div>
				</div>

				<!-- Item List -->
				<table class="table table-bordered table-primary table-striped table-vertical-center">
			        <thead>
			            <tr>
			                <th class="center" style="width: 1%;">No.</th>			                
			                <th>DATE</th>
			                <th>NAME</th>
			                <th>BILL NO.</th>
			                <th data-bind="visible: showCheckNo" style="width: 10%">CHECK NO</th>			                		                
			                <th style="width: 15%">DISCOUNT</th>
			                <th style="width: 15%">AMOUNT</th>			                
			                <th style="width: 15%">PAY</th>			                			                			                
			            </tr> 
			        </thead>
			        <tbody data-role="listview" 
			        		data-template="cashPayment-template" 
			        		data-auto-bind="false"
			        		data-bind="source: dataSource"></tbody>			        
			    </table>			    
								
	            <!-- Bottom part -->
	            <div class="row-fluid">
		
					<!-- Column -->
					<div class="span4">
						
						<div class="btn-group">
							<div class="leadcontainer">
								
							</div>
							<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-list"></i> </a>
							<ul class="dropdown-menu" style="padding: 5px; border-radius:0;">
								<li>
									<input type="checkbox" id="chbCheckNo" class="k-checkbox" data-bind="checked: showCheckNo">
  									<label class="k-checkbox-label" for="chbCheckNo">CHECK NO</label>
								</li>															
							</ul>
						</div>

						<br>
						<div class="well" style="margin-top:10px;">
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo" placeholder="memo for external ..."></textarea>												
							<textarea cols="0" rows="2" class="k-textbox" style="width:100%" data-bind="value: obj.memo2" placeholder="memo for internal ..."></textarea>
						</div>
					</div>
					<!-- Column END -->

					<!-- Column -->
					<div class="span4" align="center">
						<img data-bind="visible: isEdit, attr: { src: statusSrc }" width="150px;" height="150px;" />
					</div>
					<!-- Column END -->
					
					<!-- Column -->
					<div class="span4">
						<table class="table table-condensed table-striped table-white">
							<tbody>
								<tr>
									<td class="right">Total Received:</td>
									<td class="right strong"><span data-bind="text: pay"></span></td>
									<td class="right">Subtotal:</td>
									<td class="right strong" width="40%"><span data-bind="text: sub_total"></span></td>
								</tr>								
								<tr>
									<td class="right">Remaining:</td>
									<td class="right strong"><span data-bind="text: remain"></span></td>
									<td class="right">Total Discount:</td>
									<td class="right strong">
										<span data-bind="text: discount"></span>
                   					</td>
								</tr>																
								<tr>
									<td></td>
									<td></td>
									<td class="right"><h4>Total:</h4></td>
									<td class="right strong"><h4 data-bind="text: total"></h4></td>
								</tr>								
							</tbody>
						</table>
					</div>
					<!-- // Column END -->
					
				</div>	           
				
				<!-- Form actions -->
				<div class="box-generic bg-action-button">
					<div id="ntf1" data-role="notification"></div>

					<!-- Delete Confirmation -->
					<div data-role="window"
		                 data-title="Delete Confirmation"
		                 data-width="350"
		                 data-height="200"
		                 data-iframe="true"
		                 data-modal="true"
		                 data-visible="false"
		                 data-position="{top:'40%',left:'35%'}"
		                 data-actions="{}"
		                 data-resizable="false"
		                 data-bind="visible: showConfirm"
		                 style="text-align:center;">
		                <p style="font-size:25px; margin: 15px 0 25px;" class="delete-message" data-bind="text: confirmMessage"></p>
					    <button style="font-size:14px; border:none; background:#496cad; color:#fff; padding:5px 25px;" data-bind="click:delete">Yes</button> 
					    <button style="font-size:14px; border:none; background:red; color:#fff; padding:5px 25px;" data-bind="click:closeConfirm">No</button>
		            </div>
		            <!-- // Delete Confirmation -->

					<div class="row">
						<div class="span3">
							<input data-role="dropdownlist"
				                   data-value-primitive="true"
				                   data-text-field="name"
				                   data-value-field="id"
				                   data-bind="value: obj.transaction_template_id,
				                              source: txnTemplateDS"
				                   data-option-label="Select Template..." />
						</div>
						<div class="span9" align="right">
							<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" data-bind="invisible: isEdit" style="width: 80px;"><i></i> Save New</span>
							<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>																	
							<span id="savePrint" class="btn btn-icon btn-default glyphicons print" style="width: 80px;"><i></i> Save Print</span>
							<span class="btn btn-icon btn-warning glyphicons remove_2" onclick="javascript:window.history.back()" data-bind="click: cancel" style="width: 80px;"><i></i> Cancel</span>
							<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: openConfirm, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
						</div>
					</div>
				</div>
				<!-- // Form actions END -->								

			</div>							
			</div>
		</div>
	</div>
</script>
<script id="cashPayment-template" type="text/x-kendo-tmpl">		
	<tr data-uid="#: uid #">		
		<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.cashPayment.dataSource.indexOf(data)+1#			
		</td>		
		<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
		<td>
			#if(contact.length>0){#
				#if(contact[0].company==""){#
					#=contact[0].surname# #=contact[0].name#
				#}else{#
					#=contact[0].company#
				#}#
			#}#
		</td>		
		<td>#=reference.length>0?reference[0].number:""#</td>
		<td data-bind="visible: showCheckNo">
			<input type="text" class="k-textbox" 
					data-bind="value: check_no"
					style="width: 100%; margin-bottom: 0;" />
		</td>		
		<td class="center">
			#=reference.length>0 ? kendo.toString(reference[0].amount - amount_paid, "c", locale) : 0#			
		</td>
		<td class="center">
			<input data-role="numerictextbox"
				   data-culture="#:locale#"
                   data-format="c0"
                   data-min="0"                   
                   data-bind="value: discount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>		
		<td class="center">
			<input data-role="numerictextbox"
				   data-culture="#:locale#"
                   data-format="c0"
                   data-min="0"                   
                   data-bind="value: amount,
                              events: { change: changes }"
                   style="width: 100%;">			
		</td>
    </tr>   
</script>





<!-- ***************************
*	Inventory Section      	  *
**************************** -->
<script id="itemDashBoard" type="text/x-kendo-template">
	<div class="row-fluid">

		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2>INVENTORY</h2>
			        	<p>
			        		In here, you can manage your inventory information, stock, item price, and other related transactions.
			        	</p>
			        	<div class="supplier-icon">
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/non_inventory_part" class="center">
						       		<img title="Add Non Inventory Parts" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/non_inventory_parts.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div>
			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center ">
				<tr>
					<td class="center">
						<a href="#/grn">
							<img title="Add Received Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/received_note.png" width="110" height="200" />
							Received Note
						</a>						
					</td>
					<td class="center">
						<a href="#/gdn">
							<img title="Add Delivery Address Note" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/delivery_note.png" width="110" height="200" />
							Delivery Note
						</a>
					</td>
					<td class="center">
						<a href="#/item_adjustment">
							<img title="Add Adjustment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/adjustment.png" width="110" height="200" />
							Adjustment
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center">
						<a href="#/">
							<img title="Add Internal Usage" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/internal_usage.png" width="110" height="200" />
							Internal Usage
						</a>
					</td>
					<td class="center">
						<a href="#/item_assembly">
							<img title="Add Build Assembly" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/build_assembly.png" width="110" height="200" />
							Build Assembly
						</a>
					</td>
					<td class="center">
						<a href="#/item_catalog">
							<img title="Add Catalog" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/catalog.png" width="110" height="200" />
							Catalog
						</a>
					</td>
				</tr>				
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid">
				

				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Quantity on Hand</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary" >
							
							<div align="center" class="text-large strong" data-bind="text: sale"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: sale_customer"></span>
										<br>
										<span>Supplier</span>
									</td>
									<td>
										<span data-bind="text: sale_product"></span>
										<br>
										<span>Product</span>
									</td>
									<td>
										<span data-bind="text: sale_order"></span>
										<br>
										<span>Order</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>

				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Gross Profit Margin</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info" >
							
							<div align="center" class="text-large strong" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: ar_open"></span>
										<br>
										<span>Open</span>
									</td>
									<td>
										<span data-bind="text: ar_customer"></span>
										<br>
										<span>Supplier</span>
									</td>
									<td>
										<span data-bind="text: ar_overdue"></span>
										<br>
										<span>Margin</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>

				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Turnover days</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" data-bind="text: order"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: order_open"></span>
										<br>
										<span>Open</span>
									</td>
									<td>
										<span data-bind="text: order_open"></span>
										<br>
										<span>Supplier</span>
									</td>
									<td>
										<span data-bind="text: order_avg"></span>
										<br>
										<span>Turnover</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">									
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th colspan="2" class="center">Inventory Turnover Days</th>				                			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="itemDashboard-top-customer-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th colspan="2" class="center">Top 5 Suppliers</th>		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="itemDashboard-top-ar-template"
			                 data-bind="source: topCustomerDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">					
					<table class="table table-bordered table-primary table-striped table-vertical-center">
				        <thead>
				            <tr>
				                <th colspan="2" class="center">Top 5 Best Selling Products</th>			                		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"                
			                 data-template="itemDashboard-top-product-template"
			                 data-bind="source: topProductDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
			<div class="home-chart">
				<div data-role="chart"
	                 data-legend="{ position: 'top' }"
	                 data-series-defaults="{ type: 'column' }"
	                 data-tooltip='{
	                    visible: true,
	                    format: "{0}%",
	                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
	                 }'                 
	                 data-series="[
	                                 { field: 'sale', name: 'Monthly Sale', categoryField:'month', color: '#236DA4' },
	                                 { field: 'order', name: 'Monthly Order', categoryField:'month', color: '#A6C9E3' }
	                             ]"	                             
	                 data-bind="source: graphDS"
	                 style="height: 250px;" ></div>            
            </div>
            <!-- End Graph -->

		</div>
	</div>	
</script>
<script id="itemDashboard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td style="width: 1%">#:banhji.itemDashBoard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")# days</span>
		</td>		
	</tr>
</script>
<script id="itemDashboard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="width: 1%">#:banhji.itemDashBoard.topCustomerDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="itemDashboard-top-product-template" type="text/x-kendo-tmpl">
	<tr>
		<td style="width: 1%">#:banhji.itemDashBoard.topProductDS.indexOf(data)+1#</td>		
		<td>
			<span>
				#if(name.length>15){#
					#=name.substring(0, 15)#...
				#}else{#
					#=name#
				#}#
			</span>
			<span class="pull-right">#=kendo.toString(quantity, "n0")#</span>
		</td>
	</tr>
</script>
<script id="itemCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="sku or name ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
																
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: itemDS.total()"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: itemDS"
						 data-auto-bind="false" 
						 data-row-template="itemCenter-item-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							            <li style="font-size: large; color: black; font-weight: bold;">
							            	<span data-bind="text: obj.sku"></span>
							            	-
							            	<span data-bind="text: obj.name"></span>
							            </li>
							            <li class="glyphicons circle_info active"><span data-toggle="tab" data-target="#tab1-4"><i></i></span>
							            </li>
							            <li class="glyphicons riflescope"><span data-toggle="tab" data-target="#tab2-4"><i></i></span>
							            </li>
							            <li class="glyphicons coins"><span data-bind="click: pricing"><i></i></span>
							            </li>							            							            
							            <li class="glyphicons edit"><span data-bind="click: edit"><i></i></span>
							            </li>							            						            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Info Tab content -->
							            <div id="tab1-4" class="tab-pane active box-generic">
							            	
											<div class="widget widget-heading-simple widget-body-white">
												<div class="widget-body padding-none">
													<div class="row-fluid row-merge">
														<div class="span6">
															<div class="innerAll center">
																<h5 class="strong muted text-uppercase"><i class="icon-money text-faded"></i> <span data-bind="text: lang.lang.weighted_avg_cost"></span></h5>
																<span class="text-large strong text-primary"><span data-format="n" data-bind="text: obj.cost"></span></span>
															</div>
														</div>
														<div class="span6">
															<div class="innerAll center muted">
																<h5 class="strong muted text-uppercase"><i class="icon-dollar text-faded"></i> <span data-bind="text: lang.lang.avg_price"></span></h5>
																<span class="text-large strong"><span data-bind="text: obj.price"></span></span>
															</div>
														</div>
													</div>
												</div>
											</div>
											
							            </div>
							            <!-- // Info Tab content END -->

							            <!-- SEARCH Tab content -->
							            <div id="tab2-4" class="tab-pane box-generic">
							                <table>
									    		<tr>
									    			<td>
												    	<input data-role="dropdownlist"
														   data-option-label="(--- Category ---)"
										                   data-auto-bind="false"
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: category_id,
										                              source: categoryDS,			                              
										                              events: {
										                                change: categoryChanges
										                              }"/>
									            	</td>
									            	<td>
										            	<select data-role="multiselect"
												           data-placeholder="item group ..."
												           data-value-primitive="true"
												           data-text-field="name"
												           data-value-field="id"
												           data-bind="value: selectedItemGroup,
												                      source: itemGroupDS,
												                      enabled: isCategorySelected"
												           style="width: 200px;" 
												    	></select>
												    </td>
												</tr>
											</table>

								            <br><br>
								            <span class="btn btn-primary btn-icon glyphicons search pull-right" data-bind="click: search"><i></i> <span data-bind="text: lang.lang.search"></span></span>
								            <br>
							            </div>
							            <!-- // SEARCH Tab content END -->							            
							           
							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadOnHand">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt">Value OH<span data-bind="text: obj.on_hand" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-inverse widget-stats-5" data-bind="click: loadOnHand">
										<span class="glyphicons thumbs_up"><i></i></span>
										<span class="txt">Qty OH<span data-bind="text: obj.on_hand" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>							
							
							<div class="row-fluid">
								<div class="span6">
									<div class="widget-stats widget-stats-info widget-stats-5" data-bind="click: loadPO">
										<span class="glyphicons cart_in"><i></i></span>
										<span class="txt"><span data-bind="text: on_po"></span>On PO</span>
										<div class="clearfix"></div>
									</div>
								</div>
								<div class="span6">
									<div class="widget-stats widget-stats-default widget-stats-5" data-bind="click: loadSO">
										<span class="glyphicons cart_out"><i></i></span>
										<span class="txt"><span data-bind="text: on_so"></span>On SO</span>
										<div class="clearfix"></div>
									</div>
								</div>
							</div>														
						</div>											          	
		          	</div>
					
					<div>
						<input id="sorter" name="sorter"
				    	   data-role="dropdownlist"                   
				           data-value-primitive="true"
				           data-text-field="text"
				           data-value-field="value"
				           data-bind="value: sorter,
				                      source: sortList" />
				                                   
				        <input id="sdate" name="sdate"						           
					           data-bind="value: sdate"
					           placeholder="From ..." />
				        
				       	<input id="edate" name="edate"						           
					           data-bind="value: edate"
					           placeholder="To ..." />

			            <button id="search" type="button" data-role="button"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th><span data-bind="text: lang.lang.date"></span></th>
								<th><span data-bind="text: lang.lang.type2"></span></th>								
								<th><span data-bind="text: lang.lang.reference_no"></span></th>
								<th><span data-bind="text: lang.lang.qty"></span></th>
								<th><span data-bind="text: lang.lang.cost"></span></th>
								<th><span data-bind="text: lang.lang.price"></span></th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="itemCenter-transaction-tmpl"
				                data-bind="source: movementDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: movementDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="itemCenter-item-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				<span class="strong">
					#=sku# #=name#				
				</span>
			</div>
		</td>
	</tr>
</script>
<script id="itemCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(invoice[0].issued_date), "dd-MM-yyyy")#</td>
    	<td>#=invoice[0].type#</td>
        <td>#=invoice[0].number#</td>
    	<td>#=kendo.toString(quantity, "n0")#</td>
    	<td>#=kendo.toString(cost, "c", "locale")#</td>
    	<td>#=kendo.toString(price, "c", "locale")#</td>  	
    </tr>
</script>
<script id="item" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>INVENTORY FOR SALE</h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-option-label="Select Category..."
											   data-role="dropdownlist"
											   data-header-template="item-category-header-tmpl"
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: loadPattern}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"
											   data-role="dropdownlist"
											   data-header-template="item-group-header-tmpl"
											   data-option-label="Select Group..."
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row-fluid">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtNumber">Number<span style="color:red">*</span></label>
				              			<input id="txtNumber" name="txtNumber" class="k-textbox"
					              				data-bind="value: obj.sku, disabled: obj.is_pattern" 
					              				placeholder="e.g. ID0001" 
					              				required data-required-msg="required"
					              				style="width: 100%;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName">Name <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="item name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>

							<div class="row-fluid">
								<div class="span6">																					
									<!-- Group -->
									<div class="control-group">								
										<label for="txtOrderPoint"><span data-bind="text: lang.lang.reorder_point"></span></label>
										<input data-role="numerictextbox"
						                   data-format="n0"
						                   data-min="0"						                   
						                   data-bind="value: obj.order_point"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->														
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6">
							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">								
										<label for="txtCost"><span data-bind="text: lang.lang.cost"></span></label>
							            <input data-role="numerictextbox"
						                   data-format="n0"
						                   data-min="0"						                   
						                   data-bind="value: obj.cost"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->									
								</div>
							</div>

							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">								
										<label for="txtOnhand"><span data-bind="text: lang.lang.quantity"></span></label>
							            <input data-role="numerictextbox"
						                   data-format="n0"
						                   data-min="0"						                   
						                   data-bind="value: obj.on_hand"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-header-template="item-measurement-header-tmpl"
										   data-role="dropdownlist"						                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->											
								</div>
							</div>

							<div class="row-fluid">
								<!-- Group -->
								<div class="control-group">								
									<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
						            <textarea id="txtDescription" cols="0" rows="3" class="k-textbox" 
										data-bind="value: obj.bill_to" style="width: 100%;"></textarea>
								</div>																		
								<!-- // Group END -->
							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons usd active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>
						            <li class="span2 glyphicons circle_info">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
						            </li>
						            <li class="span2 glyphicons old_man">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.vendor"></span></span></a>
						            </li>
						            <li class="span2 glyphicons user">
						            	<a href="#tab4" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.customer"></span></span></a>
						            </li>						            					            						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">
						        <!-- //ACCOUNTING INFO -->
						        <div class="tab-pane active" id="tab1">
						        	<div class="row-fluid">						            	
										<div class="span4">
											<label for="ddlIncome"><span data-bind="text: lang.lang.income_account"></span><span style="color:red">*</span></label>											
											<input id="ddlIncome" name="ddlIncome"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.income_account_id,
								                              source: incomeAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>
										<div class="span4">
											<label for="ddlCogs"><span data-bind="text: lang.lang.cost_of_good_sold_account"></span><span style="color:red">*</span></label>
											<input id="ddlCogs" name="ddlCogs"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.cogs_account_id,
								                              source: cogsAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />											
										</div>
										<div class="span4">
											<label for="ddlInventory"><span data-bind="text: lang.lang.inventory_account"></span><span style="color:red">*</span></label>
											<input id="ddlInventory" name="ddlInventory"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.inventory_account_id,
								                              source: inventoryAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>												
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING INFO END -->						        
						        
						        <!-- //INFO -->
						        <div class="tab-pane" id="tab2">

						        	<div class="row-fluid">

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtSerialNumber"><span data-bind="text: lang.lang.model"></span></label>
						              			<input data-role="dropdownlist"
						              			   data-option-label="(--- Select ---)"
						              			   data-header-template="item-brand-header-tmpl"           
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.brand_id,
								                              source: brandDS"
								                   style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtMeasurement"><span data-bind="text: lang.lang.measurement"></span></label>
						              			<input id="txtMeasurement" name="txtMeasurement" class="k-textbox"
							              				data-bind="value: obj.measurements" 
							              				placeholder="e.g. 4x6mn"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">
											<!-- Group -->
											<div class="control-group">
									            <input type="checkbox" data-bind="checked: obj.favorite" />	<span data-bind="text: lang.lang.favorite"></span>
											</div>																		
											<!-- // Group END -->
										</div>										

						        	</div>						        	

							        <div class="row-fluid">										

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtInternationalCode"><span data-bind="text: lang.lang.international_code"></span></label>
						              			<input id="txtInternationalCode" name="txtInternationalCode" class="k-textbox"
							              				data-bind="value: obj.international_code" 
							              				placeholder="e.g. INT0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtColorCode"><span data-bind="text: lang.lang.color"></span></label>
						              			<input id="txtColorCode" name="txtColorCode" class="k-textbox"
							              				data-bind="value: obj.color_code" 
							              				placeholder="e.g. VID0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtIMEI"><span data-bind="text: lang.lang.imei"></span></label>
						              			<input id="txtIMEI" name="txtIMEI" class="k-textbox"
							              				data-bind="value: obj.IMIE" 
							              				placeholder="e.g. IMEI0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtSerialNumber"><span data-bind="text: lang.lang.serial_number"></span></label>
						              			<input id="txtSerialNumber" name="txtSerialNumber" class="k-textbox"
							              				data-bind="value: obj.serial_number" 
							              				placeholder="e.g. 0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>
												
							        </div>							       

					        	</div>
						        <!-- //INFO END -->

						        <!-- //VENDOR -->
						        <div class="tab-pane" id="tab3">
						        						       
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemVendor"><i></i> <span data-bind="text: lang.lang.new_vendor_item"></span></span>
								        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.item_code"></span></th>								                
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"					        						        		 
								        		data-template="item-vendor-row-tmpl" 
								        		data-bind="source: itemVendorDS">
								        </tbody>										        						        
								    </table>

					        	</div>
						        <!-- //VENDOR END -->

						        <!-- //CUSTOMER -->
						        <div class="tab-pane" id="tab4">
						        					       
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemCustomer"><i></i> <span data-bind="text: lang.lang.new_customer_item"></span></span>
								        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.item_code"></span></th>								                
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="item-customer-row-tmpl" 
								        		data-bind="source: itemCustomerDS">
								        </tbody>										        						        
								    </table>

					        	</div>
						        <!-- //CUSTOMER END -->
						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>
						<!-- <span id="saveSend" class="btn btn-icon btn-warning glyphicons envelope" style="width: 80px;"><i></i> Save Send</span>										 -->
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="item-vendor-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-placeholder="vendor ..."
               data-auto-bind="false"
               data-value-primitive="true"
               data-filter="startswith"							                   
               data-min-length="3"							                   
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemVendor"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="item-customer-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbCustomer" name="cbbCustomer" 
			   data-role="combobox"
			   data-header-template="contact-header-tmpl"
			   data-template="contact-list-tmpl"
               data-placeholder="customer ..."
               data-auto-bind="false"
               data-value-primitive="true"
               data-filter="startswith"							                   
               data-min-length="3"							                   
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: customerList"
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemCustomer"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="itemCatalog" type="text/x-kendo-template">
	<div class="customer-background">
		<div class="container-960">
			<div id="example" class="k-content">
				
				<!-- Collapsible Widget -->			
				<div class="widget">
				    <div class="widget-head">
				    	<span class="btn btn-primary pull-right" 
								onclick="javascript:window.history.back()">X</span>
				        
				        <h4 class="heading glyphicons sampler"><i></i> <span data-bind="text: lang.lang.catalogs"></span></h4>							        	
				    </div>
				    <div class="widget-body">					
						
				    	<div class="row-fluid">
				    		<div class="span6 well">							
								<div class="row-fluid">
									<div class="span6">	
										<!-- Group -->
										<div class="control-group">							
											<label for="txtSKU"><span data-bind="text: lang.lang.code"></span> <span style="color:red">*</span></label>
					              			<input id="txtSKU" name="txtSKU" class="k-textbox"
						              				data-bind="value: obj.sku" 
						              				placeholder="e.g. ID0001" 
						              				required data-required-msg="required"
						              				style="width: 100%;" />
						              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
										</div>
										<!-- // Group END -->		
									</div>

									<div class="span6">	
										<!-- Group -->
										<div class="control-group">
											<label for="txtName"><span data-bind="text: lang.lang.items"></span><span style="color:red">*</span></label>
						              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name" 
								              		placeholder="Items Name..." required data-required-msg="required"
								              		style="width: 100%;" />
										</div>
										<!-- // Group END -->	 			
									</div>								
								</div>

								<div class="row-fluid">
									<div class="span6">
										<!-- Group -->
										<div class="control-group">								
											<label for="txtOnhand"><span data-bind="text: lang.lang.status"></span><span style="color:red">*</span></label>
								            <input id="ddlStatus" name="ddlStatus" 
					              				data-role="dropdownlist"
							            		data-text-field="name"
				           						data-value-field="id"
				           						data-value-primitive="true" 
							            		data-bind="source: statusList, value: obj.status"
							            		data-option-label="(--- Select ---)"
							            		required data-required-msg="required" style="width: 100%;" />
										</div>																		
										<!-- // Group END -->										
									</div>

									<div class="span6">
										<input type="checkbox" data-bind="checked: obj.favorite" /> <span data-bind="text: lang.lang.favorite"></span>
									</div>															
								</div>							
							</div>
							<div class="span6">							
								<div class="row-fluid">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
							            <textarea id="txtDescription" cols="0" rows="2" class="k-textbox" 
											data-bind="value: obj.bill_to" style="width: 100%;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="row-fluid">
									<!-- Group -->
									<div class="control-group">								
										<label for="items"><span data-bind="text: lang.lang.select_item_for_catalogs"></span></label>

										<select data-role="multiselect"
							                   data-placeholder="Select..."
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.catalogs,
							                              source: itemDS"
							                   style="width: 100%"
							            ></select>						            
									</div>																		
									<!-- // Group END -->
								</div>																											
							</div>
						</div>
						
						<br>											
								
						<!-- Form actions -->
						<div align="center">
							<span id="notification"></span>

							<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i><span data-bind="text: lang.lang.delete"></span></span>
							<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
						</div>
						<!-- // Form actions END -->

					</div> <!-- End Widget-Body List -->
				</div>
				<!-- // Collapsible Widget END -->				
						
			</div>
		</div>
	</div>
</script>
<script id="itemAssembly" type="text/x-kendo-template">
	<div class="customer-background">
		<div class="container-960">
			<div id="example" class="k-content">
				
				<!-- Collapsible Widget -->			
				<div class="widget">
				    <div class="widget-head">
				    	<span class="btn btn-primary pull-right" 
								onclick="javascript:window.history.back()">X</span>
				        
				        <h4 class="heading glyphicons fins"><i></i> <span data-bind="text: lang.lang.assembly"></span></h4>							        	
				    </div>
				    <div class="widget-body">					
						
				    	<div class="row-fluid">
				    		<div class="span6 well">							
								<div class="row-fluid">
									<div class="span6">	
										<!-- Group -->
										<div class="control-group">							
											<label for="txtSKU"><span data-bind="text: lang.lang.code"></span> <span style="color:red">*</span></label>
					              			<input id="txtSKU" name="txtSKU" class="k-textbox"
						              				data-bind="value: obj.sku" 
						              				placeholder="e.g. ID0001" 
						              				required data-required-msg="required"
						              				style="width: 100%;" />
						              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
										</div>
										<!-- // Group END -->		
									</div>

									<div class="span6">	
										<!-- Group -->
										<div class="control-group">
											<label for="txtName"><span data-bind="text: lang.lang.items"></span> <span style="color:red">*</span></label>
						              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name" 
								              		placeholder="Items Name..." required data-required-msg="required"
								              		style="width: 100%;" />
										</div>
										<!-- // Group END -->	 			
									</div>								
								</div>

								<div class="row-fluid">
									<div class="span6">
										<!-- Group -->
										<div class="control-group">								
											<label for="txtOnhand"><span data-bind="text: lang.lang.status"></span><span style="color:red">*</span></label>
								            <input id="ddlStatus" name="ddlStatus" 
					              				data-role="dropdownlist"
							            		data-text-field="name"
				           						data-value-field="id"
				           						data-value-primitive="true" 
							            		data-bind="source: statusList, value: obj.status"
							            		data-option-label="(--- Select ---)"
							            		required data-required-msg="required" style="width: 100%;" />
										</div>																		
										<!-- // Group END -->										
									</div>

									<div class="span6">
										<input type="checkbox" data-bind="checked: obj.favorite" /> <span data-bind="text: lang.lang.favorite"></span>
									</div>															
								</div>							
							</div>
							<div class="span6">							
								<div class="row-fluid">
									<!-- Group -->
									<div class="control-group">								
										<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
							            <textarea id="txtDescription" cols="0" rows="2" class="k-textbox" 
											data-bind="value: obj.bill_to" style="width: 100%;"></textarea>
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="row-fluid">
									<!-- Group -->
									<div class="control-group">								
										<label for="items"><span data-bind="text: lang.lang.select_item_for_assemply"></span></label>
							           
							            <input data-role="combobox"
							                   data-placeholder="Select Item..."
							                   data-value-primitive="true"
							                   data-auto-bind="false"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: assembly_id,
							                              source: itemDS"
							                   style="width: 90%"/>

							            <button type="button" data-role="button" data-bind="click: addItem"><i class="icon-plus"></i></button>
									</div>																		
									<!-- // Group END -->
								</div>																											
							</div>
						</div>

						<br>

						<table class="table table-bordered table-primary table-striped table-vertical-center">
					        <thead>
					            <tr>
					            	<th width="5%"><span data-bind="text: lang.lang.no"></span></th>				                
					                <th width="20%"><span data-bind="text: lang.lang.items"></span></th>
					                <th><span data-bind="text: lang.lang.description"></span></th>
					                <th width="25%"><span data-bind="text: lang.lang.quantity"></span></th>
					                <th width="15%"><span data-bind="text: lang.lang.p"></span></th>
					                <th width="10%"><span data-bind="text: lang.lang.amount"></span></th>
					                <!---<th width="1%"></th>--->
					            </tr>
					        </thead>
					        <tbody data-role="listview"
					        		data-auto-bind="false" 
					        		data-template="itemAssembly-row-template" 
					        		data-bind="source: assemblyDS"></tbody>				        
					    </table>

					    <br>

					    <div class="row-fluid">
						    <div class="span4 pull-right">
								<div class="well pull-right">
									សរុប៖	<strong data-bind="text: total"></strong>
								</div>							
							</div>
						</div>
						
						<br>											
								
						<!-- Form actions -->
						<div align="center">
							<span id="notification"></span>

							<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i><span data-bind="text: lang.lang.delete"></span></span>
							<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i><span data-bind="text: lang.lang.cancel"></span></span> </div>
						<!-- // Form actions END -->

					</div> <!-- End Widget-Body List -->
				</div>
				<!-- // Collapsible Widget END -->				
						
			</div>
		</div>
	</div>
</script>
<script id="itemAssembly-row-template" type="text/x-kendo-tmpl">
	<tr>
		<td>
			<i class="icon-trash" data-bind="events: { click: removeItem }"></i>
			#:banhji.itemAssembly.assemblyDS.indexOf(data)+1#
		</td>		
		<td>
			<span data-bind="text: assembly[0].sku"></span>
			<span data-bind="text: assembly[0].name"></span>
		</td>
		<td>
			<span data-bind="text: assembly[0].description"></span>
		</td>
		<td>
			<input id="unit" name="unit" data-role="numerictextbox" 
					data-format="n0" data-min="1"
					data-bind="value: quantity, events: {change : changes}"
					required data-required-msg="required" style="width: 100px;" />

			<input data-role="dropdownlist"
				   data-option-label="(--- Select ---)"
                   data-auto-bind="false"
                   data-value-primitive="true"
                   data-text-field="measurement"
                   data-value-field="measurement_id"
                   data-bind="source: item_prices, value: measurement_id, events: {change: measurementChanges}"
                   style="width: 100px;" />
		</td>					
		<td>
			<input id="price" name="price" data-role="numerictextbox" 
					data-format="c" data-culture=#:currency[0].locale#
					data-bind="value: price, events: {change : changes}" 
					required data-required-msg="required" style="width: 100%;" />
		</td>		
		<td class="right">
			<span data-format="n" 
					data-culture=#:currency[0].locale#
					data-bind="text: amount" 
					style="width: 100%;"></span> 						
		</td>		
	</tr>
</script>
<script id="itemService" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>SERVICE</h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-option-label="Select Category..."
											   data-role="dropdownlist"
											   data-header-template="item-category-header-tmpl"
											   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: loadPattern}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"											   
											   data-role="dropdownlist"
											   data-header-template="item-group-header-tmpl"
											   data-option-label="Select Group..."
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"							                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row-fluid">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtSKU">Code <span style="color:red">*</span></label>
				              			<input id="txtSKU" name="txtSKU" class="k-textbox"
					              				data-bind="value: obj.sku, disabled: obj.is_pattern" 
					              				placeholder="e.g. ID0001" 
					              				required data-required-msg="required"
					              				style="width: 100%;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName">Name <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="Name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>

							<div class="row-fluid">
								<div class="span6">																					
									<!-- Group -->
									<div class="control-group">										
										<input type="checkbox" id="chbFavorite" class="k-checkbox" data-bind="checked: obj.favorite">
	  									<label class="k-checkbox-label" for="chbFavorite"><span data-bind="text: lang.lang.favorite"></span></label>							            
									</div>																		
									<!-- // Group END -->														
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6">
							<div class="row-fluid">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->									
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-role="dropdownlist"
										   data-header-template="item-measurement-header-tmpl"					                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->											
								</div>
							</div>							

							<div class="row-fluid">
								<!-- Group -->
								<div class="control-group">								
									<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
						            <textarea id="txtDescription" cols="0" rows="3" class="k-textbox" 
										data-bind="value: obj.bill_to" style="width: 100%;"></textarea>
								</div>																		
								<!-- // Group END -->
							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons usd active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>						            
						            <li class="span2 glyphicons old_man">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.vendor"></span></span></a>
						            </li>
						            <li class="span2 glyphicons user">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.customer"></span></span></a>
						            </li>						            					            						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">
						        <!-- //ACCOUNTING INFO -->
						        <div class="tab-pane active" id="tab1">
						        	<div class="row-fluid">						            	
										<div class="span6">
											<label for="ddlIncome"><span data-bind="text: lang.lang.income_account"></span><span style="color:red">*</span></label>											
											<input id="ddlIncome" name="ddlIncome"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.income_account_id,
								                              source: incomeAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>
										<div class="span6">
											<label for="ddlCogs"><span data-bind="text: lang.lang.cost_of_good_sold_account"></span><span style="color:red">*</span></label>
											<input id="ddlCogs" name="ddlCogs"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.cogs_account_id,
								                              source: cogsAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />											
										</div>																					
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING INFO END -->						        

						        <!-- //VENDOR -->
						        <div class="tab-pane" id="tab2">
						        						       
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemVendor"><i></i> <span data-bind="text: lang.lang.new_vendor_item"></span></span>
								        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.item_code"></span></th>								                
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="itemService-vendor-row-tmpl" 
								        		data-bind="source: itemVendorDS">
								        </tbody>										        						        
								    </table>

					        	</div>
						        <!-- //VENDOR END -->

						        <!-- //CUSTOMER -->
						        <div class="tab-pane" id="tab3">
						        					       
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemCustomer"><i></i> <span data-bind="text: lang.lang.new_customer_item"></span></span>
								        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.item_code"></span></th>								                
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="itemService-customer-row-tmpl" 
								        		data-bind="source: itemCustomerDS">
								        </tbody>										        						        
								    </table>

					        	</div>
						        <!-- //CUSTOMER END -->
						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>
						<!-- <span id="saveSend" class="btn btn-icon btn-warning glyphicons envelope" style="width: 80px;"><i></i> Save Send</span>										 -->
						<span id="savePrint" class="btn btn-icon btn-default glyphicons print" data-bind="click: cancel" style="width: 80px;"><i></i> Save Print</span>
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="itemService-vendor-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-placeholder="vendor ..."
               data-auto-bind="false"
               data-value-primitive="true"
               data-filter="startswith"							                   
               data-min-length="3"							                   
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemVendor"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="itemService-customer-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbCustomer" name="cbbCustomer" 
			  data-role="combobox"
			   data-header-template="contact-header-tmpl"
			   data-template="contact-list-tmpl"
               data-placeholder="customer ..."
               data-auto-bind="false"
               data-value-primitive="true"
               data-filter="startswith"							                   
               data-min-length="3"							                   
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: customerList"
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemCustomer"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="nonInventoryPart" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">					
				<div id="example" class="k-content">					
			    
			    	<div class="hidden-print pull-right">
			    		<span class="glyphicons no-js remove_2" 
							data-bind="click: cancel"><i></i></span>						
					</div>

			        <h2>OTHER INVENTORY</h2>			    		   

				    <br>					
					
			    	<div class="row-fluid">
			    		<div class="span6 well">									
							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlCategory"><span data-bind="text: lang.lang.category"></span> <span style="color:red">*</span></label>										
										<input id="ddlCategory" id="ddlCategory"
											   data-option-label="Select Category..."
											   data-header-template="item-category-header-tmpl"
											   data-role="dropdownlist"							                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.category_id,
							                   			  disabled: obj.is_pattern, 
							                              source: categoryDS,
							                              events: {change: loadPattern}"
							                   required data-required-msg="required" style="width: 100%;" />
									</div>
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">										
										<label for="ddlItemGroup"><span data-bind="text: lang.lang.group"></span> </label>										
										<input id="ddlItemGroup" id="ddlItemGroup"											   
											   data-role="dropdownlist"
											   data-option-label="Select Group..."
											   data-header-template="item-group-header-tmpl"
											   data-cascade-from="ddlCategory"
											   data-cascade-from-field="category_id"							                   
							                   data-value-primitive="true"
							                   data-text-field="name"
							                   data-value-field="id"
							                   data-bind="value: obj.item_group_id,							                   			  
							                              source: itemGroupDS"
							                   style="width: 100%;" />
									</div>
									<!-- // Group END -->												
								</div>
							</div>
							
							<div class="row-fluid">
								<div class="span6">	
									<!-- Group -->
									<div class="control-group">							
										<label for="txtNumber"><span data-bind="text: lang.lang.number"></span><span style="color:red">*</span></label>
				              			<input id="txtNumber" name="txtNumber" class="k-textbox"
					              				data-bind="value: obj.sku, disabled: obj.is_pattern" 
					              				placeholder="e.g. ID0001" 
					              				required data-required-msg="required"
					              				style="width: 100%;" />
					              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
									</div>
									<!-- // Group END -->		
								</div>

								<div class="span6">						
									<!-- Group -->
									<div class="control-group">
										<label for="txtName"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
					              		<input id="txtName" name="txtName" class="k-textbox" data-header-template="item-group-header-tmpl" data-bind="value: obj.name, disabled: obj.is_pattern" 
							              		placeholder="item name..." required data-required-msg="required"
							              		style="width: 100%;" />
									</div>
									<!-- // Group END -->	
								</div>								
							</div>

							<div class="row-fluid">
								<div class="span6">																					
									<!-- Group -->
									<div class="control-group">								
										<label for="txtOrderPoint"><span data-bind="text: lang.lang.reorder_point"></span></label>
										<input data-role="numerictextbox"
						                   data-format="n0"
						                   data-min="0"						                   
						                   data-bind="value: obj.order_point"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->														
								</div>

								<div class="span6">
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlStatus"><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></label>
							            <input id="ddlStatus" name="ddlStatus" 
				              				data-role="dropdownlist"
						            		data-text-field="name"
			           						data-value-field="id"
			           						data-value-primitive="true" 
						            		data-bind="source: statusList, value: obj.status"
						            		data-option-label="(--- Select ---)"
						            		required data-required-msg="required" style="width: 100%;" />
									</div>																		
									<!-- // Group END -->										
								</div>								
							</div>							
						</div>
						<div class="span6">
							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">								
										<label for="txtCost"><span data-bind="text: lang.lang.cost"></span></label>
							            <input data-role="numerictextbox"
						                   data-format="n0"
						                   data-min="0"						                   
						                   data-bind="value: obj.cost"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlCurrency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>							            
							            <input id="ddlCurrency" name="ddlCurrency"							            	 
				              				data-role="dropdownlist"
				              				data-option-label="(--- Select ---)"
				              				data-template="currency-list-tmpl"
				              				data-value-primitive="true"
						            		data-text-field="code"
			           						data-value-field="locale"			           						 
						            		data-bind="source: currencyDS, value: obj.locale"						            		
						            		required data-required-msg="required" style="width: 100%;" />						            		
									</div>																		
									<!-- // Group END -->									
								</div>
							</div>

							<div class="row-fluid">
								<div class="span6">														
									<!-- Group -->
									<div class="control-group">								
										<label for="txtOnhand"><span data-bind="text: lang.lang.quantity"></span></label>
							            <input data-role="numerictextbox"
						                   data-format="n0"
						                   data-min="0"						                   
						                   data-bind="value: obj.on_hand"
						                   style="width: 100%">
									</div>																		
									<!-- // Group END -->
								</div>

								<div class="span6">	
									<!-- Group -->
									<div class="control-group">								
										<label for="ddlMeasurement"><span data-bind="text: lang.lang.unit_measure"></span> <span style="color:red">*</span></label>
										<input id="ddlMeasurement" name="ddlMeasurement"
										   data-option-label="(--- Select ---)" 
										   data-role="dropdownlist"
										   data-header-template="item-measurement-header-tmpl"					                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: obj.measurement_id,
						                              source: measurementDS"
						                   required data-required-msg="required"
						                   style="width: 100%;" />
									</div>																		
									<!-- // Group END -->											
								</div>
							</div>

							<div class="row-fluid">
								<!-- Group -->
								<div class="control-group">								
									<label for="txtDescription"><span data-bind="text: lang.lang.description"></span></label>
						            <textarea id="txtDescription" cols="0" rows="3" class="k-textbox" 
										data-bind="value: obj.bill_to" style="width: 100%;"></textarea>
								</div>																		
								<!-- // Group END -->
							</div>

						</div>
					</div>								
							
					<!-- // Inner Tabs -->
					<div class="row-fluid">								
						<div class="box-generic">
						    <!-- //Tabs Heading -->
						    <div class="tabsbar tabsbar-1">
						        <ul class="row-fluid row-merge">						            
						            <li class="span2 glyphicons usd active">
						            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.accounting"></span></span></a>
						            </li>
						            <li class="span2 glyphicons circle_info">
						            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
						            </li>
						            <li class="span2 glyphicons old_man">
						            	<a href="#tab3" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.vendor"></span></span></a>
						            </li>
						            <li class="span2 glyphicons user">
						            	<a href="#tab4" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.customer"></span></span></a>
						            </li>						            					            						            					            
						        </ul>
						    </div>
						    <!-- // Tabs Heading END -->

						    <div class="tab-content">
						        <!-- //ACCOUNTING INFO -->
						        <div class="tab-pane active" id="tab1">
						        	<div class="row-fluid">										
										<div class="span12">
											<label for="ddlInventory"><span data-bind="text: lang.lang.inventory_account"></span><span style="color:red">*</span></label>
											<input id="ddlInventory" name="ddlInventory"
												   data-role="dropdownlist"
												   data-header-template="account-header-tmpl"
												   data-template="account-list-tmpl"								                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-bind="value: obj.inventory_account_id,
								                              source: inventoryAccountDS"
								                   data-option-label="Select Account..."
								                   required data-required-msg="required" style="width: 100%;" />
										</div>												
							        </div>							        
					        	</div>
						        <!-- //ACCOUNTING INFO END -->						        
						        
						        <!-- //INFO -->
						        <div class="tab-pane" id="tab2">

						        	<div class="row-fluid">

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtSerialNumber"><span data-bind="text: lang.lang.model"></span></label>
						              			<input data-role="dropdownlist"
						              			   data-option-label="(--- Select ---)"								                  
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-header-template="item-brand-header-tmpl"
								                   data-value-field="id"
								                   data-bind="value: obj.brand_id,
								                              source: brandDS"
								                   style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtMeasurement"><span data-bind="text: lang.lang.measurement"></span></label>
						              			<input id="txtMeasurement" name="txtMeasurement" class="k-textbox"
							              				data-bind="value: obj.measurements" 
							              				data-header-template="item-measurement-header-tmpl"
							              				placeholder="e.g. 4x6mn"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">
											<!-- Group -->
											<div class="control-group">
									            <input type="checkbox" data-bind="checked: obj.favorite" />	<span data-bind="text: lang.lang.favorite"></span>
											</div>																		
											<!-- // Group END -->
										</div>										

						        	</div>						        	

							        <div class="row-fluid">										

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtInternationalCode"><span data-bind="text: lang.lang.international_code"></span></label>
						              			<input id="txtInternationalCode" name="txtInternationalCode" class="k-textbox"
							              				data-bind="value: obj.international_code" 
							              				placeholder="e.g. INT0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtColorCode"><span data-bind="text: lang.lang.color"></span></label>
						              			<input id="txtColorCode" name="txtColorCode" class="k-textbox"
							              				data-bind="value: obj.color_code" 
							              				placeholder="e.g. VID0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtIMEI"><span data-bind="text: lang.lang.imei"></span></label>
						              			<input id="txtIMEI" name="txtIMEI" class="k-textbox"
							              				data-bind="value: obj.IMIE" 
							              				placeholder="e.g. IMEI0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>

										<div class="span3">														
											<!-- Group -->
											<div class="control-group">							
												<label for="txtSerialNumber"><span data-bind="text: lang.lang.serial_number"></span></label>
						              			<input id="txtSerialNumber" name="txtSerialNumber" class="k-textbox"
							              				data-bind="value: obj.serial_number" 
							              				placeholder="e.g. 0001"
							              				style="width: 100%;" />					              		
											</div>
											<!-- // Group END -->
										</div>
												
							        </div>							       

					        	</div>
						        <!-- //INFO END -->

						        <!-- //VENDOR -->
						        <div class="tab-pane" id="tab3">
						        						       
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemVendor"><i></i> <span data-bind="text: lang.lang.new_vendor_item"></span></span>
								        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.item_code"></span></th>								                
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="nonInventoryPart-vendor-row-tmpl" 
								        		data-bind="source: itemVendorDS">
								        </tbody>										        						        
								    </table>

					        	</div>
						        <!-- //VENDOR END -->

						        <!-- //CUSTOMER -->
						        <div class="tab-pane" id="tab4">
						        					       
						        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyItemCustomer"><i></i> <span data-bind="text: lang.lang.new_customer_item"></span></span>
								        	
						        	<table class="table table-bordered table-white">
								        <thead>
								            <tr>
								                <th><span data-bind="text: lang.lang.name"></span></th>
								                <th><span data-bind="text: lang.lang.item_code"></span></th>								                
								                <th width="20px"></th>										               
								            </tr>
								        </thead>
								        <tbody data-role="listview"										        		
								        		data-auto-bind="false"										        						        		 
								        		data-template="nonInventoryPart-customer-row-tmpl" 
								        		data-bind="source: itemCustomerDS">
								        </tbody>										        						        
								    </table>

					        	</div>
						        <!-- //CUSTOMER END -->
						    </div>
						</div>
					</div>					

					<br>											
							
					<!-- Form actions -->
					<div class="box-generic" align="right" style="background-color: #0B0B3B;">
						<span id="notification"></span>

						<span id="saveNew" class="btn btn-icon btn-primary glyphicons ok_2" style="width: 80px;"><i></i> Save New</span>
						<span id="saveClose" class="btn btn-icon btn-success glyphicons power" style="width: 80px;"><i></i> Save Close</span>
						<!-- <span id="saveSend" class="btn btn-icon btn-warning glyphicons envelope" style="width: 80px;"><i></i> Save Send</span>										 -->
						<span id="savePrint" class="btn btn-icon btn-default glyphicons print" data-bind="click: cancel" style="width: 80px;"><i></i> Save Print</span>
						<span class="btn btn-danger btn-icon glyphicons bin" data-bind="click: delete, visible: isEdit" style="width: 80px;"><i></i> Delete</span>					
					</div>
					<!-- // Form actions END -->

				</div>
			</div>
		</div>
	</div>
</script>
<script id="nonInventoryPart-vendor-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
               data-placeholder="vendor ..."
               data-auto-bind="false"
               data-value-primitive="true"
               data-filter="startswith"							                   
               data-min-length="3"
               data-header-template="vendor-header-tmpl"						                   
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemVendor"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="nonInventoryPart-customer-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="cbbVendor" name="cbbVendor" 
			   data-role="combobox"
			   data-header-template="vendor-header-tmpl"
			   data-template="contact-list-tmpl"
               data-placeholder="vendor ..."
               data-auto-bind="false"
               data-value-primitive="true"
               data-filter="startswith"							                   
               data-min-length="3"							                   
               data-text-field="name"
               data-value-field="id"										                   
               data-bind="value: contact_id,
                          source: vendorList"
               style="width: 100%" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: code" placeholder="item code ..." style="width: 100%;" />
		</td>			
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteItemCustomer"><i></i></span>									
		</td>		
	</tr>
</script>
<script id="priceList" type="text/x-kendo-template">
	<div class="container-960">		
		<div id="example" class="k-content">
			<!-- Collapsible Widget -->			
			<div class="widget">
			    <div class="widget-head">
			    	<span class="btn btn-primary pull-right" 
							onclick="javascript:window.history.back()">X</span>
			        
			        <h4 class="heading glyphicons usd"><i></i> Pricing</h4>							        	
			    </div>
			    <div class="widget-body">

			    	<div class="widget widget-heading-simple widget-body-simple">

			    		<!-- Widget Heading -->
						<div class="widget-head" style="font-size: large; font-weight: bold;">
							<span data-bind="text: obj.sku"></span>
							-
							<span data-bind="text: obj.name"></span>
						</div>
						<!-- // Widget Heading END -->
									
						<div class="widget-body">

							<!-- Row -->
							<div class="row-fluid">
								<div class="span3">
								
									<!-- Stats Widget -->
									<a href="" class="widget-stats widget-stats-gray widget-stats-1">
										<span class="glyphicons cart_in"><i></i><span class="txt">Weighted Avg Cost</span></span>
										<div class="clearfix"></div>
										<span class="count"><span data-format="n" data-bind="text: obj.cost" style="font-size: xx-large;"></span></span>
									</a>
									<!-- // Stats Widget END -->
									
								</div>
								<div class="span3">
								
									<!-- Stats Widget -->
									<a href="" class="widget-stats widget-stats-1">
										<span class="glyphicons cart_out"><i></i><span class="txt">Avg Price</span></span>
										<div class="clearfix"></div>
										<span class="count"><span data-format="n" data-bind="text: obj.price" style="font-size: xx-large;"></span></span>
									</a>
									<!-- // Stats Widget END -->
									
								</div>
								<div class="span2">
								
									<!-- Stats Widget -->
									<a href="" class="widget-stats widget-stats-gray widget-stats-2">
										<span class="count"><span data-format="n0" data-bind="text: obj.on_hand"></span></span>
										<span class="txt">On Hand</span>
									</a>
									<!-- // Stats Widget END -->
									
								</div>
								<div class="span2">
								
									<!-- Stats Widget -->
									<a href="" class="widget-stats widget-stats-2">
										<span class="count"><span data-format="n0" data-bind="text: on_po"></span></span>
										<span class="txt">On PO</span>
									</a>
									<!-- // Stats Widget END -->
									
								</div>
								<div class="span2">
								
									<!-- Stats Widget -->
									<a href="" class="widget-stats widget-stats-gray widget-stats-2">
										<span class="count"><span data-format="n0" data-bind="text: on_so"></span></span>
										<span class="txt">On SO</span>
									</a>
									<!-- // Stats Widget END -->
									
								</div>
								
							</div>
							<!-- // Row END -->
														
						</div>
					</div>

					<div id="priceList-window" data-role="window" data-visible="false" data-modal="true" data-resizable="false" data-iframe="true">				    	
						<table>
							<tr>
								<td>Price</td>
								<td>
									<input data-role="numerictextbox"		                   
					                   data-min="0"		                   
					                   data-bind="value: priceList.price" />
								</td>
							</tr>
							<tr>
								<td>Currency</td>
								<td>
									<input data-role="dropdownlist"
										   data-option-label="(--- Select ---)"
										   data-template="currency-list-tmpl"			                   
						                   data-value-primitive="true"
						                   data-text-field="code"
						                   data-value-field="locale"
						                   data-bind="value: priceList.locale,
						                              source: currencyDS" />
								</td>
							</tr>
							<tr>
								<td>Unit Price</td>
								<td>
									<input data-role="numerictextbox"		                   
					                   data-min="0"		                   
					                   data-bind="value: priceList.unit_value" />
								</td>
							</tr>
							<tr>
								<td>Unit</td>
								<td>
									<input data-role="dropdownlist"
										   data-option-label="(--- Select ---)"			                   
						                   data-value-primitive="true"
						                   data-text-field="name"
						                   data-value-field="id"
						                   data-bind="value: priceList.measurement_id,
						                              source: unitDS" />
								</td>
							</tr>
						</table>

						<br>

						<span class="btn btn-success btn-icon glyphicons ok_2" data-bind="click: save"><i></i>Save</span>
						<span class="btn btn-danger btn-icon glyphicons remove_2" data-bind="click: closeWindow"><i></i>Close</span>  
					</div>				

					<button class="btn btn-inverse" data-bind="click: openWindow"><i class="icon-plus icon-white"></i></button>
					Set New Price
					</br>
					<table class="table table-bordered table-condensed">
				        <thead>
				            <tr>	            	
				            	<th>Price</th>			            		                
				                <th>Unit Value</th>
				                <th>Unit Measurement</th>			                
				                <th></th>	                
				            </tr>
				        </thead>
				        <tbody data-template="priceList-template"
				        	data-auto-bind="false"			        	
				        	data-bind="source: dataSource"></tbody>
				    </table>

					<br>

					<table class="table table-bordered table-condensed">
				        <thead>
				            <tr>	            	
				            	<th>Date</th>
				            	<th>Type</th>	                
				                <th>Reference No</th>				               
				                <th>Quantity</th>
				                <th>Cost</th>
				                <th>Price</th>			                	                
				            </tr>
				        </thead>
				        <tbody data-template="priceList-movement-tmpl"
				        	data-auto-bind="false"
				        	data-pageable="true" 
				        	data-bind="source: recordDS"></tbody>
				    </table>
				    <div id="pager" class="k-pager-wrap"
			             data-role="pager" data-bind="source: recordDS"></div>					

				</div> <!-- End Widget-Body List -->
			</div>
			<!-- // Collapsible Widget END -->			
			
		</div>
	</div>
</script>
<script id="priceList-template" type="text/x-kendo-template">
    <tr>
    	<td>#=kendo.toString(price, "c", locale)#</td>    	
    	<td>#=unit_value#</td>
    	<td>#=measurement#</td>    	
    	<td>
    		<span data-bind="click: edit"><i class="icon-edit"></i> Edit</span>
    		|
    		<span data-bind="click: delete"><i class="icon-remove"></i> Delete</span>
    	</td>
    </tr>
</script>
<script id="priceList-movement-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(invoice[0].issued_date), "dd-MM-yyyy")#</td>
    	<td>#=invoice[0].type#</td>
        <td>#=invoice[0].number#</td>
    	<td>#=kendo.toString(unit*movement, "n0")#</td>
    	<td>#=kendo.toString(cost*rate, "c", "locale")#</td>
    	<td>#=kendo.toString(price*rate, "c", "locale")#</td>  	
    </tr>
</script>
<script id="itemRecord" type="text/x-kendo-template">
	<div class="container-960">
		<div id="example" class="k-content">
			
			<!-- Collapsible Widget -->			
			<div class="widget">
			    <div class="widget-head">
			    	<span class="btn btn-primary pull-right" 
							onclick="javascript:window.history.back()">X</span>
			        
			        <h4 class="heading glyphicons retweet_2"><i></i> Item Record</h4>							        	
			    </div>
			    <div class="widget-body">

			    	<div class="widget widget-heading-simple widget-body-white">
					    <div class="widget-body">
					        <div class="innerL">

					            <div class="separator bottom"></div>
					            <div class="glyphicons glyphicon-large cargo">
				                	<i></i>
				                	<h4 data-bind="text: item.name"></h4>

					                Code៖ <span data-bind="text: item.sku"></span> <br>
					                Description៖​ <span data-bind="text: item.description"></span> <br>
					                Quantity៖ <span data-bind="text: item.description"></span> <br>					                
					                Weighted Average Cost៖ <span data-bind="text: item.cost"></span>
					                 
					            </div>

					        </div>
					    </div>
					</div>			
							
					<table class="table table-borderless table-condensed cart_total">						
						<tr>
							<td>Date <span style="color:red">*</span></td>
							<td>
								<input id="issuedDate" name="issuedDate"
									data-role="datepicker"
									data-format="dd-MM-yyyy"									
				                    data-bind="value: obj.issued_date"
				                   style="width: 100%"
				                   required data-required-msg="required">
							</td>
						</tr>
						<tr>
							<td>Reference</td>
							<td>
								<input data-role="combobox"
									   placeholder="Select Reference..."			                   
					                   data-value-primitive="true"
					                   data-text-field="number"
					                   data-value-field="id"
					                   data-bind="value: obj.reference_id,
					                              source: invoiceDS"					                   
					                   style="width: 100%" />
							</td>
						</tr>											
						<tr>
							<td>Supplier</td>
							<td>
								<input data-role="combobox"
									   placeholder="Select Supplier..."			                   
					                   data-value-primitive="true"
					                   data-text-field="company"
					                   data-value-field="id"
					                   data-bind="value: obj.contact_id,
					                              source: contactDS"					                   
					                   style="width: 100%" />
							</td>
						</tr>
						<tr>
							<td>Item <span style="color:red">*</span></td>
							<td>
								<input id="cbbItem" name="cbbItem" 
									   data-role="combobox"
									   placeholder="Select Item..."			                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.item_id,
					                              source: itemDS,
					                              events:{change: itemChanges}"					                   
					                   style="width: 100%" 
					                   required data-required-msg="required" />
							</td>
						</tr>																	
						<tr>
							<td>Quantity <span style="color:red">*</span></td>
							<td>
								<input id="txtUnit" name="txtUnit"
								   data-role="numerictextbox"				                                      
				                   data-bind="value: obj.unit"
				                   required data-required-msg="required"
				                   style="width: 100%" />
							</td>
						</tr>											
						<tr>
							<td>Measurement <span style="color:red">*</span></td>
							<td>
								<input id="ddlUnit" name="ddlUnit" 
									   data-role="dropdownlist"
									   data-option-label="(--- Select ---)"			                   
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: obj.measurement_id,
					                              source: measurementDS"					                   
					                   required data-required-msg="required"
					                   style="width: 100%" />
							</td>
						</tr>											
						<tr>
							<td>Price <span style="color:red">*</span></td>
							<td>
								<input id="txtPrice" name="txtPrice"
								   data-role="numerictextbox"				                                      
				                   data-bind="value: obj.price"
				                   required data-required-msg="required"
				                   style="width: 100%" />
							</td>
						</tr>
						<tr>
							<td>Cash <span style="color:red">*</span></td>
							<td>
								<input id="txtAmount" name="txtAmount"
								   data-role="numerictextbox"				                                      
				                   data-bind="value: obj.amount"
				                   required data-required-msg="required"
				                   style="width: 100%" />
							</td>
						</tr>
						<tr>
							<td>Currency <span style="color:red">*</span></td>
							<td>
								<input id="ddlCurrency" name="ddlCurrency" 
									   data-role="dropdownlist"
									   data-option-label="(--- Select ---)"			                   
					                   data-value-primitive="true"
					                   data-text-field="code"
					                   data-value-field="id"
					                   data-bind="value: obj.currency_id,
					                              source: currencyDS"					                   
					                   style="width: 100%" 
					                   required data-required-msg="required" />
							</td>							
						</tr>
						<tr>
							<td>Memo</td>
							<td>
								<textarea id="txtDescription" cols="0" rows="2" class="k-textbox" 
										data-bind="value: obj.memo" style="width: 100%;"></textarea>
							</td>							
						</tr>												
					</table>

					<br>											
							
					<!-- Form actions -->
					<div align="center">
						<span id="notification"></span>

						<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i>Save</span>
						<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i>Delete</span>
						<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i>Cancel</span>
					</div>
					<!-- // Form actions END -->

				</div> <!-- End Widget-Body List -->
			</div>
			<!-- // Collapsible Widget END -->				
					
		</div>
	</div>
</script>
<script id="itemAdjustment" type="text/x-kendo-template">
	<div class="customer-background">
		<div class="container-960">
			<div id="example" class="k-content">
				
				<!-- Collapsible Widget -->			
				<div class="widget">
				    <div class="widget-head">
				    	<span class="btn btn-primary pull-right" 
								onclick="javascript:window.history.back()">X</span>
				        
				        <h4 class="heading glyphicons sort"><i></i> <span data-bind="text: lang.lang.item_adjustment"></span></h4>							        	
				    </div>
				    <div class="widget-body">
				    	<table>
				    		<tr>
				    			<td>
							    	<input data-role="dropdownlist"
									   data-option-label="(--- Category ---)"
					                   data-auto-bind="false"
					                   data-header-template="item-category-header-tmpl"
					                   data-value-primitive="true"
					                   data-text-field="name"
					                   data-value-field="id"
					                   data-bind="value: category_id,
					                              source: categoryDS,			                              
					                              events: {
					                                change: categoryChanges
					                              }"/>
				            	</td>
				            	<td>
					            	<select data-role="multiselect"
							           data-placeholder="item group ..."
							           data-value-primitive="true"
							           data-text-field="name"
							           data-value-field="id"
							           data-bind="value: selectedItemGroup,
							                      source: itemGroupDS,
							                      enabled: isCategorySelected"
							           style="width: 200px;" 
							    	></select>
							    </td>
							    <td>
							    	<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
					          		|
									<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>
								</td>
							</tr>
						</table>

						<br>

				    	<div data-role="grid"
				    		data-auto-bind="false" 
				    		data-bind="source: lineDS" 
				    		data-toolbar="['excel']" 
				    		data-excel='{ fileName: "item_adjustment.xlsx" }'
				    		data-row-template="itemAdjustment-row-template" 
				    		data-columns='[			    			
				    			{ title: "No.", width:"5%" },
				    			{ title: "Description" },
				    			{ title: "Quantity" },
				    			{ title: "New Qty" },
				    			{ title: "Adjustment" }
				    		]'></div>

						<br>
						
						<div class="row-fluid">
							<div class="span5">				
								<table class="table table-borderless table-condensed cart_total">
									<tr>
										<td><span data-bind="text: lang.lang.counter"></span></td>
										<td>
											<input id="cbbReader" name="cbbReader" 
							    				   data-role="combobox"
								                   data-placeholder="select ..."
								                   data-auto-bind="false"
								                   data-value-primitive="true"
								                   data-filter="startswith"							                   
								                   data-min-length="3"							                   
								                   data-text-field="fullname"
								                   data-value-field="id"							                   
								                   data-bind="value: obj.contact_id,
								                              source: contactDS"
								                   required data-required-msg="required"
								                   style="width: 100%" />
										</td>
									</tr>					          
									<tr data-bind="visible: isEdit">				
										<td><span data-bind="text: lang.lang.number"></span></td>
										<td><input class="k-textbox" data-bind="value: obj.number" style="width:100%;" readonly /></td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.segment"></span></td>
										<td>
											<select data-role="multiselect" 
												   data-bind="source: segmentItemDS, value: obj.segments, events:{change: segmentChanges}"
												   data-value-primitive="true"
												   data-value-field="id"
												   data-header-template="segment-header-tmpl"
												   data-text-field="name"
												   data-placeholder="(--- Select ---)"
												   style="width: 100%" /></select>
										</td>
									</tr>								
								</table>
							</div>

						    <div class="span2">
						    	
						    </div>

							<div class="span5">
								<table class="table table-borderless table-condensed cart_total">
									<tr>
										<td><span data-bind="text: lang.lang.date"></span></td>
										<td>
											<input id="issuedDate" name="issuedDate" 
													data-role="datepicker"
													data-format="dd-MM-yyyy" 
													data-bind="value: obj.issued_date" 
													required data-required-msg="required" />
										</td>
									</tr>
									<tr>
										<td><span data-bind="text: lang.lang.adjustment_account"></span></td>
										<td>
											<input data-role="dropdownlist"
												   data-option-label="(--- Select ---)"							                   
								                   data-value-primitive="true"
								                   data-text-field="name"
								                   data-value-field="id"
								                   data-header-template="account-header-tmpl"
								                   data-bind="value: obj.account_id,
								                              source: accountDS"
								                   style="width: 100%;"
								           
										</td>
									</tr>																					
						            <tr>
						            	<td><span data-bind="text: lang.lang.memo"></span></td>
						    			<td>
						    				<textarea cols="0" rows="2" class="k-textbox" data-bind="value: obj.memo" style="width: 100%"></textarea>
						    			</td>
									</tr>								
								</table>           		          	
						    </div>
						</div>
						
						<!-- Form actions -->
						<div align="center">
							<span id="notification"></span>

							<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i><span data-bind="text: lang.lang.save"></span></span>
							<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i><span data-bind="text: lang.lang.delete"></span></span>
							<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
						</div>
						<!-- // Form actions END -->

					</div> <!-- End Widget-Body List -->
				</div>
				<!-- // Collapsible Widget END -->				
			</div>			
		</div>
	</div>
</script>
<script id="itemAdjustment-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #"> 
    	<td>
			<i class="icon-trash" data-bind="events: { click: removeRow }"></i>
			#:banhji.itemAdjustment.lineDS.indexOf(data)+1#			
		</td>   	
    	<td>#=description#</td>
    	<td align="right">#=kendo.toString(on_hand, "n")#</td>
    	<td align="right">
    		<input class="txt#=uid#" 
    			   data-role="numerictextbox"
                   data-format="n"
                   data-min="0"                   
                   data-bind="value: new_qty,
                   			  events:{ change: onChange }"
                   style="width: 100px;">    		
    	</td>
    	<td align="right">#=kendo.toString(unit, "n")#</td>
    </tr>
</script>
<script id="itemSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>GENERAL Inventory SETTING</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons bookmark" data-toggle="tab"><i></i><span class="strong">Category</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons tag" data-toggle="tab"><i></i><span class="strong">Group</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons ruller" data-toggle="tab"><i></i><span class="strong">Measurement</span></a>
	            </li>
	            <li><a href="#tab4-1" class="glyphicons certificate" data-toggle="tab"><i></i><span class="strong">Brand</span></a>
	            </li>	            
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">	            

	            <!-- Tab Category content -->
	            <div class="tab-pane active" id="tab1-1">	            	
		            <div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: category_code">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New..." data-bind="value: category_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: category_abbr">					    
					    <input class="span2" id="appendedInputButtons"
					    	   data-role="dropdownlist"					    	   
			                   data-value-primitive="true"
			                   data-auto-bind="false"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: category_item_type_id,
			                              source: itemTypeDS" />
					    <button class="btn btn-default" type="button" data-bind="click: addCategory"><i class="icon-plus"></i> Add Category</button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>	            				            				
	            				<th>CODE</th>	
	            				<th>NAME</th>	
	            				<th>ABBR</th>
	            				<th>TYPE</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="itemSetting-edit-category-template"
				                data-template="itemSetting-category-template"
				                data-bind="source: categoryDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Category Type content END -->	            

	            <!-- Tab Item Group content -->
	            <div class="tab-pane" id="tab2-1">
		            <div class="input-append">
		            	<input id="appendedInputButtons" class="span2"
		            	   data-role="dropdownlist"
            			   data-option-label="(--- Select Category ---)"            			   			                   
		                   data-value-primitive="true"
		                   data-auto-bind="false"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: item_group_category_id,
		                              source: categoryDS"/>	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: item_group_code">	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New Name..." data-bind="value: item_group_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: item_group_abbr">					    
					    <button class="btn btn-default" type="button" data-bind="click: addItemGroup"><i class="icon-plus"></i> Add Group</button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>	            					            				
	            				<th>Code</th>	
	            				<th>Name</th>	
	            				<th>abbr</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="itemSetting-edit-item-group-template"
				                data-template="itemSetting-item-group-template"
				                data-bind="source: itemGroupDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Item Group Type content END -->

	            <!-- Tab Measurement content -->
	            <div class="tab-pane" id="tab3-1">
                	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="Measurement..." data-bind="value: measurement_name">					    
					    <button class="btn btn-default" type="button" data-bind="click: addMeasurement"><i class="icon-plus"></i> Add Measurement</button>					  
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Measurement</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-measurement-template"
				                data-template="itemSetting-measurement-template"
				                data-bind="source: measurementDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Measurement content END -->

	            <!-- Tab Brand content -->
	            <div class="tab-pane" id="tab4-1">
		            <div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: brand_code">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="New Brand..." data-bind="value: brand_name">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: brand_abbr">					    
					    <button class="btn btn-default" type="button" data-bind="click: addBrand"><i class="icon-plus"></i> Add Brand</button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Code</th>
	            				<th>Name</th>	            				
	            				<th>abbr</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-brand-template"
				                data-template="itemSetting-brand-template"
				                data-bind="source: brandDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Brand Type content END -->	            

	        </div>
	    </div>

	</div>
</script>
<script id="itemSetting-category-template" type="text/x-kendo-tmpl">                    
    <tr>    	   	
   		<td>
    		#:code#
   		</td>
   		<td>
    		#:name#
   		</td>
   		<td>
    		#:abbr#
   		</td>
   		<td>
    		#:item_type.length>0 ? item_type[0].name : ""#
   		</td>   		
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		        <span class="k-button" data-bind="click: goPattern">Pattern</span>
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-category-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>        	             
            <dd>
                <input type="text" class="k-textbox" data-bind="value:code" name="code" required="required" validationMessage="required" />
                <span data-for="code" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>
            <dd>
            <input data-role="dropdownlist"
                   data-value-primitive="true"
                   data-text-field="name"
                   data-value-field="id"
                   data-bind="value: item_type_id,
                              source: itemTypeDS" />
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="itemSetting-item-group-template" type="text/x-kendo-tmpl">                    
    <tr>    	   	
   		<td>
    		#:code#
   		</td>
   		<td>
    		#:name#
   		</td>
   		<td>
    		#:abbr#
   		</td>   		
   		<td>	        
        	<div class="edit-buttons">
	        	<a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
	        	<a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
        	</div>	        	   	
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-item-group-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>
        	<dd>
                <input data-role="dropdownlist"
        			   data-option-label="(--- Select ---)"        			   		                   
	                   data-value-primitive="true"
	                   data-auto-bind="false"
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: category_id,
	                              source: categoryDS"/>
            </dd>                         
            <dd>
                <input type="text" class="k-textbox" data-bind="value:code" name="code" required="required" validationMessage="required" />
                <span data-for="code" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="itemSetting-measurement-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		#:name#
   		</td>
   		<td>   			
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        #if(is_system=="0"){#
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>				        
		        #}#
		   	</div>		   	
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-measurement-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="name" required="required" validationMessage="required" />
                <span data-for="name" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="itemSetting-brand-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		 #:code#
   		</td>
   		<td>
    		 #:name#
   		</td>
   		<td>
    		 #:abbr#
   		</td>
   		<td>
   			<div class="edit-buttons">		        
	        	<a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
	        	<a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>		        
		   	</div>		   
   		</td>
   	</tr>
</script>
<script id="itemSetting-edit-brand-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>
        	<dd>
                <input data-role="dropdownlist"
        			   data-option-label="(--- Select ---)"        			   		                   
	                   data-value-primitive="true"	                   
	                   data-text-field="name"
	                   data-value-field="id"
	                   data-bind="value: sub_of,
	                              source: subBrandDS"/>
            </dd>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="name" required="required" validationMessage="required" />
                <span data-for="name" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:abbr" name="abbr" required="required" validationMessage="required" />
                <span data-for="abbr" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>

<script id="serviceSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>GENERAL SERVICE SETTING</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons bookmark" data-toggle="tab"><i></i><span class="strong">Category</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons tag" data-toggle="tab"><i></i><span class="strong">Group</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons ruller" data-toggle="tab"><i></i><span class="strong">Measurement</span></a>
	            </li>	            	            
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">	            

	            <!-- Tab Category content -->
	            <div class="tab-pane active" id="tab1-1">	            	
		            <div class="input-append">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: category_code">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New..." data-bind="value: category_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: category_abbr">					    
					    <input class="span2" id="appendedInputButtons"
					    	   data-role="dropdownlist"					    	   
			                   data-value-primitive="true"
			                   data-auto-bind="false"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: category_item_type_id,
			                              source: itemTypeDS" />
					    <button class="btn btn-default" type="button" data-bind="click: addCategory"><i class="icon-plus"></i> Add Category</button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>	            				            				
	            				<th>CODE</th>	
	            				<th>NAME</th>	
	            				<th>ABBR</th>
	            				<th>TYPE</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="itemSetting-edit-category-template"
				                data-template="itemSetting-category-template"
				                data-bind="source: categoryDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Category Type content END -->	            

	            <!-- Tab Item Group content -->
	            <div class="tab-pane" id="tab2-1">
		            <div class="input-append">
		            	<input id="appendedInputButtons" class="span2"
		            	   data-role="dropdownlist"
            			   data-option-label="(--- Select Category ---)"
            			   data-auto-bind="false"            			   			                   
		                   data-value-primitive="true"
		                   data-text-field="name"
		                   data-value-field="id"
		                   data-bind="value: item_group_category_id,
		                              source: categoryDS"/>	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="Code..." data-bind="value: item_group_code">	
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="New Name..." data-bind="value: item_group_name">
					    <input class="span3" id="appendedInputButtons" type="text" placeholder="abbr..." data-bind="value: item_group_abbr">					    
					    <button class="btn btn-default" type="button" data-bind="click: addItemGroup"><i class="icon-plus"></i> Add Group</button>					  
					</div>
		            
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>	            					            				
	            				<th>Code</th>	
	            				<th>Name</th>	
	            				<th>abbr</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            				
		            			data-edit-template="itemSetting-edit-item-group-template"
				                data-template="itemSetting-item-group-template"
				                data-bind="source: itemGroupDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Item Group Type content END -->

	            <!-- Tab Measurement content -->
	            <div class="tab-pane" id="tab3-1">
                	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="Measurement..." data-bind="value: measurement_name">					    
					    <button class="btn btn-default" type="button" data-bind="click: addMeasurement"><i class="icon-plus"></i> Add Measurement</button>					  
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Measurement</th>	            				
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="itemSetting-edit-measurement-template"
				                data-template="itemSetting-measurement-template"
				                data-bind="source: measurementDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Measurement content END -->	                     

	        </div>
	    </div>

	</div>
</script>

<script id="itemReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>INVENTORY POSITION</h2>
				<p>
					The following reports provide summary and detailed reports on the position of inventory. 
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/inventory_position_summary">Inventory Position Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/inventory_sale_item_analysis">Inventory Sale by Item Analysis</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price.  

								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.

								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/inventory_position_detail">Inventory Position Detail</a></h3>
							</td>
							<td >
								<h3><a href="#/">Inventory Turnover List</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for each inventory within a period of time.

								</p>
							</td>
							<td >
								<p>
									Provides analysis of inventory turnover days by each inventory.

								</p>
							</td>
						</tr>
					</table>
				</div>
			</div>

			<div class="row-fluid recevable-report">
				<h2>INVENTORY MOVEMENT REPORTS</h2>
				<p>
					The following reports provide summary and detailed reports on the movement of the inventories
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/inventory_movement_summary">Inventory Movement Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/inventory_movement_detail">Inventory Movement Detail</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Shows the movement of each inventory by opening balance, sale, purchase and adjustment. 
								</p>
								
							</td>
							<td >
								<p>
									Lists of all detailed transactions related to and grouped by each inventory
								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/purchase_summary_product_services">Purchase by Supplier Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/purchase_detail_product_services">Purchase by Supplier Detail</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all inventory purchases from each suppliers
								</p>
							</td>
							<td >
								<p>
									Lists of detailed inventory purchase transactions from each suppliers
								</p>
							</td>
						</tr>

						<tr>
							<td >
								<h3><a href="#/sale_summary_customer">Sale by Customer Summary</a></h3>
							</td>
							<td >
								<h3><a href="#/sale_detail_customer">Sale by Customer Detail</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists all inventory sold to each customer
								</p>
							</td>
							<td >
								<p>
									Lists of detailed inventory sale transactions to each customer
								</p>
							</td>
						</tr>
						
					</table>
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS/ LISTS</h2>
				<p>
					The following reports provide summary and detailed reports on the movement of the inventories
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td style="width: 55%; padding-right: 8px !important;">
								<h3><a href="#/inventory_list">Inventory List</a></h3>
							</td>
							<td >
								<h3><a href="#/">Recurring Inventory Template List</a></h3>								
							</td>						
						</tr>
						<tr>
							<td style="width: 55%; padding-right: 8px !important;">
								<p>
									Lists the products you purchase and sold. The following information is included: name, description, cost, sales price, and quantity on hand.
								</p>								
							</td>
							<td >								
							</td>
							
						</tr>
						
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Inventory Balance</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>6</span>
								<br>
								<span>Inventory items</span>
							</td>
							<td>
								<span>1</span>
								<br>
								<span>Categories</span>
							</td>
							<td>
								<span>10%</span>
								<br>
								<span>Average Margin</span>
							</td>
							<td>
								<span>20 days</span>
								<br>
								<span>Turnover Days</span>
							</td>
						</tr>
					</table>
				</div>
				<div id="sale-report-chart">Chart</div>
			</div>
		</div>
	</div>
</script>
<script id="inventoryPositionSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Inventory Position Summary</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Service Items</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items on hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Total </p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item Name</th>
							<th>On Hand</th>
							<th>Purchase order</th>
							<th>Sale Order</th>
							<th>Avg Cost</th>							
							<th>Sale Price</th>
							<th>Total</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
					

				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventorySaleItemAnalysis" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Inventory Sale by Item Analysis</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Purcahse In</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Sale</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items on hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Gross profit Margin</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Date</th>							
							<th>Opening</th>
							<th>Purchase</th>
							<th>Sale</th>							
							<th>Adjustment</th>							
							<th>Balance</th>
							<th>Avg Cost</th>							
							<th>Gross Profit Margin</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventoryPositionDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Inventory Position Detail</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Service Items</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items on hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Total </p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Type</th>
							<th>Date</th>
							<th>Item Name</th>
							<th>Ref</th>
							<th>Qty</th>							
							<th>Cost</th>
							<th>On Hand</th>
							<th>Avg Cost</th>
							<th>Total</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventoryMovementSummary" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">

						<h3 data-bind="text: institute.name"></h3>
						<h2>Inventory Position Detail</h2>

						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Purcahse In</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Sale</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items on hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Gross profit Margin</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item</th>
							<th>Opening</th>
							<th>Purchase</th>
							<th>Sale</th>
							<th>Adjustment</th>							
							<th>Balance</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventoryMovementDetail" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Inventory Movement Detail</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Purcahse In</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Sale</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Product Items on hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Gross profit Margin</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Date</th>
							<th>Type</th>
							<th>Name</th>
							<th>Opening</th>
							<th>Dr</th>							
							<th>Cr</th>
							<th>Adjustment</th>
							<th>Balance</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>
<script id="inventoryList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="customer-background">
			<div class="container-960">
				<div id="example" class="k-content saleSummaryCustomer">		
			    	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
					<br>
					<br>

					<div class="row-fluid">
					    <!-- Tabs -->
						<div class="relativeWrap" data-toggle="source-code">
							<div class="widget widget-tabs widget-tabs-gray report-tab">
							
								<!-- Tabs Heading -->
								<div class="widget-head">
									<ul>
										<li class="active"><a class="glyphicons calendar" href="#tab-1" data-toggle="tab"><i></i>Date</a></li>
										<li><a class="glyphicons filter" href="#tab-2" data-toggle="tab"><i></i>Filters</a></li>
										<li><a class="glyphicons print" href="#tab-3" data-toggle="tab"><i></i>Print/Export</a></li>
									</ul>
								</div>
								<!-- // Tabs Heading END -->
								
								<div class="widget-body">
									<div class="tab-content">
								    	<!-- //GENERAL INFO -->
								        <div class="tab-pane active" id="tab-1">									        	
											<input id="sorter" name="sorter"
									    	   data-role="dropdownlist"                   
									           data-value-primitive="true"
									           data-text-field="text"
									           data-value-field="value"
									           data-bind="value: sorter,
									                      source: sortList" />
									                                   
									        <input id="sdate" name="sdate"						           
										           data-bind="value: sdate"
										           placeholder="From ..." />
									        
									       	<input id="edate" name="edate"						           
										           data-bind="value: edate"
										           placeholder="To ..." />

								            <button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
							
							        	</div>
								        
										<!-- //ACCOUNTING -->
								        <div class="tab-pane" id="tab-2">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span ></span>Filtered by</label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span ></span>Sorted By</label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />
										         										
												</div>
																																		
											</div>
							        	</div>

								        <div class="tab-pane" id="tab-3">
								        	
								        	<span id="savePrint" class="btn btn-icon btn-default glyphicons print print1" data-bind="click: cancel" style="width: 80px;"><i></i> Print</span>
								        	<span id="" class="btn btn-icon btn-default pdf" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-pdf-o"></i>
								        		Print as PDF
								        	</span>
								        	<span id="" class="btn btn-icon btn-default execl" data-bind="click: cancel" style="width: 80px;">
								        		<i class="fa fa-file-excel-o"></i>
								        		Export to Excel
								        	</span>
							        	</div>
								        <!-- //ACCOUNTING END -->								       
								    </div>
								</div>
							</div>
						</div>
						<!-- // Tabs END -->						
					</div>

					<div class="block-title">
						<h3>ABC Co., Ltd</h3>
						<h2>Inventory List</h2>
						<p>From 1 June 2016 to 30 June 2016</p>
					</div>

					<div class="row-fluid">
						<div class="span5">
							<div class="total-customer">
								<div class="span6">
									<p>Qty on S O</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Qty on P O</p>
									<span>-</span>
								</div>	
							</div>
						</div>
						<div class="span7">
							<div class="total-customer">
								<div class="span6">
									<p>Qty on Hand</p>
									<span>-</span>
								</div>
								<div class="span6">
									<p>Gross profit magine</p>
									<span>-</span>
								</div>
							</div>
						</div>
					</div>

					<table class="table table-borderless table-condensed ">
						<tr>
							<th>Item</th>
							<th>Description</th>
							<th>Type</th>
							<th>Cost</th>
							<th>Price</th>							
							<th>VAT</th>
							<th>Qty on hand</th>
							<th>Qty on P O</th>
							<th>Reorder P</th>
							<th>Qty on S O</th>
							<th>Preferred Vendor</th>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</div>		
			</div>
		</div>
	</div>
</script>




<script id="inventory-position-summary-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=sku#</td>
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>        
        <td align="right">#=kendo.toString(on_hand, "n0")#</td>
        <td align="right">#=kendo.toString(on_po, "n0")#</td>
        <td align="right">#=kendo.toString(on_so, "n0")#</td>
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(on_hand*cost, "c", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(price_avg, "c", banhji.institute.locale)#</td>
   </tr>
</script>
<script id="inventory-position-detail-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=kendo.toString(invoice.length>0?invoice[0].issued_date:"", "dd-MM-yyyy")#</td>
        <td><a href="\#/#=invoice.length>0?invoice[0].type:''#/#=id#"><i></i> #=invoice.length>0?invoice[0].number:''#</a></td>        
        <td>#=item[0].sku# #=item[0].name#</td>               
        <td align="right">#=unit#</td>
        <td align="right">#=kendo.toString(price, "c", banhji.institute.locale)#</td>
        <td align="right">#=on_hand#</td>         
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(on_hand * cost, "c", banhji.institute.locale)#</td>        
   </tr>
</script>
<script id="inventorySaleByItem" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>

	            <br><br>

	            <div align="center">
					<h3>Inventory Sale By Item Analysis</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"					 
					 data-row-template="inventory-sale-by-item-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_sale_by_item_analysis.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                    { 'title': 'SKU' },
	                    { 'title': 'Item' },	                    
	                    { 'field': 'item_group_id', 'title': 'Group' },
	                    { 'field': 'category_id','title': 'Category' },
	                    { 'title': 'Qty Sold' },	                    	                    
	                    { 'title': 'W.Avg Price' },	                    	                    
	                    { 'title': 'Sale Revenue' },
	                    { 'title': 'W.Avg Cost' },
	                    { 'title': 'Gross Profit' },
	                    { 'title': 'Margin%' }	                    
	                 ]"></div>
			</div>
		</div>
	</div>
</script>
<script id="inventory-sale-by-item-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=sku#</td>          
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>       
        <td align="right">#=kendo.toString(qty, "n0", banhji.institute.locale)#</td>         
        <td align="right">#=kendo.toString(price, "c", banhji.institute.locale)#</td>
        <td align="right">
        	#amount = qty * price#
        	#=kendo.toString(amount, "c", banhji.institute.locale)#
        </td>
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>
        <td align="right">
        	#margin = (price-cost)*qty#
        	#=kendo.toString(margin, "c", banhji.institute.locale)#
        </td>
        <td align="right">#=kendo.toString(margin/amount, "p")#</td>        
   </tr>
</script>
<script id="inventoryTurnoverList" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>	            	
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: as_of"
	                   placeholder="from ..." />	                                   	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>

	            <br><br>

	            <div align="center">
					<h3>Inventory Turnover List</h3>					
					<span data-bind="text: strDate"></span>														
				</div>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"					 				 
					 data-row-template="inventoryTurnoverList-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_turnover_list.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                    { 'title': 'SKU' },
	                    { 'title': 'Item' },	                    
	                    { 'field': 'item_group_id', 'title': 'Group' },
	                    { 'field': 'category_id', 'title': 'Category' },
	                    { 'title': 'Cost' },	                    	                    
	                    { 'title': 'Days' }	                                        
	                 ]"></div>
			</div>
		</div>
	</div>
</script>
<script id="inventoryTurnoverList-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">
        <td>#=sku#</td>          
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>       
        <td align="right">#=kendo.toString(cost, "c", banhji.institute.locale)#</td>         
        <td align="right">#=kendo.toString(days, "n0")#</td>             
   	</tr>
</script>
<script id="inventoryList" type="text/x-kendo-template">
	<div class="container-fluid">
		<br>
		<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back();"><i></i></span>

		<h3>Inventory</h3>

		<div class="box-generic">
		    <!-- //Tabs Heading -->
		    <div class="tabsbar">
		        <ul>
		            <li class="glyphicons star active"><a href="#tab1" data-toggle="tab" data-bind="click: searchFavorite"><i></i> Favorite </a>
		            </li>
		            <li class="glyphicons list"><a href="#tab2" data-toggle="tab"><i></i> Category </a>
		            </li>
		            <li class="glyphicons building"><a href="#tab3" data-toggle="tab"><i></i> Vendor </a>
		            </li>		            		            	            
		        </ul>
		    </div>
		    <!-- // Tabs Heading END -->

		    <div class="tab-content">
		        <!-- // FavoriteTab content -->
		        <div class="tab-pane active" id="tab1">
		        		
		        </div>
		        <!-- // Favorite Tab content END -->

		        <!-- // Category Tab content -->
		        <div class="tab-pane" id="tab2">		            
	                <input id="categories" data-bind="value: category_id" />	                
	                <input id="itemGroups" data-bind="value: item_group_id" disabled="disabled" />
            	</div>
		        <!-- // Category Tab content END -->

		        <!-- // Vendor Tab content -->
		        <div class="tab-pane" id="tab3">
		            <div data-role="listview"
		            	 data-auto-bind="false"
		            	 data-selectable="true"			                 
		                 data-template="inventoryList-vendor-template"
		                 data-bind="source: vendorDS, events:{ change: vendorChanges}"></div>
		        </div>
		        <!-- // Vendor Tab content END -->		        
		    </div>

		    <br>

		    <div class="input-append">
			    <input class="col-md-2" id="appendedInputButtons" 
			    	type="text" placeholder="Items ..." 
			    	data-bind="value: searchField, events:{ change: search }">

			    <button class="btn btn-default" data-bind="click: search"><i class="icon-search"></i> Search</button>				    
			</div>
		</div>
		
		<br>

		<table class="table table-bordered">
	        <thead>
	            <tr>
	                <th>SKU</th>
	                <th>Items</th>
	                <th>Description</th>
	                <th>Qty</th>	                
	                <th>Price</th>	                
	            </tr>
	        </thead>
	        <tbody data-template="inventoryList-template"
	        	data-pageable="true" 
	        	data-bind="source: dataSource"></tbody>
	    </table>
	    <div id="pager" class="k-pager-wrap"
	    	 data-auto-bind="false"
             data-role="pager" data-bind="source: dataSource"></div>        

	</div>
</script>
<script id="inventoryList-template" type="text/x-kendo-template">
    <tr>
    	<td>#=sku#</td>
    	<td>#=name#</td>
    	<td>#=description#</td>
    	<td>
    		#if(on_hand<=order_point){#    		
    			<span class="badge badge-danger">#=kendo.toString(on_hand, "n0")#</span>
    		#}else{#
    			<span class="badge badge-info">#=kendo.toString(on_hand, "n0")#</span>
    		#}#

    		#=measurement==null?"":measurement#
    	</td>    	
    	<td>
    		#for(var i=0; i<item_prices.length; i++) {#
    			#if(item_prices[i].price>0){#
    				<span class="badge badge-inverse"> #=kendo.toString(item_prices[i].price, "c", item_prices[i].currency[0].locale)# </span> / #=item_prices[i].measurement# 
    			#}else{#
    				<span class="badge badge-danger"> #=kendo.toString(item_prices[i].price, "c", item_prices[i].currency[0].locale)# </span> / #=item_prices[i].measurement#
    			#}#
    			<br>    			    						 
			#}#
    	</td>    		
    </tr>
</script>
<script id="inventoryList-vendor-template" type="text/x-kendo-template">
    <div class="product-tmpl">
        <img src="#=image_url#" alt="#: company # image" />
        <h3>#:company#</h3>        
    </div>    
</script>
<style>
    #listView {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
    }
    .product-tmpl {
        float: left;
        position: relative;
        width: 111px;
        height: 170px;
        margin: 0 5px;
        padding: 0;
    }
    .product-tmpl img {
        width: 110px;
        height: 110px;
    }
    .product-tmpl h3 {
        margin: 0;
        padding: 3px 5px 0 0;
        max-width: 96px;
        overflow: hidden;
        line-height: 1.1em;
        font-size: .9em;
        font-weight: normal;
        text-transform: uppercase;
        color: #999;
    }
    .product-tmpl p {
        visibility: hidden;
    }
    .product-tmpl:hover p {
        visibility: visible;
        position: absolute;
        width: 110px;
        height: 110px;
        top: 0;
        margin: 0;
        padding: 0;
        line-height: 110px;
        vertical-align: middle;
        text-align: center;
        color: #fff;
        background-color: rgba(0,0,0,0.75);
        transition: background .2s linear, color .2s linear;
        -moz-transition: background .2s linear, color .2s linear;
        -webkit-transition: background .2s linear, color .2s linear;
        -o-transition: background .2s linear, color .2s linear;
    }
    .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
</style>
<script id="inventoryMovementSummary" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>	            

	            <div align="center">
					<h3>Inventory Movement Summary</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"
					 data-sortable="true"					 
					 data-row-template="inventory-movement-summary-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_summary.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                 	{ 'field': 'sku', 'title': 'SKU' },	                    
	                    { 'field': 'name', 'title': 'Item' },
	                    { 'field': 'item_group_id', 'title': 'Group' },
	                    { 'field': 'category_id', 'title': 'Category' },
	                    { 'field': 'begining', 'title': 'Begining' },
	                    { 'field': 'purchase', 'title': 'Purchase' },	                    
	                    { 'field': 'sale', 'title': 'Sale' },
	                    { 'field': 'adjustment', 'title': 'Adjustment' },	                    
	                    { 'field': 'balance', 'title': 'Balance' }              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventory-movement-summary-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=sku#</td>        
        <td>#=name#</td>
        <td>#=item_group.length>0?item_group[0].name:''#</td>
        <td>#=category.length>0?category[0].name:''#</td>         
        <td align="right">#=kendo.toString(begining, "n0")#</td>         
        <td align="right">#=kendo.toString(purchase, "n0")#</td>
        <td align="right">#=kendo.toString(sale, "n0")#</td>
        <td align="right">#=kendo.toString(adjustment, "n0")#</td>
        <td align="right">#=kendo.toString(((begining + purchase) - sale) + adjustment, "n0")#</td>        
   </tr>
</script>
<script id="inventoryMovementDetail" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>

	            <div align="center">
					<h3>Inventory Movement Detail</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"
					 data-groupable="true"
					 data-sortable="true"					 
					 data-row-template="inventory-movement-detail-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_detail.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                 	{ 'field': 'invoice[0].issued_date', 'title': 'Date' },
	                 	{ 'field': 'invoice[0].type', 'title': 'Type' },
	                 	{ 'field': 'invoice[0].number', 'title': 'Reference' },	                 	                 
	                    { 'field': 'item[0].sku', 'title': 'Item' },	                    	                                  
	                    { 'field': 'unit', 'title': 'Quantity' },
	                    { 'field': 'cost', 'title': 'Cost' },
	                    { 'field': 'price', 'title': 'Price' },              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventory-movement-detail-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=kendo.toString(invoice.length>0?new Date(invoice[0].issued_date):'', "dd-MM-yyyy")#</td>
        <td>#=invoice.length>0?invoice[0].type:''#</td>        
        <td><a href="\#/#=invoice.length>0?invoice[0].type:''#/#=id#"><i></i> #=invoice.length>0?invoice[0].number:''#</a></td>        
        <td>#=item[0].sku# #=item[0].name#</td>             
        <td align="right">#=kendo.toString(unit * movement, "n0")#</td>
        <td align="right">
        	#if(invoice.length>0){#	        	
	        	#if(invoice[0].type==='Purchase'){#
	        		#=kendo.toString(price, "c", banhji.institute.locale)#
	        	#}else if(invoice[0].type==='Invoice' || invoice[0].type==='Receipt'){#
	        		#=kendo.toString(cost, "c", banhji.institute.locale)#
	        	#}#
	        #}#
        </td>
        <td align="right">
        	#if(invoice.length>0){#
	        	#if(invoice[0].type==='Invoice'){#
	        		#=kendo.toString(price, "c", banhji.institute.locale)#
	        	#}#
        	#}#
        </td>                
   </tr>
</script>
<script id="inventoryPurchaseByVendorSummary" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>
	            
	            <div align="center">
					<h3>Purchase By Supplier Summary</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"					 
					 data-sortable="true"					 
					 data-row-template="inventoryPurchaseByVendorSummary-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_detail.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[	                 	            
	                    { 'field': 'name', 'title': 'Supplier' },	                                                     
	                    { 'field': 'unit', 'title': 'Quantity' },
	                    { 'field': 'amount', 'title': 'Amount' }              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventoryPurchaseByVendorSummary-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=name#</td>        
        <td align="right">#=kendo.toString(unit, "n0")#</td>
        <td align="right">#=kendo.toString(amount, "c", banhji.institute.locale)#</td>        
   </tr>
</script>
<script id="inventoryPurchaseByVendorDetail" type="text/x-kendo-template">
	<div class="container-fluid">
		<div class="row-fluid">    
			<div class="span12">
				<div id="example" class="k-content">

				<div class="box-generic hidden-print">
	            	<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>

	            	<input data-role="dropdownlist"                   
	                   data-value-primitive="true"
	                   data-text-field="text"
	                   data-value-field="value"
	                   data-bind="value: sorter,
	                              source: sortList,                              
	                              events: { change: sorterChanges }" />
	                                           
	                <input data-role="datepicker"	                       
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: sdate"
	                   placeholder="from ..." />
	                
	               	<input data-role="datepicker"
	                   data-format="dd-MM-yyyy"
	                   data-parse-formats="yyyy-MM-dd"
	                   data-bind="value: edate"
	                   placeholder="to ..." />	                    	            	
	          		
	          		<button type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button>
	          		|
					<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>						          		
	            </div>
	            
	            <div align="center">
					<h3>Purchase By Supplier Detail</h3>
					
					<span data-bind="text: strDate"></span>														
				</div>

				<br>				

				<div data-role="grid"
					 data-column-menu="true"					 
					 data-sortable="true"					 
					 data-row-template="inventoryPurchaseByVendorDetail-row-template"
		             data-bind="source: dataSource"
					 data-toolbar="['excel']"
					 data-excel="{
		                fileName: 'inventory_movement_detail.xlsx'
		             }"		             		             	                 	                 
	                 data-columns="[
	                 	{ 'field': 'issued_date', 'title': 'Date' },
	                 	{ 'field': 'name', 'title': 'Supplier' },
	                 	{ 'field': 'number', 'title': 'Number' },	                 	             	            
	                   	{ 'field': 'item_id', 'title': 'Item' },
	                   	{ 'field': 'unit', 'title': 'Qty' },
	                   	{ 'field': 'price', 'title': 'Price' },                                                    
	                    { 'field': 'amount', 'title': 'Amount' }              
	                 ]"></div>

			</div>
		</div>
	</div>
</script>
<script id="inventoryPurchaseByVendorDetail-row-template" type="text/x-kendo-tmpl">
    <tr data-uid="#: uid #">        
        <td>#=kendo.toString(issued_date, "dd-MM-yyyy")#</td>
        <td>#=name#</td>
        <td><a href="\#/#=type#/#=id#"><i></i> #=number#</a></td>
        <td>#=item[0].name#</td>        
        <td align="right">#=kendo.toString(unit, "n0", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(price, "c0", banhji.institute.locale)#</td>
        <td align="right">#=kendo.toString(amount, "c0", banhji.institute.locale)#</td>        
   </tr>
</script>



<!-- ***************************
*	Cash Management  -> Pich             *
**************************** -->
<script id="cashDashboard" type="text/x-kendo-template" >
	<div class="row-fluid">
		<!-- Left Side -->
		<div class="span4">

			<!-- Logo of the page -->
			<table width="100%" cellpadding="10">
				<tr>
			        <td valign="top">
			        	<h2>CASH MODULE</h2>
			        	<p>
			        		In here, you can manage your cash information, transactions and reports. Cashflow forecast and other treasury management is coming soon..
			        	</p>
			        	<!-- <div class="supplier-icon">
					       	<div class="span4">
						       	<a href="#/employee" class="center">
						       		<img title="Add Employee" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/employees.ico" />
						       	</a>
						       </div>
						    <div class="span4">
						       	<a href="#/item" class="center">
						       		<img title="Add Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/inventories.ico" />
						       	</a>
						    </div>
						    <div class="span4">
						       	<a href="#/item_service" class="center">
						       		<img title="Add Service" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/services.ico" />
						       	</a>
						    </div>
						</div> -->
			        </td>
			 	</tr>
			</table>
			<table class="table table-borderless table-condensed table-vertical-center ">
				<tr>
					<td class="center">
						<a href="#/cash_transaction">
							<img title="Add Cash Transaction" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_transaction.png" width="110" height="200" />
							C.Transaction
						</a>						
					</td>
					<td class="center">
						<a href="#/cash_receipt">
							<img title="Add Cash Receipt" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_receipt.png" width="110" height="200" />
							C.Receipt
						</a>
					</td>
					<td class="center">
						<a href="#/cash_payment">
							<img title="Add Cash Payment" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_payment.png" width="110" height="200" />
							C.Payment
						</a>						
					</td>					
				</tr>
				<tr>
					<td class="center">
						<a href="#/cash_advance">
							<img title="Add Cash Advance" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/cash_advance.png" width="110" height="200" />
							C.Advance
						</a>
					</td>
					<td class="center">						
						<a href="#/expense">
							<img title="Add Expense" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/expense.png" width="110" height="200" />
							Expense
						</a>						
					</td>
					<td class="center">						
						<a href="#/currency_rate">
							<img title="Add Exchange Rate Record" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/function_logo/currency_record.png" width="110" height="200" />
							Ex.Rate Record
						</a>						
					</td>										
				</tr>							
			</table>

		</div>

		<!-- Right Side -->
		<div class="span8">

			<!-- Summary -->
			<div class="row-fluid ">
	
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Cash Balance</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert alert-primary">	
							<div align="center" class="text-large strong" style="font-size: 22pt;" data-bind="text: balance"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: cashACNumber"></span>
										<br>
										<span>Accounts</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Advance</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info">
							
							<div align="center" class="text-large strong" style="font-size: 22pt;" data-bind="text: totalAdvance"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: open"></span>
										<br>
										<span>Open</span>
									</td>
									<td>
										<span data-bind="text: overDue"></span>
										<br>
										<span>Overdue</span>
									</td>									
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
				<!-- Column -->
				<div class="span4">
				
					<!-- Widget -->
					<div class="widget widget-3 customer-border">
					
						<!-- Widget heading -->
						<div class="widget-head">
							<h4 class="heading">Cash Position</h4>
						</div>
						<!-- // Widget heading END -->
						
						<div class="widget-body alert-info3" style="background-color: LightGray">
							
							<div align="center" class="text-large strong" style="font-size: 22pt;" data-bind="text: ar"></div>
							<table width="100%">
								<tr align="center">
									<td>										
										<span data-bind="text: ar_open"></span>
										<br>
										<span>To be Received</span>
									</td>
									<td>
										<span data-bind="text: ar_customer"></span>
										<br>
										<span>To be Paid</span>
									</td>
								</tr>
							</table>
						</div>
						<!-- // Widget footer END -->
						
					</div>
					<!-- // Widget END -->
					
				</div>
				<!-- // Column END -->
				
			</div>

			<!-- Top 5 -->
			<div class="row-fluid">
				<div class="span4">				
					<table class="table table-bordered table-primary table-striped table-vertical-center text-table">
				        <thead>
				            <tr>
				                <th colspan="2">Top 5 Cash Balance</th>			                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                 
			                 data-template="cashDashBoard-top-customer-template"
			                 data-bind="source: topCashDS"></tbody>			        
				    </table>			
				</div>
				<div class="span4">
					<table class="table table-bordered table-primary table-striped table-vertical-center text-table">
				        <thead>
				            <tr>
				                <th colspan="2">Top 5 Cash Advance</th>		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="false"				        	                  
			                 data-template="cashDashBoard-top-ar-template"
			                 data-bind="source: topAdvaDS"></tbody>			        
				    </table>
				</div>
				<div class="span4">
					<table class="table table-bordered table-primary table-striped table-vertical-center text-table">
				        <thead>
				            <tr>
				                <th colspan="2">Top 5 Expense Account</span></th>			                		                
				            </tr>
				        </thead>
				        <tbody data-role="listview"
				        	 data-auto-bind="true"                
			                 data-template="cashDashBoard-top-product-template"
			                 data-bind="source: topExpsDS"></tbody>			        
				    </table>
				</div>		
			</div>

			<!-- Graph -->
		    <div class="span12">
				<div class="home-chart">
					<!-- Graph -->
					<div data-role="chart"
						 data-auto-bind="false"
		                 data-legend="{ position: 'top' }"
		                 data-series-defaults="{ type: 'column' }"
		                 data-tooltip='{
		                    visible: true,
		                    format: "{0}%",
		                    template: "#= series.name #: #= kendo.toString(value, &#39;c&#39;, banhji.locale) #"
		                 }'                 
		                 data-series="[
		                                 { field: 'cash_in', name: 'Cash In', categoryField:'month', color: '#236DA4' },
		                                 { field: 'cash_out', name: 'Cash Out', categoryField:'month', color: '#A6C9E3' }
		                             ]"	                             
		                 data-bind="source: graphDS"
		                 style="height: 250px;" ></div>
		            <!-- End Graph -->      
				</div>
			</div>
		</div>
	</div>
</script>
<script id="cashDashBoard-top-customer-template" type="text/x-kendo-tmpl">	
	<tr data-uid="#: uid #">
		<td>#:banhji.cashDashboard.topCashDS.indexOf(data)+1#</td>		
		<td>
			<span>#=number#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>
<script id="cashDashBoard-top-ar-template" type="text/x-kendo-tmpl">
	<tr>
		<td>#:banhji.cashDashboard.topAdvaDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>
	</tr>
</script>
<script id="cashDashBoard-top-product-template" type="text/x-kendo-tmpl">
	<tr data-uid="#: uid #">
		<td>#:banhji.cashDashboard.topExpsDS.indexOf(data)+1#</td>		
		<td>
			<span>#=name#</span>
			<span class="pull-right">#=kendo.toString(amount, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale)#</span>
		</td>		
	</tr>
</script>

<script id="cashCenter" type="text/x-kendo-template">	
	<div class="widget widget-heading-simple widget-body-gray widget-employees">		
		<div class="widget-body padding-none">			
			<div class="row-fluid row-merge">
				<div class="span3 listWrapper" >
					<div class="innerAll">							
						<form autocomplete="off" class="form-inline">
							<div class="widget-search separator bottom">
								<button type="button" class="btn btn-default pull-right" data-bind="click: search"><i class="icon-search"></i></button>
								<div class="overflow-hidden">
									<input type="search" placeholder="account ..." data-bind="value: searchText, events:{change: enterSearch}">
								</div>
							</div>
							<div class="select2-container" style="width: 100%;">								
																
							</div>
						</form>					
					</div>
					
					<span class="results"><span data-bind="text: contactDS.total"></span> <span data-bind="text: lang.lang.found_search"></span></span>

					<div class="table table-condensed" style="height: 580px;"						 
						 data-role="grid" 
						 data-bind="source: dataStore"
						 data-auto-bind="true" 
						 data-row-template="cashCenter-customer-list-tmpl"
						 data-columns="[{title: ''}]"
						 data-selectable=true
						 data-height="600"						 
						 data-scrollable="{virtual: true}"></div>									
				</div>
				<div class="span9 detailsWrapper">
					<div class="row-fluid">					
						<div class="span6">
							<div class="widget widget-4 widget-tabs-icons-only margin-bottom-none">

							    <!-- Widget Heading -->
							    <div class="widget-head">

							        <!-- Tabs -->
							        <ul class="pull-right">
							        	<li style="font-size: large; color: black; font-weight: bold;">
							            	<span data-bind="text: obj.number"></span>
							            	-
							            	<span data-bind="text: obj.name"></span>
							            </li>
							            <li class="glyphicons text_bigger active"><span data-toggle="tab" data-target="#tab1-7"><i></i></span>
							            </li>							            							            
							        </ul>
							        <div class="clearfix"></div>
							        <!-- // Tabs END -->

							    </div>
							    <!-- Widget Heading END -->

							    <div class="widget-body">
							        <div class="tab-content">

							            <!-- Transactions Tab content -->
							            <div id="tab1-7" class="tab-pane active box-generic">
							            	<table class="table table-borderless table-condensed cart_total cash-table">
								            	<tr>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashTransaction">Cash Transaction</span>
								            		</td>
								            		<td width="50%">
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashReceipt">Cash Receipt</span>								            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashPayment">Cash Payment</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goCashAdvance">Cash Advance</span>								            											            			
								            		</td>
								            	</tr>
								            	<tr>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goExpense">Expense</span>
								            		</td>
								            		<td>
								            			<span class="btn btn-block btn-primary" data-bind="click: goExchange">Exchange Rate Record</span>								            											            			
								            		</td>
								            	</tr>
								            	
							            	</table>
							            </div>
							            <!-- // Transactions Tab content END -->
							        </div>
							    </div>
							</div>
						</div>

						<div class="span6">
							<div class="row-fluid">
								<div class="span12">
									<div class="widget-stats widget-stats-primary widget-stats-5" data-bind="click: loadBalance">
										<span class="glyphicons coins"><i></i></span>
										<span class="txt">Balance<span data-bind="text: balance" style="font-size:medium;"></span></span>
										<div class="clearfix"></div>
									</div>
								</div>
								
							</div>																					
						</div>											          	
		          	</div>
					
					<div>
						<input data-role="dropdownlist"
							   class="sorter"                  
					           data-value-primitive="true"
					           data-text-field="text"
					           data-value-field="value"
					           data-bind="value: sorter,
					                      source: sortList,                              
					                      events: { change: sorterChanges }" />

						<input
							   class="sdate"
					           placeholder="From ..." >

					    <input data-role="datepicker"
					    	   class="edate"
					    	   data-format="dd-MM-yyyy"
					           data-bind="value: edate,
					                      events: { change: dateChanges }"
					           placeholder="To ..." >
					    
					    <button type="button" data-role="button" data-bind="click: searchTransaction"><i class="icon-search"></i></button>
					</div>

					<table class="table table-bordered table-striped table-white">
						<thead>
							<tr>
								<th>Date</th>
								<th>Type</th>								
								<th>Reference No</th>
								<th>Dr.</th>
								<th>Cr.</th>
							</tr>
						</thead>	            		
	            		<tbody data-role="listview"
	            				data-auto-bind="false"	            					            					            					            			
				                data-template="cashCenter-transaction-tmpl"
				                data-bind="source: transactionDS" >
				        </tbody>
	            	</table>

	            	<div id="pager" class="k-pager-wrap"
				    	 data-auto-bind="false"
			             data-role="pager" data-bind="source: transactionDS"></div>	            	
				</div>
			</div>			
		</div>
	</div>		
</script>
<script id="cashCenter-transaction-tmpl" type="text/x-kendo-tmpl">
    <tr>    	  	
    	<td>#=kendo.toString(new Date(issued_date), "dd-MM-yyyy")#</td>
    	<td>#=type#</td>
        <td>
        	#if(type=="Invoice" || type=="Cash_Sale" || type=="Quote" || type=="Sale_Order" || type=="GDN" || type=="Sale_Return"){#
				<a href="\#/#=type.toLowerCase()#/#=id#"><i></i> #=number#</a>						
			#}else{#
				#=number#
			#}#        	
        </td>
    	<td class="right">
    		#=dr/rate#
    	</td>
    	<td>        	
        	#=cr/rate#		
		</td>   	
    </tr>
</script>
<script id="cashCenter-customer-list-tmpl" type="text/x-kendo-tmpl">
	<tr data-bind="click: selectedRow">
		<td>
			<div class="media-body">
				<span class="strong">
					#=number# #=name#				
				</span>
			</div>
		</td>
	</tr>
</script>
<script id="cashCenter-note-tmpl" type="text/x-kendo-template">
	<tr>
		<td>			
			<blockquote>
				<small class="author">
					<span class="strong">#=creator#</span> :
					<cite>#=kendo.toString(new Date(noted_date), "g")#</cite>
				</small>					
				<p>#=note#</p>
			</blockquote>				
		</td>
	</tr>	
</script>

<script id="cash" type="text/x-kendo-template">
	<div class="container-960">	
		<div class="row-fluid">		    
			<div class="span12">			
				<div id="example" class="k-content">

					<!-- Collapsible Widget -->			
					<div class="widget">
					    <div class="widget-head">
					    	<span class="btn btn-primary pull-right" 
									onclick="javascript:window.history.back()">X</span>
					        
					        <h4 class="heading glyphicons circle_info"><i></i> Customer</h4>							        	
					    </div>
					    <div class="widget-body">

					    	<div class="row-fluid">
					    		<div class="span6 well">									
									<div class="row-fluid">
										<div class="span6">														
											<!-- Group -->
											<div class="control-group">										
												<label for="ddlCustomerType"><span data-bind="text: lang.lang.customer_type"></span> <span style="color:red">*</span></label>
												<input id="ddlCustomerType" name="ddlCustomerType"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.contact_type_id,
										                              source: contactTypeDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />																				            
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">							
												<label for="number"><span data-bind="text: lang.lang.number"></span> <span style="color:red">*</span></label>
						              			<input id="number" name="number" class="k-textbox"
							              				data-bind="value: obj.number, events:{change: checkExistingNumber}" 
							              				placeholder="e.g. ID0001" required data-required-msg="required"
							              				style="width: 100%;" />
							              		<span data-bind="visible: isDuplicateNumber" style="color: red;"><span data-bind="text: lang.lang.duplicate_number"></span></span>
											</div>
											<!-- // Group END -->											
										</div>
									</div>
									
									<div class="row-fluid">
										<div class="span6">						
											<!-- Group -->
											<div class="control-group">
												<label for="surname"><span data-bind="text: lang.lang.surname"></span> <span style="color:red">*</span></label>
							              		<input id="surname" name="surname" class="k-textbox" data-bind="value: obj.surname" 
									              		placeholder="surname ..." required data-required-msg="required"
									              		style="width: 100%;" />
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">								
												<label for="name"><span data-bind="text: lang.lang.name"></span> <span style="color:red">*</span></label>
									            <input id="name" name="name" class="k-textbox" data-bind="value: obj.name" 
									              		placeholder="name ..." required data-required-msg="required"
									              		style="width: 100%;" />
											</div>																		
											<!-- // Group END -->
										</div>
									</div>
									
									<div class="row-fluid" data-bind="visible: isCompany">
										<div class="span6">
											<!-- Group -->
											<div class="control-group">
												<label for="companyName"><span data-bind="text: lang.lang.organization_name"></span> <span style="color:red">*</span></label>
												<input id="companyName" name="companyName" class="k-textbox" data-bind="enabled: isCompany, value: obj.company"									
														placeholder="e.g. PCG & Partner"
														style="width: 100%;" />	
											</div>
											<!-- // Group END -->
										</div>

										<div class="span6">	
											<!-- Group -->
											<div class="control-group">
												<label for="vatNo">VAT Number</label>								
							            		<input id="vatNo" name="vatNo" class="k-textbox" data-bind="enabled: isCompany, value: obj.vat_no" 
														placeholder="e.g. 01234567897"
														style="width: 100%;" />												
											</div>					
											<!-- // Group END -->
										</div>
									</div>																
								</div>
								<div class="span6">
									<div class="row-fluid">	
										<!-- Map -->
										<div id="map" class="span12" style="height: 130px;"></div>
									</div>

									<div class="separator line bottom"></div>

									<div class="row-fluid">	
										<div class="span6">									
											<!-- Group -->
											<div class="control-group">
								    			<label for="latitute"><span data-bind="text: lang.lang.latitute"></span> </label>
												<div class="input-prepend">
													<span class="add-on glyphicons direction"><i></i></span>
													<input type="text" class="input-large span12" data-bind="value: obj.latitute, events:{change: loadMap}" placeholder="012345.67897">
												</div>
											</div>									
											<!-- // Group END -->
										</div>	
										
										<div class="span6">	
											<!-- Group -->
											<div class="control-group">
								    			<label for="longtitute"><span data-bind="text: lang.lang.longtitute"></span> </label>
								    			<div class="input-prepend">
													<span class="add-on glyphicons google_maps"><i></i></span>
													<input type="text" class="input-large span12" data-bind="value: obj.longtitute, events:{change: loadMap}" placeholder="012345.67897">
												</div>										
											</div>
											<!-- // Group END -->
										</div>										
									</div>
								</div>
							</div>								
									
							<!-- // Inner Tabs -->
							<div class="row-fluid">								
								<div class="box-generic">
								    <!-- //Tabs Heading -->
								    <div class="tabsbar tabsbar-1">
								        <ul class="row-fluid row-merge">						            
								            <li class="span2 glyphicons usd active">
								            	<a href="#tab1" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.account"></span></span></a>
								            </li>								            
								            <li class="span2 glyphicons nameplate_alt">
								            	<a href="#tab2" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.info"></span></span></a>
								            </li>
								            <li class="span2 glyphicons parents">
								            	<a href="#tab3" data-toggle="tab"><i></i> <span><span data-bind="text: lang.lang.agents"></span></span></a>
								            </li>						            					            
								        </ul>
								    </div>
								    <!-- // Tabs Heading END -->

								    <div class="tab-content">
								        <!-- //ACCOUNTING INFO -->
								        <div class="tab-pane active" id="tab1">
								        	
								        	<div class="row-fluid">								        		
								            	<div class="span3">
													<label for="ddlAR"><span data-bind="text: lang.lang.account_receiveable"></span> <span style="color:red">*</span></label>
													<input id="ddlAR" name="ddlAR"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.account_id,
										                              source: arDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlRA"><span data-bind="text: lang.lang.revenue_account"></span> <span style="color:red">*</span></label>
													<input id="ddlRA" name="ddlRA"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.ra_id,
										                              source: raDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlDepositAccount">Deposit Acccount <span style="color:red">*</span></label>
													<input id="ddlDepositAccount" name="ddlDepositAccount"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.deposit_account_id,
										                              source: depositDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />													
												</div>
												<div class="span3">
													<label for="ddlTradeDiscount">Trade Discount <span style="color:red">*</span></label>
													<input id="ddlTradeDiscount" name="ddlTradeDiscount"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.trade_discount_id,
										                              source: tradeDiscountDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />														
												</div>												
									        </div>

									        <div class="separator line bottom"></div>

									        <div class="row-fluid">
								        		<div class="span3">						
										            <label for="currency"><span data-bind="text: lang.lang.currency"></span> <span style="color:red">*</span></label>
										            <input id="currency" name="currency" 
										            	data-role="dropdownlist"
										            	data-template="currency-list-tmpl"
										            	data-value-primitive="true"
										                data-text-field="code"
										                data-value-field="id"
														data-bind="value: obj.currency_id, source: currencyDS"
														data-option-label="(--- Select ---)" 
														required data-required-msg="required" style="width: 100%;" />
										        </div>
								            	<div class="span3">
													<label for="ddlPaymentTerm"><span data-bind="text: lang.lang.payment_term"></span></label>
													<input id="ddlPaymentTerm" name="ddlPaymentTerm"
														data-role="dropdownlist"
										            	data-value-primitive="true"
										                data-text-field="name"
										                data-value-field="id"
														data-bind="value: obj.payment_term_id, source: paymentTermDS" 
														data-option-label="(--- Select ---)"
														style="width: 100%;" />
												</div>
												<div class="span3">
													<label for="ddlPaymentMethod"><span data-bind="text: lang.lang.payment_method"></span></label>
													<input id="ddlPaymentMethod" name="ddlPaymentMethod"
														data-role="dropdownlist"
										            	data-value-primitive="true"
										                data-text-field="name"
										                data-value-field="id"
														data-bind="value: obj.payment_method_id, source: paymentMethodDS"
														data-option-label="(--- Select ---)" 
														style="width: 100%;" />
												</div>
												<div class="span3">
													<label for="ddlSettlementDiscount">Settlement Discount <span style="color:red">*</span></label>
													<input id="ddlSettlementDiscount" name="ddlSettlementDiscount"
														   data-role="dropdownlist"
														   data-template="account-list-tmpl"										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.settlement_discount_id,
										                              source: settlementDiscountDS"
										                   data-option-label="(--- Select ---)"
										                   required data-required-msg="required" style="width: 100%;" />														
												</div>												
									        </div>

									        <div class="separator line bottom"></div>

									        <div class="row-fluid">
									        	<div class="span3">
													<label for="ddlTaxItem">Tax </label>
													<input id="ddlTaxItem" name="ddlTaxItem"
														   data-role="dropdownlist"														   										                   
										                   data-value-primitive="true"
										                   data-text-field="name"
										                   data-value-field="id"
										                   data-bind="value: obj.tax_item_id,
										                              source: taxItemDS"
										                   data-option-label="(--- Select ---)"
										                   style="width: 100%;" />
												</div>	
										        <div class="span3">
													<label for="txtCreditLimit"><span data-bind="text: lang.lang.credit_limit"></span> </label>								              		
										            <input data-role="numerictextbox"
										                   data-format="n"
										                   data-min="0"										                   
										                   data-bind="value: obj.credit_limit"										                  
										                   style="width: 100%;">
												</div>																							
											</div>
							        	</div>
								        <!-- //ACCOUNTING INFO END -->								        							       

								        <!-- //GENERAL INFO -->
								        <div class="tab-pane" id="tab2">
							            	<table class="table table-borderless table-condensed cart_total">						            	
							            		<tr>
									                <td><span data-bind="text: lang.lang.status"></span> <span style="color:red">*</span></td>
									              	<td>
									              		<input id="customerStatus" name="customerStatus" 
									              				data-role="dropdownlist"
											            		data-text-field="name"
								           						data-value-field="id"
								           						data-value-primitive="true" 
											            		data-bind="source: statusList, value: obj.status"
											            		data-option-label="(--- Select ---)"
											            		required data-required-msg="ត្រូវការ ស្ថានភាព" />
									              	</td>							              	
									            	<td><span data-bind="text: lang.lang.register_date"></span> <span style="color:red">*</span></td>
									              	<td>
									              		<input id="registered_date" name="registered_date" 
										            		data-role="datepicker"			            		
							            					data-bind="value: obj.registered_date" 
							            					data-format="dd-MM-yyyy"
							            					data-parse-formats="yyyy-MM-dd" 
							            					placeholder="dd-MM-yyyy" required data-required-msg="required" />
									              	</td>
									            </tr>
									            <tr>
									                <td><span data-bind="text: lang.lang.gender"></span></td>
									              	<td><select data-role="dropdownlist" data-bind="source: genders, value: obj.gender"></select></td>							              	
									            	<td><span data-bind="text: lang.lang.phone"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.phone" placeholder="e.g. 012 333 444" /></td>
									            </tr>
									            <tr>
									            	<td><span data-bind="text: lang.lang.address"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.address" placeholder="where you live ..." />							              	
									            	<td><span data-bind="text: lang.lang.email"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.email" placeholder="e.g. me@email.com" />
									            </tr>									            
									            <tr>
									            	<td>
									            		<label for="txtBillTo" data-bind="click: copyBillTo"><span data-bind="text: lang.lang.bill_to"></span> <i class="icon-share"></i></label>											            
									            	</td>
									            	<td>
									            		<input class="k-textbox" data-bind="value: obj.bill_to" placeholder="bill to ..." />
									            	</td>
									            	<td>
									            		<span data-bind="text: lang.lang.ship_to"></span>										            
									            	</td>
									            	<td>
									            		<input class="k-textbox" data-bind="value: obj.ship_to" placeholder="ship to ..." />
									            	</td>
									            </tr>
									            <tr>									            								              	
									            	<td><span data-bind="text: lang.lang.memo"></span></td>
									              	<td><input class="k-textbox" data-bind="value: obj.memo" placeholder="memo ..." /></td>
									              	<td></td>
									              	<td></td>
									            </tr>							            							            								            								            			            
									        </table>
							        	</div>
								        <!-- //GENERAL INFO END -->

								        <!-- //CONTACT PERSON -->
								        <div class="tab-pane" id="tab3">
								        	<span class="btn btn-primary btn-icon glyphicons circle_plus" data-bind="click: addEmptyContactPerson"><i></i> <span data-bind="text: lang.lang.new_agent"></span></span>
								        	
								        	<table class="table table-bordered table-white">
										        <thead>
										            <tr>
										                <th><span data-bind="text: lang.lang.name"></span></th>
										                <th><span data-bind="text: lang.lang.department"></span></th>						                
										                <th><span data-bind="text: lang.lang.phone"></span></th>
										                <th><span data-bind="text: lang.lang.email"></span></th>
										                <th width="20px"></th>										               
										            </tr>
										        </thead>
										        <tbody data-role="listview"										        		
										        		data-auto-bind="false"										        						        		 
										        		data-template="contact-person-row-tmpl" 
										        		data-bind="source: contactPersonDS">
										        </tbody>										        						        
										    </table>
							        	</div>
								        <!-- //CONTACT PERSON END -->
								    </div>
								</div>
							</div>

							<br>											
							
							<!-- Form actions -->
							<div align="center">
								<span id="notification"></span>

								<span id="save" class="btn btn-icon btn-primary glyphicons circle_ok"><i></i><span data-bind="text: lang.lang.save"></span></span>
								<span class="btn btn-danger btn-icon glyphicons delete" data-bind="click: delete, visible: isEdit"><i></i><span data-bind="text: lang.lang.delete"></span></span>
								<span class="btn btn-icon btn-default glyphicons ban" data-bind="click: cancel"><i></i><span data-bind="text: lang.lang.cancel"></span></span>
							</div>
							<!-- // Form actions END -->

						</div> <!-- End Widget-Body List -->
					</div>
					<!-- // Collapsible Widget END -->				          					                
			    											
				</div> <!-- // End div example-->  
			</div> <!-- // End div span12-->
		</div> <!-- // End div row-fluid-->	
	</div> 	
</script>
<script id="contact-person-row-tmpl" type="text/x-kendo-tmpl">
	<tr>		
		<td>
			<input id="name" name="name" 
					type="text" class="k-textbox" 
					data-bind="value: name"
					placeholder="eg: Mr. John" 
					required="required" validationMessage="required" style="width: 190px;" />
            <span data-for="name" class="k-invalid-msg"></span>
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: department" placeholder="eg: Accounting" style="width: 190px;" />
		</td>		
		<td>
			<input type="text" class="k-textbox" data-bind="value: phone" placeholder="eg: 012 333 444" style="width: 190px;" />
		</td>
		<td>
			<input type="text" class="k-textbox" data-bind="value: email" placeholder="eg: john@email.com" style="width: 190px;" />
		</td>		
		<td align="center">            
			<span class="glyphicons no-js delete" data-bind="click: deleteContactPerson"><i></i></span>									
		</td>		
	</tr>
</script>

<script id="cashSetting" type="text/x-kendo-template">
	<span class="pull-right glyphicons no-js remove_2" 
			onclick="javascript:window.history.back()"><i></i></span>

	<h2>General Setting</h2>

	<br>

	<div class="widget widget-tabs widget-tabs-double widget-tabs-vertical row-fluid row-merge widget-tabs-gray">

	    <!-- Tabs Heading -->
	    <div class="widget-head span3">
	        <ul>
	            <li class="active"><a href="#tab1-1" class="glyphicons group" data-toggle="tab"><i></i><span class="strong">Customer Type</span></a>
	            </li>
	            <li><a href="#tab2-1" class="glyphicons credit_card" data-toggle="tab"><i></i><span class="strong">Payment Method</span></a>
	            </li>
	            <li><a href="#tab3-1" class="glyphicons clock" data-toggle="tab"><i></i><span class="strong">Payment Term</span></a>
	            </li>	                        
	        </ul>
	    </div>
	    <!-- // Tabs Heading END -->

	    <div class="widget-body span9">
	        <div class="tab-content">

	            <!-- Tab Branch content -->
	            <div class="tab-pane active" id="tab1-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="type name ..." data-bind="value: contactTypeName">
					    <button class="btn btn-default" type="button" data-bind="click: addContactType"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Type</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"
	            				data-auto-bind="false"
		            			data-edit-template="customerSetting-edit-contact-type-template"
				                data-template="customerSetting-contact-type-template"
				                data-bind="source: contactTypeDS"></tbody>
	            	</table>		            
	            </div>
	            <!-- // Tab Branch content END -->

	            <!-- Tab Contact Type content -->
	            <div class="tab-pane" id="tab2-1">
	            	<div class="input-append">
					    <input class="span12" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentMethodName">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentMethod"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-method-template"
				                data-template="customerSetting-payment-method-template"
				                data-bind="source: paymentMethodDS"></tbody>
	            	</table>			            
	            </div>
	            <!-- // Tab Contact Type content END -->

	            <!-- Tab Block content -->
	            <div class="tab-pane" id="tab3-1">
            		<div class="input-append">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="name ..." data-bind="value: paymentTermName">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="term ..." data-bind="value: paymentTerm">
					    <input class="span4" id="appendedInputButtons" type="text" placeholder="% ..." data-bind="value: paymentTermPercentage">
					    <button class="btn btn-default" type="button" data-bind="click: addPaymentTerm"><i class="icon-plus"></i></button>
					</div>
	            	<table class="table table-bordered table-white">
	            		<thead>
	            			<tr>
	            				<th>Name</th>
	            				<th>Term</th>
	            				<th>%</th>
	            				<th></th>
	            			</tr>
	            		</thead>
	            		<tbody data-role="listview"	            				
		            			data-edit-template="customerSetting-edit-payment-term-template"
				                data-template="customerSetting-payment-term-template"
				                data-bind="source: paymentTermDS"></tbody>
	            	</table>
	            </div>
	            <!-- // Tab Block content END -->

	        </div>
	    </div>

	</div>
</script>
<script id="cashSetting-contact-type-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			#if(is_system=="0"){#
	   			<div class="edit-buttons">       
			        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
			        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
			   	</div>
		   	#}#
   		</td>
   	</tr>
</script>
<script id="cashSetting-edit-contact-type-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="cashSetting-payment-method-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="cashSetting-edit-payment-method-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>
<script id="cashSetting-payment-term-template" type="text/x-kendo-tmpl">                    
    <tr>
    	<td>
    		 #:name#
   		</td>
   		<td>
    		 #:term#
   		</td>
   		<td>
    		 #:discount_percentage#
   		</td>
   		<td>
   			<div class="edit-buttons">       
		        <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>
		        <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
		   	</div>
		</td>
   	</tr>
</script>
<script id="cashSetting-edit-payment-term-template" type="text/x-kendo-tmpl">
    <div class="product-view k-widget">
        <dl>                
            <dd>
                <input type="text" class="k-textbox" data-bind="value:name" name="ProductName" required="required" validationMessage="required" />
                <span data-for="ProductName" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:net_due" name="term" required="required" validationMessage="required" />
                <span data-for="term" class="k-invalid-msg"></span>
            </dd>
            <dd>
                <input type="text" class="k-textbox" data-bind="value:discount_percentage" name="percentage" required="required" validationMessage="required" />
                <span data-for="percentage" class="k-invalid-msg"></span>
            </dd>               
        </dl>
        <div class="edit-buttons">
            <a class="k-button k-update-button" href="\\#"><span class="k-icon k-update"></span></a>
            <a class="k-button k-cancel-button" href="\\#"><span class="k-icon k-cancel"></span></a>
        </div>
    </div>
</script>

<script id="cashList" type="text/x-kendo-template">
	<div id="slide-form">
		<div class="container-fluid">
			<div class="row-fluid">
				<div class="span12">
					<div id="example" class="k-content">
						<div class="hidden-print">
							<span class="pull-right glyphicons no-js remove_2" 
								onclick="javascript:window.history.back()"><i></i></span>

							<input data-role="dropdownlist"
							   data-option-label="(--- TYPE ---)"
			                   data-auto-bind="false"
			                   data-value-primitive="true"
			                   data-text-field="name"
			                   data-value-field="id"
			                   data-bind="value: contact_type_id,
			                              source: contactTypeDS" />

							<button id="search" type="button" data-role="button" data-bind="click: search"><i class="icon-search"></i></button> |
							<button type="button" data-role="button" onclick="javascript:window.print()"><i class="icon-print"></i></button>		
						</div>

						<h3 align="center"><span data-bind="text: lang.lang.customer_list"></span></h3>
				
						<div id="grid"></div>					
					    					
					</div> <!-- //End div example--> 
				</div><!-- //End div span12-->
			</div><!-- //End div row-fluid-->
		</div>
	</div>	
</script>

<script id="cashReportCenter" type="text/x-kendo-template">
	<div class="row-fluid customer-report-center">
		<div class="span7">
			<div class="row-fluid sale-report">
				<h2>CASH POSITION</h2>
				<p>
					The following reports provide summary and detailed reports on employee related transactions.  
				</p>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Cash Position Report</a></h3>
							</td>
							<td >
								<h3><a href="#/">Cash Payment Report</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									Summarizes each inventory balance by quantity on hand, on purchase order and sale order. In addition, it also includes average cost and price.  


								</p>
								
							</td>
							<td >
								<p>
									Lists of all transactions related to and grouped by each inventory with analysis of average gross profit margin.


								</p>
							</td>
							
						</tr>
						<tr>
							<td >
								<h3><a href="#/">Cash Receipt Report</a></h3>
							</td>
							<td >
								<h3><a href="#/">Reconciliation Report</a></h3>
							</td>
						</tr>
						<tr>
							<td >
								<p>
									Lists individual inventory movement transactions by date for each inventory within a period of time.


								</p>
							</td>
							<td >
								<p>
									List of all cash related reconciliation reports.
								</p>
							</td>
						</tr>
					</table>					
				</div>
			</div>
			<div class="row-fluid recevable-report">
				<h2>OTHER REPORTS</h2>
				<div class="row-fluid">
					<table class="table table-borderless table-condensed">
						<tr>
							<td>
								<h3><a href="#/">Realized Exchange Gains & Losses</a></h3>
							</td>
							<td width="50%">
								<h3><a href="#/">Unrealized Exchange Gains & Losses</a></h3>								
							</td>						
						</tr>
						<tr>
							<td >
								<p>
									This detailed report lists foreign transactions that are closed (referred to as realized gains and losses) and totals the gains and losses due to changes in exchange rates.


								</p>
								
							</td>
							<td >
								<p>
									This summary report lists your foreign accounts and calculates the potential gain or loss for each account.


								</p>
							</td>							
						</tr>
					</table>
				</div>
			</div>
		</div>
		<div class="span5">
			<span class="pull-right glyphicons no-js remove_2" 
						onclick="javascript:window.history.back()"><i></i></span>
			<br>
			<br>
			<div class="report-chart">
				<div class="widget-body alert alert-primary sale-overview">
					<h2>Cash Balance</h2>
					<div align="center" class="text-large strong">$183,690,640</div>
					<table width="100%">
						<tr align="center">
							<td>										
								<span>0.5</span>
								<br>
								<span>Cash Ratio</span>
							</td>
							<td>
								<span>1.5</span>
								<br>
								<span>Quick Ratio</span>
							</td>
							<td>
								<span>2.1</span>
								<br>
								<span>Current Ratio</span>
							</td>
							<td>
								<span>20 days</span>
								<br>
								<span>Cash Conversion Cycle</span>
							</td>
						</tr>
					</table>
				</div>
				<div id="sale-report-chart">Chart</div>
			</div>
		</div>
	</div>
</script>


<!-- ***************************
*	Report Section       *
**************************** -->
<script id="reportDashboard" type="text/x-kendo-template" >
	<div class="row-fluid">
		<div class="span12 report-module">
			<h2>No. of Reports/lists by Module</h2>
			<ul>
				<li>
					<a href="#/customer_report_center">
						<img title="Report Customers" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/customers.png" alt="Customer">
					</a>
					<div class="span12">17</div>
				</li>
				<li>
					<a href="#/employee_report_center">
						<img title="Report Employee" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/employee.png" alt="Employee">
					</a>
					<div class="span12">6</div>
				</li>
				<li>
					<a href="#/vendor_report_center">
						<img title="Report Supplier" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/supplier.png" alt="Vendor">
					</a>
					<div class="span12">16</div>
				</li>
				<li>
					<a href="#/item_report_center">
						<img title="Report Inventory" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/inventory.png" alt="Inventory">
					</a>
					<div class="span12">12</div>
				</li>
				<li>
					<a href="#/services_report_center">
						<img title="Report Services" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/services.png" alt="Service">
					</a>
					<div class="span12"></div>
				</li>
				<li>
					<a href="#/cash_report_center">
						<img title="Report Cash" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/1.png" alt="Cash Management">
					</a>
					<div class="span12">6</div>
				</li>
				<li>
					<a href="#/accounting_report_center">
						<img title="Report Accounting" src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/accounting.png" alt="Customer">							
					</a>
					<div class="span12">16</div>
				</li>
			</ul>
		</div>

		<div class="span12 capital-management">
			<h2>How efficient is your working capital management? </h2>
			<div class="span6">
				<div class="span6 capital-box">
					<p class="first-text">Receivable Collection Days</p>
					<span>30</span>
					<p class="month">12 months Average</p>
				</div>
				<div class="span6 capital-box">
					<p class="first-text">Payable Payment Days</p>
					<span>20</span>
					<p class="month">12 months Average</p>
				</div>
				<div class="span6 capital-box">
					<p class="first-text">Inventory Turnover Days</p>
					<span>40</span>
					<p class="month">12 months Average</p>
				</div>
				<div class="span6 capital-box">
					<p class="first-text">Cash Conversion Cycle</p>
					<span>50</span>
					<p class="month">12 months Average</p>
				</div>
			</div>
			<div class="span6 ">
				<div class="capital-chart">
					Chart
				</div>				
			</div>
		</div>

		<div class="span12 ">
			<div class="row-fluid cash-payments">
				<h2>
					What is your ability to meet your present obligations (settling debts or possibly meet other 
					unforeseen demand for cash payments)?
				</h2>
				<div class="span6">
					<div class="span6 capital-box">
						<p class="first-text">Current Ratio</p>
						<span>3</span>
						<p class="month">12 months Average</p>
					</div>
					<div class="span6 capital-box">
						<p class="first-text">Quick Ratio</p>
						<span>1.5</span>
						<p class="month">12 months Average</p>
					</div>
					<div class="span6 capital-box">
						<p class="first-text">Cash Ratio</p>
						<span>0.3</span>
						<p class="month">12 months Average</p>
					</div>
					<div class="span6 capital-box">
						<p class="first-text">Debt Service Coverage Ratio</p>
						<span>5</span>
						<p class="month">12 months Average</p>
					</div>
				</div>

				<div class="span6 ">
					<div class="capital-chart">
						Chart
					</div>				
				</div>
			</div>

			<div class="row-fluid">				
				<div class="span6 financial-block">
					<h2>How safe is your long term financial position?</h2>
					<div class="span6 financial-box">
						<p class="first-text">Debt/ Equity Ratio</p>
						<span>3</span>
						<p class="month">12 months Average</p>
					</div>
					<div class="span6 financial-box">
						<p class="first-text">Debt/ Asset Ratio</p>
						<span>1.5</span>
						<p class="month">1.5 months Average</p>
					</div>
				</div>
				<div class="span6 business-block">
					<h2>How safe is your long term financial position?</h2>
					<div class="span4 business-box">
						<p class="first-text">Earning before interest & tax</p>
						<span>10%</span>
						<p class="month">12 months Average</p>
					</div>
					<div class="span4 business-box">
						<p class="first-text">Return on Asset</p>
						<span>2</span>
						<p class="month">12 months Average</p>
					</div>
					<div class="span4 business-box">
						<p class="first-text">Return on Capital Employed</p>
						<span>20%</span>
						<p class="month">12 months Average</p>
					</div>
				</div>
			</div>			
		</div>

		<div class="span12 revenue">
			<h2>Revenue Performance</h2>
			<div class="span3">
				<div class="revenue-box">
					<p class="first-text">Gross Margin</p>
					<span>13%</span>
					<p class="month">12 months Average</p>
				</div>
				<div class="revenue-box">
					<p class="first-text">Average Sale Growth Rate</p>
					<span>10%</span>
					<p class="month">12 months Average</p>
				</div>
			</div>
			<div class="span9">
				<div class="capital-chart">
					Chart
				</div>
			</div>
		</div>

		

	</div>
</script>


<!-- ***************************
*	Template List Section     *
**************************** -->
<script id="contact-list-tmpl" type="text/x-kendo-tmpl">
	<span>#=abbr##=number#</span>	
	<span>#=name#</span>	
</script>
<script id="currency-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=code# - #=country#
	</span>
</script>
<script id="segment-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/segment">+ Add New Segment</a>
    </strong>
</script>
<script id="segment-list-tmpl" type="text/x-kendo-tmpl">
	<span>#=code#</span> <span>#=name#</span>
</script>
<script id="job-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item">+ Add New Job</a>
    </strong>
</script>
<script id="job-list-tmpl" type="text/x-kendo-tmpl">
	<span>
		#=number# #=name#
	</span>
</script>

<!--- Costomer -->
<script id="contact-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer">+ Add New Customer</a>
    </strong>
</script>
<script id="customer-payment-method-header-tmpl" type="text/x-kendo-tmpl">
	<strong>
    	<a href="\#/customer_setting">+ Add New Payment Method</a>
    </strong>	
</script>
<script id="customer-term-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer_setting">+ Add New Term</a>
    </strong>
</script>


<!--- Eemployee -->
<script id="employee-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/employee">+ Add New Employee</a>
    </strong>
</script>

<!--- Item - Inventory -->
<script id="item-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item">+ Add New Item</a> &nbsp;&nbsp;
    	<a href="\#/item_service">+ Add New Service</a>
    </strong>
</script>
<script id="item-list-tmpl" type="text/x-kendo-tmpl">
	<span>#=sku# #=name#</span>
	<span class="pull-right">#=on_hand#</span>	
</script>
<script id="item-group-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Group</a>
    </strong>
</script>
<script id="item-category-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Category</a>
    </strong>
</script>
<script id="item-brand-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Brand</a>
    </strong>
</script>
<script id="item-measurement-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/item_setting">+ Add New Measurement</a>
    </strong>
</script>

<!--- Vendor - Supplier -->
<script id="vendor-type-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor_setting">+ Add New Supplier Type</a>
    </strong>
</script>
<script id="vendor-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor">+ Add New Supplier</a>
    </strong>
</script>
<script id="vendor-payment-method-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor_setting">+ Add New Payment Method</a>
    </strong>
</script>
<script id="vendor-payment-term-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/vendor_setting">+ Add New Payment Term</a>
    </strong>
</script>

<!--- Cash -->
<script id="cash-type-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/cash_setting">+ Add New Cash Type</a>
    </strong>
</script>
<script id="cash-payment-method-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/cash_seting">+ Add New Payment Method</a>
    </strong>
</script>
<script id="cash-payment-term-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/cash_seting">+ Add New Payment Term</a>
    </strong>
</script>

<!--- Account -->
<script id="account-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/account">+ Add New Account</a>
    </strong>
</script>
<script id="account-list-tmpl" type="text/x-kendo-tmpl">	
	<span>
		#=number#				
	</span>
	-
	<span>
		#if(name.length>25){#
			#=name.substring(0, 25)#..
		#}else{#
			#=name#
		#}#
	</span>
</script>
<script id="account-type-header-tmpl" type="text/x-kendo-tmpl">
    <strong>
    	<a href="\#/customer_setting">+ Add New Customer Type</a>
    </strong>
</script>
<script id="account-type-list-tmpl" type="text/x-kendo-tmpl">	
	<span>
		#=number#				
	</span>
	-
	<span>#=name#</span>
</script>

<script id="tax-header-tmpl" type="text/x-kendo-tmpl">
	<strong>
    	<a href="\#/sale_tax">+ Add New Tax</a>
    </strong>	
</script>

<script id="reference-list-tmpl" type="text/x-kendo-tmpl">
	<span>#=number# : #=kendo.toString(amount, "c", locale)#</span>
	<span class="pull-right">
		#if(status==1){#
			Paid
		#}else if(status==2){#
			Partially Paid
		#}else{#
			Open
		#}#
	</span>
</script>
<script id="attachment-list-tmpl" type="text/x-kendo-tmpl">
	<tr>
		<td>
			<input id="txtName-#:uid#" name="txtName-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: name" />
		</td>
		<td>
			<input id="txtDescription-#:uid#" name="txtDescription-#:uid#" 
					type="text" class="k-textbox" 
					data-bind="value: description"
					style="width: 100%; margin-bottom: 0;" />
		</td>
		<td>#=kendo.toString(created_at, "dd-MM-yyyy")#</td>
		<td>
			#if(id){#
				<a href="#=url#" target="_blank" class="btn-action glyphicons download btn-default"><i></i></a>
			#}#
			<span class="btn-action glyphicons remove_2 btn-danger" data-bind="click: removeFile"><i></i></span>			
		</td>
	</tr>
</script>
<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong-pass">
        <img style="float: left; cursor: pointer;" src="http://demos.telerik.com/kendo-ui/content/web/notification/error-icon.png" />        
        <h3>#= message #</h3>
    </div>
</script>
<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="http://demos.telerik.com/kendo-ui/content/web/notification/success-icon.png" />
        <h3>#= message #</h3>
    </div>
</script>




<!-- ***************************
*	Menu Section         	  *
**************************** -->
<script id="accountingMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/accounting' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/accounting_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/account'>New Account</a></li>  				 				  				
  				<li><a href='#/journal'>Journal</a></li>  				
  				<li><a href='#/sale_tax'>Tax</a></li>  				  				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/accounting_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/accounting_setting' class='glyphicons settings'><i></i></a></li>	  				
	</ul>
</script>
<script id="employeeMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/employees' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/employee_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/employee'>New Employee</a></li>  				  				
  				<li><a href='#/cash_advance'>Cash Advance</a></li>
  				<li><a href='#/expense'>Expense</a></li>  				 				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/employee_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/employees_setting' class='glyphicons settings'><i></i></a></li>	  	
	</ul>
</script>
<script id="vendorMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/vendors' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/vendor_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/vendor'>New Supplier</a></li>  				  				
  				<li><a href='#/purchase_order'>Purchase Order</a></li>
  				<li><a href='#/vendor_deposit'>Deposit</a></li>
  				<li><a href='#/grn'>Goods Received Note</a></li> 
  				<li><a href='#/purchase'>Purchase</a></li>  				
  				<li><a href='#/purchase_return'>Purchase Return</a></li>  				
  				<li><a href='#/cash_payment'>Pay Bill</a></li>  				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/vendor_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/vendor_setting' class='glyphicons settings'><i></i></a></li>	  	
	</ul>
</script>
<script id="customerMenu" type="text/x-kendo-template">
	<ul class="topnav">
	  	<li><a href='#/customers' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/customer_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>
  				<li><a href='#/customer'>Add New Customer</a></li>  				  				
  				<li><a href='#/quote'>Add Quote</a></li>  				
  				<li><a href='#/sale_order'>Add Sale Order</a></li>
  				<li><a href='#/gdn'>Add Goods Delivery Address Note</a></li>
  				<li><a href='#/customer_deposit'>Receive Customer Deposit</a></li>
  				<li><a href='#/cash_sale'>Make Cash Sale</a></li>  				
  				<li><a href='#/invoice'>Create Invoice</span></a></li>
  				<li><a href='#/statement'>Prepare Statement</a></li>
  				<li><a href='#/cash_receipt'>Receive Payment</a></li>
  				<!-- <li><a href="#/customerInvoiceSent">Invoice Sent To</a></li> -->
  				<li><a href='#/job'>Add Job</a></li>
  				<li><a href='#/customer_recurring'>Customer Recurring List</a></li>  				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href="#/customer_report_center">REPORTS</a></li>	  	
	  	<li><a href='#/customer_setting' class='glyphicons settings'><i></i></a></li>	  		  	
	</ul>
</script>
<script id="cashMenu" type="text/x-kendo-template">
	<ul class="topnav">
	  	<li><a href='#/cashs' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/cash_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>  				  				
  				<li><a href='#/quote'>Quote</a></li>  				
  				<li><a href='#/sale_order'>Sale Order</a></li>
  				<li><a href='#/gdn'>Goods Delivery Address Note</a></li>
  				<li><a href='#/customer_deposit'>Deposit</a></li>
  				<li><a href='#/cash_sale'>Cash Sale</a></li>  				
  				<li><a href='#/invoice'><span data-bind="text: lang.invoice"></span></a></li>
  				<li><a href='#/statement'>Statement</a></li>
  				<li><a href='#/cash_receipt'>Receive Payment</a></li>
  				<li><a href="#/customerInvoiceSent">Invoice Sent To</a></li>
  				<li><a href='#/customer'><span data-bind="text: lang.new_customer"></span></a></li> 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/cash_report_center'>REPORTS</a></li>	  	
	  	<li><a href='#/cash_setting' class='glyphicons settings'><i></i></a></li>	  		  	
	</ul>
</script>
<script id="waterMenu" type="text/x-kendo-template">
	<ul class="topnav">
	  	<li><a href='#/water' class='glyphicons home'><i></i></a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><span data-bind="text: lang.lang.customer"></span> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>  				
  				<li><a href='#/wCustomer_center'><span data-bind="text: lang.lang.customer_center"></span></a></li>
  				<li><a href='#/wNew_customer'><span data-bind="text: lang.lang.new_customer"></span></a></li>
  				<li><a href='#/wCustomer_order'><span data-bind="text: lang.lang.reorder_customer"></span></a></li>  				
  			</ul>
	  	</li>	  	
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><span data-bind="text: lang.lang.reading"></span> <span class='caret'></span></a>
  			<ul class='dropdown-menu'> 
  				<li><a href='#/wReading'><span data-bind="text: lang.lang.take_reading"></span></a></li>
  				<li><a href='#/wIR_reader'><span data-bind="text: lang.lang.ir_reader"></span></a></li>  				
  				<li><a href='#/wReading_book'><span data-bind="text: lang.lang.reading_book"></span></a></li>
  				<li><a href='#/wReading_center'><span data-bind="text: lang.lang.edit_reading"></span></a></li>  				 
  			</ul>
	  	</li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><span data-bind="text: lang.lang.invoice"></span> <span class='caret'></span></a>
  			<ul class='dropdown-menu'> 
  				<li><a href='#/wInvoice'><span data-bind="text: lang.lang.invoice"></span></a></li>
  				<li><a href='#/wPrint_center'><span data-bind="text: lang.lang.print"></span></a></li>  				  								 
  			</ul>
	  	</li>	  	
	  	<li><a href='#/cashier'><span data-bind="text: lang.lang.cashier"></span></a></li>	  	
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><span data-bind="text: lang.lang.inventory"></span> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>  				
  				<li><a href='#/wInventory_item'><span data-bind="text: lang.lang.inventory_center"></span></a></li>
  				<li><a href='#/item'><span data-bind="text: lang.lang.new_item"></span></a></li>
  				<li><a href='#/item_catalog'><span data-bind="text: lang.lang.new_catalog"></span></a></li>
  				<li><a href='#/item_assembly'><span data-bind="text: lang.lang.new_assembly"></span></a></li>  				 				 				
  			</ul>
	  	</li>
	  	<li><a href='#/wReport_center'><span data-bind="text: lang.lang.report"></span></a></li>	  	
	  	<li><a href='#/wSettings' class='glyphicons settings'><i></i></a></li>
	</ul>
</script>
<script id="inventoryMenu" type="text/x-kendo-template">
	<ul class="topnav">
		<li><a href='#/inventories' class='glyphicons show_big_thumbnails'><i></i></a></li>
	  	<li><a href='#/item_center'>CENTER</a></li>
	  	<li role='presentation' class='dropdown'>
	  		<a class='dropdown-toggle glyphicons text_bigger' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'><i></i> <span class='caret'></span></a>
  			<ul class='dropdown-menu'>  				  				  				
  				<li><a href='#/item'><span data-bind="text: lang.lang.new_item"></span></a></li>
  				<li><a href='#/item_catalog'><span data-bind="text: lang.lang.new_catalog"></span></a></li>
  				<li><a href='#/item_assembly'><span data-bind="text: lang.lang.new_assembly"></span></a></li>
  				<li><a href='#/item_adjustment'>Item Adjustment</a></li>  				 				  				 				
  			</ul>
	  	</li>	  	  	
	  	<li><a href='#/item_report_center'><span data-bind="text: lang.lang.report"></span></a></li>	  	
	  	<li><a href='#/item_setting' class='glyphicons settings'><i></i></a></li>	  	
	</ul>	
</script>





<script src="https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/components/js/libs/localforage.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.js"></script>
<script src="https://maps.googleapis.com/maps/api/js"></script>
<script>
	localforage.config({
		driver: localforage.LOCALSTORAGE,
		name: 'userData'
	});	
	var banhji = banhji || {};
	var baseUrl = "<?php echo base_url(); ?>";
	var apiUrl = baseUrl + 'api/';
	banhji.s3 = "https://banhji.s3.amazonaws.com/";	
	banhji.token = null;
	banhji.pageLoaded = {};	
	// Initializing AWS Cognito service
	var userPool = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(poolData);
	// Initializing AWS S3 Service
	var bucket = new AWS.S3({params: {Bucket: 'banhji'}});
	banhji.companyDS = new kendo.data.DataSource({
      transport: {
        read  : {
          url: baseUrl + 'api/profiles/company',
          type: "GET",
          dataType: 'json'
        },
        update  : {
          url: baseUrl + 'api/profiles/company',
          type: "PUT",
          dataType: 'json'
        },
        parameterMap: function(options, operation) {
          if(operation === 'read') {
            return {
              limit: options.pageSize,
              page: options.page,
              filter: options.filter
            };
          } else {
            return {models: kendo.stringify(options.models)};
          }
        }
      },
      schema  : {
        model: {
          id: 'id'
        },
        data: 'results',
        total: 'count'
      },
      batch: true,
      serverFiltering: true,
      serverPaging: true,
      filter: {field: 'username', value: userPool.getCurrentUser() == null ? '': userPool.getCurrentUser().username},
      pageSize: 1
    });
	banhji.profileDS = new kendo.data.DataSource({
      transport: {
        read  : {
          url: baseUrl + 'api/profiles',
          type: "GET",
          dataType: 'json',
          headers: banhji.header,
        },
        parameterMap: function(options, operation) {
          if(operation === 'read') {
            return {
              limit: options.pageSize,
              page: options.page,
              filter: options.filter
            };
          } else {
            return {models: kendo.stringify(options.models)};
          }
        }
      },
      schema  : {
        model: {
          id: 'id'
        },
        data: 'results',
        total: 'count'
      },
      batch: true,
      serverFiltering: true,
      serverPaging: true,
      filter: {field: 'username', value: userPool.getCurrentUser() == null ? '':userPool.getCurrentUser().username},
      pageSize: 100
    });
	banhji.aws = kendo.observable({
        password: null,
        confirm: null,
        email: null,
        verificationCode: null,
        cognitoUser: null,
        newPass: null,
        oldPass: null,
        image: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/blank.png",
        getImage: function() {
          banhji.profileDS.fetch(function(e){
            banhji.aws.set('image', banhji.profileDS.data()[0].profile_photo);
          });
        },
        signUp: function() {
          // e.preventDefault();
          if(this.get('password') != this.get('confirm')) {
            alert('Passwords do not match');
          } else {
            // using cognito to sign up
            var attributeList = [];

            var dataEmail = {
                Name : 'email',
                Value : this.get('email')
            };

            var attributeEmail = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute(dataEmail);

            attributeList.push(attributeEmail);

            userPool.signUp(this.get('email'), this.get('password'), attributeList, null, function(err, result){
                if (err) {
                    alert(err);
                    return;
                }
                // update attribute
                // 2. move to admin page
                // banhji.awsCognito.set('cognitoUser', result.user);
                banhji.router.navigate('confirm');
            });
          }           
        },
        comfirmCode: function(e) {
           e.preventDefault();
            // confirm user verification code after signed up
            var userData = {
                Username : userPool.getCurrentUser().username,
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.confirmRegistration(this.get('verificationCode'), true, function(err, result) {
                if (err) {
                    alert(err);
                    return;
                }
                banhji.router.navigate('index');
            });
        },
        resendCode: function(e) {
          e.preventDefault();
          alert('code resent');
        },
        signIn: function() {
            var authenticationData = {
                Username : this.get('email'),
                Password : this.get('password'),
            };
            var authenticationDetails = new AWSCognito.CognitoIdentityServiceProvider.AuthenticationDetails(authenticationData);
            
            var userData = {
                Username : this.get('email'),
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.authenticateUser(authenticationDetails, {
                onSuccess: function (result) {
                    banhji.awsCognito.set('cognitoUser', cognitoUser);
                },

                onFailure: function(err) {
                    alert(err);
                },

            });
        },
        signOut: function(e){
          e.preventDefault();
          var userData = {
              Username : userPool.getCurrentUser().username,
              Pool : userPool
          };
          var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
          if(cognitoUser != null) {
              cognitoUser.signOut();
              localforage.clear().then(function(){
              	window.location.replace("<?php base_url(); ?>login");
              });              
          } else {
              console.log('No user');
          }
        },
        changePassword: function() {
            var userData = {
                Username : this.get('email'),
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.changePassword('oldPassword', 'newPassword', function(err, result) {
                if (err) {
                    alert(err);
                    return;
                }
                console.log('call result: ' + result);
            });
        },
        forgotPassword: function(e) {
            e.preventDefault();
            var userData = {
                Username : this.get('email'),
                Pool : userPool
            };
            var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
            cognitoUser.forgotPassword({
                onSuccess: function (result) {
                    console.log('call result: ' + result);
                },
                onFailure: function(err) {
                    alert(err);
                },
                inputVerificationCode() {
                    var verificationCode = prompt('Please input verification code ' ,'');
                    var newPassword = prompt('Enter new password ' ,'');
                    cognitoUser.confirmPassword(verificationCode, newPassword, this);
                }
            });
        },
        getCurrentUser: function() {
            var cognitoUser = null;
            if (userPool.getCurrentUser() != null) {
                cognitoUser = userPool.getCurrentUser();
            }
            return cognitoUser;
        }
    });
	// Check if user is logged and authenticated via cognito service
	if(userPool.getCurrentUser() == null) {
		// if not login return to login page		
	  	//window.location.replace('http://localhost/aws/login.html');
	} else {
	  	var cognitoUser = userPool.getCurrentUser();
	  	if(cognitoUser !== null) {
	    	// banhji.aws.getImage();
	    	cognitoUser.getSession(function(err, result) {
	      		if(result) {
	        		AWS.config.credentials = new AWS.CognitoIdentityCredentials({
	          			IdentityPoolId: 'us-east-1:35445541-da4c-4dbb-b83f-d1d0301a26a9',
	          			Logins: {
	            			'cognito-idp.us-east-1.amazonaws.com/us-east-1_56S0nUDS4' : result.getIdToken().getJwtToken()
	          			}
	        		});
	     		}
	    	});
	  	}
	}	
	var langVM = kendo.observable({
		lang 		: null,		
		localeCode 	: null,		
		changeToEn 	: function() {
			localforage.setItem("lang", "EN").then(function(value){
				location.reload(false);
			});
		},
		changeToKh 	: function() {
			localforage.setItem("lang", "KH").then(function(value){
				location.reload(false);
			});
		}
	});
	banhji.userData = JSON.parse(localStorage.getItem('userData/user')) ? JSON.parse(localStorage.getItem('userData/user')) : "";
	if(banhji.userData == "") {
		banhji.companyDS.fetch(function() {
			banhji.profileDS.fetch(function(){
				var data = banhji.companyDS.data();
				var id = 0;
				id = banhji.profileDS.data()[0].id;
				if(data.length > 0) {
					var user = {
						id: id,
						username: userPool.getCurrentUser().username,
						institute: data
					};
					localforage.setItem('user', user);
				}
				banhji.userData = JSON.parse(localStorage.getItem('userData/user'));
			});
		});
	}
	banhji.institute = banhji.userData ? banhji.userData.institute : "";
	banhji.locale = banhji.institute.currency.locale;
	banhji.localeReport = banhji.institute.reportCurrency.locale;
	banhji.header = { Institute: banhji.institute.id };	
	var dataStore = function(url) {
		var o = new kendo.data.DataSource({
				transport: {
					read 	: {
						url: url,
						type: "GET",
						headers: banhji.header,
						dataType: 'json'
					},
					create 	: {
						url: url,
						type: "POST",
						headers: banhji.header,
						dataType: 'json'
					},
					update 	: {
						url: url,
						type: "PUT",
						headers: banhji.header,
						dataType: 'json'
					},
					destroy 	: {
						url: url,
						type: "DELETE",
						headers: banhji.header,
						dataType: 'json'
					},
					parameterMap: function(options, operation) {
						if(operation === 'read') {
							return {
								page: options.page,
								limit: options.pageSize,								
								filter: options.filter,
								sort: options.sort
							};
						} else {
							return {models: kendo.stringify(options.models)};
						}
					}
				},
				schema 	: {
					model: {
						id: 'id'
					},
					data: 'results',
					total: 'count'
				},
				batch: true,
				serverFiltering: true,
				serverSorting: true,
				serverPaging: true,
				page: 1,
				pageSize: 100
			});
		return o;
	};	
	banhji.userManagement = kendo.observable({
		lang : langVM,
		multiTaskList 		: [],
		searchText : "",
		searchType : "contacts",
		searchContact: function() {
			this.set("searchType", "contacts");

			$("#search-placeholder").attr('placeholder', "Search Contact");
		},
		searchTransaction: function() {
			this.set("searchType", "transactions");

			$("#search-placeholder").attr('placeholder', "Search Transaction");
		},
		searchItem: function() {
			this.set("searchType", "items");

			$("#search-placeholder").attr('placeholder', "Search Item");
		},
		search: function(e) {
			e.preventDefault();
			
			banhji.searchAdvanced.set("searchText", this.get("searchText"));
			banhji.searchAdvanced.set("searchType", this.get("searchType"));
			banhji.searchAdvanced.search();
			banhji.router.navigate('/search_advanced');
		},
		removeLink 			: function(e){
			e.preventDefault();

			var data = e.data,
			index = this.multiTaskList.indexOf(data);
			
			if(data.vm!==null){				
				data.vm.cancel();
			}			

			this.multiTaskList.splice(index, 1);
		},
		removeMultiTask		: function(url){
			var self = this;

			$.each(this.multiTaskList, function(index, value){
				if(value.url==url){
					self.multiTaskList.splice(index, 1);

					return false;
				}
			});
		},
		addMultiTask 		: function(name, url, vm){
			var isExisting = false;
			$.each(this.multiTaskList, function(index, value){
				if(value.url==url){
					isExisting = true;

					return false;
				}
			});

			if(isExisting==false){
				this.multiTaskList.push({ name:name, url:url, vm:vm });
			}
		},				
		auth : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'authentication',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'authentication',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'authentication',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'authentication',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),		
		inst 	 : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/company',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'banhji/company',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'banhji/company',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'banhji/company',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		industry : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/industry',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		countries: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/countries',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		provinces: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/provinces',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		types 	 : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/types',
					type: "GET",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		instMod 	: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'admin/modules_institute',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'admin/modules_institute',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'admin/modules_institute',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'admin/modules_institute',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			filter: {field: 'id', value: 1}
			// pageSize: 100
		}),
		onSuccessUpload: function(e){
			var logo = e.response.results.url;
			this.get('newInst').set('logo', logo);
			this.saveIntitute();
			// console.log(logo);
		},	 
		close 		: function() {
			window.history.back(-1);
			if(this.inst.hasChanges()) {
				this.inst.cancelChanges();
			}
			if(this.auth.hasChanges()) {
				this.auth.cancelChanges();
			}
		},
		getUsername : function() {
			var x = banhji.userData.username.substring(0,2);
			return x.toUpperCase();
		},
		taxRegimes: [
			{ code: 'small', type: 'ខ្នាតតូច'},
			{ code: 'medium', type: 'ខ្នាតមធ្យម'},
			{ code: 'large', type: 'ខ្នាតធំ'}
		],
		currency : [
			{ code: 'KHR', locale: 'km-KH'},
			{ code: 'USD', locale: 'us-US'},
			{ code: 'VND', locale: 'vn-VN'}
		],
		username : null,
		password : null,
		_password: null,
		pwdDS 	 : new kendo.data.DataSource({
			transport: {
				create 	: {
					url: apiUrl + 'banhji/password',
					type: "POST",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 100
		}),
		validateEmail: function() {
			var sQtext = '[^\\x0d\\x22\\x5c\\x80-\\xff]';
		  	var sDtext = '[^\\x0d\\x5b-\\x5d\\x80-\\xff]';
		  	var sAtom = '[^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+';
		  	var sQuotedPair = '\\x5c[\\x00-\\x7f]';
		  	var sDomainLiteral = '\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\x5d';
		  	var sQuotedString = '\\x22(' + sQtext + '|' + sQuotedPair + ')*\\x22';
		  	var sDomain_ref = sAtom;
		  	var sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';
		  	var sWord = '(' + sAtom + '|' + sQuotedString + ')';
		  	var sDomain = sSubDomain + '(\\x2e' + sSubDomain + ')*';
		  	var sLocalPart = sWord + '(\\x2e' + sWord + ')*';
		  	var sAddrSpec = sLocalPart + '\\x40' + sDomain; // complete RFC822 email address spec
		  	var sValidEmail = '^' + sAddrSpec + '$'; // as whole string

		  	var reValidEmail = new RegExp(sValidEmail);

		  	if(!reValidEmail.test(this.get('username'))){
		  		alert("Please enter valid address");
				this.set('passed', false);
		  	}
		  	this.set('passed', false);
		},
		loginBtn : function() {
			banhji.view.layout.showIn('#content', banhji.view.loginView);
		},
		login  	 : function() {
			this.auth.query({
				filter: [
					{field: 'username', value: banhji.userManagement.get('username')},
					{field: 'password', value: banhji.userManagement.get('password')}
				]
			}).done(function(e){
				var data = banhji.userManagement.auth.data();
				if(data.length > 0) {
					var user = banhji.userManagement.auth.data()[0];
					localforage.setItem('user', user);
					if(user.institute.length === 0) {
						banhji.router.navigate('/no-page');
					} else {
						banhji.router.navigate('/');
					}
				} else {
					console.log('bad');
				}
			});
		},
		registerBtn: function() {
			banhji.view.layout.showIn('#content', banhji.view.signupView);	
		},
		logout 		: function(e) {
			e.preventDefault();
			var userData = {
              	Username : userPool.getCurrentUser().username,
              	Pool : userPool
	        };
          	var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
          	if(cognitoUser != null) {
              	cognitoUser.signOut();
              	localforage.removeItem('user').then(function() {
				    // Run this code once the key has been removed.
				    console.log('Key is cleared!');
				}).catch(function(err) {
				    // This code runs if there were any errors
				    console.log(err);
				});
              	window.location.replace("<?php echo base_url(); ?>login");
          	} else {
              	console.log('No user');
          	}
		},
		setCurrent : function(current) {
			this.set('current', current);
		},
		changePwd  : function() {
			if(this.get('password') !== this.get('_password')) {
				alert("Password does not match");
			} else {
				this.pwdDS.sync();
			}
		},
		getLogin 	: function() {
			return JSON.parse(localStorage.getItem('userData/user'));
		},
		page 	 : function() {
			if(banhji.userManagement.getLogin()) {
				if(banhji.userManagement.getLogin().perm === 1) {
					return 'admin';
				}
			} else {
				return 'home';
			}
			// if(this.getLogin()) {
			// 	return '\#/page';
			// } else {
			// 	return '\#/page/';
			// }
			
		},
		createComp : function() {
			banhji.router.navigate('/create_company');
		},
		setInstitute: function(newIns) {
			this.set('newInst', newIns);
		},
		addInst    : function() {
			this.inst.insert(0, {
				name: "",
				email: "",
				address: "",
				description: "",
				industry: {id: null, name: null},
				type: {id: null, name: null},
				country: {id: null, code: null, name: null},
				province: {id: null, local: null, english: null},
				vat_no: null,
				fiscal_date: null,
				tax_regime: null,
				locale : null,
				legal_name: null,
				date_founded: null,
				logo: ""
			});
			this.setInstitute(this.inst.at(0));
		},
		cancelInst : function() {
			this.inst.cancelChanges();
		},
		saveIntitute: function() {
			if(this.get('newInst').industry.id !== null || this.get('newInst').province.id || this.get('newInst').country.id) {
				this.inst.sync();
				this.inst.bind('requestEnd', function(e){
					var type = e.type, res = e.response.results;
					if(e.response.error === false) {
						if(e.type === 'create') {
							$('#createComMessage').text("created. Please wait till site admin created database for you.");
						} else {
							localforage.removeItem('company', function(err){
								//
							});
							localforage.setItem('company', res);
							$('#createComMessage').text("Updated");
						}
					} else {
						$('#createComMessage').text("error creating company.");
					}
				});
			} else {
				alert('filling all fields');
			}
		},
		signup 	   : function() {
			this.auth.add({username: this.get('username'), password: this.get('password')});
			this.sync();
			this.auth.bind('requestEnd', function(e){
				if(e.type === 'create' && e.response.error === false) {
					alert("អ្នកបានចុះឈ្មោះរួច");
					banhji.router.route('')
				}
			});
		},
		onFileSelect: function(e) {
			console.log(e.files[0]);
		},
		sync: function() {
			this.auth.sync();
			this.auth.bind('requestEnd', function(e){
				var type = e.type;
				var result = e.response.results;
				if(type === "read" && e.error !== true) {
					// get login info
					console.log('true');
				} else if(type === "create") {
					if(e.response.error === true) {
						banhji.userManagement.auth.cancelChanges();
						alert('មានរួចហើយ');
					} else {
						var user = banhji.userManagement.auth.data()[0];
						localforage.setItem('user', user);
						if(!user.institute) {
							banhji.router.navigate('/page', false);
						} else {
							banhji.router.navigate('/app', false);
						}
					}
				}
			});
		}
	});	
	function getDB() {
		var entity = null;
		if(banhji.userManagement.getLogin()) {
			if(banhji.userManagement.getLogin().institute) {
				if(banhji.userManagement.getLogin().institute.length > 0) {
					entity = banhji.userManagement.getLogin().institute.name
				}
				
			} else {
				entity = false
			}
		}		
		return entity;
	}
	banhji.currency = kendo.observable({
		dataSource 			: dataStore(apiUrl + 'currencies'),				
		getCurrencyID 		: function(locale){
			var currency_id = 0;

			$.each(this.dataSource.data(), function(index, value){							
				if(value.locale===locale){
					currency_id = value.id;
					return false;
				}
			});

			return currency_id;
		}		
	});
	banhji.users = kendo.observable({
		dataStore	: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/users',
					type: "GET",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'banhji/users',
					type: "POST",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'banhji/users',
					type: "PUT",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'banhji/users',
					type: "DELETE",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 100
		}),
		roleDS 		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'banhji/roles',
					type: "GET",
					headers: {
						"Entity": getDB(),
						"User": banhji.userManagement.getLogin() === null ? '': banhji.userManagement.getLogin().id
					},
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 100
		}),
		add 		: function() {
			banhji.view.pageAdmin.showIn('#col2', banhji.view.addUserView);
			this.dataStore.insert(0, {username: '', password: null, permission: {id: null, name: null}});
			this.setCurrent(this.dataStore.at(0));
		},
		remove 		: function(e) {
			var user = confirm('Are you sure you want to remove this user?');
			if(user === true) {
				this.dataStore.remove(e.data);
				this.sync();
			}
		},
		editRight 	: function(e) {
			banhji.view.pageAdmin.showIn('#col2', banhji.view.editRoleView);
			this.setCurrent(e.data);
		},
		cancelAdd 	: function() {
			banhji.view.pageAdmin.showIn('#col2', banhji.view.userListView);
			this.dataStore.cancelChanges();
		},
		setCurrent 	: function(current) {
			this.set('current', current);
		},
		sync 		: function() {
			this.dataStore.sync();
			this.dataStore.bind('requestEnd', function(e){
				var type = e.type;
				var data = e.response.results;
				if(type !== 'read') {
					console.log('data recorded');
				}
			});
		}
	});
	banhji.people = kendo.observable({
		dataSource : new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "people",
					type: "GET",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institute.name:""
					},
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "people",
					type: "POST",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institute.name:""
					},
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "people",
					type: "PUT",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institutename:""
					},
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + "people",
					type: "DELETE",
					headers: {
						"Entity": banhji.userManagement.getLogin() !== null ? banhji.userManagement.getLogin().institute.name:""
					},
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							offset: options.skip,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count',
				errors: 'error'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			pageSize: 20
		}),
		filterBy   : function() {},
		save 	   : function() {}
	});
	// end TEst offline
	var obj = function(url) {
		var o = kendo.observable({
			dataStore: new kendo.data.DataSource({
				transport: {
					read 	: {
						url: url,
						type: "GET",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					create 	: {
						url: url,
						type: "POST",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					update 	: {
						url: url,
						type: "PUT",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					destroy : {
						url: url,
						type: "DELETE",
						headers: {
							"Entity": getDB()
						},
						dataType: 'json'
					},
					parameterMap: function(options, operation) {
						if(operation === 'read') {
							return {
								limit: options.pageSize,
								offset: options.skip,
								filter: options.filter
							};
						} else {
							return {models: kendo.stringify(options.models)};
						}
					}
				},
				schema 	: {
					model: {
						id: 'id'
					},
					data: 'results',
					total: 'count',
					errors: 'error'
				},
				batch: true,
				serverFiltering: true,
				serverPaging: true,
				pageSize: 20
			}),
			findById: function(id) {},
			findBy 	: function(arr) {},
			insert 	: function(data) {},
			remove 	: function(model) {
				this.dataStore.remove(model);
				this.save();
			},
			save 	: function() {
				this.dataStore.sync();
				this.dataStore.bind('requestEnd', function(e){
					var type = e.type, res = e.response.results;
					console.log(type + " operation is successful.");
				});
			}
		});
		return o;
	}	
	banhji.Layout = kendo.observable({
		locale: "km-KH",
		menu 	: [],
		// isShown : true,
		// isAdmin : auth.isAdmin(),
		// logout 	: function(e) {
		// 	e.preventDefault();
		// 	auth.logout();
		// },
		// isLogin : function(){
		// 	if(banhji.userManagement.getLogin()) {
		// 		return true;
		// 	} else {
		// 		return false;
		// 	}
		// },
		// init: function() {
		// 	// initialize when the whole page load
		// },
		// ui: function() {
		// 	// get UI information from source base on locale
		// }
	});	
	var role = kendo.observable({
		dataStore 	: new kendo.data.DataSource({
			transport: {
				read: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				create: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				update: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				destroy: {
					url: apiUrl + 'roles',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				parameterMap: function(data, operation) {
					if(operation === 'read') {
						return {
							limit: data.pageSize,
							offset: data.skip,
							filter: data.filter
						};
					}
					return {models: kendo.stringify(data.models)};
				}
			},
			schema: {
	        	model: {
	        		id: "id"
	        	},
	        	data: "results"
	        },
			pageSize: 20,
			serverPaging: true,
			serverFiltering: true,
			batch: true
		}),
		roleUserDs 	: new kendo.data.DataSource({
			transport: {
				read: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'GET'
				},
				create: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'POST'
				},
				update: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'PUT'
				},
				destroy: {
					url: apiUrl + 'roles/user',
					dataType: 'json',
					headers: {
						"Entity": getDB()
					},
					type: 'DELETE'
				},
				parameterMap: function(data, operation) {
					if(operation === 'read') {
						return {
							limit: data.pageSize,
							offset: data.skip,
							filter: data.filter
						};
					}
					return {models: kendo.stringify(data.models)};
				}
			},
			schema: {
	        	model: {
	        		id: "id"
	        	},
	        	data: "results"
	        },
			pageSize: 20,
			serverPaging: true,
			serverFiltering: true,
			batch: true
		}),
		find 		: function(arg) {},
		setCurrent 	: function(currentRole) {},
		save 		: function() {}
	});
	banhji.index = kendo.observable({
		lang 				: langVM,
		dataSource			: dataStore(apiUrl+"contact_reports/home"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contact_reports/home_graph",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),		
		companyLogo 		: '',
		modules 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + 'admin/modules',
					type: "GET",
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + 'admin/modules',
					type: "POST",
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + 'admin/modules',
					type: "PUT",
					dataType: 'json'
				},
				destroy : {
					url: apiUrl + 'admin/modules',
					type: "DELETE",
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverPaging: true,
			// pageSize: 100
		}),
		companyName 		: null,
		companyInf 			: function() {
			var company = JSON.parse(localStorage.getItem('userData/user'));
			return company;
		},		
		getLogo   			: function() {
			banhji.companyDS.fetch(function(){
				if(banhji.companyDS.data().length > 0) {
					banhji.index.set('companyLogo', banhji.companyDS.data()[0].logo);
				}
			});
		},
		today 				: new Date(),		
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,
		ap 					: 0,
		ap_open 			: 0,
		ap_vendor 			: 0,
		ap_overdue 			: 0,		
		pageLoad 			: function(){
			var self = this;

			this.graphDS.fetch();

			this.dataSource.query({
				filter: [],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.dataSource.view();				
				
				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));

				self.set("ap", kendo.toString(view[0].ap, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ap_open", kendo.toString(view[0].ap_open, "n0"));
				self.set("ap_vendor", kendo.toString(view[0].ap_vendor, "n0"));
				self.set("ap_overdue", kendo.toString(view[0].ap_overdue, "n0"));
			});										
		}
	});
	banhji.searchAdvanced =  kendo.observable({
    	lang 				: langVM,    	
    	contactDS 			: dataStore(apiUrl+"contacts"),
    	contactTypeDS 		: dataStore(apiUrl+"contacts/type"),
    	transactionDS 		: dataStore(apiUrl+"transactions"),
    	itemDS 				: dataStore(apiUrl+"items"),
    	accountDS 			: dataStore(apiUrl+"accounts"),
    	searchType 			: "",
    	searchText 			: "",
    	found 				: 0,
    	pageLoad 			: function(){			
																									
		},
		search 				: function(){
			var self = this, 
			searchText = this.get("searchText");
			this.set("found", 0);

			if(searchText){
				this.contactDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText },
						{ field:"surname", operator:"or_like", value: searchText },
						{ field:"name", operator:"or_like", value: searchText },
						{ field:"company", operator:"or_like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){				
					var found = self.get("found") + self.contactDS.total();
					self.set("found", found);
				});

				this.transactionDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.transactionDS.total();
					self.set("found", found);
				});

				this.itemDS.query({
					filter:[
						{ field:"sku", operator:"like", value: searchText },					
						{ field:"name", operator:"or_like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.itemDS.total();
					self.set("found", found);
				});

				this.accountDS.query({
					filter:[
						{ field:"number", operator:"like", value: searchText },					
						{ field:"name", operator:"or_like", value: searchText }
					],
					page:1,
					pageSize: 10
				}).then(function(){
					var found = self.get("found") + self.accountDS.total();
					self.set("found", found);
				});
			}
		},
		selectedContact 	: function(e){
			e.preventDefault();

			var data = e.data, 
			type = this.contactTypeDS.get(data.contact_type_id);
			
			if(type.parent_id==1){
				banhji.customerCenter.loadContact(data.id);
				banhji.router.navigate('/customer_center', false);								
			}else{
				banhji.vendorCenter.loadContact(data.id);
				banhji.router.navigate('/vendor_center', false);
			}
		},
		selectedTransaction : function(e){
			e.preventDefault();

			var data = e.data;
			banhji.router.navigate('/'+data.type.toLowerCase()+'/'+data.id);
		},
		selectedItem 		: function(e){
			e.preventDefault();

			var data = e.data;
			banhji.router.navigate('/item/'+e.data.id);
		},
		selectedAccount 		: function(e){
			e.preventDefault();

			var data = e.data;
			banhji.router.navigate('/accounting_center/'+e.data.id);
		}
    });	


	//DAWINE -----------------------------------------------------------------------------------------
	banhji.source =  kendo.observable({
		lang 					: langVM,
		countryDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "countries",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}				
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},			
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Contact
		contactDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}				
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			// group: { field: "contact_type" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		customerDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:1 },
			// group: { field: "contact_type" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		supplierDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:2 },
			// group: { field: "contact_type" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		employeeDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:3 },
			// group: { field: "contact_type" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		saleRepDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"contact_type_id", value:10 },
			// group: { field: "contact_type" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Contact Type
		contactTypeDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts/type",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "contacts/type",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "contacts/type",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "contacts/type",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		customerTypeDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts/type",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "contacts/type",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "contacts/type",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "contacts/type",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"parent_id", value: 1 },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		supplierTypeDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts/type",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "contacts/type",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "contacts/type",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "contacts/type",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}				
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"parent_id", value: 2 },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Job
		jobDS					: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "jobs",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Currency
		currencyDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "currencies",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			group: { field: "group"},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Item
		itemDS					: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			group: { field: "item_type"},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),		
		//Tax Item
		taxItemDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "tax_items",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		customerTaxDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "tax_items",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "tax_type_id", operator:"where_in", value:[1,3] },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		supplierTaxDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "tax_items",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "tax_type_id", value:1 },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Accounting
		accountDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},			
			schema 	: {
				model: {
					id: 'id'
				},				
				data: 'results',
				total: 'count'
			},
			//group:{ field: "account_type_name" },
			sort:{ field:"number", dir:"asc" },
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 1000
		}),
		subAccountDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},			
			schema 	: {
				model: {
					id: 'id'
				},				
				data: 'results',
				total: 'count'
			},
			filter:{ field: "sub_of_id", value:0 },
			sort:{ field:"number", dir:"asc" },
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 1000
		}),
		accountTypeDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts/type",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},			
			schema 	: {
				model: {
					id: 'id'
				},				
				data: 'results',
				total: 'count'
			},
			filter:{ field:"number <>", value:"" },			
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 1000
		}),
		cashAccountDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
				{ field:"account_type_id", value: 10 },
				{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		advAccountDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
				{ field:"account_type_id", value: 11 },
				{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Item Income / Item Revenue / Customer Revenue / Service Revenue Account
		incomeAccountDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", operator:"where_in", value: [35,39] },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Expense
		expenseAccountDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", operator:"where_in", value: [36,37,38,40,41,42,43] },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		ARAccountDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", value: 12 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		APAccountDS				: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", operator:"where_in", value: [23,24] },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),		
		tradeDiscountDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"id", value: 72 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		settlementDiscountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"id", value:99 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		supplierTradeDiscountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", value: 36 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		supplierSettlementDiscountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"id", value:109 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		prepaidAccountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", operator:"where_in", value: [14,21] },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		depositAccountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", operator:"where_in", value: [25,30] },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),		
		cogsAccountDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", value: 36 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		inventoryAccountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,	
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"account_type_id", value: 13 },
					{ field:"status", value: 1 }
			],
			sort: { field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		//Payment Term, Method, Segment
		paymentTermDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "payment_terms",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},			
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		paymentMethodDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "payment_methods",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},			
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),				
		segmentItemDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "segments/item",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			group: { field: "segment[0].name"},
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		//Add New Item
		addNewItem				: [
	 		{ name:"Add New Inventory for Sale", value: "1" },
	 		{ name:"Add New Other Inventory", value: "2" },
	 		{ name:"Add New Fixed Assets", value: "3" },
	 		{ name:"Add New Services", value: "4" },
	 		{ name:"Add New Transaction", value: "5" },
	 		{ name:"Add New Other Charge", value: "6" }
		],
		//Recurring
		frequencyList 			: [
			{ id: 'Daily', name: 'Day' },
			{ id: 'Weekly', name: 'Week' },
			{ id: 'Monthly', name: 'Month' },
			{ id: 'Annually', name: 'Annual' }
		],
		monthOptionList 		: [
			{ id: 'Day', name: 'Day' },
			{ id: '1st', name: '1st' },
			{ id: '2nd', name: '2nd' },
			{ id: '3rd', name: '3rd' },
			{ id: '4th', name: '4th' }
		],
		monthList 				: [
			{ id: 0, name: 'January' },
			{ id: 1, name: 'February' },
			{ id: 2, name: 'March' },
			{ id: 3, name: 'April' },
			{ id: 4, name: 'May' },
			{ id: 5, name: 'June' },
			{ id: 6, name: 'July' },
			{ id: 7, name: 'August' },
			{ id: 8, name: 'September' },
			{ id: 9, name: 'October' },
			{ id: 10, name: 'November' },
			{ id: 11, name: 'December' }
		],
		weekDayList 			: [
			{ id: 0, name: 'Sunday' },
			{ id: 1, name: 'Monday' },
			{ id: 2, name: 'Tuesday' },
			{ id: 3, name: 'Wednesday' },
			{ id: 4, name: 'Thurday' },
			{ id: 5, name: 'Friday' },
			{ id: 6, name: 'Saturday' }
		],
		dayList 				: [
			{ id: 1, name: '1st' },
			{ id: 2, name: '2nd' },
			{ id: 3, name: '3rd' },
			{ id: 4, name: '4th' },
			{ id: 5, name: '5th' },
			{ id: 6, name: '6th' },
			{ id: 7, name: '7th' },
			{ id: 8, name: '8th' },
			{ id: 9, name: '9th' },
			{ id: 10, name: '10th' },
			{ id: 11, name: '11st' },
			{ id: 12, name: '12nd' },
			{ id: 13, name: '13rd' },
			{ id: 14, name: '14th' },
			{ id: 15, name: '15th' },
			{ id: 16, name: '16th' },
			{ id: 17, name: '17th' },
			{ id: 18, name: '18th' },
			{ id: 19, name: '19th' },
			{ id: 20, name: '20th' },
			{ id: 21, name: '21st' },
			{ id: 22, name: '22nd' },
			{ id: 23, name: '23rd' },
			{ id: 24, name: '24th' },
			{ id: 25, name: '25th' },
			{ id: 26, name: '26th' },
			{ id: 27, name: '27th' },
			{ id: 28, name: '28th' },
			{ id: 0, name: 'Last' }
		],
		sortList				: [
	 		{ text:"All", value: "all" },
	 		{ text:"Today", value: "today" },
	 		{ text:"This Week", value: "week" },
	 		{ text:"This Month", value: "month" },
	 		{ text:"This Year", value: "year" }
		],
		statusList 				: [
			{ "id": 1, "name": "Active" },
			{ "id": 0, "name": "Inactive" },
			{ "id": 2, "name": "Void" }
        ],
		genderList				: ["M", "F"],
		user_id					: banhji.userData.id,
		cash_account_id 		: 10,
		amtDueColor 			: "#D5DBDB",
		acceptedSrc				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/accepted.ico",
		approvedSrc				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/approved.ico",
		cancelSrc				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/cancel.ico",
		openSrc 				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/open.ico",
		paidSrc 				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/paid.ico",
		partialyPaidSrc 		: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/partialy_paid.ico",
		usedSrc 				: "https://s3-ap-southeast-1.amazonaws.com/app-data-20160518/ICONs/used.ico",
		successMessage 			: "Saved Successful!",
		errorMessage 			: "Warning, please review it again!",
		confirmMessage 			: "Are you sure, you want to delete it?",
		getFiscalDate 			: function(){
			today = new Date(),
			year = new Date(),
			year.setFullYear(year.getFullYear()-1),			
			fiscalDate = new Date(year.getFullYear() +"-"+ banhji.institute.fiscal_date);

			return fiscalDate;
		}
	});
	
	/*********************
	*  Accounting Section  *
	**********************/
	banhji.accountingCenter = kendo.observable({
		lang 				: langVM,
		dataSource			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		accountTypeDS 		: banhji.source.accountTypeDS,
		summaryDS  			: dataStore(apiUrl + 'centers/accounting_summary'),
		transactionDS  		: dataStore(apiUrl + 'centers/accounting_txn'),		
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",				
		obj 				: null,			
		searchText 			: "",
		balance 			: 0,
		totalTxn 			: 0,		
		subName 			: "",
		typeName 			: "",		
		nature 				: "",		
		user_id 			: banhji.source.user_id,				
		pageLoad 			: function(id){			
			if(id){
				this.loadObj(id);
			}

			//Refresh
			if(this.dataSource.total()>0){
				this.dataSource.fetch();
			}
			if(this.summaryDS.total()>0){
				this.summaryDS.fetch();
			}
			if(this.transactionDS.total()>0){
				this.transactionDS.fetch();
			}
		},
		loadObj 			: function(id){
			var self = this;

			this.dataSource.bind("requestEnd", function(e){
				if(e.type=="read"){
					var data = e.response.results;
					
					$.each(data, function(index, value){
						if(value.id==id){
							if(value.sub_of_id>0){
								self.set("subName", value.name);
							}else{
								self.set("subName", "");
							}

							self.set("obj", value);
							self.loadSummary();
							self.searchTransaction();

							return false;
						}
					});

					//Sub Account
					var obj = self.get("obj");
					if(obj.sub_of_id>0){
						$.each(data, function(index, value){
							if(value.id==obj.sub_of_id){								
								self.set("subName", value.name);								

								return false;
							}						
						});
					}else{
						self.set("subName", "");
					}

					var type = self.accountTypeDS.get(obj.account_type_id);
					self.set("typeName", type.name);
					self.set("nature", type.nature);					
				}
			});
		},						
		loadSummary 		: function(){
			var self = this, obj = this.get("obj");

			this.summaryDS.query({
			  	filter: [
			  		{ field:"account_id", value: obj.id }
			  	],
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();				
				
				if(view.length>0){
					self.set("balance", kendo.toString(view[0].balance, view[0].locale=="km-KH"?"c0":"c", view[0].locale));					
					self.set("totalTxn", self.summaryDS.total());
				}else{
					self.set("balance", 0);
					self.set("totalTxn", 0);
				}
			});
		},								
		selectedRow			: function(e){
			var data = e.data,
			sub = this.dataSource.get(data.sub_of_id),
			type = this.accountTypeDS.get(data.account_type_id);
			
			if(data.sub_of_id>0){
				this.set("subName", sub.name);
			}else{
				this.set("subName", "");
			}

			this.set("typeName", type.name);
			this.set("nature", type.nature);

			this.set("obj", data);
			this.loadSummary();
			this.searchTransaction();		
		},		
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
			account_type_id = this.get("account_type_id"),
      		txtSearch = this.get("searchText");
      		
      		if(txtSearch){
      			para.push(      				
      				{ field: "number", operator: "like", value: txtSearch },      				
					{ field: "name", operator: "or_like", value: txtSearch }
      			);
      		}

      		if(account_type_id){
      			para.push({ field:"account_type_id", value:account_type_id });
      		}      		

      		this.dataSource.filter(para);
      		
			//Clear search filters
      		this.set("searchText", "");
      		this.set("account_type_id", "");    			  			
		},
		searchTransaction	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	if(obj.id){
        		para.push({ field:"account_id", value: obj.id });
        	}

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related", model:"transaction", value: start });
            	para.push({ field:"issued_date <=", operator:"where_related", model:"transaction", value: end });            	            	
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related", model:"transaction", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related", model:"transaction", value: end });
            }else{
            	
            }                        

            this.transactionDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 100
            });            
		},
		loadTransaction	 	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				start = kendo.toString(banhji.source.getFiscalDate(), "yyyy-MM-dd"),
				end = kendo.toString(today, "yyyy-MM-dd");

        	if(obj.id){
        		para.push({ field:"account_id", value: obj.id });
        	}
    	
        	para.push({ field:"issued_date >=", operator:"where_related", model:"transaction", value: start });
        	para.push({ field:"issued_date <=", operator:"where_related", model:"transaction", value: end });            	            	
            
            this.transactionDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 100
            });            
		},
		goEdit 				: function(){
			var obj = this.get("obj");
			banhji.router.navigate('/account/'+obj.id);
		}				
	});
	banhji.account =  kendo.observable({
    	lang 				: langVM,
    	dataSource 			: dataStore(apiUrl + "accounts"),
    	accountTypeDS 		: banhji.source.accountTypeDS,
    	subAccountDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field: "sub_of_id", value:0 },
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 1000
		}),
    	currencyDS 			: banhji.source.currencyDS,
    	statusList 			: banhji.source.statusList,
    	obj 	 			: null,
    	isEdit 				: false,
    	showBank 			: false,
    	pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();
				}
			}
		},
    	loadObj 			: function(id){
    		var self = this;

    		this.dataSource.query({
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	typeChanges 		: function(){    		
    		var obj = this.get("obj");
    		this.set("showBank", false);

    		if(obj.account_type_id){
    			if(obj.account_type_id==10){
    				this.set("showBank", true);
    			}
    			this.subAccountDS.filter({ field:"account_type_id", value:obj.account_type_id });
    		}
    	},    	 	   	
      	addEmpty 			: function(){
      		this.dataSource.data([]);
      		this.set("obj", null);

      		this.dataSource.insert(0,{
      			account_type_id 		: 0,
      			sub_of_id 				: 0,
      			number 					: "",
      			name 					: "",
      			name_2 					: "",
      			description				: "",
      			bank_name 				: "",
      			bank_account_number 	: "",
      			locale 					: "km-KH",
      			is_taxable 				: 0,
      			status 					: 1,
      			is_system				: 0
			});      		

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
      	},
      	objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
				dfd.resolve(e.response.results);
		    });

		    return dfd;
	    },
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();
      	},      	
      	save 				: function(){
      		var self = this;

      		if(this.get("isEdit")){
      			this.dataSource.sync();
      		}else{
	      		this.objSync().then(function(data){
	      			self.addEmpty();
	      		});
      		}
      	},
      	delete 				: function(){
			if (confirm("Are you sure, you want to delete it?")) {
		        var obj = this.dataSource.at(0);
		        this.dataSource.remove(obj);
		        this.dataSource.sync();
		        window.history.back();
	    	}
	    }
    });
    banhji.txnItem =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),    	
    	deleteDS 			: dataStore(apiUrl + "transactions/line"),    	
    	currencyDS 	 		: banhji.source.currencyDS,  	
    	accountDS 			: banhji.source.accountDS,   	
    	statusList 			: banhji.source.statusList,        
    	obj 	 			: null,
    	isEdit 				: false,    	
    	pageLoad 			: function(id){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);				
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
    	loadObj 			: function(id){
    		var self = this;			

    		this.dataSource.query({    			
				filter: { field:"id", value: id },
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},		
      	addEmpty 			: function(){      		
      		this.dataSource.data([]);      		
      		this.set("obj", null);

      		this.dataSource.add({      			
      			currency_id 			: 0,
      			item_type_id 			: 5, //Transaction type      			
      			name 					: "",
      			description				: "",      			
      			rate 					: 1,
      			locale 					: banhji.locale,      			
      			account_id 				: 0,      			     					
      			is_catalog 				: 0,
      			is_assemble 			: 0,
      			is_pattern 				: 0,
      			status 					: 1,
      			deleted 				: 0
			});      		

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);			
      	},
      	objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	},      	
      	save 				: function(){
      		var self = this;

      		if(this.get("isEdit")){
      			this.dataSource.sync();
      			this.itemVendorDS.sync();
      			this.itemCustomerDS.sync();
      		}else{
	      		this.objSync().then(function(data){
	      			$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			if(data[0].is_pattern){
						self.savePattern(data[0].category_id, data[0].id);
					}

	      			self.itemVendorDS.sync();
	      			self.itemCustomerDS.sync();
	      		}).then(function(){	      			
	      			self.addEmpty();
	      		});
      		}      		      		
      	},      	
      	delete 				: function(){			
	    	var self = this,
			obj = this.get("obj");

			if (confirm("Are you sure, you want to delete it?")) {				
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						var data = self.dataSource.get(obj.id);
				        self.dataSource.remove(data);
				        self.save();

				        window.history.back();
					}
				});
	    	}	    	
	    },
	    addEmptyItemVendor 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemVendorDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemCustomerDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		}
    });
	banhji.journal =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),						
		lineDS  			: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "journal_lines"),
		accountDS 			: banhji.source.accountDS,
		jobDS 				: banhji.source.jobDS,
		contactDS 			: banhji.source.contactDS,				
		currencyDS 			: banhji.source.currencyDS,
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		segmentItemDS 		: banhji.source.segmentItemDS,					
		types 				: [
			{id: 'Journal', name: 'General Journal'},
			{id: 'Adjustment', name: 'Adjustment'},
			{id: 'Opening_Balance', name: 'Opening Balance'},
			{id: 'Closing_Entry', name: 'Closing Entry'},
			{id: 'Reclassification', name: 'Reclassification'},
			{id: 'Accrual', name: 'Accrual'},
			{id: 'Depreciation_amortization', name: 'Depreciation/Amortization'},
			{id: 'Others', name: 'Others'}
		],
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,				
		showRef 			: true,
		showName 			: false,
		showJob 			: false,
		showSegment 		: false,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,		
		obj 				: null,		
		isEdit 				: false,			
		uer_id				: banhji.source.user_id,
		dr 					: 0,
		cr 					: 0,									
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},
		loadObj 			: function(id,is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.dataSource.view();

				if(view.length>0){	       
					self.set("obj", view[0]);
					self.set("dr", kendo.toString(view[0].amount, "c0", view[0].locale));
			        self.set("cr", kendo.toString(view[0].amount, "c0", view[0].locale));
		        }				

				self.lineDS.query({
					filter: { field: "transaction_id", value: id },
					page: 1,
					pageSize: 100
				});								
			});				
		},			
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),			
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", kendo.parseFloat(view[0].rate));
						value.set("locale", view[0].locale);												
					});					
				}else{
					obj.set("rate", 1);

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", 1);
						value.set("locale", banhji.institute.locale);												
					});
				}
			});				
		},															
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);

			this.set("obj", null);
			this.set("dr", 0);
			this.set("cr", 0);				

			this.dataSource.add({
				recurring_id 		: "",
				user_id 			: this.get("uer_id"), 	    			    		
			   	type				: "Journal", //required
			   	journal_type 		: "Journal",			   				   		   					   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.institute.locale,			   	
			   	issued_date 		: new Date(),			   	   	
			   	memo 				: "",
			   	memo2 				: "",
			   	is_journal 			: 1,
			   	//Recuring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);			

			this.addRow();
			this.addRow();

			this.setRate();			
		},
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: "",				
				contact_id 			: "",				
				description 		: "",
				reference_no 		: "",
				job_id 				: "",
				segments 	 		: [],								
				dr 	 				: 0,
				cr 					: 0,				
				rate				: obj.rate,
				locale				: obj.locale
			});																	
		},		
		remove 				: function(e){						
			var d = e.data;
			if(this.lineDS.total()>2){				
				this.lineDS.remove(d);
	        	this.changes();
	        }else{
	        	alert("There must be 2 rows at least.");
	        } 		        
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){			
				var dr = 0, cr = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {
					if(value.dr >0 && value.cr >0){
						value.set("dr", 0);
						value.set("cr", 0);

						alert("Please enter only one side.");
					}else{
						dr += kendo.parseFloat(value.dr);
						cr += kendo.parseFloat(value.cr);						
					}
		        });		       	

		        this.set("dr", kendo.toString(dr, "c0", obj.locale));
		        this.set("cr", kendo.toString(cr, "c0", obj.locale));
		        
		        obj.set("amount", dr);		       								    	
	    	}else{
	    		this.set("dr", 0);
		        this.set("cr", 0);
		        
		        //obj.set("amount", 0);				
	    	}   	
		},
		segmentChanges  	: function(e) {					
			var dataArr = e.data.segments;
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},						
		validates 			: function(){
			var dr = 0, cr = 0, has_account = false, result = true;

			$.each(this.lineDS.data(), function(index, value){				

				dr += kendo.parseFloat(value.dr);
				cr += kendo.parseFloat(value.cr);
			});
			
			if(dr==0 || cr==0){
				result = false;
				alert("Please enter amount of DEBIT and CREDIT");
			}

			if(dr!==cr){
				result = false;
				alert("TOTAL DEBIT must equal to TOTAL CREDIT");
			}

			return result;
		},		  
		transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this; 			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();
	    		this.lineDS.sync();
	    	}else{
	    		//Add brand new transaction
				this.transactionSync()
				.then(function(data){
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);												
					});

					self.lineDS.sync();			
				}).then(function(){					
					self.addEmpty();
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			
			window.history.back();
		},
		//Recurring		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var recur = this.recurringDS.get(obj.recurring_id);				
												
				obj.set("journal_type", recur.journal_type);
				obj.set("amount", recur.amount);
				obj.set("rate", recur.rate);
				obj.set("locale", recur.locale);					
				obj.set("memo", recur.memo);
				obj.set("memo2", recur.memo2);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var line = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(line, function(index, value){
						self.lineDS.add({					
							transaction_id 		: 0,
							account_id 			: value.account_id,				
							contact_id 			: value.contact_id,				
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							dr 	 				: value.dr,
							cr 					: value.cr,				
							rate				: value.rate,
							locale				: value.locale
						});
					});
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				user_id 			: obj.user_id, 	    			    		
			   	type				: obj.type,
			   	journal_type 		: obj.journal_type,			   				   		   					   				   	
			   	amount				: obj.amount,
			   	rate				: obj.rate,			   	
			   	locale 				: obj.locale,					   		   	   	
			   	memo 				: obj.memo,
			   	memo2 				: obj.memo2,
			   	recurring_name 		: obj.recurring_name,
			   	start_date 			: obj.start_date,
			   	frequency 			: obj.frequency,
			   	month_option 		: obj.month_option,
			   	interval 			: obj.interval,
			   	day 				: obj.day,
			   	week 				: obj.week,
			   	month 				: obj.month,
			   	is_recurring 		: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,
					account_id 			: value.account_id,				
					contact_id 			: value.contact_id,				
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segmets,								
					dr 	 				: value.dr,
					cr 					: value.cr,				
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		saveRecurring 		: function(){
	    	var self = this, obj = this.get("obj");

	    	if(this.get("isEdit")){
	    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
	    			this.addNewRecurring();

	    			this.recurringSync()
					.then(function(data){
						$.each(self.recurringLineDS.data(), function(index, value){										
							value.set("transaction_id", data[0].id);						
						});

						self.recurringLineDS.sync();			
					}).then(function(){					
						self.addEmpty();
					});
	    		}else{
	    			this.save();
	    		}
	    	}else{ //Add brand new recurring
	    		obj.set("is_recurring", 1);
	    		this.save();
	    	}	    	
	    }	    	   
	});
	banhji.currencyRate =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "currencies/rate"),
		baseCurrencyDS		: banhji.source.currencyDS,
		currencyDS 			: banhji.source.currencyDS,
		sortList			: banhji.source.sortList,
		sorter 				: "all",		
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		isEdit 				: false,
		user_id				: banhji.source.user_id,				
		baseCode 			: banhji.institute.currency.country +' - '+ banhji.institute.currency.code,
		reportCode 			: banhji.institute.reportCurrency.country +' - '+ banhji.institute.reportCurrency.code,						
		pageLoad 			: function(id){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},		
		openWindow			: function(){
      		this.addEmpty();

         	var window = $("#window").data("kendoWindow");
          	window.title("Exchange Rate");          	
          	window.center().open();         	
      	},
      	closeWindow 		: function(){	      		
      		this.dataSource.cancelChanges();

      		var window = $("#window").data("kendoWindow");          	         	
          	window.close();          	
      	},	   								
		addEmpty 		 	: function(){			
			this.dataSource.add({				
				currency_id : "",				
				user_id 	: this.get("user_id"),
 	    		rate 		: 1,
 	    		locale 		: "",
			   	source		: "",
			   	method 		: "Manual",			   		   	
			   	date 		: new Date(),

			   	currency 	: []			   				
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);					
		},			
		remove 				: function(e){						
			var d = e.data;				
			this.lineDS.remove(d);
	        this.changes();		        
		},
		save 				: function(){
      		this.dataSource.sync();
      		
      		var window = $("#window").data("kendoWindow");          	         	
          	window.close(); 		
      	},
      	edit 				: function(e){
      		var data = e.data;
      		
      		this.set("obj", data);

      		var window = $("#window").data("kendoWindow");
          	window.title("Exchange Rate");          	
          	window.center().open();       		
      	},      	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();		        
	    	}	    	
	    }			         		
	});
	banhji.recurring =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),		
		user_id				: banhji.source.user_id,
		referenceTypes 		: [
			{ id:"Estimate", name:"Estimate" },
			{ id:"SO", name:"Sale Order" },
			{ id:"GDN", name:"GDN" }
		],											
		pageLoad 			: function(){
			if(this.dataSource.total()>0){
				this.dataSource.fetch();
			}
		},
		goToTemplate 		: function(e){
			var data = e.data;			

			banhji.router.navigate('/'+data.type.toLowerCase()+"/"+data.id+"/"+true);			
		},		   	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();		        
	    	}	    	
	    }			         		
	});
	banhji.journalReport =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounting_reports/journal"),		
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		showDescription 	: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		currentSort 		: "asc",							
		pageLoad 			: function(){
			
		},
		sort 				: function(e){
			var col = "",
			target = e.currentTarget.innerText;

			if(this.get("currentSort")=="asc"){
				this.set("currentSort", "desc");
			}else{
				this.set("currentSort", "asc");
			}

			switch(target) {
			    case "TYPE":
			        col = "type";
			        break;
			    case "DATE":
			        col = "issued_date";
			        break;
			    case "ACCOUNT":
			        col = "account_id";
			        break;
			    default:
			        //default code block
			}			

			this.dataSource.sort({ field:col, dir:this.get("currentSort") });
		}		      		
	});	
	banhji.trialBalance =  kendo.observable({
		lang 				: langVM,		
		dataSource			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounting_reports/trial_balance",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort:{ field:"number", dir:"asc" },
			batch: true,
			serverFiltering: true,			
			page:1,
			pageSize: 100
		}),
		sortList			: banhji.source.sortList,
		as_of 				: new Date(),		
		currentSort 		: "asc",
		company 			: banhji.institute,							
		pageLoad 			: function(){
		},
		displayDate 		: function(){
			var d = "",
			asOf = this.get("as_of");

			if(asOf){
				d = "As Of " + kendo.toString(asOf, "dd-MM-yyyy");
			}

			return d;
		},		
		sort 				: function(e){
			var col = "",
			target = e.currentTarget.innerText;

			if(this.get("currentSort")=="asc"){
				this.set("currentSort", "desc");
			}else{
				this.set("currentSort", "asc");
			}

			switch(target) {
			    case "TYPE":
			        col = "type";
			        break;
			    case "DATE":
			        col = "issued_date";
			        break;
			    case "ACCOUNT":
			        col = "account_id";
			        break;
			    default:
			        //default code block
			}			

			this.dataSource.sort({ field:col, dir:this.get("currentSort") });
		},
		search 				: function(){
			var as_of = kendo.toString(this.get("as_of"), "yyyy-MM-dd");

			if(as_of){
				this.dataSource.filter([
					{ field:"issued_date <=", operator:"where_related", model:"transaction", value:as_of }
				]);
			}
		},		
		totalDr 			: function() {
	        var sum = 0;

	        $.each(this.dataSource.data(), function(index, value) {
	            sum += kendo.parseFloat(value.dr);
	        });

	        return kendo.toString(sum, "c", banhji.locale);
	    },
	    totalCr 			: function() {
	        var sum = 0;

	        $.each(this.dataSource.data(), function(index, value) {
	            sum += kendo.parseFloat(value.cr);
	        });

	        return kendo.toString(sum, "c", banhji.locale);
	    }		      		
	});
	banhji.chartOfAccount =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "accounts"),		
		as_of 				: new Date(),		
		currentSort 		: "asc",							
		pageLoad 			: function(){
			
		},	
		sort 				: function(e){
			var col = "",
			target = e.currentTarget.innerText;

			if(this.get("currentSort")=="asc"){
				this.set("currentSort", "desc");
			}else{
				this.set("currentSort", "asc");
			}

			switch(target) {
			    case "TYPE":
			        col = "type";
			        break;
			    case "DATE":
			        col = "issued_date";
			        break;
			    case "ACCOUNT":
			        col = "account_id";
			        break;
			    default:
			        //default code block
			}			

			this.dataSource.sort({ field:col, dir:this.get("currentSort") });
		}	      		
	});
	banhji.saleTax =  kendo.observable({
		lang 				: langVM,
        dataSource 			: dataStore(apiUrl + "tax_types"),
        itemDS 	 			: dataStore(apiUrl + "tax_items"),
        accountDS 			: banhji.source.accountDS,
        typeList			: [ 
	 		{ id:"Invoice Based", name: "Invoice Based" },
	 		{ id:"Payment Based", name: "Payment Based" },
	 		{ id:"No Tax", name: "No Tax" }
		],
		obj 				: null,
		item 				: null,
		taxName 			: "",
		windowVisible 		: false,
		windowItemVisible 	: false,
		pageLoad 			: function() {
        },        
        addType 			: function(){
        	this.dataSource.add({
        		number 				: "",
        		name 				: "",
        		agency 				: "",
        		tax_system 			: "Invoice Based",
        		end_date 			: new Date(),
        		submission_date 	: new Date()
        	});
        	var data = this.dataSource.data();
			var obj = data[data.length-1];
			this.set("obj", obj);
        },
        openWindow			: function(){
      		this.addType();

         	this.set("windowVisible", true);
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();

      		this.set("windowVisible", false);
      	},
        save 				: function(){
        	var self = this;
        	this.dataSource.sync();
        	this.dataSource.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			this.set("windowVisible", false); 
        		}
        	});
        },
        edit 				: function(e){
      		var data = e.data;      		
      		this.set("obj", data);

      		this.set("windowVisible", true);       		
      	},      	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();
	    	}	    	
	    },
	    view 				: function(e){
	    	var data = e.data;
	    	this.set("taxName", data.name);
	    	this.itemDS.filter({ field: "tax_type_id", value: data.id});
	    },
	    openWindowItem		: function(){
         	this.set("windowItemVisible", true);
      	},
      	closeWindowItem 	: function(){	      		
      		this.itemDS.cancelChanges();

      		this.set("windowItemVisible", false);
      	},
      	loadItem 			: function(e){
	        var d = e.data;

	        this.set("selectedType", true);
	        this.set("tax_type_id", d.id);
	        this.set("selectedTypeName", d.name);
	        
	        this.itemDS.query({
	        	filter: { field:"tax_type_id", value: d.id },
	        	page: 1,
	        	pageSize: 100
	        });  	
        },
      	addItem				: function(e){
		    var data = e.data;

        	this.itemDS.add({
        		tax_type_id 		: data.id,
        		account_id 			: 0,
        		name 				: "",
        		rate 				: "",
        		is_system 			: "",
        		account 			: [{name: ""}]
        	});
        	var data = this.itemDS.data();
			var obj = data[data.length-1];
			this.set("item", obj);
			this.openWindowItem();
        },
      	saveItem 				: function(){
        	var self = this;
        	this.itemDS.sync();
        	this.itemDS.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			self.set("windowItemVisible", false);
        		}
        	});
        },
        editItem 				: function(e){
      		var data = e.data;      		
      		this.set("item", data);

      		this.set("windowItemVisible", true);
      	}, 
      	deleteItem 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.itemDS.remove(data);
		        this.itemDS.sync();
	    	}	    	
	    }
    });
	banhji.segment =  kendo.observable({
		lang 				: langVM,
        dataSource 			: dataStore(apiUrl + "segments"),
        itemDS 	 			: dataStore(apiUrl + "segments/item"),
        statusList 			: banhji.source.statusList,
		obj 				: null,
		item 				: null,
		objName 			: "",
		windowVisible 		: false,
		windowItemVisible 	: false,
		pageLoad 			: function() {
        },        
        addObj 				: function(){		    
        	this.dataSource.add({
        		code_length			: "",
        		name 				: "",
        		status 				: 1
        	});
        	var data = this.dataSource.data();
			var obj = data[data.length-1];
			this.set("obj", obj);	            	
        },
        openWindow			: function(){
      		this.addObj();

         	this.set("windowVisible", true);
      	},
      	closeWindow 		: function(){
      		this.dataSource.cancelChanges();

      		this.set("windowVisible", false);
      	},
        save 				: function(){
        	var self = this;
        	this.dataSource.sync();
        	this.dataSource.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			this.set("windowVisible", false);
        		}
        	});
        },
        edit 				: function(e){
      		var data = e.data;
      		this.set("obj", data);

      		this.set("windowVisible", true);
      	},      	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();		        
	    	}	    	
	    },
	    view 				: function(e){
	    	var data = e.data;
	    	this.set("objName", data.name);
	    	this.itemDS.filter({ field: "segment_id", value: data.id});
	    },
	    openWindowItem		: function(){
         	this.set("windowItemVisible", true);
      	},
      	closeWindowItem 	: function(){
      		this.itemDS.cancelChanges();

      		this.set("windowItemVisible", false);
      	},
      	loadItem 			: function(e){
	        var d = e.data;

	        this.set("selectedType", true);
	        this.set("tax_type_id", d.id);
	        this.set("selectedTypeName", d.name);
	        
	        this.itemDS.query({
	        	filter: { field:"segment_id", value: d.id },
	        	page: 1,
	        	pageSize: 100
	        });  	
        },
      	addItem				: function(e){
		    var data = e.data;

        	this.itemDS.add({
        		segment_id 		: data.id,
        		code 			: "",
        		status 			: 1,        		
        		segment 		: [{name: ""}]
        	});
        	var data = this.itemDS.data();
			var obj = data[data.length-1];
			this.set("item", obj);
			this.openWindowItem();	            	
        },
      	saveItem 				: function(){
        	var self = this;
        	this.itemDS.sync();
        	this.itemDS.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			this.set("windowItemVisible", false);
        		}
        	});
        },
        editItem 				: function(e){
      		var data = e.data;
      		this.set("item", data);

      		this.set("windowItemVisible", true);
      	}, 
      	deleteItem 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
		        var data = e.data;
		        this.itemDS.remove(data);
		        this.itemDS.sync();
	    	}
	    }
    });


	/*********************
	*   Employee Section   *
	**********************/
	banhji.employeeDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "contact_reports/customer_summary"),
		topCustomerDS 		: dataStore(apiUrl + "contact_reports/top_customer"),
		topARDS 			: dataStore(apiUrl + "contact_reports/top_ar"),
		topProductDS 		: dataStore(apiUrl + "contact_reports/top_product"),
		graphDS 			: dataStore(apiUrl + 'contact_reports/monthly_sale'),
		sale 				: 0,
		sale_customer 		: 0,
		sale_product 		: 0,
		sale_order 			: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,						
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			// this.summaryDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],								
			// 	page: 1,
			// 	pageSize: 5
			// }).then(function(){
			// 	var view = self.summaryDS.view();

			// 	self.set("sale", kendo.toString(view[0].sale, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));
			// 	self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
			// 	self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
			// 	self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

			// 	self.set("order", kendo.toString(view[0].order, "n0"));
			// 	self.set("order_avg", kendo.toString(view[0].order_avg, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));				
			// 	self.set("order_open", kendo.toString(view[0].order_open, "n0"));

			// 	self.set("ar", kendo.toString(view[0].ar, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));
			// 	self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
			// 	self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
			// 	self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));
			// });

			// this.topCustomerDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],								
			// 	page: 1,
			// 	pageSize: 5
			// });

			// this.topARDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],							
			// 	page: 1,
			// 	pageSize: 5
			// });

			// this.topProductDS.query({
			// 	filter: [
			// 		{ field:"issued_date >=", operator:"where_related", model:"transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
			// 		{ field:"issued_date <=", operator:"where_related", model:"transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
			// 	],							
			// 	page: 1,
			// 	pageSize: 5
			// });

			// this.loadGraph();								
		},
		loadGraph 			: function(){
			var self = this, 
			today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.graphDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],
				page: 1,
				pageSize: 100
			}).then(function(e) {
			    var view = self.graphDS.view();
			    
				$('#graph').kendoChart({
					dataSource: {data: view},												
					series: [
						{field: 'sale', categoryField:'month', type: 'line', axis: 'order'}
					],
					valueAxes: [
						{
		                    name: "order",
		                    color: "#007eff",
		                    min: 0,
		                    majorUnit: 500000,
		                    max: 1000000
		                }
	                ],
	                categoryAxis: {
	                    //categories: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],		                    
	                    axisCrossingValues: [0, 13],
	                    justified: true
	                },
	                tooltip: {
	                    visible: true,
	                    format: "{0}",
	                    template: "#= series.field #: #= value #"
	                }
				});
			});		
		}		
	});
	banhji.employeeCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		contactDS 			: dataStore(apiUrl + 'contacts'),
		contactTypeDS		: banhji.source.supplierTypeDS,
		noteDS 				: dataStore(apiUrl + 'notes'),		
		currencyDS 			: banhji.source.currencyDS,		
		summaryDS 			: dataStore(apiUrl + "transactions"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",				
		obj 				: null,
		note 				: "",		
		searchText 			: "",		
		contact_type_id 	: 0,
		currency_id 		: 0,
		user_id 			: banhji.source.user_id,
		balance 			: 0,
		po 					: 0,
		openInvoice 		: 0,
		overInvoice 		: 0,		
		pageLoad 			: function(){		
												
		},				
		loadSummary 		: function(id){
			var self = this, obj = this.get("obj");

			this.summaryDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Cash_Purchase","Credit_Purchase", "Purchase_Order"] },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view(),
				balance = 0, open = 0, over = 0, po = 0, today = new Date();

				$.each(view, function(index, value){
					if(value.type=="Purchase_Order"){
						po++;
					}else{
						balance += kendo.parseFloat(value.amount);
						open++;

						if(new Date(value.due_date)<today){						
							over++;
						}
					}									
				});
				
				self.set("balance", kendo.toString(balance, "c", obj.locale));
				self.set("po", kendo.toString(po, "n0"));
				self.set("openInvoice", kendo.toString(open, "n0"));
				self.set("overInvoice", kendo.toString(over, "n0"));
			});
		},
		loadTransaction 	: function(id){
			this.transactionDS.query({
			  	filter: { field:"contact_id", value: id },
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadBalance 		: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value:["Purchase","Expense"] },			  		
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadPO 				: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"PO" },			  		
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadOverInvoice 	: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Purchase","Expense"] },
			  		{ field:"due_date <", value: new Date() },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},		
		loadNote 			: function(id){
			this.noteDS.query({
				filter: { field:"contact_id", value: id },
				sort: { field:"noted_date", dir:"desc" },
				page: 1,
				pageSize: 100
			});
		},			
		selectedRow			: function(e){
			var id = e.data.id,
			data = e.data;			
			
			this.set("obj", data);			
			this.loadSummary(id);
			this.loadTransaction(id);			
			this.loadNote(id);
		},
		sorterChanges 		: function(){
			var value = this.get("sorter");

			switch(value){
			case "today":
				var today = new Date();
				
				this.set("sdate", today);
				this.set("edate", today);
			  					
			  	break;
			case "week":
			  	var thisWeek = new Date;
				var first = thisWeek.getDate() - thisWeek.getDay(); 
				var last = first + 6;

				var firstDayOfWeek = new Date(thisWeek.setDate(first));
				var lastDayOfWeek = new Date(thisWeek.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":
				var thisMonth = new Date;				  	
				var firstDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth(), 1);
				var lastDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":
				var thisYear = new Date();
			  	var firstDayOfYear = new Date(thisYear.getFullYear(), 0, 1);
				var lastDayOfYear = new Date(thisYear.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
	  		txtSearch = this.get("searchText"),       		
	  		contact_type_id = this.get("contact_type_id"),
	  		currency_id = this.get("currency_id");      		
	  		
	  		if(txtSearch){
	  			para.push(      				
	  				{ field: "number", operator: "like", value: txtSearch },
	  				{ field: "surname", operator: "or_like", value: txtSearch },
					{ field: "name", operator: "or_like", value: txtSearch },
					{ field: "company", operator: "or_like", value: txtSearch }
	  			);
	  		}      		

	  		if(contact_type_id){
	  			para.push({ field: "contact_type_id", value: contact_type_id });
	  		}else{
	  			para.push({ field: "parent_id", model:"contact_type", operator:"where_related", value: 2 });
	  		}

	  		if(currency_id){
	  			para.push({ field: "currency_id", value: currency_id });
	  		}      		

	  		this.contactDS.filter(para);
	  		var loaded = false;
	  		this.contactDS.bind("requestEnd", function(){
	  			if(loaded==false){
	  				loaded = true;

	  				//Clear search filters
		      		self.set("searchText", "");		      		
		      		self.set("contact_type_id", 0);
		      		self.set("currency_id", 0);
	  			}
	  		});      			
		},
		searchTransaction	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
	    		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

	    	//Dates
	    	if(start && end){
	        	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
	        	para.push({ field:"issued_date <=", value: kendo.toString(end, "yyyy-MM-dd") });            	            	
	        }else if(start){
	        	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
	        }else if(end){
	        	para.push({ field:"issued_date <=", value: kendo.toString(end, "yyyy-MM-dd") });
	        }else{
	        	
	        }

	        para.push({ field:"contact_id", value: obj.id });            

	        this.transactionDS.query({
	        	filter: para,
	        	sort: { field: "issued_date", dir: "desc" },
	        	page: 1,
	        	pageSize: 100
	        });            
		},	
		goEditContact 		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/vendor/'+obj.id);
		},
		goCashadvance		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/cash_advance');
			banhji.cashAdvance.loadContact(obj.id);			
		},
		goExpense			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/expense');
			banhji.expense.loadContact(obj.id);
		},
		saveNote 			: function(){
			var self = this;

			if(this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: this.get("obj").id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});
				var saved = false;
				this.noteDS.sync();
				this.noteDS.bind("requestEnd", function(){
					if(saved==false){
						saved = true;

						self.set("note", "");
					}
				});
			}else{
				alert("memo is required");
			}
		}		
	});
	banhji.employee = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "contacts"),
		patternDS 				: dataStore(apiUrl + "contacts"),
		deleteDS 				: dataStore(apiUrl + "transactions"),		
		existingDS 				: dataStore(apiUrl + "contacts"),
		businessTypeDS			: dataStore(apiUrl + "businesstypes"),		
		contactTypeDS  			: banhji.source.employeeTypeDS,
		contactPersonDS			: dataStore(apiUrl + "contact_persons"),
		currencyDS 				: banhji.source.currencyDS,		
		adDS  					: banhji.source.ADAcountDS,
		saDS  					: banhji.source.SAAcountDS,						
		genders					: banhji.source.genderList,
		statusList 				: banhji.source.statusList,
	    obj 					: null,       
		originalNo				: null,		
		isDuplicateNumber 		: false,		
		isCompany 				: false,
		isEdit 					: false,
		pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
				this.loadContactPerson(id);				
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
										
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}else{
					var obj = this.get("obj");

					obj.set("is_pattern", false);	
				}								
			}			
		},
		setPattern 				: function(id){
			var obj = this.get("obj");

			obj.set("contact_type_id", id);
			obj.set("is_pattern", true);
		},
		loadPattern 			: function(id){
			var self = this;

			this.patternDS.query({
				filter: [
					{ field:"contact_type_id", value: id },
					{ field:"is_pattern", value: true }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view(),
				obj = self.get("obj");

				if(view.length>0){
					obj.set("account_id", view[0].account_id);
					obj.set("discount_account_id", view[0].discount_account_id);
					obj.set("deposit_account_id", view[0].deposit_account_id);
					obj.set("tax_item_id", view[0].tax_item_id);
					obj.set("currency_id", view[0].currency_id);
					obj.set("credit_limit", view[0].credit_limit);

					obj.set("payment_term_id", view[0].payment_term_id);
					obj.set("payment_method_id", view[0].payment_method_id);
					obj.set("business_type_id", view[0].business_type_id);
				}else{
					obj.set("account_id", 0);
					obj.set("discount_account_id", 0);
					obj.set("deposit_account_id", 0);
					obj.set("tax_item_id", 0);
					obj.set("currency_id", 0);
					obj.set("credit_limit", 0);

					obj.set("payment_term_id", 0);
					obj.set("payment_method_id", 0);
					obj.set("business_type_id", 0);
				}
			});
		},			
		loadObj 				: function(id){
			var self = this;

			this.dataSource.query({
				filter:{ "field":"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();

				if(view[0].contact_type_id=="6" || view[0].contact_type_id=="7" || view[0].contact_type_id=="8"){
					self.set("isCompany", true);
				}else{
					self.set("isCompany", false);
				}

				self.set("obj", view[0]);
				self.loadMap();
				self.set("originalNo", view[0].number);											
			});
		},
		loadPatternEdit			: function(id){
			var self = this;

			this.dataSource.query({
				filter:[
					{ "field":"id", value: id },
					{ "field":"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("obj", view[0]);														
			});
		},		
		loadContactPerson		: function(id){
			this.contactPersonDS.query({
				filter: { "field":"contact_id", value: id },
				page: 1,
				pageSize: 100
			});
		},		
		copyBillTo 				: function(){
			var obj = this.get("obj");

			obj.set("ship_to", obj.bill_to);
		},
		contactTypeChanges 		: function(){
			var obj = this.get("obj");

			if(obj.contact_type_id>0){
				this.loadPattern(obj.contact_type_id);
			}
		},      	
		checkExistingNumber 	: function(){
			var self = this;	
			
			var number = this.get("obj").number;
			var originalNo = this.get("originalNo");
			
			if(number.length>0 && number!==originalNo){
				this.existingDS.query({
					filter: { field:"number", value: number },
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("isDuplicateNumber", true);						
					}else{
						self.set("isDuplicateNumber", false);
					}
				});							
			}else{
				this.set("isDuplicateNumber", false);
			}			
		},		
		addEmptyContactPerson 	: function(){
			var contact_id = 0;
			if(this.get("isEdit")){
				contact_id = this.get("obj").id;
			}

			this.contactPersonDS.add({					 			
				contact_id 			: contact_id,
	  			prefix 				: "",      			
				name 				: "",
				department			: "",
				phone				: "",
				email				: ""
			});								
		},
		deleteContactPerson 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.contactPersonDS.getByUid(d.uid);

				this.contactPersonDS.remove(obj);
			}
		},
	  	addEmpty 				: function(){
	  		this.dataSource.data([]);
	  		this.set("obj", null);

			this.dataSource.add({
				"company_id" 			: 0,
				"ebranch_id" 			: 0,
				"elocation_id"			: 0,
				"wbranch_id" 			: 0,
				"wlocation_id" 			: 0,			
				"currency_id" 			: 0,
				"user_id" 				: 0,
				"contact_type_id" 		: 0,							
				"number"				: "",
				"enumber"				: "",
				"wnumber"				: "",
				"surname"				: "",
				"name"					: "",
				"gender"				: "M",
				"dob"					: "",
				"pob"					: "",
				"latitute" 				: "",
				"longtitute" 			: "",
				"credit_limit"			: 0,				
				"id_number"				: "",
				"phone" 				: "",
				"email" 				: "",
				"website" 				: "",			
				"job"					: "",				
				"vat_no"				: "",
				"family_member"			: "",
				"address" 				: "",
				"bill_to" 				: "",
				"ship_to" 				: "",
				"memo"					: "",				
				"image_url"				: "",
				"company"				: "",
				"company_en"			: "",		
				"bank_name"				: "",
				"bank_address"			: "",
				"bank_account_name"		: "",
				"bank_account_number"	: "",
				"name_on_cheque"		: "",				
				"business_type_id"		: 0,
				"payment_term_id"		: 0,
				"payment_method_id"		: 0,
				"deposit_account_id"	: 0,
				"discount_account_id"	: 0,				
				"account_id"			: 0,
				"salary_account_id"		: 0,
				"ra_id"					: 0,
				"tax_item_id"			: 0,				
				"phase_id"				: 0,
				"voltage_id"			: 0,
				"ampere_id"				: 0,
				"registered_date" 		: new Date(),			
				"use_electricity"		: 0,
				"use_water"				: 0,
				"is_local" 				: 0,
				"is_pattern" 			: 0,				
				"status"				: 1							
			});			

			var data = this.dataSource.data();			
			var obj = data[data.length - 1];			
			this.set("obj", obj);	
		},
		contactSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },			
		save 					: function(){			
			var self = this, saved = false;

			if(this.get("isEdit")){
				this.dataSource.sync();
				this.contactPersonDS.sync();
			}else{
				this.contactSync().then(function(data){
					self.saveContactPerson(data[0].id);

					if(data[0].is_pattern){
						self.savePattern(data[0].contact_type_id, data[0].id);
					}
				}).then(function(){					
					self.contactPersonDS.data([]);

					self.addEmpty();
				});
			}						
		},
		delete 					: function(){
			var self = this,
			obj = this.get("obj"),
			id = obj.id;

			if (confirm("Are you sure, you want to delete it?")) {				
				this.deleteDS.query({
				  	filter: { field: "contact_id", value: id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						var data = self.dataSource.get(id);
				        self.dataSource.remove(data);
				        self.save();

				        window.history.back();
					}
				});
	    	}
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.contactPersonDS.cancelChanges();

			window.history.back();
		},
		saveContactPerson 		: function(id){
			$.each(this.contactPersonDS.data(), function(index, value) {
				value.set("contact_id", id);
			});

			this.contactPersonDS.sync();
		},
		savePattern 			: function(contact_type_id, contact_id){
			var data = this.contactTypeDS.get(contact_type_id);
			data.set("contact_id", contact_id);
			this.contactTypeDS.sync();

			banhji.vendorSetting.contactTypeDS.fetch();
			window.history.back();
		}
	});
	banhji.cashAdvance =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),						
		lineDS  			: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),		
		contactDS 			: banhji.source.employeeDS,				
		currencyDS 			: banhji.source.currencyDS,
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		paymentMethodDS		: banhji.source.paymentMethodDS,
		accountDS  			: banhji.source.accountDS,
		cashAccountDS  		: banhji.source.cashAccountDS,
		advAccountDS  		: banhji.source.advAccountDS,
		segmentItemDS 		: banhji.source.segmentItemDS,					
		types 				: [
			{id: 'Deposit', name: 'Deposit'},
			{id: 'Witdraw', name: 'Witdraw'},
			{id: 'Transfer', name: 'Transfer'}
		],
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,		
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,		
		obj 				: null,		
		isEdit 				: false,			
		uer_id				: banhji.source.user_id,
		total				: 0,													
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},
		loadObj 			: function(id,is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.dataSource.view();

				if(view.length>0){	       
					self.set("obj", view[0]);					
		        }				

				self.lineDS.query({
					filter: { field: "transaction_id", value: id },
					page: 1,
					pageSize: 100
				});								
			});				
		},			
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", kendo.parseFloat(view[0].rate));
						value.set("locale", view[0].locale);												
					});					
				}else{
					obj.set("rate", 1);

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", 1);
						value.set("locale", banhji.institute.locale);												
					});
				}
			});				
		},															
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);

			this.set("obj", null);
			this.set("total", 0);								

			this.dataSource.add({
				recurring_id 		: "",
				account_id 			: "",				
				user_id 			: this.get("uer_id"), 	    			    		
			   	type				: "Cash_Advance", //required			   		   				   		   					   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.institute.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),			   	   	
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);
			
			this.addRow();
			this.setRate();				
		},
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,				
				account_id 			: "",								
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				amount 	 			: 0,							
				rate				: obj.rate,
				locale				: obj.locale
			});																	
		},		
		remove 				: function(e){						
			var d = e.data;
							
			this.lineDS.remove(d);
        	this.changes();	        	        
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){			
				var sum = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {
					sum += value.amount;
		        });		       	

		        this.set("total", kendo.toString(sum, "c0", obj.locale));		        
		        obj.set("amount", sum);		       								    	
	    	}else{
	    		this.set("total", 0);		        
		        obj.set("amount", 0);				
	    	}   	
		},		
		transactionSegmentChanges  	: function() {									
			dataArr = this.get("obj").segments,			
			lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		segmentChanges  	: function(e) {					
			var dataArr = e.data.segments;			
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},				  
		transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this; 			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();
	    		this.lineDS.sync();
	    	}else{
	    		//Add brand new transaction
				this.transactionSync()
				.then(function(data){				

					//Add Cash Account on Dr
					self.journalLineDS.add({					
						transaction_id 		: data[0].id,
						account_id 			: data[0].account_id,										
						description 		: "",
						reference_no 		: "",
						segments 	 		: data[0].segments,								
						dr 	 				: data[0].amount,
						cr 					: 0,				
						rate				: data[0].rate,
						locale				: data[0].locale
					});

					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);						

						//Add Cash Advance Account on Cr
						self.journalLineDS.add({					
							transaction_id 		: data[0].id,
							account_id 			: value.account_id,											
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							dr 	 				: 0,
							cr 					: value.amount,				
							rate				: value.rate,
							locale				: value.locale
						});						
					});

					self.lineDS.sync();
					self.journalLineDS.sync();			
				}).then(function(){					
					self.addEmpty();
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();			

			window.history.back();
		},		
		//Recurring		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var recur = this.recurringDS.get(obj.recurring_id);
				
				obj.set("account_id", recur.account_id);
				obj.set("segments", recur.segments);
				obj.set("amount", recur.amount);
				obj.set("rate", recur.rate);
				obj.set("locale", recur.locale);					
				obj.set("memo", recur.memo);
				obj.set("memo2", recur.memo2);

				var locale = recur.locale;
				this.set("total", kendo.toString(recur.amount, locale=="km-KH"?"c0":"c", locale));

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var line = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(line, function(index, value){
						self.lineDS.add({					
							transaction_id 		: 0,							
							account_id 			: value.account_id,									
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale
						});
					});
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				account_id 			: obj.account_id,
				user_id 			: obj.user_id, 	    			    		
			   	type				: obj.type,			   				   				   		   					   				   	
			   	amount				: obj.amount,
			   	rate				: obj.rate,			   	
			   	locale 				: obj.locale,					   		   	   	
			   	memo 				: obj.memo,
			   	memo2 				: obj.memo2,
			   	segments 			: obj.segments,
			   	recurring_name 		: obj.recurring_name,
			   	start_date 			: obj.start_date,
			   	frequency 			: obj.frequency,
			   	month_option 		: obj.month_option,
			   	interval 			: obj.interval,
			   	day 				: obj.day,
			   	week 				: obj.week,
			   	month 				: obj.month,
			   	is_recurring 		: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,					
					account_id 			: value.account_id,								
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segmets,								
					amount 	 			: value.amount,						
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		saveRecurring 		: function(){
	    	var self = this, obj = this.get("obj");

	    	if(this.get("isEdit")){
	    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
	    			this.addNewRecurring();

	    			this.recurringSync()
					.then(function(data){
						$.each(self.recurringLineDS.data(), function(index, value){										
							value.set("transaction_id", data[0].id);						
						});

						self.recurringLineDS.sync();			
					}).then(function(){					
						self.addEmpty();
					});
	    		}else{
	    			this.save();
	    		}
	    	}else{ //Add brand new recurring
	    		obj.set("is_recurring", 1);
	    		
	    		this.transactionSync()
				.then(function(data){
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);								
					});

					self.lineDS.sync();							
				}).then(function(){					
					self.addEmpty();
				});
	    	}	    	
	    }	    	   
	});
	banhji.expense =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),						
		lineDS  			: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		referenceDS 		: dataStore(apiUrl + "transactions"),
		referenceLineDS 	: dataStore(apiUrl + "account_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),		
		contactDS  			: banhji.source.employeeDS,
		supplierDS  		: banhji.source.supplierDS,
		currencyDS  		: banhji.source.currencyDS,
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),		
		accountDS  			: banhji.source.accountDS,
		cashAccountDS  		: banhji.source.cashAccountDS,
		expenseAccountDS    : banhji.source.expenseAccountDS,
		taxItemDS  			: dataStore(apiUrl + "tax_items"),
		segmentItemDS 		: banhji.source.segmentItemDS,		
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,		
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		showCashAdvance 	: false,
		bgColor 			: "#D5DBDB",		
		obj 				: null,		
		isEdit 				: false,
		sub_total 			: 0,
		tax 				: 0,
		total				: 0,
		credit 		 		: 0,
		remain 				: 0,			
		uer_id				: banhji.source.user_id,																	
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},
		loadObj 			: function(id,is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.dataSource.view();

				if(view.length>0){	       
					self.set("obj", view[0]);					
		        }				

				self.lineDS.filter({ field: "transaction_id", value: id });								
			});				
		},			
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", kendo.parseFloat(view[0].rate));
						value.set("locale", view[0].locale);												
					});					
				}else{
					obj.set("rate", 1);

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", 1);
						value.set("locale", banhji.institute.locale);												
					});
				}
			});				
		},
		//Contact
		loadContact 		: function(id){
			var self = this;			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);		    			    	
		    	obj.set("locale", view[0].locale);				
				
				self.setRate();											
			});
		},		
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);
		    			    	
		    	obj.set("locale", contact.locale);

		    	this.referenceDS.filter([
		    		{ field:"contact_id", value: obj.contact_id },
		    		{ field:"type", value: "Cash_Advance" },
		    		{ field:"status", value: 0 }
		    	]);
		    	
		    	this.setRate();		    			    			    	
	    	}
	    },
	    referenceChanges 	: function(){
	    	var obj = this.get("obj");
	    	if(obj.reference_id>0){
	    		var reference = this.referenceDS.get(obj.reference_id);
	    		obj.set("credit", reference.amount);

	    		this.referenceLineDS.filter({ field:"transaction_id", value:obj.reference_id });
	    	}else{
	    		obj.set("credit", 0);
	    	}

	    	this.changes();
	    },
	    typeChanges 		: function(){
	    	var obj = this.get("obj");

	    	switch(obj.type) {
			    case "Reimbursement":
			        this.set("showCashAdvance", false);
			        break;
			    case "Advance_Settlement":
			        this.set("showCashAdvance", true);
			        break;
			    default:			         
			        this.set("showCashAdvance", false);
			}
	    },															
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);

			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("tax", 0);
			this.set("total", 0);								

			this.dataSource.add({
				recurring_id 		: "",
				reference_id 		: "",
				account_id 			: "",				
				user_id 			: this.get("uer_id"), 	    			    		
			   	type				: "Direct_Expense", //required
			   	sub_total 			: 0,
			   	tax 				: 0,			   		   				   		   					   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.institute.locale,			   	
			   	issued_date 		: new Date(),			   			   	   	
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);
			
			this.addRow();
			this.setRate();				
		},
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,
				tax_item_id 		: "",
				contact_id 			: "",				
				account_id 			: "",								
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				amount 	 			: 0,							
				rate				: obj.rate,
				locale				: obj.locale,
				reference_date 		: new Date()
			});																	
		},		
		remove 				: function(e){						
			var d = e.data;			
						
			this.lineDS.remove(d);
        	this.changes();        	        	        
		},
		changes				: function(){
			var self = this, obj = this.get("obj");
			
			//if(this.lineDS.total()>0){			
				var subTotal = 0, total = 0, tax = 0, remain = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {					
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);
						tax += value.amount * taxItem.rate;
					}

					subTotal += value.amount;
		        });

		        total = subTotal + tax;

		        if(obj.credit>0){
		        	remain = obj.credit - total;
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c0", obj.locale));
		        this.set("tax", kendo.toString(tax, "c0", obj.locale));
		        this.set("total", kendo.toString(total, "c0", obj.locale));
		        this.set("credit", kendo.toString(obj.credit, "c0", obj.locale));
		        this.set("remain", kendo.toString(remain, "c0", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("tax", tax);
		        obj.set("amount", total);		       								    	
	    	//}	
		},		
		transactionSegmentChanges  	: function() {									
			dataArr = this.get("obj").segments,			
			lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		segmentChanges  	: function(e) {					
			var dataArr = e.data.segments;			
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},				  
		transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Update references
			// if(obj.reference_id>0){
			// 	var ref = this.referenceDS.get(obj.reference_id);
			// 	ref.set("status", 1);
			// 	this.referenceDS.sync();
			// } 			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();
	    		this.lineDS.sync();
	    	}else{
	    		//Add brand new transaction
				this.transactionSync()
				.then(function(data){					
					self.addJournal(data[0].id);

					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);									
					});

					self.lineDS.sync();							
				}).then(function(){					
					self.addEmpty();
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();			

			window.history.back();
		},
		//Journal
		addJournal 			: function(transaction_id){
			var self = this, obj = this.get("obj"),
			taxList = {};

			//Tax accounts
			if(obj.tax>0){				
				$.each(this.lineDS.data(), function(index, value){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxAmount = value.amount * taxItem.rate;

					if(taxItem.account_id>0){
						if(taxList[taxItem.account_id]===undefined){
							taxList[taxItem.account_id]={"id": taxItem.account_id, "amount":taxAmount};						
						}else{											
							if(taxList[taxItem.account_id].id===taxItem.account_id){
								taxList[taxItem.account_id].amount += taxAmount;
							}else{
								taxList[taxItem.account_id]={"id": taxItem.account_id, "amount": taxAmount};
							}
						}
					}
				});

				//Tax account on Dr
				if(!jQuery.isEmptyObject(taxList)){				
					$.each(taxList, function(index, value){
						self.journalLineDS.add({					
							transaction_id 		: transaction_id,
							account_id 			: value.id,				
							contact_id 			: value.contact_id,				
							description 		: "",
							reference_no 		: "",
							segments 	 		: [],								
							dr 	 				: value.amount,
							cr 					: 0,				
							rate				: obj.rate,
							locale				: obj.locale
						});										
					});
				}
			}

			switch(obj.type) {
			    case "Advance_Settlement":
			    	//Zero Expense
			    	if(obj.amount==0 && obj.credit>0){			    		
			    		//Cash on Dr
			    		this.journalLineDS.add({					
							transaction_id 		: transaction_id,
							contact_id 			: obj.contact_id,
							account_id 			: obj.account_id,										
							description 		: "",
							reference_no 		: "",
							segments 	 		: obj.segments,								
							dr 	 				: obj.credit,
							cr 					: 0,				
							rate				: obj.rate,
							locale				: obj.locale
						});

			    		//Cash Advance on Cr
			    		$.each(this.referenceLineDS.data(), function(index, value){			    			
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: 0,
								cr 					: value.amount,				
								rate				: value.rate,
								locale				: value.locale
							});													
						});
			    	}

			    	//Full Expense
			    	if(obj.amount==obj.credit){			    		
			    		//Expense on Dr
			    		$.each(this.lineDS.data(), function(index, value){				
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: value.amount,
								cr 					: 0,				
								rate				: value.rate,
								locale				: value.locale
							});						
						});

			    		//Cash Advance on Cr
			    		$.each(this.referenceLineDS.data(), function(index, value){							
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: 0,
								cr 					: value.amount,				
								rate				: value.rate,
								locale				: value.locale
							});						
						});
			    	}

			   		//Over Expense
			    	if(obj.amount>obj.credit){			    		
			    		//Expense on Dr
			    		$.each(this.lineDS.data(), function(index, value){				
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: value.amount,
								cr 					: 0,				
								rate				: value.rate,
								locale				: value.locale
							});						
						});

						//Cash Advance on Cr
			    		$.each(this.referenceLineDS.data(), function(index, value){							
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: 0,
								cr 					: value.amount,				
								rate				: value.rate,
								locale				: value.locale
							});						
						});

						//Cash on Cr
						this.journalLineDS.add({					
							transaction_id 		: transaction_id,
							contact_id 			: obj.contact_id,
							account_id 			: obj.account_id,										
							description 		: "",
							reference_no 		: "",
							segments 	 		: obj.segments,								
							dr 	 				: 0,
							cr 					: obj.amount - obj.credit,				
							rate				: obj.rate,
							locale				: obj.locale
						});
			    	}

			    	//Less Expense
			    	if(obj.amount>0 && obj.amount<obj.credit){
			    		//Cash on Dr			    		
						this.journalLineDS.add({					
							transaction_id 		: transaction_id,
							contact_id 			: obj.contact_id,
							account_id 			: obj.account_id,										
							description 		: "",
							reference_no 		: "",
							segments 	 		: obj.segments,								
							dr 	 				: obj.credit - obj.amount,
							cr 					: 0,				
							rate				: obj.rate,
							locale				: obj.locale
						});

			    		//Expense on Dr
			    		$.each(this.lineDS.data(), function(index, value){				
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: value.amount,
								cr 					: 0,				
								rate				: value.rate,
								locale				: value.locale
							});						
						});

						//Advance account on Cr
			    		$.each(this.referenceLineDS.data(), function(index, value){							
							self.journalLineDS.add({					
								transaction_id 		: transaction_id,
								contact_id 			: value.contact_id,
								account_id 			: value.account_id,											
								description 		: value.description,
								reference_no 		: value.reference_no,
								segments 	 		: value.segments,								
								dr 	 				: 0,
								cr 					: value.amount,				
								rate				: value.rate,
								locale				: value.locale
							});						
						});						
			    	}
			        
			        break;			    
			    default:
			    //Direct Expense & Reimbursement
			    //Expense on Dr
			    console.log("Derect Expense & Reimbursement");
			    $.each(this.lineDS.data(), function(index, value){				
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						contact_id 			: value.contact_id,
						account_id 			: value.account_id,											
						description 		: value.description,
						reference_no 		: value.reference_no,
						segments 	 		: value.segments,								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: value.rate,
						locale				: value.locale
					});						
				});

			    //Cash on Cr
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					contact_id 			: obj.contact_id,
					account_id 			: obj.account_id,										
					description 		: "",
					reference_no 		: "",
					segments 	 		: obj.segments,								
					dr 	 				: 0,
					cr 					: obj.amount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}
			
			this.journalLineDS.sync();
		},		
		//Recurring		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var recur = this.recurringDS.get(obj.recurring_id);
				
				obj.set("account_id", recur.account_id);
				obj.set("segments", recur.segments);
				obj.set("amount", recur.amount);
				obj.set("rate", recur.rate);
				obj.set("locale", recur.locale);					
				obj.set("memo", recur.memo);
				obj.set("memo2", recur.memo2);

				var locale = recur.locale;
				this.set("total", kendo.toString(recur.amount, locale=="km-KH"?"c0":"c", locale));

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var line = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(line, function(index, value){
						self.lineDS.add({					
							transaction_id 		: 0,							
							account_id 			: value.account_id,									
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale
						});
					});
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				account_id 			: obj.account_id,
				user_id 			: obj.user_id, 	    			    		
			   	type				: obj.type,			   				   				   		   					   				   	
			   	amount				: obj.amount,
			   	rate				: obj.rate,			   	
			   	locale 				: obj.locale,					   		   	   	
			   	memo 				: obj.memo,
			   	memo2 				: obj.memo2,
			   	segments 			: obj.segments,
			   	recurring_name 		: obj.recurring_name,
			   	start_date 			: obj.start_date,
			   	frequency 			: obj.frequency,
			   	month_option 		: obj.month_option,
			   	interval 			: obj.interval,
			   	day 				: obj.day,
			   	week 				: obj.week,
			   	month 				: obj.month,
			   	is_recurring 		: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,					
					account_id 			: value.account_id,								
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segmets,								
					amount 	 			: value.amount,						
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		saveRecurring 		: function(){
	    	var self = this, obj = this.get("obj");

	    	if(this.get("isEdit")){
	    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
	    			this.addNewRecurring();

	    			this.recurringSync()
					.then(function(data){
						$.each(self.recurringLineDS.data(), function(index, value){										
							value.set("transaction_id", data[0].id);						
						});

						self.recurringLineDS.sync();			
					}).then(function(){					
						self.addEmpty();
					});
	    		}else{
	    			this.save();
	    		}
	    	}else{ //Add brand new recurring
	    		obj.set("is_recurring", 1);
	    		
	    		this.transactionSync()
				.then(function(data){
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);								
					});

					self.lineDS.sync();							
				}).then(function(){					
					self.addEmpty();
				});
	    	}	    	
	    }	    	   
	});

	/*********************
	*   Vendor Section   *
	**********************/
	banhji.vendorDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "contact_reports/supplier_summary"),
		topContactDS 		: dataStore(apiUrl + "contact_reports/top_supplier"),
		topAPDS 			: dataStore(apiUrl + "contact_reports/top_ap"),
		topProductDS 		: dataStore(apiUrl + "contact_reports/top_sproduct"),		
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contact_reports/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		purchase 			: 0,
		purchase_supplier 	: 0,
		purchase_product 	: 0,
		purchase_order 		: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ap 					: 0,
		ap_open 			: 0,
		ap_customer 		: 0,
		ap_overdue 			: 0,						
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("purchase", kendo.toString(view[0].purchase, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("purchase_supplier", kendo.toString(view[0].purchase_supplier, "n0"));
				self.set("purchase_product", kendo.toString(view[0].purchase_product, "n0"));
				self.set("purchase_order", kendo.toString(view[0].purchase_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ap", kendo.toString(view[0].ap, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ap_open", kendo.toString(view[0].ap_open, "n0"));
				self.set("ap_customer", kendo.toString(view[0].ap_customer, "n0"));
				self.set("ap_overdue", kendo.toString(view[0].ap_overdue, "n0"));
			});

			this.topContactDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			});

			this.topAPDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});

			this.topProductDS.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related", model:"transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related", model:"transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});										
		}		
	});
	banhji.vendorCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		contactDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field:"parent_id", operator:"where_related", model:"contact_type", value:2 },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		contactTypeDS		: banhji.source.supplierTypeDS,
		noteDS 				: dataStore(apiUrl + 'notes'),		
		summaryDS 			: dataStore(apiUrl + "transactions"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",				
		obj 				: null,
		note 				: "",		
		searchText 			: "",		
		contact_type_id 	: null,		
		user_id 			: banhji.source.user_id,
		balance 			: 0,
		po 					: 0,
		openInvoice 		: 0,
		overInvoice 		: 0,		
		pageLoad 			: function(id){
			if(id){
				this.loadObj(id);
			}

			//Refresh
			if(this.contactDS.total()>0){
				this.contactDS.fetch();
			}
			if(this.transactionDS.total()>0){
				this.transactionDS.fetch();
			}
			if(this.summaryDS.total()>0){
				this.summaryDS.fetch();
			}								
		},
		loadObj 			: function(id){
			var self = this;

			this.dataSource.bind("requestEnd", function(e){
				if(e.type=="read"){
					var data = e.response.results;
					
								
				}
			});
		},
		loadContact 		: function(id){
			var self = this;			
			
			this.contactDS.query({
			  	filter:[
			  		{ field:"id", value:id }
			  	],
			  	page: 1,
			  	pageSize: 50
			}).then(function(e) {
			    var view = self.contactDS.data();
			    
			    if(view.length>0){
			    	self.set("obj", view[0]);				    	
			    	self.loadSummary(view[0].id);
			    	self.loadTransaction(view[0].id);				    	
			    	self.loadNote(view[0].id);			    	
			    }
			});			
		},				
		loadSummary 		: function(id){
			var self = this, obj = this.get("obj");

			this.summaryDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Cash_Purchase","Credit_Purchase", "Purchase_Order"] },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view(),
				balance = 0, open = 0, over = 0, po = 0, today = new Date();

				$.each(view, function(index, value){
					if(value.type=="Purchase_Order"){
						po++;
					}else{
						balance += kendo.parseFloat(value.amount);
						open++;

						if(new Date(value.due_date)<today){						
							over++;
						}
					}									
				});
				
				self.set("balance", kendo.toString(balance, "c", obj.locale));
				self.set("po", kendo.toString(po, "n0"));
				self.set("openInvoice", kendo.toString(open, "n0"));
				self.set("overInvoice", kendo.toString(over, "n0"));
			});
		},
		loadTransaction 	: function(id){
			this.transactionDS.query({
			  	filter: { field:"contact_id", value: id },
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadBalance 		: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value:["Purchase","Expense"] },			  		
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadPO 				: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"Purchase_Order" },			  		
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadOverInvoice 	: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", operator:"where_in", value: ["Purchase","Expense"] },
			  		{ field:"due_date <", value: new Date() },
			  		{ field:"status", value: 0 }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},		
		loadNote 			: function(id){
			this.noteDS.query({
				filter: { field:"contact_id", value: id },
				sort: { field:"noted_date", dir:"desc" },
				page: 1,
				pageSize: 100
			});
		},			
		selectedRow			: function(e){
			var id = e.data.id,
			data = e.data;			
			
			this.set("obj", data);			
			this.loadSummary(id);
			this.loadTransaction(id);			
			this.loadNote(id);
		},		
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
      		txtSearch = this.get("searchText"),       		
      		contact_type_id = this.get("contact_type_id");      		
      		
      		if(txtSearch){
      			para.push(      				
      				{ field: "number", operator: "like", value: txtSearch },
      				{ field: "surname", operator: "or_like", value: txtSearch },
					{ field: "name", operator: "or_like", value: txtSearch },
					{ field: "company", operator: "or_like", value: txtSearch }
      			);
      		}      		

      		if(contact_type_id){
      			para.push({ field: "contact_type_id", value: contact_type_id });
      		}      		     		
      		
      		this.contactDS.filter(para);
      		
			//Clear search filters
      		this.set("searchText", "");		      		
      		this.set("contact_type_id", null);		       			
		},
		searchTransaction	: function(){
			var self = this,
				para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", value: kendo.toString(start, "yyyy-MM-dd") });
            	para.push({ field:"issued_date <=", value: kendo.toString(end, "yyyy-MM-dd") });            	            	
            }else if(start){
            	para.push({ field:"issued_date", value: kendo.toString(start, "yyyy-MM-dd") });
            }else if(end){
            	para.push({ field:"issued_date <=", value: kendo.toString(end, "yyyy-MM-dd") });
            }else{
            	
            }

            para.push({ field:"contact_id", value: obj.id });            

            this.transactionDS.query({
            	filter: para,
            	sort: { field: "issued_date", dir: "desc" },
            	page: 1,
            	pageSize: 100
            });            
		},	
		goEditContact 		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/vendor/'+obj.id);
		},
		goPO				: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/purchase_order');
			banhji.po.loadContact(obj.id);			
		},
		goDeposit			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/vendor_deposit');
			banhji.vendorDeposit.loadContact(obj.id);			
		},
		goPurchase			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/purchase');
			banhji.purchase.loadContact(obj.id);
		},
		goPurchaseReturn			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/purchase_return');
			banhji.purchaseReturn.loadContact(obj.id);
		},
		goGRN				: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/grn');
			banhji.grn.loadContact(obj.id);
		},		
		goPayBill			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/cashier');
			banhji.cashier.loadContact(obj.id);
		},		
		saveNote 			: function(){
			var self = this;

			if(this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: this.get("obj").id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});
				var saved = false;
				this.noteDS.sync();
				this.noteDS.bind("requestEnd", function(){
					if(saved==false){
						saved = true;

						self.set("note", "");
					}
				});
			}else{
				alert("memo is required");
			}
		}		
	});
	banhji.vendor = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "contacts"),
		patternDS 				: dataStore(apiUrl + "contacts"),
		numberDS 				: dataStore(apiUrl + "contacts"),
		deleteDS 				: dataStore(apiUrl + "transactions"),		
		existingDS 				: dataStore(apiUrl + "contacts"),		
		contactPersonDS			: dataStore(apiUrl + "contact_persons"),		
		paymentTermDS			: dataStore(apiUrl + "payment_terms"),
		paymentMethodDS			: dataStore(apiUrl + "payment_methods"),
		taxItemDS				: dataStore(apiUrl + "tax_items"),
		countryDS 				: banhji.source.countryDS,
		contactTypeDS  			: banhji.source.supplierTypeDS,
		currencyDS 		  		: banhji.source.currencyDS,
		apDS 		  			: banhji.source.APAccountDS,		
		prepaidAccountDS 		: banhji.source.prepaidAccountDS,
		tradeDiscountDS 		: banhji.source.supplierTradeDiscountDS,
		settlementDiscountDS 	: banhji.source.supplierSettlementDiscountDS,
		genders					: banhji.source.genderList,
		statusList 				: banhji.source.statusList,
        obj 					: null,       
		originalNo				: null,	
		isDuplicateNumber 		: false,
		isCompany 				: false,
		isEdit 					: false,
		contact_type_id 		: 0,						
		pageLoad 				: function(id, is_pattern){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_pattern);
				this.loadContactPerson(id);				
			}else{
				if(this.get("isEdit")){
					this.set("isEdit", false);
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();
				}															
			}			
		},
		loadObj 				: function(id, is_pattern){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_pattern){
				para.push({ field:"is_pattern", value: 1 });
			}

			this.dataSource.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();

				if(view[0].company){
					self.set("isCompany", true);
				}else{
					self.set("isCompany", false);
				}

				self.set("obj", view[0]);
				self.loadMap();
				self.set("originalNo", view[0].number);								
			});
		},				
		//Pattern		
		applyPattern 			: function(contact_id){
			var self = this, obj = self.get("obj");
			
			this.patternDS.query({
				filter: [
					{ field:"id", value: contact_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();				

				if(view.length>0){
					obj.set("country_id", view[0].country_id);					
					obj.set("gender", view[0].gender);
					obj.set("company", view[0].company);
					obj.set("vat_no", view[0].vat_no);
					obj.set("memo", view[0].memo);
					obj.set("city", view[0].city);
					obj.set("post_code", view[0].post_code);
					obj.set("address", view[0].address);
					obj.set("bill_to", view[0].bill_to);
					obj.set("ship_to", view[0].ship_to);									
					obj.set("payment_term_id", view[0].payment_term_id);
					obj.set("payment_method_id", view[0].payment_method_id);
					obj.set("credit_limit", view[0].credit_limit);
					obj.set("locale", view[0].locale);					
					obj.set("account_id", view[0].account_id);
					obj.set("ra_id", view[0].ra_id);
					obj.set("tax_item_id", view[0].tax_item_id);
					obj.set("deposit_account_id", view[0].deposit_account_id);
					obj.set("trade_discount_id", view[0].trade_discount_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);					
				}else{
					obj.set("country_id", 0);					
					obj.set("gender", "M");
					obj.set("company", "");
					obj.set("vat_no", "");
					obj.set("memo", "");
					obj.set("city", "");
					obj.set("post_code", "");
					obj.set("address", "");
					obj.set("bill_to", "");
					obj.set("ship_to", "");									
					obj.set("payment_term_id", 0);
					obj.set("payment_method_id", 0);
					obj.set("credit_limit", 0);
					obj.set("locale", "");					
					obj.set("account_id", 0);
					obj.set("ra_id", 0);
					obj.set("tax_item_id", 0);
					obj.set("deposit_account_id", 0);
					obj.set("trade_discount_id", 0);
					obj.set("settlement_discount_id", 0);
				}
			});
		},		
		savePattern 			: function(contact_type_id, contact_id){
			var data = banhji.customerSetting.contactTypeDS.get(contact_type_id);
			data.set("contact_id", contact_id);
			banhji.customerSetting.contactTypeDS.sync();			
			window.history.back();
		},
		contactTypeChanges 		: function(){
			var obj = this.get("obj");

			if(obj.contact_type_id){
				var type = this.contactTypeDS.get(obj.contact_type_id);
				this.applyPattern(type.contact_id);
				obj.set("abbr", type.abbr);

				if(type.is_company=="1"){
					this.set("isCompany", true);
				}else{
					this.set("isCompany", false);
					obj.set("company", "");
					obj.set("vat_no", "");
				}
			}else{
				this.set("isCompany", false);
				obj.set("company", "");
				obj.set("vat_no", "");

				obj.set("country_id", 0);					
				obj.set("gender", "M");
				obj.set("company", "");
				obj.set("vat_no", "");
				obj.set("memo", "");
				obj.set("city", "");
				obj.set("post_code", "");
				obj.set("address", "");
				obj.set("bill_to", "");
				obj.set("ship_to", "");									
				obj.set("payment_term_id", 0);
				obj.set("payment_method_id", 0);
				obj.set("credit_limit", 0);
				obj.set("locale", "");					
				obj.set("account_id", 0);
				obj.set("ra_id", 0);
				obj.set("tax_item_id", 0);
				obj.set("deposit_account_id", 0);
				obj.set("trade_discount_id", 0);
				obj.set("settlement_discount_id", 0);
			}
		},				
		//Contact Person
		loadContactPerson		: function(id){
			this.contactPersonDS.query({
				filter: { "field":"contact_id", value: id },
				page: 1,
				pageSize: 100
			});
		},
		addEmptyContactPerson 	: function(){
			var contact_id = 0;
			if(this.get("isEdit")){
				contact_id = this.get("obj").id;
			}

			this.contactPersonDS.add({					 			
				contact_id 			: contact_id,
      			prefix 				: "",      			
				name 				: "",
				department			: "",
				phone				: "",
				email				: ""
			});								
		},
		deleteContactPerson 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.contactPersonDS.getByUid(d.uid);

				this.contactPersonDS.remove(obj);
			}
		},
		saveContactPerson 		: function(id){
			$.each(this.contactPersonDS.data(), function(index, value) {
				value.set("contact_id", id);
			});

			this.contactPersonDS.sync();
		},
		loadMap 				: function(){
			var obj = this.get("obj"), lat = kendo.parseFloat(obj.latitute),
			lng = kendo.parseFloat(obj.longtitute);
			
			if(lat && lng){
				var myLatLng = {lat:lat, lng:lng};
				var mapOptions = {
					zoom: 17,					
					center: myLatLng,
					mapTypeControl: false,
					zoomControl: false,
					scaleControl: false,
					streetViewControl: false
				};
				var map = new google.maps.Map(document.getElementById('map'),mapOptions);
				var marker = new google.maps.Marker({
					position: myLatLng,
					map: map,
					title: obj.number
				});
			} 
		},
		copyBillTo 				: function(){
			var obj = this.get("obj");

			obj.set("ship_to", obj.bill_to);
		},      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj"),
			originalNo = this.get("originalNo");			
			
			if(obj.number!=="" && obj.number!==originalNo){
				this.existingDS.query({
					filter: [
						{ field:"number", value: obj.number },
						{ field:"contact_type_id", value: obj.contact_type_id }
					],
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("isDuplicateNumber", true);						
					}else{
						self.set("isDuplicateNumber", false);
					}
				});							
			}else{
				this.set("isDuplicateNumber", false);
			}			
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"parent_id", operator:"where_related", model:"contact_type", value:2 },
					{ field:"contact_type_id", value:obj.contact_type_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				if(view.length>0){
					var lastNo = kendo.parseInt(view[0].number);
					if(lastNo){
						lastNo++;
						obj.set("number",kendo.toString(lastNo, "00000"));
					}
				}
			});
		},		
      	addEmpty 				: function(){
      		var self = this;
      		this.dataSource.data([]);
      		this.contactPersonDS.data([]);
      		this.set("obj", null);

      		this.patternDS.query({
      			filter:[
      				{ field:"id", value:3 },
      				{ field:"is_pattern", value:1 }
      			],
      			page:1,
      			pageSize:1
      		}).then(function(){
      			var view = self.patternDS.view(),
      			type = self.contactTypeDS.at(0);

      			self.dataSource.insert(0, {				
					"country_id" 			: view[0].country_id,			
					"user_id" 				: 0,
					"contact_type_id" 		: 6,							
					"abbr"					: type.abbr,
					"number"				: "",				
					"surname"				: "",
					"name"					: "",
					"gender"				: view[0].gender,					
					"phone" 				: "",
					"email" 				: "",					
					"company"				: view[0].company,
					"vat_no"				: view[0].vat_no,					
					"memo"					: view[0].memo,
					"city"					: view[0].city,
					"post_code"				: view[0].post_code,
					"address" 				: view[0].address,
					"bill_to" 				: view[0].bill_to,
					"ship_to" 				: view[0].ship_to,
					"latitute" 				: "",
					"longtitute" 			: "",
					"credit_limit"			: view[0].credit_limit,
					"locale" 				: view[0].locale,														
					"payment_term_id"		: view[0].payment_term_id,
					"payment_method_id"		: view[0].payment_method_id,									
					"registered_date" 		: new Date(),
					"account_id"			: view[0].account_id,
					"ra_id"					: view[0].ra_id,
					"tax_item_id"			: view[0].tax_item_id,
					"deposit_account_id"	: view[0].deposit_account_id,
					"trade_discount_id"		: view[0].trade_discount_id,
					"settlement_discount_id": view[0].settlement_discount_id,					
					"is_pattern" 			: 0,
					"status"				: 1								
				});

				var obj = self.dataSource.at(0);				
				//Pattern
				if(self.get("contact_type_id")>0){
					obj.set("contact_type_id", self.get("contact_type_id"));
					obj.set("is_pattern", 1);
				}

				self.set("obj", obj);
				self.generateNumber();
      		});								
		},
		contactSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },			
		save 					: function(){			
			var self = this;

			if(this.get("isEdit")){
				this.dataSource.sync();				
				this.contactPersonDS.sync();
			}else{
				this.contactSync().then(function(data){
					self.saveContactPerson(data[0].id);
					if(data[0].is_pattern){
						self.savePattern(data[0].contact_type_id, data[0].id);
					}
				}).then(function(){
					self.addEmpty();										
				});
			}									
		},
		delete 					: function(){
			var self = this,
			obj = this.get("obj");

			if(!obj.is_pattern){
				if (confirm("Are you sure, you want to delete it?")) {				
					this.deleteDS.query({
					  	filter: { field: "contact_id", value: obj.id },
					  	page: 1,
					  	pageSize: 1
					}).then(function() {
						var view = self.deleteDS.view();

						if(view.length>0){
							alert("Sorry, you can not delete it because it is using now.");
						}else{
							var data = self.dataSource.get(obj.id);
					        data.set("deleted", 1);
					        self.save();

					        window.history.back();				        
						}
					});								
		    	}
	    	}
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.contactPersonDS.cancelChanges();
			this.set("contact_type_id", 0);

			window.history.back();
		}		
	});
	banhji.purchaseOrder =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		jobDS				: dataStore(apiUrl + "jobs"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),			
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Purchase_Order" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),		
		balanceDS  			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.supplierDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS  			: banhji.source.supplierTaxDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		segmentItemDS		: banhji.source.segmentItemDS,		
		referenceTypes 		: [
			{ id:"Sale_Order", name:"Sale Order" },
			{ id:"Quote", name:"Quote" },
			{ id:"GDN", name:"Goods Delivery Address Note" }
		],
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
	    showDeposit 		: false,	    
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm   		: false,
		statusSrc 			: "",
		showDiscount 		: false,
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		total 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.loadBalance();
				self.loadRecurring();						
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value:obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadBalance();
		    	this.loadRecurring();		    			    	
	    	}else{
	    		this.set("total_credit", 0);
	    	}
	    },
	    loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" },
					{ field:"status", operator:"where_in", value:[0,2] }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = 0,
				creditAllowed = 0;

				$.each(view, function(index, value){
					if(value.status==0){
						balance += value.amount;
					}else{
						balance += (value.amount - value.amount_paid);
					}
				});

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
		//Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);
			
			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));
				self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));				
				
				self.set("obj", view[0]);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.usedSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}

				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.jobDS.filter({ field: "contact_id", value: view[0].contact_id });
				self.attachmentDS.filter({ field: "transaction_id", value: view[0].id });
				self.loadRecurring();				
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0){			
				var total = 0, subTotal = 0, discount =0, tax = 0;											

				$.each(this.lineDS.data(), function(index, value) {				
					var amt = value.quantity * value.price;					

					//Discount by line
					if(value.discount>0){										
						var discount_amount = amt * value.discount;
						amt -= discount_amount;
						discount += discount_amount;																	
					}

					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += amt * taxItem.rate;																	
					}					

					value.set("amount", amt);					
					subTotal += amt;					
		        });				

		    	//Total
		        total = subTotal + tax;		        

		        //Warning over credit allowed
		        if(obj.credit_allowed>0 && total>obj.credit_allowed){
		        	this.set("amtDueColor", "Gold");		        	
		        }else{
		        	this.set("amtDueColor", banhji.source.amtDueColor);
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
		        this.set("discount", kendo.toString(discount, "c", obj.locale));
		        this.set("tax", kendo.toString(tax, "c", obj.locale));
		        this.set("total", kendo.toString(total, "c", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("discount", discount);
		        obj.set("tax", tax);			
				obj.set("amount", total);									    	
	    	}	
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("tax", 0);
			this.set("discount", 0);
			this.set("total", 0);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);				

			this.dataSource.insert(0, {				
				contact_id 			: "",
				recurring_id 		: "",
				job_id 				: "",			
				user_id 			: this.get("user_id"),
			   	type				: "Purchase_Order",
			   	sub_total 			: 0,			   				   	
			   	amount				: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	deposit 			: 0,
			   	discount 			: 0,		   	
			   	fine 				: 0,
			   	tax 				: 0,
			   	check_no 			: "",
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: duedate,			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);					
			this.set("obj", obj);

			this.addRow();
			this.setRate();			
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changes
		    	if(this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}	    	
	    	
    		//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);										
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Supplier
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });			

			banhji.userManagement.removeMultiTask("purchase_order");
		},
	    delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"type", operator:"where_in", value:["Cash_Purchase","Credit_Purchase"] },
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},		 
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);					
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,							
							item_id 			: value.item_id,									
							description 		: value.description,							
							quantity 			: value.quantity,
							price 				: value.price,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,				
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,			   				   				   		   					   				   	
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,			   	
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,				   		   	   	
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,					
					item_id 			: value.item_id,								
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,													
					amount 	 			: value.amount,
					discount 			: value.discount,				
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.grn =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		jobDS				: dataStore(apiUrl + "jobs"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),			
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"GRN" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.supplierDS,					
		itemDS  			: banhji.source.itemDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		segmentItemDS		: banhji.source.segmentItemDS,		
		referenceTypes 		: [
			{ id:"Purchase_Order", name:"Purchase Order" }			
		],
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm   		: false,
		statusSrc 			: "",
		total 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var self = this, obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view();
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.loadReference();
				self.loadRecurring();						
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value:obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("vat_id", contact.tax_item_id);
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadRecurring();	    			    	
	    	}
	    },
		//Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();
				
		        self.set("total", kendo.toString(view[0].amount, "n0"));				
				
				self.set("obj", view[0]);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.usedSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}

				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.attachmentDS.filter({ field: "transaction_id", value: view[0].id });
				self.loadRecurring();				
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0){			
				var total = 0;										

				$.each(this.lineDS.data(), function(index, value) {				
					total += value.quantity;										
		        });		       	       			
				obj.set("amount", total);									    	
	    	}
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);				

			this.dataSource.insert(0, {				
				contact_id 			: "",
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: "",				
				user_id 			: this.get("user_id"),
			   	type				: "GRN",
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.addRow();
			this.setRate();			
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,							
				movement 			: -1,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var d = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(d);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changes
		    	if(this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}	    	
	    	
    		//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);										
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Supplier
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });			

			banhji.userManagement.removeMultiTask("grn");
		},
	    delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"type", operator:"where_in", value:["Cash_Purchase","Credit_Purchase"] },
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", value: "Purchase_Order" },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);				
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("employee_id", data.employee_id);
				obj.set("segments", data.segments);
								
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: 0,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});
		 	}
		},		 
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);					
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,							
							item_id 			: value.item_id,									
							description 		: value.description,							
							quantity 			: value.quantity,
							price 				: value.price,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,				
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,			   				   				   		   					   				   	
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,			   	
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,				   		   	   	
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,					
					item_id 			: value.item_id,								
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,													
					amount 	 			: value.amount,
					discount 			: value.discount,				
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }	 		
	});
	banhji.vendorDeposit =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),						
		lineDS  			: dataStore(apiUrl + "account_lines"),
		referenceLineDS		: dataStore(apiUrl + "account_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		paymentMethodDS		: dataStore(apiUrl + "payment_methods"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Deposit" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		contactDS 			: banhji.source.supplierDS,
		depositAccountDS 	: banhji.source.depositAccountDS,
		segmentItemDS 		: banhji.source.segmentItemDS,
		accountDS 			: banhji.source.cashAccountDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthList 			: banhji.source.monthList,	
		monthOptionList 	: banhji.source.monthOptionList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,		
		obj 				: null,		
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		total				: 0,			
		uer_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var self = this;

			this.contactDS.query({
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("account_id", view[0].deposit_account_id);
		    	obj.set("locale", view[0].locale);
				
				self.setRate();
				self.loadReference();
				self.loadRecurring();
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("account_id", contact.deposit_account_id);
		    	obj.set("locale", contact.locale);
		    	this.setRate();
		    	this.loadReference();
		    	this.loadRecurring();
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
		//Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}
			});				
		},
		//Segment
		segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Obj															
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);
			this.journalLineDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);								

			this.dataSource.insert(0, {
				recurring_id 		: "",
				account_id 			: "",				
				user_id 			: this.get("uer_id"), 	
				reference_id	 	: "",    			    		
			   	type				: "Deposit", //required			   		   				   		   					   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),			   	   	
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.addRow();
			this.setRate();				
		},
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,
				payment_method_id 	: 0,
				account_id 			: "",				
				contact_id 			: "",				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				amount 	 			: 0,							
				rate				: obj.rate,
				locale				: obj.locale
			});																	
		},		
		remove 				: function(e){						
			var d = e.data;
							
			this.lineDS.remove(d);
        	this.changes();	        	        
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){			
				var sum = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {
					sum += value.amount;
		        });		       	

		        this.set("total", kendo.toString(sum, "c", obj.locale));		        
		        obj.set("amount", sum);		       								    	
	    	}else{
	    		this.set("total", 0);		        
		        obj.set("amount", 0);				
	    	}   	
		},
		loadObj 			: function(id,is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.dataSource.view();

				if(view.length>0){	       
					self.set("obj", view[0]);					
		        }				

				self.lineDS.query({
					filter: { field: "transaction_id", value: id },
					page: 1,
					pageSize: 100
				});								
			});				
		},			  
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				ref.set("deposit", obj.amount);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}

		    	//Line has changed
		    	if(obj.amount!==this.get("original_total")){
		    		this.set("original_total",0);

			    	$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				// Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });
			
			banhji.userManagement.removeMultiTask("vendor_deposit");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id }
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Journal
		addJournal 			: function(transaction_id){
	    	var self = this,
	    	sum =0,
	    	obj = this.get("obj");			

			//Cash account on CR
			$.each(this.lineDS.data(), function(index, value){
				sum += value.amount;
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,				
					contact_id 			: value.contact_id,				
					description 		: "",
					reference_no 		: value.reference_no,
					segments 	 		: [],								
					dr 	 				: 0,	
					cr 					: value.amount,			
					rate				: value.rate,
					locale				: value.locale
				});
			});

			//Deposit on DR
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: obj.segments,								
				dr 	 				: sum,	
				cr 					: 0,			
				rate				: obj.rate,
				locale				: obj.locale
			});

			this.journalLineDS.sync();
		},		
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", value: "Purchase_Order" },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);
		},
		referenceChanges 	: function(){
			var obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("segments", data.segments);
				obj.set("amount", data.amount);

				this.lineDS.data([]);
				this.lineDS.add({
					transaction_id 		: obj.id,
					account_id 			: "",
					description 		: "",
					reference_no 		: data.number,
					amount 	 			: data.amount,
					rate				: data.rate,
					locale				: data.locale
				});
			 	this.set("total", kendo.toString(data.amount, "c", data.locale));
		 	}
		},
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});
			}else{
				this.addEmpty();
			}
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }	    	   
	});
	banhji.purchase =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		accountLineDS  		: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		additionalCostDS 	: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		recurringAccountLineDS : dataStore(apiUrl + "account_lines"),
		recurringAdditionalCostDS : dataStore(apiUrl + "transactions"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		jobDS				: dataStore(apiUrl + "jobs"),		
		balanceDS  			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactListDS 		: banhji.source.supplierDS,
		contactDS  			: banhji.source.supplierDS,
		accountDS  			: dataStore(apiUrl + "accounts"),		
		expenseAccountDS  	: banhji.source.expenseAccountDS,
		itemDS  			: banhji.source.itemDS,
		depositDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transactions/amount_sum",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "transactions",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "transactions",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "transactions",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,								
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		taxItemDS  			: banhji.source.supplierTaxDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		paymentTermDS 		: dataStore(apiUrl + "payment_terms"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		segmentItemDS		: banhji.source.segmentItemDS,
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Purchase" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),	
		referenceTypes 		: [
			{ id:"Purchase_Order", name:"Purchase Order" },
			{ id:"GRN", name:"Goods Received Note" }
		],
		typeList 			: [
			{ id:"Cash_Purchase", name:"Cash" },
			{ id:"Credit_Purchase", name:"Credit" }
		],
		statusList 			: [
			{ id:1, name:"Cash" },
			{ id:0, name:"Credit" }
		],
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
	    showDeposit 		: false,	    
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		isCash 				: true,
		showDiscount 		: false,
		showAdditionalCost 	: false,
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		showDueDateColumn	: false,								
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		original_deposit	: 0,
		total 				: 0,
		additional_cost 	: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Deposit
		loadDeposit 		: function(){
			var self = this, obj = this.get("obj");

			this.depositDS.query({
				filter:[
					{ field:"type", value:"Deposit" },
					{ field:"contact_id", value:obj.contact_id }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.depositDS.view(),
				total_deposit = view[0].amount + obj.deposit;

				self.set("total_deposit", total_deposit);
			});
		},
		addDeposit 			: function(){
			var obj = this.get("obj");

			this.depositDS.data([]);
			
			if(obj.deposit>0){				
				this.depositDS.add({				
					contact_id 			: obj.contact_id,								
					reference_id 		: obj.id,				
					user_id 			: this.get("user_id"),				    		
				   	type				: "Deposit",
				   	amount				: obj.deposit*-1,			   	
				   	rate				: obj.rate,			   	
				   	locale 				: obj.locale,			   	
				   	issued_date 		: obj.issued_date			   	
		    	});
			}
		},		
		saveDeposit 		: function(){			
			var obj = this.get("obj");
			
    		if(this.get("isEdit")){
    			if(this.depositDS.total()>0){
					var deposit = this.depositDS.at(0);
					deposit.set("amount", obj.deposit*-1);
				}else{
					this.addDeposit();
				}
    		}else{
				this.addDeposit();
    		}

			this.depositDS.sync();
		},
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("payment_term_id", view[0].payment_term_id);
		    	obj.set("payment_method_id", view[0].payment_method_id);		    	
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();				
				self.loadDeposit();
				self.loadReference();
		    	self.loadRecurring();							
			});
		},
		loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" },
					{ field:"status", operator:"where_in", value:[0,2] }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = 0,
				creditAllowed = 0;

				$.each(view, function(index, value){
					if(value.status==0){
						balance += value.amount;
					}else{
						balance += (value.amount - value.amount_paid);
					}
				});

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value:obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);		    	
		    	
		    	obj.set("account_id", contact.account_id);
		    	obj.set("payment_term_id", contact.payment_term_id);
		    	obj.set("payment_method_id", contact.payment_method_id);		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();		    	
		    	this.loadDeposit();
		    	this.loadBalance();
		    	this.loadReference();
		    	this.loadRecurring();		    			    	
	    	}else{
	    		this.set("total_credit", 0);
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
		//Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},	    
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},		
		//Account
		addRowAccount		: function(){				
			var obj = this.get("obj");
					
			this.accountLineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",				
				account_id 			: "",								
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				amount 	 			: 0,							
				rate				: obj.rate,
				locale				: obj.locale
			});																	
		},
		removeRowAccount	: function(e){						
			var d = e.data;
			if(this.lineDS.total()==0 && this.accountLineDS.total()==0){

			}else{				
				this.accountLineDS.remove(d);
		        this.changes();
	        }		        
		},
		//Additional Cost
		addRowAdditionalCost: function(){
			var self = this, obj = this.get("obj");
			
			this.additionalCostDS.add({				
				contact_id 			: "",
				payment_term_id		: 0,				
				reference_id 		: obj.id,
				recurring_id 		: "",
				tax_item_id 		: "",				
				user_id 			: this.get("user_id"),
				reference_no 		: "",	    		
			   	type				: "Cash_Purchase",//Required
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	deposit 			: 0,
			   	discount 			: 0,		   	
			   	fine 				: 0,
			   	tax 				: 0,
			   	rate				: 1,			   	
			   	locale 				: "km-KH",			   	
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});

	    	$.each(this.lineDS.data(), function(index, value) {	    		
	    		if(value.item_id>0){
	    			var item = self.itemDS.get(value.item_id);

	    			if(item.item_type_id==1){
	    				value.set("additional_applied", true);
	    			}
	    		}
	    	});					
		},
		removeRowAdditionalCost: function(e){						
			var d = e.data;
							
			this.additionalCostDS.remove(d);
	        this.changes();	        		        
		},
		typeColumnChanges 	: function(e){
			var data = e.data;

			if(data.type=="Cash_Purchase"){
				data.set("status", 1);
				this.set("showDueDateColumn", false);
			}else{
				data.set("status", 0);
				this.set("showDueDateColumn", true);				
			}
		},			
		typeChanges 		: function(){
			var obj = this.get("obj");

			if(obj.type=="Cash_Purchase"){
				this.set("isCash", true);				

				this.accountDS.filter({ field:"account_type_id", value: banhji.source.cash_account_id });
			}else{
				this.set("isCash", false);				

				this.accountDS.filter({ field:"account_type_id", operator:"where_in", value:[23,24] });
			}			
		},
		//Segment
		segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));
				self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
		        self.set("additional_cost", kendo.toString(view[0].additional_cost, "c", view[0].locale));
								
				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.accountLineDS.filter({ field: "transaction_id", value: view[0].id });
				self.additionalCostDS.filter({ field: "reference_id", value: view[0].id });
				self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });				
				
				self.set("obj", view[0]);
				self.set("original_total", view[0].amount);
				self.set("original_deposit", view[0].credit);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.paidSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}

				if(view[0].additional_cost>0){
					self.set("showAdditionalCost", true);
				}

				if(view[0].discount>0){
					self.set("showDiscount", true);
				}

				self.loadDeposit();
				self.typeChanges();				
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0 || this.accountLineDS.total()>0 || this.additionalCostDS.total()>0){			
				var total = 0, subTotal = 0, discount =0, tax = 0, 
				countAdditCheck = 0, amountAdditCheck = 0, additionalCost = 0;													
				
				//Item
				$.each(this.lineDS.data(), function(index, value) {				
					var amt = value.quantity * value.price;					

					//Discount by line
					if(value.discount>0){										
						var discount_amount = amt * value.discount;
						amt -= discount_amount;
						discount += discount_amount;																	
					}

					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += amt * taxItem.rate;																	
					}

					//Count additional cost and check
					if(value.additional_applied){
						amountAdditCheck += amt;
						countAdditCheck++;
					}
										
					subTotal += amt;
					value.set("amount", amt);					
		        });

				//Account
		        $.each(this.accountLineDS.data(), function(index, value) {
					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += value.amount * taxItem.rate;																	
					}

					subTotal += value.amount;					
		        });

		        //Additional Cost
		        $.each(this.additionalCostDS.data(), function(index, value) {
		        	var additionalTax = 0;
		        	//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						additionalTax += value.sub_total * taxItem.rate;
						tax += additionalTax;																							
					}

					additionalCost += value.sub_total;

					value.set("amount", value.sub_total + additionalTax);									
		        });

		        //Apply additional cost
		        if(additionalCost>0){
		        	this.set("showAdditionalCost", true);

		        	if(countAdditCheck>0){
				        $.each(this.lineDS.data(), function(index, value) {
							if(value.additional_applied){
					        	if(obj.additional_apply=="Equal"){
					        		//subTotal += singleAdditionalCost;
					        		var singleAdditionalCost = additionalCost / countAdditCheck;
					        		value.set("additional_cost", singleAdditionalCost);
					        	}else{
					        		var percentageAdditionalCheck = value.amount / amountAdditCheck;
					        		var weightedAdditionalCost = additionalCost * percentageAdditionalCheck;

					        		//subTotal += weightedAdditionalCost;
					        		value.set("additional_cost", weightedAdditionalCost);
				        		}
				        	}else{
				        		value.set("additional_cost", 0);
				        	}			        			        	
				        });
			    	}
		        }else{
		        	this.set("showAdditionalCost", false);

		        	$.each(this.lineDS.data(), function(index, value) {
		        		value.set("additional_cost", 0);
		        		value.set("additional_applied", false);
		        	});
		        }	

		    	//Total
		        total = subTotal + tax;

		        //Apply Deposit
		        if(obj.deposit>0){
		        	if(obj.deposit <= this.get("total_deposit")){
			        	if(obj.deposit <= total){
			        		total -= obj.deposit;
			        	}else{
			        		obj.set("deposit", total);
			        		total = 0;
			        	}
			        }else{
		        		alert("Over deposit to apply!");
		        		obj.set("deposit", 0);
		        	}
		        }

		        //Warning over credit allowed
		        if(obj.credit_allowed>0 && total>obj.credit_allowed){
		        	this.set("amtDueColor", "Gold");		        	
		        }else{
		        	this.set("amtDueColor", banhji.source.amtDueColor);
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
		        this.set("discount", kendo.toString(discount, "c", obj.locale));
		        this.set("tax", kendo.toString(tax, "c", obj.locale));
		        this.set("total", kendo.toString(total, "c", obj.locale));
		        this.set("additional_cost", kendo.toString(additionalCost, "c", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("discount", discount);
		        obj.set("tax", tax);			
				obj.set("amount", total);
				obj.set("additional_cost", additionalCost);									    	
	    	}
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.accountLineDS.data([]);
			this.journalLineDS.data([]);
			this.additionalCostDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("discount", 0);
			this.set("tax", 0);						
			this.set("total", 0);
			this.set("additional_cost", 0);				

			this.dataSource.insert(0, {				
				contact_id 			: "",
				payment_term_id		: 0,
				payment_method_id	: 0,				
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),	    		
			   	type				: "Cash_Purchase", //Required
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	deposit 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	additional_cost 	: 0,
			   	additional_apply 	: "Equal",
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	bill_date 			: new Date(),
			   	due_date 			: new Date(),			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	check_no 			: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.addRow();			
			this.setRate();
			this.typeChanges();			
		},		
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				fine 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,
				additional_cost 	: 0,
				additional_applied 	: false,							
				movement 			: 1,

				item_prices 		: []
			});																	
		},						
		removeRow 			: function(e){						
			var d = e.data;
			if(this.lineDS.total()==0 && this.accountLineDS.total()==0){

			}else{				
				this.lineDS.remove(d);
		        this.changes();
	        }		        
		},											    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Warning over credit allowed
	        if(obj.credit_limit>0 && obj.amount>obj.credit_allowed){
	        	alert("Over credit allowed!");		        	
	        }

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);				
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.accountLineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}

		    	//Line has changed
		    	if(obj.amount!==this.get("original_total")){
		    		this.set("original_total",0);

			    	$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Account line
					$.each(self.accountLineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);										
					});

					//Additional Cost line
					$.each(self.additionalCostDS.data(), function(index, value){										
						value.set("reference_id", data[0].id);										
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.accountLineDS.sync();
				self.additionalCostDS.sync();
				self.saveDeposit();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });
			});
		},
		delete 				: function(){
			var obj = this.get("obj");
			
			if (confirm("Are you sure, you want to delete it?")) {				
		        obj.set("deleted", 1);
		        this.save();

		        window.history.back();												
	    	}	    	
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.accountLineDS.cancelChanges();
			this.additionalCostDS.cancelChanges();
			this.attachmentDS.cancelChanges();

			this.dataSource.data([]);
			this.lineDS.data([]);
			this.accountLineDS.data([]);
			this.additionalCostDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });

			banhji.userManagement.removeMultiTask("purchase");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),	    	
	    	taxList = {},
	    	inventoryList = {};			
			
			//Item line
			$.each(this.lineDS.data(), function(index, value){										
				var item = self.itemDS.get(value.item_id);				

				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;
					console.log("item: "+taxAmt);
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				
				
				//Add Inventory
				if(item.item_type_id==1){					
					var inventoryID = item.inventory_account_id,
					inventoryAmt = (value.quantity*value.price) + value.additional_cost;
					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmt };						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += inventoryAmt;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": inventoryAmt};
						}
					}
				}					  	
			});

			//Account line
			$.each(this.accountLineDS.data(), function(index, value){				
				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;
					console.log("account: "+taxAmt);
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}								  	
			});

			//Additional Cost line
			$.each(this.additionalCostDS.data(), function(index, value){				
				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.sub_total*taxItem.rate;
					console.log("additional cost: "+taxAmt);
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}								  	
			});

			//Start journal
			//Inventory on Dr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Expense Account on Dr
			$.each(this.accountLineDS.data(), function(index, value){
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,				
					contact_id 			: obj.contact_id,				
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segments,								
					dr 	 				: value.amount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			});			

			//Tax account on Dr
			if(!jQuery.isEmptyObject(taxList)){				
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}

			//Cash OR A/P on Cr
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: 0,
				cr 					: obj.amount + obj.additional_cost,				
				rate				: obj.rate,
				locale				: obj.locale
			});			

			//Discount on Cr			
			if(obj.discount > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.discount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}			

			this.journalLineDS.sync();
		},
		//Reference					
		loadReference 		: function(e){			
			var obj = this.get("obj");

			if(obj.reference_type){
				this.set("bolReference", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },
					{ field: "status", value: 0 },
					{ field: "type", value: obj.reference_type }
				]);				
			}else{
				this.set("bolReference", false);
			}							
		},
		referenceChanges 	: function(e){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);

				//Deposit
				if(obj.deposit>0){
					this.set("showDeposit", true);
				}else{
					this.set("showDeposit", false);
				}
												
				obj.set("deposit", ref.deposit);
				obj.set("discount", ref.discount);
				obj.set("discount_amount", ref.discount_amount);
				obj.set("fine", ref.fine);
				obj.set("tax", ref.tax);
								
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							fine 				: value.fine,
							rate				: value.rate,
							locale				: value.locale,
							has_vat 			: value.has_vat,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
				this.set("showDeposit", false);
			}								
		},
		//Recurring	
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id>0){
				var recur = this.recurringDS.get(obj.recurring_id);				
				
				obj.set("segments", recur.segments);
				obj.set("sub_total", recur.sub_total);
				obj.set("discount", recur.discount);
				obj.set("tax", recur.tax);
				obj.set("amount", recur.amount);
				obj.set("rate", recur.rate);
				obj.set("locale", recur.locale);					
				obj.set("memo", recur.memo);
				obj.set("memo2", recur.memo2);
				
				this.set("sub_total", kendo.toString(recur.sub_total, recur.locale=="km-KH"?"c0":"c", recur.locale));
				this.set("discount", kendo.toString(recur.discount, recur.locale=="km-KH"?"c0":"c", recur.locale));
				this.set("tax", kendo.toString(recur.tax, recur.locale=="km-KH"?"c0":"c", recur.locale));
				this.set("total", kendo.toString(recur.amount, recur.locale=="km-KH"?"c0":"c", recur.locale));

				//Item Line
				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var line = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(line, function(index, value){
						self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});
				});

				//Account Line
				this.recurringAccountLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var accountLine = self.recurringAccountLineDS.view();
					self.accountLineDS.data([]);

					$.each(accountLine, function(index, value){
						self.accountLineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,				
							account_id 			: value.account_id,								
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							amount 	 			: value.amount,							
							rate				: value.rate,
							locale				: value.locale
						});
					});
				});

				//Additional Cost Line
				this.recurringAdditionalCostDS.query({
					filter: { field:"reference_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var additionalCostLine = self.recurringAdditionalCostDS.view();
					self.additionalCostDS.data([]);

					$.each(additionalCostLine, function(index, value){
						self.additionalCostDS.add({
							contact_id 			: value.contact_id,
							tax_item_id 		: value.tax_item_id,				
							user_id 			: value.user_id,
							reference_no 		: value.reference_no,	    		
						   	type				: value.type,				   		   					   				   	
						   	amount				: value.amount,
						   	rate				: value.rate,			   	
						   	locale 				: value.locale,			   	
						   	issued_date 		: value.issued_date,
						   	due_date 			: value.due_date,
						   	//Recurring
						   	recurring_name 		: "",
						   	start_date 			: new Date(),
						   	frequency 			: "Daily",
						   	month_option 		: "Day",
						   	interval 			: 1,
						   	day 				: 1,
						   	week 				: 0,
						   	month 				: 0,
						   	is_recurring 		: 0				
			    		});
			    	});
				});				
			}else{
				this.addEmpty();
			} 
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }	 		
	});
	banhji.purchaseReturn =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),		
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		returnDS			: dataStore(apiUrl + "transactions"),
		invoiceDS			: dataStore(apiUrl + "transactions"),
		jobDS				: dataStore(apiUrl + "jobs"),		
		currencyDS  		: banhji.source.currencyDS,
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.supplierDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "tax_items",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: [
					{ field:"tax_type_id", value: 1}
			],					
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		accountDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "accounts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field:"account_type_id", value: 6 },
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),		
		segmentItemDS		: banhji.source.segmentItemDS,
		optionList 			: [
			{ id:"Offset_Invoice", name:"Charge Against Invoice" },
			{ id:"Credit", name:"Add To Credit" },
			{ id:"Credit_Note", name:"Cash Refund" }
		],		
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,			    
	    bgColor 			: "#D5DBDB",	     
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		bolReference 		: false,
		showReturn 			: true,
		showDiscount 		: false,		
		sub_total 			: 0,		
		discount 			: 0,
		tax 				: 0,		
		total 				: 0,
		remain 				: 0,
		original_total 		: 0,		
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.set("original_total", 0);									
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					this.set("original_total", 0);										
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},	    			
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));				
		        self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));				
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));						
						
				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });				

				self.set("obj", view[0]);
				self.set("original_total", view[0].amount);
			});				
		},		
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);		    		    	
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.loadReference();		
			});
		},
		loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = view[0].amount,
				creditAllowed = 0;

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value:obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);   	
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadReference();		    		    			    	
	    	}
	    },
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("bolReference", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },					
					{ field: "type", value:"Invoice" }
				]);				
			}else{
				obj.set("reference_id", "");
				this.set("bolReference", false);				
			}							
		},
		referenceChanges 	: function(e){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				obj.set("amount_paid", ref.amount_paid);

				if(ref.type=="Cash_Sale"){
					this.set("showReturn", true);
				}else{
					if(ref.status==0){
						this.set("showReturn", false);

						this.returnDS.data([]);
						this.addRowOption();
					}else{
						this.set("showReturn", true);
					}
				}				
									
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							fine 				: value.fine,
							rate				: value.rate,
							locale				: value.locale,													

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				this.returnDS.data([]);
				this.addRowOption();
			}							
		},		
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", kendo.parseFloat(view[0].rate));
						value.set("locale", obj.locale);												
					});					
				}else{
					obj.set("rate", 1);

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", 1);
						value.set("locale", obj.locale);												
					});
				}

				self.changes();
			});				
		},		
		changes				: function(){
			var self = this, obj = this.get("obj"), 
			subTotal = 0, discount =0, tax = 0, returnAmount = 0, remain = 0;
			
	        $.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.price;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);
				subTotal += amt;									
	        });

	        total = subTotal + tax;

	        //Return
	        $.each(this.returnDS.data(), function(index, value) {								
				returnAmount += value.amount;					
	        });
	       
	        remain = obj.amount_paid - returnAmount;

	        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
	        this.set("discount", kendo.toString(discount, "c", obj.locale));
	        this.set("tax", kendo.toString(tax, "c", obj.locale));
	        this.set("total", kendo.toString(total, "c", obj.locale));

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);

			this.set("remain", remain);    	
		},		
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			transaction_id = 0, 
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id),
			rate = obj.rate / item.item_prices[0].rate;
			
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
			
			if(data.item_id>0){		        
		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: transaction_id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", item.item_prices[0].measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", item.item_prices[0].price*rate);			        		        
			        data.set("rate", obj.rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}		        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Return Option
		addRowOption 		: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}

			var account_id = 0;
			if(this.accountDS.total()>0){
				account_id = this.accountDS.at(0).id;
			}
						
			this.returnDS.add({					
				return_id 		: transaction_id,				
				reference_id 	: "",
				account_id 		: account_id,
				type 			: "",													
				amount 			: 0,				
				rate			: obj.rate,
				locale			: obj.locale,
				issued_date 	: obj.issued_date,
				
				showInvoice 	: false,
				showAccount 	: false				
			});																	
		},
		removeRowOption 	: function(e){						
			var d = e.data;
			
			if(this.returnDS.total()>1){			
				this.returnDS.remove(d);
		        this.changes();
	        }	        	        
		},
		invoiceChanges 		: function(e){
			var data = e.data;
			
			if(data.reference_id>0){
				var inv = this.invoiceDS.get(data.reference_id);
				data.set("amount", inv.amount - inv.amount_paid);

				this.changes();
			}else{
				data.set("amount", 0);
			}							
		},
		optionChanges 		: function(e){
			var data = e.data, obj = this.get("obj");

			switch(data.type) {
			    case "Offset_Invoice": //Invoice		    	
			        data.set("showInvoice", true);
			        data.set("showAccount", false);

			        if(obj.contact_id>0){
			        	var para = [
					 			{ field:"contact_id", value: obj.contact_id },
					 			{ field:"status", operator:"where_in", value:[0,2] },
					 			{ field:"type", value:"Invoice" },
					 	];

					 	if(obj.reference_id>0){
					 		para.push({ field:"id", operator:"where_not_in", value:[obj.reference_id] });
					 	} 

				        this.invoiceDS.filter(para);
				 	}

			        break;
			    case "Credit_Note": //Refund		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", true);
			        break;
			    default: //Credit		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", false);
			}			
		},		
		//Obj					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.returnDS.data([]);
			this.referenceDS.data([]);

			this.set("obj", null);						
			this.set("total", 0);	
			this.set("remain", 0);				

			this.dataSource.add({				
				contact_id 			: "",								
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
				seller_id 			: this.get("user_id"), 	    		
			   	type				: "Purchase_Return", //Require
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	amount_paid 		: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	deposit 			: 0,
			   	discount 			: 0,		   	
			   	fine 				: 0,
			   	tax 				: 0,
			   	rate				: 1,			   	
			   	locale 				: "km-KH",			   	
			   	issued_date 		: new Date(),			   			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);

			this.addRow();
			this.addRowOption();
			this.setRate();			
		},
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				fine 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,							
				movement 			: -1,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var d = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(d);
		        this.changes();
	        }		        
		},							    
	    transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");	    	

	    	//Update references
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				ref.set("status", 1);
				this.referenceDS.sync();
			} 			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();	    	    		
	    		this.lineDS.sync();
	    		this.returnDS.sync();

	    		//Update total changes
	    		if(this.get("original_total") !== obj.amount){	    		
	    			this.set("original_total", obj.amount);

	    			$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
	    		}	    		
	    	}else{
	    		//Add brand new transaction
				this.transactionSync()
				.then(function(data){					
					//Journal
					self.addJournal(data[0].id);

					//Return
					$.each(self.returnDS.data(), function(index, value){										
						value.set("return_id", data[0].id);

						if(value.type=="Offset_Invoice" && value.reference_id>0){
							var inv = self.invoiceDS.get(value.reference_id),
							amountPaid = inv.amount_paid + value.amount;

							inv.set("amount_paid", amountPaid);

							if(amountPaid>=inv.amount){								
								inv.set("status", 1); //Paid							
							}else{
								inv.set("status", 2); //Partially Paid
							}
						}										
					});
					self.returnDS.sync();

					//Item line
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);										
					});
					self.lineDS.sync();																	
				}).then(function(){					
					self.addEmpty();
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();			

			window.history.back();
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	saleList = {},
	    	taxList = {},	    	
	    	inventoryList = {},
	    	cogsList = {},
	    	cashList = {},
	    	sumInvoice = 0,
	    	sumCredit = 0;			
			
			//Group Account from lineDS
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;

				//Income Account
				var incomeID = item.income_account_id;																				
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amount * value.discount;
					amount -= discount_amount;																						
				}

				//TAX Account																								
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = amount * taxItem.rate;
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				

				//Inventory
				if(item.item_type_id==1){
					var itemCost = value.quantity * item.cost;

					//Add inventory list
					var inventoryID = item.inventory_account_id;					
					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += itemCost;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};
						}
					}

					//Add cogs list
					var cogsID = item.cogs_account_id;				
					if(cogsList[cogsID]===undefined){
						cogsList[cogsID]={"id": cogsID, "amount": itemCost};						
					}else{											
						if(cogsList[cogsID].id===cogsID){
							cogsList[cogsID].amount += itemCost;
						}else{
							cogsList[cogsID]={"id": cogsID, "amount": itemCost};
						}
					}
				}					  	
			});

			//Group Account from returnDS
			$.each(this.returnDS.data(), function(index, value){
				//Offset Invoice
				if(value.type=="Offset_Invoice"){
					sumInvoice += value.amount;
				}

				//Credit
				if(value.type=="Credit"){ 
					sumCredit += value.amount;
				}

				//Refund
				if(value.type=="Credit_Note"){
					var cashID = value.account_id,
					cashAmt = value.amount;

					if(cashList[cashID]===undefined){
						cashList[cashID]={"id": cashID, "amount": cashAmt};						
					}else{											
						if(cashList[cashID].id===cashID){
							cashList[cashID].amount += cashAmt;
						}else{
							cashList[cashID]={"id": cashID, "amount": cashAmt};
						}
					}
				}
			});		

			//Start journal			
			//Sale on Dr
			if(!jQuery.isEmptyObject(saleList)){
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Tax on Dr
			if(!jQuery.isEmptyObject(taxList)){
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}			

			//Discount on Cr
			if(obj.discount>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.discount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//A/R on Cr
			var ar = (obj.amount - obj.amount_paid) + sumInvoice;						
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: contact.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: 0,
				cr 					: ar,				
				rate				: obj.rate,
				locale				: obj.locale
			});			

			//Deposit on Cr
			if(sumCredit>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: sumCredit,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Cash on Cr
			if(!jQuery.isEmptyObject(cashList)){
				$.each(cashList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//INVENTORY
			//Inventory on Dr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Cogs on Cr
			if(!jQuery.isEmptyObject(cogsList)){
				$.each(cogsList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			this.journalLineDS.sync();
		},
		//Recurring		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var recur = this.recurringDS.get(obj.recurring_id);				
				
				obj.set("segments", recur.segments);
				obj.set("amount", recur.amount);
				obj.set("discount", recur.discount);
				obj.set("fine", recur.fine);
				obj.set("rate", recur.rate);
				obj.set("locale", recur.locale);					
				obj.set("memo", recur.memo);
				obj.set("memo2", recur.memo2);

				var locale = recur.locale;
				this.set("total", kendo.toString(recur.amount, locale=="km-KH"?"c0":"c", locale));

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var line = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(line, function(index, value){
						self.lineDS.add({					
							transaction_id 		: 0,							
							item_id 			: value.item_id,									
							description 		: value.description,							
							quantity 			: value.quantity,
							price 				: value.price,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale,
							has_vat 			: value.has_vat,

							item_prices 		: value.item_prices
						});
					});
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({				
				user_id 			: obj.user_id, 	    			    		
			   	type				: obj.type,			   				   				   		   					   				   	
			   	amount				: obj.amount,
			   	discount 			: obj.discount,
			   	fine 				: obj.fine,
			   	rate				: obj.rate,			   	
			   	locale 				: obj.locale,					   		   	   	
			   	memo 				: obj.memo,
			   	memo2 				: obj.memo2,
			   	segments 			: obj.segments,
			   	recurring_name 		: obj.recurring_name,
			   	start_date 			: obj.start_date,
			   	frequency 			: obj.frequency,
			   	month_option 		: obj.month_option,
			   	interval 			: obj.interval,
			   	day 				: obj.day,
			   	week 				: obj.week,
			   	month 				: obj.month,
			   	is_recurring 		: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,					
					item_id 			: value.item_id,								
					description 		: value.description,													
					amount 	 			: value.amount,
					discount 			: value.discount,
					fine 				: value.fine,						
					rate				: value.rate,
					locale				: value.locale,
					has_vat 			: value.has_vat
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		saveRecurring 		: function(){
	    	var self = this, obj = this.get("obj");

	    	if(this.get("isEdit")){
	    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
	    			this.addNewRecurring();

	    			this.recurringSync()
					.then(function(data){
						$.each(self.recurringLineDS.data(), function(index, value){										
							value.set("transaction_id", data[0].id);						
						});

						self.recurringLineDS.sync();			
					}).then(function(){					
						self.addEmpty();
					});
	    		}else{
	    			this.save();
	    		}
	    	}else{ //Add brand new recurring
	    		obj.set("is_recurring", 1);
	    		
	    		this.transactionSync()
				.then(function(data){
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);								
					});

					self.lineDS.sync();							
				}).then(function(){					
					self.addEmpty();
				});
	    	}	    	
	    }	 		
	});
	banhji.vendorReportCenter = kendo.observable({
		lang 				: langVM,				
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contact_reports/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),						
		pageLoad 			: function(){
																
		}		
	});		
	banhji.vendorSetting =  kendo.observable({
		lang 				: langVM,		
        contactTypeDS 		: dataStore(apiUrl+"contacts/type"),
        paymentMethodDS		: dataStore(apiUrl+"payment_methods"),
        paymentTermDS		: dataStore(apiUrl+"payment_terms"),      
        contactTypeName 	: "",
        contactTypeAbbr 	: "",
        contactTypeCompany 	: 0,
        paymentMethodName 	: "",
        paymentTermName 	: "",
        paymentTermNetDue	: "",
        paymentTermPeriod 	: "",
        paymentTermPercentage 	: "",
        pageLoad 			: function() {
        	
        },	    
        addContactType 		: function(){
        	var name = this.get("contactTypeName");

        	if(name!==""){
	        	this.contactTypeDS.add({
	        		parent_id 	: 2,
	        		name 		: name,
	        		abbr 		: this.get("contactTypeAbbr"),
	        		description : "",
	        		is_company 	: this.get("contactTypeCompany"),
	        		is_system 	: 0
	        	});

	        	this.contactTypeDS.sync();

	        	this.set("contactTypeName", "");
	        	this.set("contactTypeAbbr", "");
	        	this.set("contactTypeCompany", 0);
        	}
        },
        addPaymentMethod 		: function(){
        	var name = this.get("paymentMethodName");

        	if(name!==""){
	        	this.paymentMethodDS.add({	        		
	        		name 		: name,
	        		description : "",
	        		is_system 	: 0
	        	});

	        	this.paymentMethodDS.sync();

	        	this.set("paymentMethodName", "");
        	}
        },
        addPaymentTerm 		: function(){
        	var name = this.get("paymentTermName");

        	if(name!==""){
	        	this.paymentTermDS.add({	        		
	        		name 				: name,
	        		net_due 			: this.get("paymentTermNetDue"),
	        		discount_period 	: this.get("paymentTermPeriod"),
	        		discount_percentage : this.get("paymentTermPercentage"),
	        		is_system 			: 0
	        	});

	        	this.paymentTermDS.sync();

	        	this.set("paymentTermName", "");
	        	this.set("paymentTermNetDue", "");
	        	this.set("paymentTermPeriod", "");
	        	this.set("paymentTermPercentage", "");
        	}
        },
        goPattern 	: function(e){
        	var data = e.data;        	        	

        	if(kendo.parseInt(data.contact_id)>0){        		        	
	        	banhji.router.navigate('/vendor/'+data.contact_id+'/1');   	
        	}else{
        		banhji.router.navigate('/vendor');
        		banhji.vendor.set("contact_type_id",data.id);
        	}
        }        
    });	


	/*************************
	*   SME Section   *
	**************************/
	banhji.customerDashboard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "contact_reports/summary"),
		topCustomerDS 		: dataStore(apiUrl + "contact_reports/top_customer"),
		topARDS 			: dataStore(apiUrl + "contact_reports/top_ar"),
		topProductDS 		: dataStore(apiUrl + "contact_reports/top_product"),		
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contact_reports/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		sale 				: 0,
		sale_customer 		: 0,
		sale_product 		: 0,
		sale_order 			: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,						
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("sale", kendo.toString(view[0].sale, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
				self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
				self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));
			});

			this.topCustomerDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			});

			this.topARDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});

			this.topProductDS.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related", model:"transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related", model:"transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});										
		}		
	});
	banhji.customerCenter = kendo.observable({
		lang 				: langVM,
		transactionDS  		: dataStore(apiUrl + 'transactions'),
		contactDS			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contacts",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter:{ field:"parent_id", operator:"where_related", model:"contact_type", value:1 },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		contactTypeDS  		: banhji.source.customerTypeDS,
		noteDS 				: dataStore(apiUrl + 'notes'),
		currencyDS  		: banhji.source.currencyDS,
		outstandingDS 		: dataStore(apiUrl + "contact_reports/outstanding"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		note 				: "",
		searchText 			: "",
		contact_type_id 	: null,
		currency_id 		: 0,
		user_id 			: banhji.source.user_id,
		balance 			: 0,
		deposit 			: 0,
		outInvoice 			: 0,
		overInvoice 		: 0,
		pageLoad 			: function(){
			this.contactDS.fetch();
			this.transactionDS.fetch();
			this.outstandingDS.fetch();
		},
		loadContact 		: function(id){
			var self = this;
			
			this.contactDS.query({
			  	filter:[
			  		{ field:"id", value:id }
			  	],
			  	page: 1,
			  	pageSize: 50
			}).then(function(e) {
			    var view = self.contactDS.data();
			    
			    if(view.length>0){
			    	self.set("obj", view[0]);
			    	self.loadOutStandingInvoice(view[0].id);
			    	self.loadTransaction(view[0].id);
			    	self.loadNote(view[0].id);
			    }
			});
		},
		loadOutStandingInvoice: function(id){
			var self = this, obj = this.get("obj");

			this.outstandingDS.query({
				filter: { field: "contact_id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e) {
				var view = self.outstandingDS.view();

				self.set("deposit", kendo.toString(view[0].deposit, obj.locale=="km-KH"?"c0":"c", obj.locale));
				self.set("outInvoice", kendo.toString(view[0].open, "n0"));
				self.set("overInvoice", kendo.toString(view[0].overdue, "n0"));
				self.set("balance", kendo.toString(view[0].balance, obj.locale=="km-KH"?"c0":"c", obj.locale));
			});
		},
		loadTransaction 	: function(id){
			this.transactionDS.query({
			  	filter: { field:"contact_id", value: id },
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadBalance 		: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"Invoice" },
			  		{ field:"status", operator:"where_in", value: [0,2] }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadDeposit 		: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value:"Deposit" }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},
		loadOverInvoice 	: function(){
			var obj = this.get("obj");

			this.transactionDS.query({
			  	filter: [
			  		{ field:"contact_id", value: obj.id },
			  		{ field:"type", value: "Invoice" },
			  		{ field:"status", operator:"where_in", value: [0,2] },
			  		{ field:"due_date <", value: kendo.toString(new Date(), "yyyy-MM-dd") }
			  	],
			  	sort: { field: "issued_date", dir: "desc" },
			  	page: 1,
			  	pageSize: 100
			});
		},		
		loadNote 			: function(id){
			this.noteDS.query({
				filter: { field:"contact_id", value: id },
				sort: { field:"noted_date", dir:"desc" },
				page: 1,
				pageSize: 100
			});
		},			
		selectedRow			: function(e){
			var id = e.data.id,
			data = e.data;
			
			this.set("obj", data);
			this.loadOutStandingInvoice(id);
			this.loadTransaction(id);
			this.loadNote(id);
		},
		sorterChanges 		: function(){
			var value = this.get("sorter");

			switch(value){
			case "today":
				var today = new Date();
				
				this.set("sdate", today);
				this.set("edate", today);
			  					
			  	break;
			case "week":
			  	var thisWeek = new Date;
				var first = thisWeek.getDate() - thisWeek.getDay(); 
				var last = first + 6;

				var firstDayOfWeek = new Date(thisWeek.setDate(first));
				var lastDayOfWeek = new Date(thisWeek.setDate(last));

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":
				var thisMonth = new Date;
				var firstDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth(), 1);
				var lastDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":
				var thisYear = new Date();
			  	var firstDayOfYear = new Date(thisYear.getFullYear(), 0, 1);
				var lastDayOfYear = new Date(thisYear.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");
			}
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this, 
			para = [],
      		txtSearch = this.get("searchText"),
      		contact_type_id = this.get("contact_type_id");
      		
      		if(txtSearch){
      			para.push(
      				{ field: "number", operator: "like", value: txtSearch },
      				{ field: "surname", operator: "or_like", value: txtSearch },
					{ field: "name", operator: "or_like", value: txtSearch },
					{ field: "company", operator: "or_like", value: txtSearch }
      			);
      		}

      		if(contact_type_id){
      			para.push({ field: "contact_type_id", value: contact_type_id });
      		}else{
      			para.push({ field: "parent_id", model:"contact_type", operator:"where_related", value: 1 });
      		}

      		this.contactDS.filter(para);
      		var loaded = false;
      		this.contactDS.bind("requestEnd", function(){
      			if(loaded==false){
      				loaded = true;

      				//Clear search filters
		      		self.set("searchText", "");
		      		self.set("contact_type_id", 0);
		      		self.set("currency_id", 0);
      			}
      		});
		},
		searchTransaction	: function(){
			var self = this,
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd"),
        		para = [];

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }       

            this.transactionDS.query({
            	filter: para,
            	sort: { field: "issued_date", dir: "desc" },
            	page: 1,
            	pageSize: 100
            });            
		},	
		goEditContact 		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/customer/'+obj.id);
		},
		goQuote				: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/quote');
			banhji.quote.loadContact(obj.id);
		},
		goDeposit			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/customer_deposit');
			banhji.customerDeposit.loadContact(obj.id);
		},
		goSaleOrder			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/sale_order');
			banhji.saleOrder.loadContact(obj.id);
		},
		goCashSale			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/cash_sale');
			banhji.cashSale.loadContact(obj.id);
		},
		goInvoice			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/invoice');
			banhji.invoice.loadContact(obj.id);
		},
		goGDN				: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/gdn');
			banhji.gdn.loadContact(obj.id);
		},
		goSaleReturn		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/sale_return');
			banhji.saleReturn.loadContact(obj.id);
		},
		goStatement			: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/statement');
			banhji.statement.loadContact(obj.id);
		},
		goCashReceipt		: function(){
			var obj = this.get("obj");

			banhji.router.navigate('/cash_receipt');
			banhji.cashReceipt.loadContact(obj.id);
		},
		payInvoice			: function(e){
			var obj = e.data;

			banhji.router.navigate('/cash_receipt');
			banhji.cashReceipt.loadInvoice(obj.id);
		},
		saveNote 			: function(){
			var self = this;

			if(this.get("note")!==""){
				this.noteDS.insert(0, {
					contact_id 	: this.get("obj").id,
					note 		: this.get("note"),
					noted_date	: new Date(),
					created_by 	: this.get("user_id"),

					creator 	: ""
				});
				var saved = false;
				this.noteDS.sync();
				this.noteDS.bind("requestEnd", function(){
					if(saved==false){
						saved = true;

						self.set("note", "");
					}
				});
			}else{
				alert("required memo...");
			}
		}
	});
	banhji.customer = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "contacts"),
		patternDS 				: dataStore(apiUrl + "contacts"),
		numberDS 				: dataStore(apiUrl + "contacts"),
		deleteDS 				: dataStore(apiUrl + "transactions"),		
		existingDS 				: dataStore(apiUrl + "contacts"),		
		contactPersonDS			: dataStore(apiUrl + "contact_persons"),		
		paymentTermDS			: dataStore(apiUrl + "payment_terms"),
		paymentMethodDS			: dataStore(apiUrl + "payment_methods"),
		taxItemDS				: dataStore(apiUrl + "tax_items"),
		countryDS 				: banhji.source.countryDS,
		contactTypeDS  			: banhji.source.customerTypeDS,
		currencyDS 		  		: banhji.source.currencyDS,
		arDS 		  			: banhji.source.ARAccountDS,
		raDS 		  			: banhji.source.incomeAccountDS,
		depositDS 		  		: banhji.source.depositAccountDS,
		tradeDiscountDS 		: banhji.source.tradeDiscountDS,
		settlementDiscountDS 	: banhji.source.settlementDiscountDS,
		genders					: banhji.source.genderList,
		statusList 				: banhji.source.statusList,
        obj 					: null,       
		originalNo				: null,	
		isDuplicateNumber 		: false,
		phFullname 				: "Customer Name ...",
		isEdit 					: false,
		contact_type_id 		: 0,						
		pageLoad 				: function(id, is_pattern){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_pattern);
				this.loadContactPerson(id);				
			}else{
				if(this.get("isEdit")){
					this.set("isEdit", false);
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();
				}															
			}			
		},
		loadObj 				: function(id, is_pattern){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_pattern){
				para.push({ field:"is_pattern", value: 1 });
			}

			this.dataSource.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();

				if(view[0].company){
					self.set("isCompany", true);
				}else{
					self.set("isCompany", false);
				}

				self.set("obj", view[0]);
				self.loadMap();
				self.set("originalNo", view[0].number);								
			});
		},				
		//Pattern		
		applyPattern 			: function(contact_id){
			var self = this, obj = self.get("obj");
			
			this.patternDS.query({
				filter: [
					{ field:"id", value: contact_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();				

				if(view.length>0){
					obj.set("country_id", view[0].country_id);					
					obj.set("gender", view[0].gender);
					obj.set("company", view[0].company);
					obj.set("vat_no", view[0].vat_no);
					obj.set("memo", view[0].memo);
					obj.set("city", view[0].city);
					obj.set("post_code", view[0].post_code);
					obj.set("address", view[0].address);
					obj.set("bill_to", view[0].bill_to);
					obj.set("ship_to", view[0].ship_to);									
					obj.set("payment_term_id", view[0].payment_term_id);
					obj.set("payment_method_id", view[0].payment_method_id);
					obj.set("credit_limit", view[0].credit_limit);
					obj.set("locale", view[0].locale);					
					obj.set("account_id", view[0].account_id);
					obj.set("ra_id", view[0].ra_id);
					obj.set("tax_item_id", view[0].tax_item_id);
					obj.set("deposit_account_id", view[0].deposit_account_id);
					obj.set("trade_discount_id", view[0].trade_discount_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);					
				}else{
					obj.set("country_id", 0);					
					obj.set("gender", "M");
					obj.set("company", "");
					obj.set("vat_no", "");
					obj.set("memo", "");
					obj.set("city", "");
					obj.set("post_code", "");
					obj.set("address", "");
					obj.set("bill_to", "");
					obj.set("ship_to", "");									
					obj.set("payment_term_id", 0);
					obj.set("payment_method_id", 0);
					obj.set("credit_limit", 0);
					obj.set("locale", "");					
					obj.set("account_id", 0);
					obj.set("ra_id", 0);
					obj.set("tax_item_id", 0);
					obj.set("deposit_account_id", 0);
					obj.set("trade_discount_id", 0);
					obj.set("settlement_discount_id", 0);
				}
			});
		},		
		savePattern 			: function(contact_type_id, contact_id){
			var data = banhji.customerSetting.contactTypeDS.get(contact_type_id);
			data.set("contact_id", contact_id);
			banhji.customerSetting.contactTypeDS.sync();			
			window.history.back();
		},
		contactTypeChanges 		: function(){
			var obj = this.get("obj");

			if(obj.contact_type_id){
				var type = this.contactTypeDS.get(obj.contact_type_id);
				this.applyPattern(type.contact_id);
				obj.set("abbr", type.abbr);

				if(type.is_company=="1"){
					this.set("phFullname", "Company Name ...");
				}else{
					this.set("phFullname", "Customer Name ...");
				}				
			}else{
				obj.set("country_id", 0);							
				obj.set("vat_no", "");
				obj.set("memo", "");
				obj.set("city", "");
				obj.set("post_code", "");
				obj.set("address", "");
				obj.set("bill_to", "");
				obj.set("ship_to", "");									
				obj.set("payment_term_id", 0);
				obj.set("payment_method_id", 0);
				obj.set("credit_limit", 0);
				obj.set("locale", "");					
				obj.set("account_id", 0);
				obj.set("ra_id", 0);
				obj.set("tax_item_id", 0);
				obj.set("deposit_account_id", 0);
				obj.set("trade_discount_id", 0);
				obj.set("settlement_discount_id", 0);
			}
		},				
		//Contact Person
		loadContactPerson		: function(id){
			this.contactPersonDS.query({
				filter: { "field":"contact_id", value: id },
				page: 1,
				pageSize: 100
			});
		},
		addEmptyContactPerson 	: function(){
			var contact_id = 0;
			if(this.get("isEdit")){
				contact_id = this.get("obj").id;
			}

			this.contactPersonDS.add({					 			
				contact_id 			: contact_id,
      			prefix 				: "",      			
				name 				: "",
				department			: "",
				phone				: "",
				email				: ""
			});								
		},
		deleteContactPerson 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.contactPersonDS.getByUid(d.uid);

				this.contactPersonDS.remove(obj);
			}
		},
		saveContactPerson 		: function(id){
			$.each(this.contactPersonDS.data(), function(index, value) {
				value.set("contact_id", id);
			});

			this.contactPersonDS.sync();
		},
		loadMap 				: function(){
			var obj = this.get("obj"), lat = kendo.parseFloat(obj.latitute),
			lng = kendo.parseFloat(obj.longtitute);
			
			if(lat && lng){
				var myLatLng = {lat:lat, lng:lng};
				var mapOptions = {
					zoom: 17,					
					center: myLatLng,
					mapTypeControl: false,
					zoomControl: false,
					scaleControl: false,
					streetViewControl: false
				};
				var map = new google.maps.Map(document.getElementById('map'),mapOptions);
				var marker = new google.maps.Marker({
					position: myLatLng,
					map: map,
					title: obj.number
				});
			} 
		},
		copyBillTo 				: function(){
			var obj = this.get("obj");

			obj.set("ship_to", obj.bill_to);
		},      	
		checkExistingNumber 	: function(){
			var self = this, para = [], 
			obj = this.get("obj"),
			originalNo = this.get("originalNo");			
			
			if(obj.number!=="" && obj.number!==originalNo){
				this.existingDS.query({
					filter: [
						{ field:"number", value: obj.number },
						{ field:"contact_type_id", value: obj.contact_type_id }
					],
					page: 1,
					pageSize: 100
				}).then(function(e){
					var view = self.existingDS.view();
					
					if(view.length>0){
				 		self.set("isDuplicateNumber", true);						
					}else{
						self.set("isDuplicateNumber", false);
					}
				});							
			}else{
				this.set("isDuplicateNumber", false);
			}			
		},
		generateNumber 			: function(){
			var self = this, obj = this.get("obj");

			this.numberDS.query({
				filter:[
					{ field:"parent_id", operator:"where_related", model:"contact_type", value:1 },
					{ field:"contact_type_id", value:obj.contact_type_id }
				],
				sort: { field:"number", dir:"desc" },
				page:1,
				pageSize:1
			}).then(function(){
				var view = self.numberDS.view();

				if(view.length>0){
					var lastNo = kendo.parseInt(view[0].number);
					if(lastNo){
						lastNo++;
						obj.set("number",kendo.toString(lastNo, "00000"));
					}
				}
			});
		},		
      	addEmpty 				: function(){
      		var self = this;
      		this.dataSource.data([]);
      		this.contactPersonDS.data([]);
      		this.set("obj", null);

      		this.patternDS.query({
      			filter:[
      				{ field:"id", value:1 },
      				{ field:"is_pattern", value:1 }
      			],
      			page:1,
      			pageSize:1
      		}).then(function(){
      			var view = self.patternDS.view(),
      			type = self.contactTypeDS.at(0);

      			self.dataSource.insert(0, {				
					"country_id" 			: view[0].country_id,			
					"user_id" 				: 0,
					"contact_type_id" 		: 4, //General Customer							
					"abbr"					: type.abbr,
					"number"				: "",				
					"surname"				: "",
					"name"					: "",
					"gender"				: view[0].gender,					
					"phone" 				: "",
					"email" 				: "",					
					"company"				: view[0].company,
					"vat_no"				: view[0].vat_no,					
					"memo"					: view[0].memo,
					"city"					: view[0].city,
					"post_code"				: view[0].post_code,
					"address" 				: view[0].address,
					"bill_to" 				: view[0].bill_to,
					"ship_to" 				: view[0].ship_to,
					"latitute" 				: "",
					"longtitute" 			: "",
					"credit_limit"			: view[0].credit_limit,
					"locale" 				: view[0].locale,														
					"payment_term_id"		: view[0].payment_term_id,
					"payment_method_id"		: view[0].payment_method_id,									
					"registered_date" 		: new Date(),
					"account_id"			: view[0].account_id,
					"ra_id"					: view[0].ra_id,
					"tax_item_id"			: view[0].tax_item_id,
					"deposit_account_id"	: view[0].deposit_account_id,
					"trade_discount_id"		: view[0].trade_discount_id,
					"settlement_discount_id": view[0].settlement_discount_id,					
					"is_pattern" 			: 0,
					"status"				: 1								
				});

				var obj = self.dataSource.at(0);				
				//Pattern
				if(self.get("contact_type_id")>0){
					obj.set("contact_type_id", self.get("contact_type_id"));
					obj.set("abbr", "");
					obj.set("is_pattern", 1);
				}

				self.set("obj", obj);
				self.generateNumber();
      		});								
		},
		contactSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },			
		save 					: function(){			
			var self = this;

			if(this.get("isEdit")){
				this.dataSource.sync();				
				this.contactPersonDS.sync();
			}else{
				this.contactSync().then(function(data){
					self.saveContactPerson(data[0].id);
					if(data[0].is_pattern){
						self.savePattern(data[0].contact_type_id, data[0].id);
					}
				}).then(function(){
					self.addEmpty();										
				});
			}									
		},
		delete 					: function(){
			var self = this,
			obj = this.get("obj");

			if(!obj.is_pattern){
				if (confirm("Are you sure, you want to delete it?")) {				
					this.deleteDS.query({
					  	filter: { field: "contact_id", value: obj.id },
					  	page: 1,
					  	pageSize: 1
					}).then(function() {
						var view = self.deleteDS.view();

						if(view.length>0){
							alert("Sorry, you can not delete it because it is using now.");
						}else{
							var data = self.dataSource.get(obj.id);
					        data.set("deleted", 1);
					        self.save();

					        window.history.back();				        
						}
					});								
		    	}
	    	}
		},
		cancel 					: function(){
			this.dataSource.cancelChanges();
			this.contactPersonDS.cancelChanges();
			this.set("contact_type_id", 0);

			banhji.userManagement.removeMultiTask("customer");
		}		
	});
	banhji.quote =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),			
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Quote" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		balanceDS  			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		employeeDS  		: banhji.source.saleRepDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS 			: banhji.source.customerTaxDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),		
		segmentItemDS		: banhji.source.segmentItemDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,		
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		addNewItem			: banhji.source.addNewItem,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		statusSrc 			: "",
		showDiscount 		: false,
		sub_total 			: 0,		
		discount 			: 0,
		balance 			: 0,		
		total 				: 0,		
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);						
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	//Delete File
            	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });
	    },   
		//Contact
		loadContact 		: function(id){
			var self = this, obj = self.get("obj");			
			
			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view();
		    	
		    	obj.set("contact_id", view[0].id);		    	
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.loadBalance();
				self.loadRecurring();						
			});
		},		
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadBalance();		    			    	
		    	this.loadRecurring();    			    	
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" },
					{ field:"status", operator:"where_in", value:[0,2] }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = 0,
				creditAllowed = 0;

				$.each(view, function(index, value){
					if(value.status==0){
						balance += value.amount;
					}else{
						balance += (value.amount - value.amount_paid);
					}
				});

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
	    //Currency Rate	
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}
			});				
		},
		//Segment				
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);
			
			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));
				self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));				
				
				self.set("obj", view[0]);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.usedSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}

				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.attachmentDS.filter({ field: "transaction_id", value: view[0].id });
				self.loadRecurring();				
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0){			
				var total = 0, subTotal = 0, discount =0, tax = 0;											

				$.each(this.lineDS.data(), function(index, value) {				
					var amt = value.quantity * value.price;					

					//Discount by line
					if(value.discount>0){										
						var discount_amount = amt * value.discount;
						amt -= discount_amount;
						discount += discount_amount;																	
					}

					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += amt * taxItem.rate;																	
					}					

					value.set("amount", amt);					
					subTotal += amt;					
		        });				

		    	//Total
		        total = subTotal + tax;		        

		        //Warning over credit allowed
		        if(obj.credit_allowed>0 && total>obj.credit_allowed){
		        	this.set("amtDueColor", "Gold");		        	
		        }else{
		        	this.set("amtDueColor", banhji.source.amtDueColor);
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
		        this.set("discount", kendo.toString(discount, "c", obj.locale));
		        this.set("tax", kendo.toString(tax, "c", obj.locale));
		        this.set("total", kendo.toString(total, "c", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("discount", discount);
		        obj.set("tax", tax);			
				obj.set("amount", total);									    	
	    	}	
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);			

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("tax", 0);
			this.set("discount", 0);			
			this.set("total", 0);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);				

			this.dataSource.insert(0,{				
				contact_id 				: "",				
				transaction_template_id : 0,				
				recurring_id 			: "",				
				user_id 				: this.get("user_id"),
				employee_id 			: "", 	    		
			   	type					: "Quote",
			   	sub_total 				: 0,			   			   	
			   	amount					: 0,
			   	discount 				: 0,
			   	tax 					: 0,
			   	rate					: 1,			   	
			   	locale 					: banhji.locale,			   	
			   	issued_date 			: new Date(),
			   	due_date 				: duedate,			   	
			   	bill_to 				: "",
			   	ship_to 				: "",
			   	memo 					: "",
			   	memo2 					: "",
			   	status 					: 0,
			   	segments 				: [],
			   	//Recurring
			   	recurring_name 			: "",
			   	start_date 				: new Date(),
			   	frequency 				: "Daily",
			   	month_option 			: "Day",
			   	interval 				: 1,
			   	day 					: 1,
			   	week 					: 0,
			   	month 					: 0,
			   	is_recurring 			: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);					
			this.set("obj", obj);

			this.addRow();
			this.setRate();
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changes
		    	if(this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}	    	
	    	
    		//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);										
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });			

			banhji.userManagement.removeMultiTask("quote");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);

			if(obj.status==0){
				obj.set("deleted", 1);
		        self.dataSource.sync();

		        window.history.back();
			}else{
				alert("Sorry, you can not delete it.");
			}	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},		 
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);					
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,							
							item_id 			: value.item_id,									
							description 		: value.description,							
							quantity 			: value.quantity,
							price 				: value.price,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,				
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,			   				   				   		   					   				   	
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,			   	
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,				   		   	   	
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,					
					item_id 			: value.item_id,								
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,													
					amount 	 			: value.amount,
					discount 			: value.discount,				
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.saleOrder =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),		
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Sale_Order" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		jobDS				: dataStore(apiUrl + "jobs"),		
		balanceDS  			: dataStore(apiUrl + "transactions"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		employeeDS  		: banhji.source.saleRepDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS  			: banhji.source.customerTaxDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),
		segmentItemDS		: banhji.source.segmentItemDS,
		amtDueColor 		: banhji.source.amtDueColor,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,    
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		showDiscount 		: false,
		showRequiredDate 	: false,
		sub_total 			: 0,		
		discount 			: 0,
		balance 			: 0,		
		total 				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.loadBalance();
				self.loadReference();
				self.loadRecurring();						
			});
		},		
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value: obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadBalance();
		    	this.loadReference();
		    	this.loadRecurring();    	
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" },
					{ field:"status", operator:"where_in", value:[0,2] }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = 0,
				creditAllowed = 0;

				$.each(view, function(index, value){
					if(value.status==0){
						balance += value.amount;
					}else{
						balance += (value.amount - value.amount_paid);
					}
				});

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
		//Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));										
				}else{
					obj.set("rate", 1);
				}
			});				
		},
		//Segment		
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));
				self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));										
				
				self.set("obj", view[0]);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.usedSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}

				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.attachmentDS.filter({ field: "transaction_id", value: view[0].id });
				self.loadRecurring();	
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0){			
				var total = 0, subTotal = 0, discount =0, tax = 0;											

				$.each(this.lineDS.data(), function(index, value) {				
					var amt = value.quantity * value.price;					

					//Discount by line
					if(value.discount>0){										
						var discount_amount = amt * value.discount;
						amt -= discount_amount;
						discount += discount_amount;																	
					}

					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += amt * taxItem.rate;																	
					}					

					value.set("amount", amt);					
					subTotal += amt;					
		        });				

		    	//Total
		        total = subTotal + tax;		        

		        //Warning over credit allowed
		        if(obj.credit_allowed>0 && total>obj.credit_allowed){
		        	this.set("amtDueColor", "Gold");		        	
		        }else{
		        	this.set("amtDueColor", banhji.source.amtDueColor);
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
		        this.set("discount", kendo.toString(discount, "c", obj.locale));
		        this.set("tax", kendo.toString(tax, "c", obj.locale));
		        this.set("total", kendo.toString(total, "c", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("discount", discount);
		        obj.set("tax", tax);			
				obj.set("amount", total);									    	
	    	}	
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);
			
			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);			
			this.set("discount", 0);
			this.set("tax", 0);			
			this.set("total", 0);

			//Set Date
			var duedate = new Date();
			duedate.setDate(duedate.getDate() + 30);				

			this.dataSource.insert(0, {				
				contact_id 			: "",				
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
				employee_id			: "", 	    		
			   	type				: "Sale_Order",
			   	sub_total 			: 0,
			   	amount				: 0,
			   	credit_allowed 		: 0,			   	
			   	discount 			: 0,
			   	tax 				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: duedate,			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);
			this.set("obj", obj);

			this.addRow();
			this.setRate();
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,				
				rate				: obj.rate,
				locale				: obj.locale,
				required_date 		: new Date(),

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);
	    		ref.set("status", 1);
	    		this.referenceDS.sync();
	    	}else{
	    		obj.set("reference_id", 0);
	    	}

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changes
		    	if(this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);										
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}
				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });			

			banhji.userManagement.removeMultiTask("sale_order");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        if(obj.status==0){
				obj.set("deleted", 1);
		        self.dataSource.sync();

		        window.history.back();
			}else{
				alert("Sorry, you can not delete it.");
			}		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", value: "Quote" },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);				
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("employee_id", data.employee_id);
				obj.set("segments", data.segments);
								
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: 0,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});
		 	}
		},
		//Recurring		
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);					
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,							
							item_id 			: value.item_id,									
							description 		: value.description,							
							quantity 			: value.quantity,
							price 				: value.price,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,				
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,			   				   				   		   					   				   	
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,			   	
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,				   		   	   	
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,					
					item_id 			: value.item_id,								
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,													
					amount 	 			: value.amount,
					discount 			: value.discount,				
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.recurringDS.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    }
	});
	banhji.customerDeposit =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		deleteDS 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "account_lines"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "account_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Deposit" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		contactDS 			: banhji.source.customerDS,
		depositAccountDS 	: banhji.source.depositAccountDS,
		segmentItemDS 		: banhji.source.segmentItemDS,
		accountDS 			: banhji.source.cashAccountDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthList 			: banhji.source.monthList,	
		monthOptionList 	: banhji.source.monthOptionList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		total				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Contact
		loadContact 		: function(id){
			var self = this;

			this.contactDS.query({
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("account_id", view[0].deposit_account_id);
		    	obj.set("locale", view[0].locale);
				
				self.setRate();
				self.loadReference();
				self.loadRecurring();
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");

	    	if(obj.contact_id>0){
		    	var contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("account_id", contact.deposit_account_id);
		    	obj.set("locale", contact.locale);
		    	this.setRate();
		    	this.loadReference();
		    	this.loadRecurring();
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
		//Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}
			});				
		},
		//Segment
		segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}

			this.dataSource.query({
				filter: para,
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.dataSource.view();

				self.set("obj", view[0]);
				self.set("original_total", view[0].amount);
				self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
				self.lineDS.filter({ field: "transaction_id", value: id });				
				self.journalLineDS.filter({ field: "transaction_id", value: id });
				self.loadReference();
			});
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){
				var sum = 0;
				
				$.each(this.lineDS.data(), function(index, value) {
					sum += value.amount;
		        });

		        this.set("total", kendo.toString(sum, "c", obj.locale));
		        obj.set("amount", sum);
	    	}else{
	    		this.set("total", 0);
		        obj.set("amount", 0);
	    	}
		},
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);
			this.journalLineDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);

			this.dataSource.insert(0, {
				contact_id 				: "",
				transaction_template_id : "",
				recurring_id 			: "",
				reference_id	 		: "",
				account_id 				: "",
				user_id 				: this.get("uer_id"),
			   	type					: "Deposit", //required
			   	amount					: 0,
			   	rate					: 1,
			   	locale 					: banhji.institute.locale,
			   	issued_date 			: new Date(),
			   	memo 					: "",
			   	memo2 					: "",
			   	segments 				: [],
			   	is_journal 				: 1,
			   	//Recurring
			   	recurring_name 			: "",
			   	start_date 				: new Date(),
			   	frequency 				: "Daily",
			   	month_option 			: "Day",
			   	interval 				: 1,
			   	day 					: 1,
			   	week 					: 0,
			   	month 					: 0,
			   	is_recurring 			: 0
	    	});

			var obj = this.dataSource.at(0);
			this.set("obj", obj);
			this.addRow();
			this.setRate();
		},
		addRow 				: function(){
			var obj = this.get("obj");
					
			this.lineDS.add({
				transaction_id 		: obj.id,
				account_id 			: "",
				description 		: "",
				reference_no 		: "",
				amount 	 			: 0,
				rate				: obj.rate,
				locale				: obj.locale
			});
		},
		removeRow  			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},
		objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);

	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				ref.set("deposit", obj.amount);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}

		    	//Line has changed
		    	if(obj.amount!==this.get("original_total")){
		    		this.set("original_total",0);

			    	$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				// Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});			
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			
			banhji.userManagement.removeMultiTask("customer_deposit");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"type", value:"Sale_Order" },
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Journal
		addJournal 			: function(transaction_id){
	    	var self = this,
	    	sum = 0,
	    	obj = this.get("obj");

			//Cash account on DR
			$.each(this.lineDS.data(), function(index, value){
				sum += value.amount;
				self.journalLineDS.add({
					transaction_id 		: transaction_id,
					account_id 			: value.account_id,
					contact_id 			: value.contact_id,
					description 		: "",
					reference_no 		: value.reference_no,
					segments 	 		: [],
					dr 	 				: value.amount,
					cr 					: 0,
					rate				: value.rate,
					locale				: value.locale
				});
			});

			//Deposit on CR
			this.journalLineDS.add({
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,
				contact_id 			: obj.contact_id,
				description 		: "",
				reference_no 		: "",
				segments 	 		: obj.segments,
				dr 	 				: 0,
				cr 					: sum,
				rate				: obj.rate,
				locale				: obj.locale
			});

			this.journalLineDS.sync();
		},
		//Reference
		loadReference 		: function(){
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", value: "Sale_Order" },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);
		},
		referenceChanges 	: function(){
			var obj = this.get("obj");

			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("segments", data.segments);
				obj.set("amount", data.amount);

				this.lineDS.data([]);
				this.lineDS.add({
					transaction_id 		: obj.id,
					account_id 			: "",
					description 		: "",
					reference_no 		: data.number,
					amount 	 			: data.amount,
					rate				: data.rate,
					locale				: data.locale
				});
			 	this.set("total", kendo.toString(data.amount, "c", data.locale));
		 	}
		},
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});
			}else{
				this.addEmpty();
			}
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }
	});
	banhji.cashSale =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		deleteDS 			: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		jobDS				: dataStore(apiUrl + "jobs"),		
		balanceDS  			: dataStore(apiUrl + "transactions"),
		depositDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transactions/amount_sum",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "transactions",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "transactions",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "transactions",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,								
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Cash_Sale" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		cashAccountDS  		: banhji.source.cashAccountDS,
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		employeeDS  		: banhji.source.saleRepDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS  			: banhji.source.customerTaxDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),
		segmentItemDS		: banhji.source.segmentItemDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		showDiscount 		: false,
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		total_deposit		: 0,
		total 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm(banhji.source.confirmMessage)) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
	        	}	            
	        });

	        this.attachmentDS.sync();
	        var saved = false;
	        this.attachmentDS.bind("requestEnd", function(e){
	        	//Delete File
	        	if(e.type=="destroy"){
	            	if(saved==false && e.response){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var params = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(params, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
	        	}
	        });
	    },
		//Deposit
		loadDeposit 		: function(){
			var self = this, obj = this.get("obj");

			this.depositDS.query({
				filter:[
					{ field:"type", value:"Deposit" },
					{ field:"contact_id", value:obj.contact_id }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.depositDS.view(),
				total_deposit = view[0].amount + obj.deposit;

				self.set("total_deposit", total_deposit);
			});
		},
		addDeposit 			: function(){
			var obj = this.get("obj");

			this.depositDS.data([]);
			
			if(obj.deposit>0){				
				this.depositDS.add({				
					contact_id 			: obj.contact_id,								
					reference_id 		: obj.id,				
					user_id 			: this.get("user_id"),				    		
				   	type				: "Deposit",
				   	amount				: obj.deposit*-1,			   	
				   	rate				: obj.rate,			   	
				   	locale 				: obj.locale,			   	
				   	issued_date 		: obj.issued_date			   	
		    	});
			}
		},		
		saveDeposit 		: function(){			
			var obj = this.get("obj");
			
    		if(this.get("isEdit")){
    			if(this.depositDS.total()>0){
					var deposit = this.depositDS.at(0);
					deposit.set("amount", obj.deposit*-1);
				}else{
					this.addDeposit();
				}
    		}else{
				this.addDeposit();
    		}

			this.depositDS.sync();
		},
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("payment_method_id", view[0].payment_method_id);		    	
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();				
				self.loadDeposit();
				self.loadReference();
				self.loadRecurring();							
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value: obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);		    			    	
		    	
		    	obj.set("payment_method_id", contact.payment_method_id);		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();		    	
		    	this.loadDeposit();
		    	this.loadBalance();
		    	this.loadReference();
		    	this.loadRecurring();	    	
	    	}else{
	    		this.set("total_deposit", 0);
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" },
					{ field:"status", operator:"where_in", value:[0,2] }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = 0,
				creditAllowed = 0;

				$.each(view, function(index, value){
					if(value.status==0){
						balance += value.amount;
					}else{
						balance += (value.amount - value.amount_paid);
					}
				});

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
	    //Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"), 
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("obj", view[0]);
				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));
				self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));
		        
				self.set("statusSrc", banhji.source.paidSrc);
								
				//self.contactDS.filter({ field: "id", value: view[0].contact_id });				
				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });				
				self.depositDS.filter([
					{ field: "reference_id", value: view[0].id },
					{ field: "type", value: "Credit" }
				]);
				
				self.set("original_total", view[0].amount);
				self.set("original_credit", view[0].credit);

				self.loadDeposit();				
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0){			
				var total = 0, subTotal = 0, discount =0, tax = 0;
								
				if(kendo.parseInt(obj.tax_item_id)>0){
					var selectedVat 					
					vatAmt = kendo.parseFloat(selectedVat.item_prices[0].price);
				}								

				$.each(this.lineDS.data(), function(index, value) {				
					var amt = value.quantity * value.price;					

					//Discount by line
					if(value.discount>0){										
						var discount_amount = amt * value.discount;
						amt -= discount_amount;
						discount += discount_amount;																	
					}

					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += amt * taxItem.rate;																	
					}					

					value.set("amount", amt);					
					subTotal += amt;					
		        });				

		    	//Total
		        total = subTotal + tax;

		        //Apply Deposit
		        if(obj.deposit>0){
		        	if(obj.deposit <= this.get("total_deposit")){
			        	if(obj.deposit <= total){
			        		total -= obj.deposit;
			        	}else{
			        		obj.set("deposit", total);
			        		total = 0;
			        	}
			        }else{
		        		alert("Over deposit to apply!");
		        		obj.set("deposit", 0);
		        	}
		        }

		        //Warning over credit allowed
		        if(obj.credit_allowed>0 && total>obj.credit_allowed){
		        	this.set("amtDueColor", "Gold");		        	
		        }else{
		        	this.set("amtDueColor", banhji.source.amtDueColor);
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
		        this.set("discount", kendo.toString(discount, "c", obj.locale));
		        this.set("tax", kendo.toString(tax, "c", obj.locale));
		        this.set("total", kendo.toString(total, "c", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("discount", discount);
		        obj.set("tax", tax);			
				obj.set("amount", total);									    	
	    	}else{
	    		this.set("sub_total", kendo.toString(0, "c", obj.locale));
	    		this.set("discount", kendo.toString(0, "c", obj.locale));
		        this.set("tax", kendo.toString(0, "c", obj.locale));
		        this.set("total", kendo.toString(0, "c", obj.locale));

		        obj.set("sub_total", 0);
		        obj.set("discount", 0);
		        obj.set("tax", 0);			
				obj.set("amount", 0);				
	    	}   	
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.depositDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("tax", 0);
			this.set("discount", 0);
			this.set("total_deposit", 0);
			this.set("total", 0);				

			this.dataSource.insert(0, {				
				contact_id 			: "",//Customer
				payment_method_id	: 0,				
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
				employee_id			: "",//Sale Rep 	    		
			   	type				: "Cash_Sale",//Required
			   	sub_total 			: 0,
			   	account_id 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	deposit 			: 0,
			   	discount 			: 0,		   	
			   	fine 				: 0,
			   	tax 				: 0,
			   	check_no 			: "",
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);
			
			this.setRate();
			this.addRow();			
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				fine 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,							
				movement 			: -1,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var d = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(d);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Warning over credit allowed
	        if(obj.credit_limit>0 && obj.amount>obj.credit_allowed){
	        	alert("Over credit allowed!");		        	
	        }

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);				
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}

		    	//Line has changed
		    	if(obj.amount!==this.get("original_total")){
		    		this.set("original_total",0);

			    	$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.saveDeposit();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });

			banhji.userManagement.removeMultiTask("cash_sale");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"type", value:"Sale_Return" },
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),	    				    	
	    	saleList = {},
	    	taxList = {},
	    	inventoryList = {},
			cogsList = {};			
			
			//Arrange sale, cogs, inventory
			$.each(this.lineDS.data(), function(index, value){										
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;				
				
				//Add sale list
				var incomeID = item.income_account_id;																				
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}

				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;

					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				
				
				//Inventory
				if(item.item_type_id==1){
					//Add cogs list
					var itemRate = obj.rate / item.item_prices[0].rate,
					itemCost = value.quantity*item.cost/itemRate,
					cogsID = item.cogs_account_id;

					if(cogsList[cogsID]===undefined){
						cogsList[cogsID]={"id": cogsID, "amount": itemCost};						
					}else{											
						if(cogsList[cogsID].id===cogsID){
							cogsList[cogsID].amount += itemCost;
						}else{
							cogsList[cogsID]={"id": cogsID, "amount": itemCost};
						}
					}						

					//Add inventory list
					var inventoryID = item.inventory_account_id;
					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += itemCost;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};
						}
					}
				}					  	
			});//End Foreach Loop			

			//Start journal
			//Cash on Dr 
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: obj.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: obj.amount,
				cr 					: 0,				
				rate				: obj.rate,
				locale				: obj.locale
			});

			//Discount on Dr			
			if(obj.discount > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.discount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Deposit and Credit on Dr
			if(obj.deposit > 0 || obj.credit > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.deposit + obj.credit,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Sale accounts on Cr		
			if(!jQuery.isEmptyObject(saleList)){				
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}

			//Tax on Cr					
			if(!jQuery.isEmptyObject(taxList)){				
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}	

			//Inventory to journal
			//COGS on Dr 			
			if(!jQuery.isEmptyObject(cogsList)){							
				$.each(cogsList, function(index, value){				
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});								
				});							
			}
			//Inventory on Cr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			this.journalLineDS.sync();
		},
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", operator:"where_in", value:["Sale_Order", "Quote", "GDN"] },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);					
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);

				obj.set("employee_id", data.employee_id);
				obj.set("segments", data.segments);
				obj.set("deposit", data.deposit);
												
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							fine 				: value.fine,
							rate				: value.rate,
							locale				: value.locale,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
			}								
		},
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});
			}else{
				this.addEmpty();
			}
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }	 		
	});	
	banhji.invoice =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		jobDS				: dataStore(apiUrl + "jobs"),		
		balanceDS  			: dataStore(apiUrl + "transactions"),
		depositDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transactions/amount_sum",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},
				create 	: {
					url: apiUrl + "transactions",
					type: "POST",
					headers: banhji.header,
					dataType: 'json'
				},
				update 	: {
					url: apiUrl + "transactions",
					type: "PUT",
					headers: banhji.header,
					dataType: 'json'
				},
				destroy 	: {
					url: apiUrl + "transactions",
					type: "DELETE",
					headers: banhji.header,
					dataType: 'json'
				},
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,								
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Invoice" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		employeeDS  		: banhji.source.saleRepDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS  			: banhji.source.customerTaxDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		paymentTermDS 		: dataStore(apiUrl + "payment_terms"),
		segmentItemDS		: banhji.source.segmentItemDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		showDiscount 		: false,
		sub_total 			: 0,
		tax 				: 0,
		discount 			: 0,
		balance 			: 0,
		total_deposit		: 0,
		total 				: 0,
		original_total 		: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },		
		//Deposit
		loadDeposit 		: function(){
			var self = this, obj = this.get("obj");

			this.depositDS.query({
				filter:[
					{ field:"type", value:"Deposit" },
					{ field:"contact_id", value:obj.contact_id }
				],
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.depositDS.view(),
				total_deposit = view[0].amount + obj.deposit;

				self.set("total_deposit", total_deposit);
			});
		},
		addDeposit 			: function(){
			var obj = this.get("obj");

			this.depositDS.data([]);
			
			if(obj.deposit>0){				
				this.depositDS.add({				
					contact_id 			: obj.contact_id,								
					reference_id 		: obj.id,				
					user_id 			: this.get("user_id"),				    		
				   	type				: "Deposit",
				   	amount				: obj.deposit*-1,			   	
				   	rate				: obj.rate,			   	
				   	locale 				: obj.locale,			   	
				   	issued_date 		: obj.issued_date			   	
		    	});
			}
		},		
		saveDeposit 		: function(){			
			var obj = this.get("obj");
			
    		if(this.get("isEdit")){
    			if(this.depositDS.total()>0){
					var deposit = this.depositDS.at(0);
					deposit.set("amount", obj.deposit*-1);
				}else{
					this.addDeposit();
				}
    		}else{
				this.addDeposit();
    		}

			this.depositDS.sync();
		},
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("payment_term_id", view[0].payment_term_id);		    	
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.setTerm();
				self.loadDeposit();
				self.loadReference();
				self.loadRecurring();							
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value: obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	var contact = this.contactDS.get(obj.contact_id);		    	 	
		    	
		    	obj.set("payment_term_id", contact.payment_term_id);
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.setTerm();
		    	this.loadDeposit();
		    	this.loadBalance();
		    	this.loadReference();
		    	this.loadRecurring();  			    	
	    	}else{
	    		this.set("total_deposit", 0);
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
	    loadBalance 		: function(){
			var self = this, obj = this.get("obj");			

			this.balanceDS.query({    			
				filter:[
					{ field:"contact_id", value:obj.contact_id },
					{ field:"type", value:"Invoice" },
					{ field:"status", operator:"where_in", value:[0,2] }
				],
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.balanceDS.view(),				
				contact = self.contactDS.get(obj.contact_id),
				balance = 0,
				creditAllowed = 0;

				$.each(view, function(index, value){
					if(value.status==0){
						balance += value.amount;
					}else{
						balance += (value.amount - value.amount_paid);
					}
				});

				if(contact.credit_limit > balance){
					creditAllowed = contact.credit_limit - balance;
				}
						    	
		    	self.set("balance", kendo.toString(balance, "c", obj.locale));
		    	obj.set("credit_allowed", creditAllowed);		
			});				
		},
	    //Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},
		//Payment Term
		setTerm 			: function(){
			var duedate = new Date(), obj = this.get("obj");

			if(obj.payment_term_id>0){
				var term = this.paymentTermDS.get(obj.payment_term_id);

				duedate.setDate(duedate.getDate() + term.net_due);

				obj.set("due_date", duedate);
			}else{
				obj.set("due_date", new Date());
			}			
		},
		//Segments	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				

				self.set("obj", view[0]);
				self.set("original_total", view[0].amount);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.paidSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));
				self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));	  			
								
				//self.contactDS.filter({ field: "id", value: view[0].contact_id });				
				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });				
				self.depositDS.filter([
					{ field: "reference_id", value: view[0].id },
					{ field: "type", value: "Deposit" }
				]);

				self.loadDeposit();				
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj");

			if(this.lineDS.total()>0){			
				var total = 0, subTotal = 0, discount =0, tax = 0;											

				$.each(this.lineDS.data(), function(index, value) {				
					var amt = value.quantity * value.price;					

					//Discount by line
					if(value.discount>0){										
						var discount_amount = amt * value.discount;
						amt -= discount_amount;
						discount += discount_amount;																	
					}

					//Tax by line
					if(value.tax_item_id>0){
						var taxItem = self.taxItemDS.get(value.tax_item_id);										
						tax += amt * taxItem.rate;																	
					}					

					value.set("amount", amt);					
					subTotal += amt;					
		        });				

		    	//Total
		        total = subTotal + tax;

		        //Apply Deposit
		        if(obj.deposit>0){
		        	if(obj.deposit <= this.get("total_deposit")){
			        	if(obj.deposit <= total){
			        		total -= obj.deposit;
			        	}else{
			        		obj.set("deposit", total);
			        		total = 0;
			        	}
			        }else{
		        		alert("Over deposit to apply!");
		        		obj.set("deposit", 0);
		        	}
		        }

		        //Warning over credit allowed
		        if(obj.credit_allowed>0 && total>obj.credit_allowed){
		        	this.set("amtDueColor", "Gold");		        	
		        }else{
		        	this.set("amtDueColor", banhji.source.amtDueColor);
		        }

		        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
		        this.set("discount", kendo.toString(discount, "c", obj.locale));
		        this.set("tax", kendo.toString(tax, "c", obj.locale));
		        this.set("total", kendo.toString(total, "c", obj.locale));

		        obj.set("sub_total", subTotal);
		        obj.set("discount", discount);
		        obj.set("tax", tax);			
				obj.set("amount", total);									    	
	    	}	
		},					
		addEmpty 		 	: function(){
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.depositDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("tax", 0);
			this.set("discount", 0);
			this.set("total_deposit", 0);
			this.set("total", 0);				

			this.dataSource.insert(0, {				
				contact_id 			: "",//Customer
				payment_term_id		: 0,				
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
				employee_id 		: "",//Sale Rep 	    		
			   	type				: "Invoice",//Required
			   	sub_total 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	deposit 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	credit_allowed 		: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	due_date 			: new Date(),			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.setRate();	
			this.addRow();
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				fine 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,							
				movement 			: -1,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Status
	    	if(obj.amount==0){
	    		obj.set("status", 1);
	    	}else{
	    		obj.set("status", 0);
	    	}
	    	
	    	//Warning over credit allowed
	        if(obj.credit_limit>0 && obj.amount>obj.credit_allowed){
	        	alert("Over credit allowed!");		        	
	        }

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);				
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}

		    	//Line has changed
		    	if(obj.amount!==this.get("original_total")){
		    		this.set("original_total",0);

			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.saveDeposit();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });			

			banhji.userManagement.removeMultiTask("invoice");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        if(obj.status==0){
				obj.set("deleted", 1);
		        self.dataSource.sync();

		        window.history.back();
			}else{
				alert("Sorry, you can not delete it.");
			}		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),	    				    	
	    	saleList = {},
	    	taxList = {},
	    	inventoryList = {},
			cogsList = {};			
			
			//Arrange sale, cogs, inventory
			$.each(this.lineDS.data(), function(index, value){										
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;				
				
				//Add sale list
				var incomeID = item.income_account_id;																				
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}

				//Add tax list																							
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = value.amount*taxItem.rate;

					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				
				
				//Inventory
				if(item.item_type_id==1){
					//Add cogs list
					var itemCost = value.quantity*item.cost,
					cogsID = item.cogs_account_id;				
					if(cogsList[cogsID]===undefined){
						cogsList[cogsID]={"id": cogsID, "amount": itemCost};						
					}else{											
						if(cogsList[cogsID].id===cogsID){
							cogsList[cogsID].amount += itemCost;
						}else{
							cogsList[cogsID]={"id": cogsID, "amount": itemCost};
						}
					}						

					//Add inventory list
					var inventoryID = item.inventory_account_id;
					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += itemCost;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};
						}
					}
				}					  	
			});//End Foreach Loop			

			//Start journal
			//A/R on Dr
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: contact.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: obj.amount,
				cr 					: 0,				
				rate				: obj.rate,
				locale				: obj.locale
			});

			//Discount on Dr			
			if(obj.discount > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.discount,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Deposit and Credit on Dr
			if(obj.deposit > 0 || obj.credit > 0){				
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: obj.deposit + obj.credit,
					cr 					: 0,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Sale accounts on Cr		
			if(!jQuery.isEmptyObject(saleList)){				
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}

			//Tax on Cr					
			if(!jQuery.isEmptyObject(taxList)){				
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});										
				});
			}	

			//Inventory to journal
			//COGS on Dr 			
			if(!jQuery.isEmptyObject(cogsList)){							
				$.each(cogsList, function(index, value){				
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});								
				});							
			}
			//Inventory on Cr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			this.journalLineDS.sync();
		},
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", operator:"where_in", value:["Sale_Order", "Quote", "GDN"] },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);					
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);
				
				obj.set("employee_id", data.employee_id);
				obj.set("segments", data.segments);
				obj.set("deposit", data.deposit);
												
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
			}								
		},
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});
			}else{
				this.addEmpty();
			}
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }	 		
	});
	banhji.gdn =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		deleteDS 			: dataStore(apiUrl + "transactions"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		jobDS				: dataStore(apiUrl + "jobs"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		employeeDS  		: banhji.source.saleRepDS,
		itemDS  			: banhji.source.itemDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"GDN" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		total 				: 0,
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();						
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value: obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);
		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();   			    	
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
	    //Currency Rate
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();

				self.set("obj", view[0]);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.usedSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}
				
				//self.contactDS.filter({ field: "id", value: view[0].contact_id });				
				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), total = 0;												

			$.each(this.lineDS.data(), function(index, value) {				
				total += value.quantity;										
	        });

	        obj.set("amount", total);	    	
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.attachmentDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("total", 0);				

			this.dataSource.insert(0, {				
				contact_id 			: "",
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
				employee_id 		: "",
			   	type				: "GDN",	   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.addRow();
			this.setRate();			
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				rate				: obj.rate,
				locale				: obj.locale,							
				movement 			: -1,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);				
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}
	    	}	    	
	    	
			//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });
				}

				self.lineDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });			

			banhji.userManagement.removeMultiTask("gdn");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			this.referenceDS.filter([
				{ field: "contact_id", value: obj.contact_id },
				{ field: "status", value: 0 },
				{ field: "type", operator:"where_in", value:["Quote", "Sale_Order", "Invoice"] },
				{ field: "due_date <=", value: kendo.toString(obj.issued_date, "yyyy-MM-dd") }
			]);					
		},
		referenceChanges 	: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var data = this.referenceDS.get(obj.reference_id);
				
				obj.set("employee_id", data.employee_id);
				obj.set("segments", data.segments);
				obj.set("deposit", data.deposit);
												
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							rate				: value.rate,
							locale				: value.locale,							

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				obj.set("deposit", 0);
			}								
		},
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});
			}else{
				this.addEmpty();
			}
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }	 		
	});
	banhji.saleReturn =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		lineDS  			: dataStore(apiUrl + "transactions/line"),
		deleteDS 			: dataStore(apiUrl + "transactions"),		
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "transactions/line"),
		referenceDS			: dataStore(apiUrl + "transactions"),
		referenceLineDS		: dataStore(apiUrl + "transactions/line"),
		returnDS			: dataStore(apiUrl + "transactions"),
		invoiceDS			: dataStore(apiUrl + "transactions"),
		jobDS				: dataStore(apiUrl + "jobs"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		itemDS  			: banhji.source.itemDS,
		taxItemDS  			: banhji.source.customerTaxDS,
		accountDS  			: banhji.source.cashAccountDS,
		catalogDS			: dataStore(apiUrl + "items"),
		assemblyDS			: dataStore(apiUrl + "items/assembly"),		
		segmentItemDS		: banhji.source.segmentItemDS,
		attachmentDS	 	: dataStore(apiUrl + "attachments"),
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Sale_Return" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		optionList 			: [
			{ id:"Offset_Invoice", name:"Charge Against Invoice" },
			{ id:"Deposit", name:"Add To Deposit" },
			{ id:"Credit_Note", name:"Cash Refund" }
		],
		amtDueColor 		: banhji.source.amtDueColor,
		confirmMessage 		: banhji.source.confirmMessage,		
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,
		obj 				: null,
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		saveRecurring 		: false,
		showConfirm 		: false,
		statusSrc 			: "",
		bolReference 		: false,
		showReturn 			: true,
		showDiscount 		: false,		
		sub_total 			: 0,		
		discount 			: 0,
		tax 				: 0,		
		total 				: 0,
		remain 				: 0,
		original_total 		: 0,		
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit") || this.dataSource.total()==0){
					this.addEmpty();
				}								
			}
		},
		//Upload
		onSelect 			: function(e){			
	        // Array with information about the uploaded files
	        var self = this, 
	        files = e.files,
	        obj = this.get("obj");			
			
	        // Check the extension of each file and abort the upload if it is not .jpg
	        $.each(files, function(index, value){
	            if (value.extension.toLowerCase() === ".jpg"
	            	|| value.extension.toLowerCase() === ".jpeg"
	            	|| value.extension.toLowerCase() === ".tiff"
	            	|| value.extension.toLowerCase() === ".png" 
	            	|| value.extension.toLowerCase() === ".gif"
	            	|| value.extension.toLowerCase() === ".pdf"){

	            	var key = 'ATTACH_' + banhji.institute.id + "_" + Math.floor(Math.random() * 100000000000000001) +'_'+ value.name;

	            	self.attachmentDS.add({
	            		transaction_id 	: obj.id,
	            		type 			: "Transaction",
	            		name 			: value.name,
	            		description 	: "",
	            		key 			: key,
	            		url 			: banhji.s3 + key,
	            		created_at 		: new Date(),

	            		file 			: value.rawFile
	            	});	            			            		            
	            }else{
	            	alert("This type of file is not allowed to attach.");
	            }
	        });
	    },	    
	    onRemove 			: function(e){
	        // Array with information about the uploaded files
	        var self = this, files = e.files;
	        $.each(this.attachmentDS.data(), function(index, value){
	        	if(value.name==files[0].name){
	        		self.attachmentDS.remove(value);

	        		return false;
	        	}
	        });
	    },
	    removeFile 			: function(e){
	    	var data = e.data;

	    	if (confirm("Are you sure, you want to delete it?")) {
	    		this.attachmentDS.remove(data);
	    	}	    	
	    },
	    uploadFile 			: function(){
	    	var self = this;

	    	$.each(this.attachmentDS.data(), function(index, value){	    		
		    	if(!value.id){
			    	var params = { 
		            	Body: value.file, 
		            	Key: value.key 
		            };
		            bucket.upload(params, function (err, data) {		                
	                	// console.log(err, data);
	                	// var url = data.Location;                
	            	});
            	}	            
            });            

            this.attachmentDS.sync();
            var saved = false;
            this.attachmentDS.bind("requestEnd", function(e){
            	if(e.type=="destroy"){
	            	if(saved==false){
	            		saved = true;
	            	
	            		var response = e.response.results;
	            		$.each(response, function(index, value){            			
		            		var paramz = {
							  	//Bucket: 'STRING_VALUE', /* required */
							 	Delete: { /* required */
								    Objects: [ /* required */
								      	{
									        Key: value.data.key /* required */
								      	}
								      /* more items */
								    ]
							  	}
							};
							bucket.deleteObjects(paramz, function(err, data) {
							  	//console.log(err, data);
							});
						});
	            	}
            	}
            });

            //Clear upload files
            $(".k-upload-files").remove();
	    },
		//Contact
		loadContact 		: function(id){
			var self = this;
			this.jobDS.filter({ field:"contact_id", value:id });			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				obj = self.get("obj");
		    	
		    	obj.set("contact_id", view[0].id);		    		    	
		    	obj.set("locale", view[0].locale);				
				obj.set("bill_to", view[0].bill_to);
				obj.set("ship_to", view[0].ship_to);
				
				self.setRate();
				self.loadReference();
				self.loadRecurring();		
			});
		},
		contactChanges 		: function(){
			var obj = this.get("obj");
			this.jobDS.filter({ field:"contact_id", value: obj.contact_id });

	    	if(obj.contact_id>0){		    			    	
		    	contact = this.contactDS.get(obj.contact_id);   	
		    		    	
		    	obj.set("locale", contact.locale);
		    	obj.set("bill_to", contact.bill_to);
		    	obj.set("ship_to", contact.ship_to);

		    	this.setRate();
		    	this.loadReference();
		    	this.loadRecurring();		    		    			    	
	    	}

	    	this.lineDS.data([]);
		    this.addRow();
		    this.changes();
	    },
		//Currency Rate		
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));
				}else{
					obj.set("rate", 1);
				}

				self.changes();
			});				
		},
		//Segment	
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Item		
		itemChanges 		: function(e){								
			var self = this, 
			data = e.data,
			obj = this.get("obj"), 
			item = this.itemDS.get(data.item_id);

			if(data.item_id>0){
				var price = 0, rate = 1, measurement_id = 0;

				if(item.item_type_id=="1" || item.item_type_id=="4"){
					if(item.item_prices.length>0){
						rate = obj.rate / item.item_prices[0].rate;
						price = item.item_prices[0].price*rate;						
						measurement_id = item.item_prices[0].measurement_id;
					}					
				}

		        if(item.is_catalog=="1"){
		        	this.catalogDS.query({
		        		filter: { field:"id", operator:"where_in", value:item.catalogs }
		        	}).then(function(){
		        		self.lineDS.remove(data);

		        		$.each(self.catalogDS.view(), function(index, value){										
							self.lineDS.add({					
								transaction_id 		: obj.id,
								item_id 			: value.id,
								measurement_id 		: value.item_prices[0].measurement_id,								
								description 		: value.name,				
								quantity 	 		: 1,
								price 				: value.item_prices[0].price*rate,												
								amount 				: value.item_prices[0].price*rate,
								discount 			: 0,
								fine 				: 0,
								rate				: obj.rate,
								locale				: obj.locale,
								has_vat 			: false,
								movement 			: -1,								

								item_prices 		: value.item_prices
							});								
		        		});

		        		self.changes();
		        	});
		        }else if(item.is_assemble=="1"){
		    		data.set("description", item.name);	    		
			        data.set("price", item.price*rate);
			        data.set("measurement_id", 0);
			        data.set("rate", obj.rate);		        	        
			       	data.set("item_prices", []);

			        this.changes();		     
		        }else{
		        	data.set("measurement_id", measurement_id);		        	
		    		data.set("description", item.name);
		    		data.set("quantity", 1);	    		
			        data.set("price", price);			        		        
			        data.set("rate", rate);
			        data.set("item_prices", item.item_prices);			        

			        this.changes();
		    	}
		    			        
	        }                	        	
		},
		measurementChanges 	: function(e){										
			var self = this, data = e.data, obj = this.get("obj");			

			if(data.measurement_id>0){
				$.each(data.item_prices, function(index, value){
					if(value.measurement_id==data.measurement_id){
						var rate = obj.rate / value.rate;						
				        data.set("price", value.price*rate);				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},
		//Return Option
		addRowOption 		: function(){				
			var obj = this.get("obj");
			

			var account_id = 0;
			if(this.accountDS.total()>0){
				account_id = this.accountDS.at(0).id;
			}
						
			this.returnDS.add({					
				return_id 		: obj.id,				
				reference_id 	: "",
				account_id 		: account_id,
				type 			: "",													
				amount 			: 0,				
				rate			: obj.rate,
				locale			: obj.locale,
				issued_date 	: obj.issued_date,
				
				showInvoice 	: false,
				showAccount 	: false				
			});																	
		},
		removeRowOption 	: function(e){						
			var d = e.data;
			
			if(this.returnDS.total()>1){			
				this.returnDS.remove(d);
		        this.changes();
	        }	        	        
		},
		invoiceChanges 		: function(e){
			var data = e.data;
			
			if(data.reference_id>0){
				var inv = this.invoiceDS.get(data.reference_id);
				data.set("amount", inv.amount - inv.amount_paid);

				this.changes();
			}else{
				data.set("amount", 0);
			}							
		},
		optionChanges 		: function(e){
			var data = e.data, obj = this.get("obj");

			switch(data.type) {
			    case "Offset_Invoice": //Invoice		    	
			        data.set("showInvoice", true);
			        data.set("showAccount", false);

			        if(obj.contact_id>0){
			        	var para = [
					 			{ field:"contact_id", value: obj.contact_id },
					 			{ field:"status", operator:"where_in", value:[0,2] },
					 			{ field:"type", value:"Invoice" },
					 	];

					 	if(obj.reference_id>0){
					 		para.push({ field:"id", operator:"where_not_in", value:[obj.reference_id] });
					 	} 

				        this.invoiceDS.filter(para);
				 	}

			        break;
			    case "Credit_Note": //Refund		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", true);
			        break;
			    default: //Deposit		    	
			        data.set("showInvoice", false);
			        data.set("showAccount", false);
			}			
		},		
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.dataSource.view();				
				
				self.set("obj", view[0]);

				if(view[0].status=="1"){
					self.set("statusSrc", banhji.source.paidSrc);
				}else{
					self.set("statusSrc", banhji.source.openSrc);
				}	

				self.set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));				
		        self.set("discount", kendo.toString(view[0].discount, "c", view[0].locale));
		        self.set("tax", kendo.toString(view[0].tax, "c", view[0].locale));				
		        self.set("total", kendo.toString(view[0].amount, "c", view[0].locale));

		        self.set("original_total", view[0].amount);
				
				self.lineDS.filter({ field: "transaction_id", value: view[0].id });
				self.journalLineDS.filter({ field: "transaction_id", value: view[0].id });

				self.returnDS.query({
					filter:{ field: "return_id", value: view[0].id },
					page:1,
					pageSize:100
				}).then(function(){
					var reInvoice = self.returnDS.view();

					$.each(reInvoice, function(index, value){
						if(value.type=="Offset_Invoice"){
							value.set("showInvoice", true);
			        		value.set("showAccount", false);
						}else if(value.type=="Credit_Note"){
							value.set("showInvoice", false);
			        		value.set("showAccount", true);
						}else{
							value.set("showInvoice", false);
			        		value.set("showAccount", false);
						}
					});
				});
			}).then(function(){
				var obj = self.get("obj");
				obj.set("amount_paid", obj.amount);
			});				
		},
		changes				: function(){
			var self = this, obj = this.get("obj"), 
			subTotal = 0, discount =0, tax = 0, returnAmount = 0, remain = 0;
			
	        $.each(this.lineDS.data(), function(index, value) {				
				var amt = value.quantity * value.price;					

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amt * value.discount;
					amt -= discount_amount;
					discount += discount_amount;																	
				}

				//Tax by line
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id);										
					tax += amt * taxItem.rate;																	
				}					

				value.set("amount", amt);
				subTotal += amt;									
	        });

	        total = subTotal + tax;

	        //Return
	        $.each(this.returnDS.data(), function(index, value) {								
				returnAmount += value.amount;					
	        });
	       
	        remain = obj.amount_paid - returnAmount;

	        this.set("sub_total", kendo.toString(subTotal, "c", obj.locale));
	        this.set("discount", kendo.toString(discount, "c", obj.locale));
	        this.set("tax", kendo.toString(tax, "c", obj.locale));
	        this.set("total", kendo.toString(total, "c", obj.locale));

	        obj.set("sub_total", subTotal);
	        obj.set("discount", discount);
	        obj.set("tax", tax);			
			obj.set("amount", total);

			this.set("remain", remain);    	
		},					
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);
			this.attachmentDS.data([]);
			this.returnDS.data([]);
			this.referenceDS.data([]);

			this.set("isEdit", false);
			this.set("obj", null);
			this.set("sub_total", 0);
			this.set("discount", 0);
			this.set("tax", 0);						
			this.set("total", 0);	
			this.set("remain", 0);				

			this.dataSource.insert(0, {				
				contact_id 			: "",								
				reference_id 		: "",
				recurring_id 		: "",
				job_id 				: 0,				
				user_id 			: this.get("user_id"),
			   	type				: "Sale_Return", //Require
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	amount_paid 		: 0,
			   	credit_allowed 		: 0,
			   	credit 				: 0,
			   	deposit 			: 0,
			   	discount 			: 0,
			   	tax 				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.locale,			   	
			   	issued_date 		: new Date(),			   			   	
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0				
	    	});		    		
			
			var obj = this.dataSource.at(0);		
			this.set("obj", obj);

			this.addRow();
			this.addRowOption();
			this.setRate();			
		},
		addRow 				: function(){				
			var obj = this.get("obj");
									
			this.lineDS.add({					
				transaction_id 		: obj.id,
				tax_item_id 		: "",
				item_id 			: "",				
				measurement_id 		: 0,				
				description 		: "",				
				quantity 	 		: 1,
				price 				: 0,												
				amount 				: 0,
				discount 			: 0,
				rate				: obj.rate,
				locale				: obj.locale,							
				movement 			: -1,

				item_prices 		: []
			});																	
		},		
		removeRow 			: function(e){						
			var data = e.data;
			if(this.lineDS.total()>1){				
				this.lineDS.remove(data);
		        this.changes();
	        }		        
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");

	    	//Reference
	    	if(obj.reference_id>0){
	    		var ref = this.referenceDS.get(obj.reference_id);				
				ref.set("status", 1);
				this.referenceDS.sync();
			}else{
				obj.set("reference_id", 0);
			}

	    	//Recurring
	    	if(this.get("saveRecurring")){
	    		this.set("saveRecurring", false);
	    		
	    		if(this.get("isEdit")){
		    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
		    			this.addNewRecurring();

		    			this.recurringSync()
						.then(function(data){ //Success
							$.each(self.recurringLineDS.data(), function(index, value){										
								value.set("transaction_id", data[0].id);						
							});
							self.recurringLineDS.sync();

							return data;			
						}, function(reason) { //Error
							$("#ntf1").data("kendoNotification").error(reason);
						}).then(function(result){
							$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

							self.addEmpty();
						});
		    		}
		    	}else{
	    			obj.set("is_recurring", 1);
		    	}
	    	}

	    	//Edit Mode
	    	if(this.get("isEdit")){
	    		//Upload has changed
		    	if(this.lineDS.hasChanges() || this.attachmentDS.hasChanges()){
		    		obj.set("dirty", true);
		    	}

		    	//Line has changed
		    	if(obj.amount!==this.get("original_total")){
		    		this.set("original_total",0);

			    	$.each(this.journalLineDS.data(), function(index, value){
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);
		    	}
	    	}

	    	//Save Obj
			this.objSync()
			.then(function(data){ //Success												
				if(self.get("isEdit")==false){
					//Item line
					$.each(self.lineDS.data(), function(index, value){
						value.set("transaction_id", data[0].id);
					});

					//Return
					$.each(self.returnDS.data(), function(index, value){										
						value.set("return_id", data[0].id);

						if(value.type=="Offset_Invoice" && value.reference_id>0){
							var inv = self.invoiceDS.get(value.reference_id),
							amountPaid = inv.amount_paid + value.amount;

							inv.set("amount_paid", amountPaid);

							if(amountPaid>=inv.amount){								
								inv.set("status", 1); //Paid							
							}else{
								inv.set("status", 2); //Partially Paid
							}
						}										
					});

					//Attachment
					$.each(self.attachmentDS.data(), function(index, value){
			    		value.set("transaction_id", data[0].id);
		            });

		            //Journal
		            self.addJournal(data[0].id);
				}

				self.lineDS.sync();
				self.returnDS.sync();
				self.uploadFile();
				
				return data;
			}, function(reason) { //Error
				$("#ntf1").data("kendoNotification").error(reason);
			}).then(function(result){				
				$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

				if(self.get("saveClose")){
					//Save Close					
					self.set("saveClose", false);
					self.cancel();
					window.history.back();
				}else if(self.get("savePrint")){
					//Save Print					
					self.set("savePrint", false);
					self.cancel();
					banhji.router.navigate("/invoice_form/"+result[0].id);
				}else{
					//Save New
					self.addEmpty();
				}

				//Refresh Customer
				self.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			this.attachmentDS.cancelChanges();
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });			

			banhji.userManagement.removeMultiTask("sale_return");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
	    //Journal	        
	    addJournal 			: function(transaction_id){
	    	var self = this,
	    	obj = this.get("obj"),
	    	contact = this.contactDS.get(obj.contact_id),
	    	saleList = {},
	    	taxList = {},	    	
	    	inventoryList = {},
	    	cogsList = {},
	    	cashList = {},
	    	sumInvoice = 0,
	    	sumCredit = 0;			
			
			//Group Account from lineDS
			$.each(this.lineDS.data(), function(index, value){
				var item = self.itemDS.get(value.item_id),
				amount = value.quantity * value.price;

				//Income Account
				var incomeID = item.income_account_id;																				
				if(incomeID>0){
					if(saleList[incomeID]===undefined){
						saleList[incomeID]={"id": incomeID, "amount": amount};						
					}else{											
						if(saleList[incomeID].id===incomeID){
							saleList[incomeID].amount += amount;
						}else{
							saleList[incomeID]={"id": incomeID, "amount": amount};
						}
					}
				}

				//Discount by line
				if(value.discount>0){										
					var discount_amount = amount * value.discount;
					amount -= discount_amount;																						
				}

				//TAX Account																								
				if(value.tax_item_id>0){
					var taxItem = self.taxItemDS.get(value.tax_item_id),
					taxID = taxItem.account_id,
					taxAmt = amount * taxItem.rate;
					if(taxList[taxID]===undefined){
						taxList[taxID]={"id": taxID, "amount": taxAmt};						
					}else{											
						if(taxList[taxID].id===taxID){
							taxList[taxID].amount += taxAmt;
						}else{
							taxList[taxID]={"id": taxID, "amount": taxAmt};
						}
					}
				}				

				//Inventory
				if(item.item_type_id==1){
					var itemCost = value.quantity * item.cost;

					//Add inventory list
					var inventoryID = item.inventory_account_id;					
					if(inventoryList[inventoryID]===undefined){
						inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};						
					}else{											
						if(inventoryList[inventoryID].id===inventoryID){
							inventoryList[inventoryID].amount += itemCost;
						}else{
							inventoryList[inventoryID]={"id": inventoryID, "amount": itemCost};
						}
					}

					//Add cogs list
					var cogsID = item.cogs_account_id;				
					if(cogsList[cogsID]===undefined){
						cogsList[cogsID]={"id": cogsID, "amount": itemCost};						
					}else{											
						if(cogsList[cogsID].id===cogsID){
							cogsList[cogsID].amount += itemCost;
						}else{
							cogsList[cogsID]={"id": cogsID, "amount": itemCost};
						}
					}
				}					  	
			});

			//Group Account from returnDS
			$.each(this.returnDS.data(), function(index, value){
				//Offset Invoice
				if(value.type=="Offset_Invoice"){
					sumInvoice += value.amount;
				}

				//Credit
				if(value.type=="Credit"){ 
					sumCredit += value.amount;
				}

				//Refund
				if(value.type=="Credit_Note"){
					var cashID = value.account_id,
					cashAmt = value.amount;

					if(cashList[cashID]===undefined){
						cashList[cashID]={"id": cashID, "amount": cashAmt};						
					}else{											
						if(cashList[cashID].id===cashID){
							cashList[cashID].amount += cashAmt;
						}else{
							cashList[cashID]={"id": cashID, "amount": cashAmt};
						}
					}
				}
			});		

			//Start journal			
			//Sale on Dr
			if(!jQuery.isEmptyObject(saleList)){
				$.each(saleList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Tax on Dr
			if(!jQuery.isEmptyObject(taxList)){
				$.each(taxList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}			

			//Discount on Cr
			if(obj.discount>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.trade_discount_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: obj.discount,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//A/R on Cr
			var ar = (obj.amount - obj.amount_paid) + sumInvoice;						
			this.journalLineDS.add({					
				transaction_id 		: transaction_id,
				account_id 			: contact.account_id,				
				contact_id 			: obj.contact_id,				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				dr 	 				: 0,
				cr 					: ar,				
				rate				: obj.rate,
				locale				: obj.locale
			});			

			//Deposit on Cr
			if(sumCredit>0){			
				this.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: contact.deposit_account_id,				
					contact_id 			: obj.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: sumCredit,				
					rate				: obj.rate,
					locale				: obj.locale
				});
			}

			//Cash on Cr
			if(!jQuery.isEmptyObject(cashList)){
				$.each(cashList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//INVENTORY
			//Inventory on Dr
			if(!jQuery.isEmptyObject(inventoryList)){
				$.each(inventoryList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.amount,
						cr 					: 0,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			//Cogs on Cr
			if(!jQuery.isEmptyObject(cogsList)){
				$.each(cogsList, function(index, value){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.id,				
						contact_id 			: obj.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: obj.rate,
						locale				: obj.locale
					});						
				});
			}

			this.journalLineDS.sync();
		},
		//Reference					
		loadReference 		: function(){			
			var obj = this.get("obj");

			if(obj.contact_id>0){
				this.set("bolReference", true);

				this.referenceDS.filter([
					{ field: "contact_id", value: obj.contact_id },					
					{ field: "type", operator:"where_in", value:["Invoice","Cash_Sale"] }
				]);				
			}else{
				obj.set("reference_id", "");
				this.set("bolReference", false);				
			}							
		},
		referenceChanges 	: function(e){
			var self = this, obj = this.get("obj");
			
			if(obj.reference_id>0){
				var ref = this.referenceDS.get(obj.reference_id);
				
				if(ref.type=="Cash_Sale"){
					obj.set("amount_paid", ref.amount);
					this.set("showReturn", true);
				}else{
					obj.set("amount_paid", ref.amount_paid);
					if(ref.status==0){
						this.set("showReturn", false);

						this.returnDS.data([]);
						this.addRowOption();
					}else{
						this.set("showReturn", true);
					}
				}				
									
			 	this.referenceLineDS.query({
			 		filter: { field:"transaction_id", value: obj.reference_id },
			 		page: 1,
			 		pageSize: 100
			 	}).then(function(){
			 		var view = self.referenceLineDS.view();					

			 		self.lineDS.data([]);
			 		$.each(view, function(index, value){
			 			self.lineDS.add({					
							transaction_id 		: obj.id,
							item_id 			: value.item_id,
							tax_item_id 		: value.tax_item_id,
							measurement_id 		: value.measurement_id,							
							description 		: value.description,				
							quantity 	 		: value.quantity,
							price 				: value.price,												
							amount 				: value.amount,
							discount 			: value.discount,
							fine 				: value.fine,
							rate				: value.rate,
							locale				: value.locale,													

							item_prices			: value.item_prices
						});
			 		});

			 		self.changes();
			 	});			 				 				 				 				
			}else{
				this.returnDS.data([]);
				this.addRowOption();
			}							
		},
		//Recurring
		loadRecurring 		: function(){
			var obj = this.get("obj");

			this.recurringDS.filter([
				{ field:"type", value:obj.type },
				{ field:"contact_id", value:obj.contact_id },
				{ field:"is_recurring", value:1 }
			]);
		},		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var data = this.recurringDS.get(obj.recurring_id);

				obj.set("employee_id", data.employee_id);//Sale Rep
				obj.set("segments", data.segments);
				obj.set("rate", data.rate);
				obj.set("locale", data.locale);
				obj.set("memo", data.memo);
				obj.set("memo2", data.memo2);
				obj.set("bill_to", data.bill_to);
				obj.set("ship_to", data.ship_to);

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:data.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(view, function(index, value){
						self.lineDS.add({
							transaction_id 		: obj.id,
							tax_item_id 		: value.tax_item_id,
							item_id 			: value.item_id,
							description 		: value.description,
							quantity 			: value.quantity,
							price 				: value.price,
							amount 	 			: value.amount,
							rate				: value.rate,
							locale				: value.locale,
							
							item_prices 		: value.item_prices
						});
					});

					self.changes();
				});
			}else{
				this.addEmpty();
			}
		},
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;
			    default:
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");
			}

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				contact_id 				: obj.contact_id,
				transaction_template_id : obj.transaction_template_id,
				user_id 				: this.get("user_id"),
				employee_id 			: obj.employee_id,
			   	type					: obj.type,
			   	amount					: obj.amount,
			   	discount 				: obj.discount,
			   	tax 					: obj.tax,
			   	rate					: obj.rate,
			   	locale 					: obj.locale,
			   	bill_to 				: obj.bill_to,
			   	ship_to 				: obj.ship_to,
			   	memo 					: obj.memo,
			   	memo2 					: obj.memo2,
			   	segments 				: obj.segments,
			   	recurring_name 			: obj.recurring_name,
			   	start_date 				: obj.start_date,
			   	frequency 				: obj.frequency,
			   	month_option 			: obj.month_option,
			   	interval 				: obj.interval,
			   	day 					: obj.day,
			   	week 					: obj.week,
			   	month 					: obj.month,
			   	is_recurring 			: 1
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({
					transaction_id 		: 0,
					measurement_id 		: value.measurement_id,
					tax_item_id 		: value.tax_item_id,
					item_id 			: value.item_id,
					description 		: value.description,
					quantity 			: value.quantity,
					price 				: value.price,
					amount 	 			: value.amount,
					discount 			: value.discount,
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){
		    	if(e.response){
					dfd.resolve(e.response.results);
				}
		    });
		    this.recurringDS.bind("error", function(e){
				dfd.reject(e.errorThrown);
		    });

		    return dfd;
	    }	 		
	});	
	banhji.statement = kendo.observable({
		lang 				: langVM,
		dataSource  		: dataStore(apiUrl + "transactions/statement"),
		agingDS  			: dataStore(apiUrl + "transactions/statement_aging"),
		contactDS  			: banhji.source.customerDS,
		sortList			: banhji.source.sortList,
		sorter 				: "all",		
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		company 			: banhji.institute,
		displayDate 		: "",
		contact_id 			: "",
		total 				: 0,
		pageLoad 			: function(id){
			if(id){
				this.loadContact(id);
			}else{
			
			}
		},		
		loadContact 		: function(id){
			var self = this;			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view();
				self.set("obj", view[0]);		    					
			});				
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		displayDate 		: function(){
			var strDate = "",
			sdate = kendo.toString(new Date(sdate), "dd-MM-yyyy")
			edate = kendo.toString(new Date(edate), "dd-MM-yyyy");

			if(sdate && edate){
				strDate = "From " + sdate + " To " + edate;
			}else if(sdate){
				strDate = "On " + sdate;
			}else if(edate){
				strDate = "As Of " + edate;
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [],
			contact_id = this.get("contact_id"), 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

			if(contact_id){
				para.push({ field:"contact_id", value: contact_id });
			}

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
            this.agingDS.filter(para);
		}
	});
	banhji.customerReportCenter = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "contact_reports/summary"),				
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contact_reports/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),						
		pageLoad 			: function(){
			var self = this,
			today = new Date(),			        	
			start = kendo.toString(banhji.source.getFiscalDate(), "yyyy-MM-dd"),
			end = kendo.toString(today, "yyyy-MM-dd");

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: start },
					{ field:"issued_date <=", value: end }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("sale", kendo.toString(view[0].sale, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
				self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
				self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

				self.set("order", kendo.toString(view[0].order, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.locale=="km-KH"?"c0":"c", banhji.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ar", kendo.toString(view[0].ar, banhji.locale=="km-KH"?"c0":"c", banhji.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));

				self.set("collection_day", kendo.toString(view[0].collection_day, "n0"));
			});
		}	
	});
	banhji.customerList = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl+"contacts"),
		contactTypeDS			: banhji.source.customerTypeDS,
		statusList 				: banhji.source.statusList,
		contact_type_id 		: null,
		status 					: null,		
		pageLoad 				: function(){

		},
		search 					: function(){
			var para = [],
			status = this.get("status"),
			contact_type_id = this.get("contact_type_id");

			if(status!==null){
				para.push({ field:"status", value: status });
			}

			if(contact_type_id){
				para.push({ field:"contact_type_id", value: contact_type_id });
			}

			this.dataSource.filter(para);
			this.set("status", null);
			this.set("contact_type_id", null);
		}
	});
	banhji.customerBalance = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl+"contact_reports/balance"),
		totalDS 				: dataStore(apiUrl+"contact_reports/balance_total"),
		contactTypeDS			: banhji.source.customerTypeDS,
		statusList 				: banhji.source.statusList,
		contact_type_id 		: null,
		status 					: null,
		date 					: new Date(),
		total 					: 0,		
		pageLoad 				: function(){

		},
		search 					: function(){
			var self = this, para = [],
			status = this.get("status"),
			date = this.get("date"),
			contact_type_id = this.get("contact_type_id");

			if(status!==null){
				para.push({ field:"status", value: status });
			}

			if(date){
				para.push({ field:"issued_date", operator:"transaction_date", value: kendo.toString(date, "yyyy-MM-dd") });
			}

			if(contact_type_id){
				para.push({ field:"contact_type_id", value: contact_type_id });
			}

			this.dataSource.filter(para);
			this.totalDS.query({
				filter: para,
				page:1,
				pageSize:100
			}).then(function(){
				var view = self.totalDS.view();
				self.set("total", kendo.toString(view[0].total, "c0", banhji.locale));
			});
			this.set("status", null);
			this.set("contact_type_id", null);
		}
	});
	banhji.customerSetting =  kendo.observable({
		lang 				: langVM,		
        contactTypeDS 		: banhji.source.customerTypeDS,
        paymentMethodDS		: dataStore(apiUrl+"payment_methods"),
        paymentTermDS		: dataStore(apiUrl+"payment_terms"),
        txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),
        contactTypeName 	: "",
        contactTypeAbbr 	: "",
        contactTypeCompany 	: 0,
        paymentMethodName 	: "",
        paymentTermName 	: "",
        paymentTermNetDue	: "",
        paymentTermPeriod 	: "",
        paymentTermPercentage 	: "",
        pageLoad 			: function() {
        	
        },	    
        addContactType 		: function(){
        	var name = this.get("contactTypeName");

        	if(name!==""){
	        	this.contactTypeDS.add({
	        		parent_id 	: 1,
	        		name 		: name,
	        		abbr 		: this.get("contactTypeAbbr"),
	        		description : "",
	        		is_company 	: this.get("contactTypeCompany"),
	        		is_system 	: 0
	        	});

	        	this.contactTypeDS.sync();

	        	this.set("contactTypeName", "");
	        	this.set("contactTypeAbbr", "");
	        	this.set("contactTypeCompany", 0);
        	}
        },
        addPaymentMethod 		: function(){
        	var name = this.get("paymentMethodName");

        	if(name!==""){
	        	this.paymentMethodDS.add({	        		
	        		name 		: name,
	        		description : "",
	        		is_system 	: 0
	        	});

	        	this.paymentMethodDS.sync();

	        	this.set("paymentMethodName", "");
        	}
        },
        addPaymentTerm 		: function(){
        	var name = this.get("paymentTermName");

        	if(name!==""){
	        	this.paymentTermDS.add({	        		
	        		name 				: name,
	        		net_due 			: this.get("paymentTermNetDue"),
	        		discount_period 	: this.get("paymentTermPeriod"),
	        		discount_percentage : this.get("paymentTermPercentage"),
	        		is_system 			: 0
	        	});

	        	this.paymentTermDS.sync();

	        	this.set("paymentTermName", "");
	        	this.set("paymentTermNetDue", "");
	        	this.set("paymentTermPeriod", "");
	        	this.set("paymentTermPercentage", "");
        	}
        },
        goPattern 	: function(e){
        	var data = e.data;        	        	

        	if(kendo.parseInt(data.contact_id)>0){        		        	
	        	banhji.router.navigate('/customer/'+data.contact_id+'/1');   	
        	}else{
        		banhji.router.navigate('/customer');
        		banhji.customer.set("contact_type_id",data.id);
        	}
        },
        deleteForm 		: function(e){
        	var data = e.data;
        	if(confirm("Do you want to delete it?") == true) {
        		this.txnTemplateDS.remove(data);
        		this.txnTemplateDS.sync();
        	}
        },
        goInvoiceCustom : function(){
        	var typeList = [
		    	{ id: "Quote", name: "Quotation" },
				{ id: "Sale_Order", name: "Sale Order" }
		    ];

		    banhji.invoiceCustom.set("selectTypeList", typeList);

		    banhji.router.navigate('/invoice_custom');
        }      
    });
    banhji.job = kendo.observable({
		lang 				: langVM,		
        dataSource 			: dataStore(apiUrl + "jobs"),        
        contactDS 	 		: banhji.source.customerDS,        
		obj 				: null,
		isVisible 			: false,
		pageLoad 			: function() {
        },        
        addObj 			: function(){		    
        	this.dataSource.add({	        		
        		number 				: "",
        		name 				: "",
        		description 		: "",
        		contact_id 			: "",
        		contact 			: []        		
        	});
        	var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);	            	
        },        
        openWindow			: function(){
        	this.addObj();
      		this.set("isVisible", true);      		         	
      	},
      	closeWindow 		: function(){	      		
      		this.dataSource.cancelChanges();

      		this.set("isVisible", false);          	
      	},
        save 				: function(){
        	var self = this;
        	this.dataSource.sync();
        	this.dataSource.bind("requestEnd", function(e){
        		if( e.type == "create" || e.type == "update"){ 
        			self.set("isVisible", false); 
        		}
        	});
        },
        edit 				: function(e){
      		var data = e.data;      		
      		this.set("obj", data);

      		this.set("isVisible", true);       		
      	},      	
      	delete 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();		        
	    	}	    	
	    },
	    cancel 			: function(){	      		
      		this.dataSource.cancelChanges();

      		window.history.back();
      	}	    
    });
    banhji.invoiceCustom =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transaction_templates"),		
		txnFormDS			: dataStore(apiUrl + "transaction_forms"),
		obj 				: {type: "Quote", amount: "$500,000.00"},
		company 			: banhji.institute,
		isEdit 				: false,
		selectTypeList			: [
							    { id: "Quote", name: "Quotation" },
							    { id: "Sale_Order", name: "Sale Order" },
							    { id: "Deposit", name: "Deposit" },
							    { id: "Cash_Sale", name: "Cash Sale" },
							    { id: "Invoice", name: "Invoice" },
							    { id: "Cash_Receipt", name: "Cash Receipt" },
							    { id: "GDN", name: "Delivery Address Note" },
							    { id: "Sale_Return", name: "Sale Return" }
							  ]	,
		onChange			: function(e) {
			var obj = this.get("obj");
			this.txnFormDS.filter({ field:"type", value: obj.type });
			setTimeout(function(e){ $('#formStyle a').eq(0).click(); },2000);
					        },
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);
				this.loadObj(id);
			}else{	
				var obj = this.get("obj");
				banhji.view.invoiceCustom.showIn('#invFormContent', banhji.view.invoiceForm10);		
				this.addRowLineDS();
				if(this.get("isEdit")){
					this.set("isEdit", false);								
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}
				this.txnFormDS.filter({ field:"type", value: obj.type });
			}
		},
		addRowLineDS			: function(e){
			banhji.invoiceForm.lineDS.data([]);
			for (var i = 0; i < 15; i++) { 
				banhji.invoiceForm.lineDS.add({				
					id			: i,
					description : '',
					quantity 	: '',
					price 		: '',
					amount 		: '',
					description : '',
					locale : '',
					item_prices : []
		    	});	
		    }
		},
		colorCC 			: function(e){
			var Color = e.value;
			var tS = '';
			if(Color == '#000000' || Color =='#1f497d') tS = '#fff'; 
			else tS = '#333';
			$('.main-color').css({'background-color': e.value, 'color': tS});
			$('.main-color div').css({'color': tS});
			$('.main-color p').css({'color': tS});
			$('.main-color span').css({'color': tS});
			$('.main-color th').css({'color': tS});
		},
		activeInvoiceTmp	: function(e){
			var Active;
			switch(e) {
				case 1: Active = banhji.view.invoiceForm1; break;
				case 2: Active = banhji.view.invoiceForm2; break;
				//case 3: Active = banhji.view.invoiceForm3; break;
				//case 4: Active = banhji.view.invoiceForm4; break;
				//case 5: Active = banhji.view.invoiceForm5; break;
				case 6: Active = banhji.view.invoiceForm6; break;
				case 7: Active = banhji.view.invoiceForm7; break;
				case 8: Active = banhji.view.invoiceForm8; break;
				case 9: Active = banhji.view.invoiceForm9; break;
				case 10: Active = banhji.view.invoiceForm10; break;
				case 11: Active = banhji.view.invoiceForm11; break;
				case 12: Active = banhji.view.invoiceForm12; break;
				case 13: Active = banhji.view.invoiceForm13; break;
				case 14: Active = banhji.view.invoiceForm14; break;
			}
			banhji.view.invoiceCustom.showIn('#invFormContent', Active);
		},
		selectedForm 		: function(e){
			var Index = e.data.id;
			this.activeInvoiceTmp(Index);
			this.addRowLineDS();

			var data = e.data, obj = this.get("obj");
			obj.set("transaction_form_id", data.id);
		},	    			
		loadObj 			: function(id){
			var self = this;	
			var Active;		
			this.dataSource.query({    			
				filter: { field:"id", value: id },
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.dataSource.view();
				self.set("obj", view[0]);
				banhji.invoiceForm.set("obj", view[0]);	
				var Index = parseInt(view[0].transaction_form_id);
				self.activeInvoiceTmp(Index);
				self.addRowLineDS();
				self.txnFormDS.filter({ field:"type", value: view[0].type });	
			});	

		},		
		addEmpty 		 	: function(){			
			this.dataSource.data([]);			

			this.set("obj", null);				

			this.dataSource.insert(0,{				
				user_id			: banhji.source.user_id,
				transaction_form_id : 0,
				type 			: "Quote",
				name 			: "",
				color  			: null
	    	});		
			
			var obj = this.dataSource.at(0);			
			this.set("obj", obj);					
		},							    
	    transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();	    		
	    	}else{
	    		//Add brand new transaction
				this.transactionSync()
				.then(function(data){
					self.addEmpty();
					banhji.customerSetting.txnTemplateDS.fetch();											
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();		

			window.history.back();
		}    
	});
	banhji.invoiceForm =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		txnTemplateDS		: dataStore(apiUrl + "transaction_templates"),		
		obj 				: {issued_date : "<?php echo date('d/M/Y'); ?>", number : "QO123456", type : "Quote", amount: "$500,000.00", contact: []},
		company 			: banhji.institute,		
		lineDS 				: dataStore(apiUrl + "transactions/line"),
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){				
				this.loadObj(id);
			}
		},	 
		printGrid			: function() {
			var gridElement = $('#grid'),
		        printableContent = '',
		        win = window.open('', '', 'width=800, height=900'),
		        doc = win.document.open();
		    var htmlStart =
		            '<!DOCTYPE html>' +
		            '<html>' +
		            '<head>' +
		            '<meta charset="utf-8" />' +
		            '<title></title>' +
		            '<link href="http://kendo.cdn.telerik.com/' + kendo.version + '/styles/kendo.common.min.css" rel="stylesheet" /> <link rel="stylesheet" href="<?php echo base_url(); ?>assets/bootstrap.css"> <link href="<?php echo base_url(); ?>assets/invoice/invoice.css" rel="stylesheet" /> ' +
		            '<style>' +
		            'html { font: 11pt sans-serif; }' +
		            '.k-grid { border-top-width: 0; }' +
		            '.k-grid, .k-grid-content { height: auto !important; }' +
		            '.k-grid-content { overflow: visible !important; }' +
		            'div.k-grid table { table-layout: auto; width: 100% !important; }' +
		            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
		            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
		            '</style>' +
		            '</head>' +
		            '<body>';

		    var htmlEnd =
		            '</body>' +
		            '</html>';
		    
		    printableContent = $('#invFormContent').html();
		    doc.write(htmlStart + printableContent + htmlEnd);
		    doc.close();
		    setTimeout(function(){
		    	win.print();	
		    },2000)
		    
		},	    
		savePDF				: function(e){
			kendo.drawing.drawDOM($('#invFormContent')).then(function(group){
	          kendo.drawing.pdf.saveAs(group, "Invoice.pdf");
	        });
		},		
		loadObj 			: function(id){
			var self = this;				
			this.dataSource.query({    			
				filter: { field:"id", value: id },
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.dataSource.view();	
				view[0].set("sub_total", kendo.toString(view[0].sub_total, "c", view[0].locale));	
				view[0].set("tax", kendo.toString(view[0].tax, "c", view[0].locale));
				view[0].set("amount", kendo.toString(view[0].amount, "c", view[0].locale));			
				self.set("obj", view[0]);
				self.loadObjTemplate(view[0].transaction_template_id, id);		
			});	
		},
		loadObjTemplate 		: function(id, transaction_id){
			var self = this, obj = this.get('obj');			
			this.txnTemplateDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				take: 100
			}).then(function(e){
				var view = self.txnTemplateDS.view(), Index = parseInt(view[0].transaction_form_id), Active;
				obj.set("color", view[0].color);
				switch(Index) {
					case 1: Active = banhji.view.invoiceForm1; break;
					case 2: Active = banhji.view.invoiceForm2; break;
					case 6: Active = banhji.view.invoiceForm6; break;
					case 7: Active = banhji.view.invoiceForm7; break;
					case 8: Active = banhji.view.invoiceForm8; break;
					case 9: Active = banhji.view.invoiceForm9; break;
					case 10: Active = banhji.view.invoiceForm10; break;
					case 11: Active = banhji.view.invoiceForm11; break;
					case 12: Active = banhji.view.invoiceForm12; break;
					case 13: Active = banhji.view.invoiceForm13; break;
					case 14: Active = banhji.view.invoiceForm14; break;
				}
				banhji.view.invoiceForm.showIn('#invFormContent', Active);
				self.lineDS.filter({ field:"transaction_id", value: transaction_id });
				setTimeout(function(){ 	
					var CountItemsRow = parseInt(self.lineDS.data().length); 
					var TotalRow = 15 - CountItemsRow;
					if(TotalRow > 0){
						for (var i = 1; i < TotalRow; i++) { 
							self.lineDS.add({				
								id			: '',
								description : '',
								quantity 	: '',
								price 		: '',
								amount 		: '',
								description : '',
								locale 		: '',
								item_prices : []
					    	});	
					    }
					}
					$("#loading-inv").remove();
				},6000);
			});
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();		
			window.history.back();
		}    
	});

	//Report Customer
	banhji.saleSummaryCustomer = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/summary_customer"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleSummaryCustomer.dataSource.filter({
				logic: banhji.saleSummaryCustomer.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleSummaryCustomer.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.saleDetailCustomer = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/detail_customer"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleDetailCustomer.dataSource.filter({
				logic: banhji.saleDetailCustomer.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleDetailCustomer.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.customerTransactionList = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/transaction_customer"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.customerTransactionList.dataSource.filter({
				logic: banhji.customerTransactionList.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.customerTransactionList.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.depositDetailCustomer = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/deposit_detail"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.depositDetailCustomer.dataSource.filter({
				logic: banhji.depositDetailCustomer.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.depositDetailCustomer.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.saleSummaryProduct = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/summary_list"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleSummaryProduct.dataSource.filter({
				logic: banhji.saleSummaryProduct.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleSummaryProduct.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.saleDetailProduct = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/detail_list"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleDetailProduct.dataSource.filter({
				logic: banhji.saleDetailProduct.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleDetailProduct.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.saleJob = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/sale_job"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleJob.dataSource.filter({
				logic: banhji.saleJob.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleJob.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.saleOrderReport = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/sale_order"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleOrder.dataSource.filter({
				logic: banhji.saleOrder.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleOrder.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.summaryBalance = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/summary_balance"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.summaryBalance.dataSource.filter({
				logic: banhji.summaryBalance.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.summaryBalance.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.saleDetail = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/detail_balance"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.saleDetail.dataSource.filter({
				logic: banhji.saleDetail.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.saleDetail.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.receivableAging = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/aging_summary"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.receivableAging.dataSource.filter({
				logic: banhji.receivableAging.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.receivableAging.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.receivableDetail = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/aging_detail"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.receivableDetail.dataSource.filter({
				logic: banhji.receivableDetail.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.receivableDetail.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.listInvoice = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/invoice2collect"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.listInvoice.dataSource.filter({
				logic: banhji.listInvoice.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.listInvoice.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.collectReport = kendo.observable({
		institute 		: banhji.institute,
		dataSource 		: dataStore(apiUrl + "sales/invoicecollected"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		startDate 		: kendo.toString(new Date(), 'yyyy-MM-dd'),
		endDate 		: kendo.toString(new Date(), 'yyyy-MM-dd'),
		search 	: function() {

			banhji.collectReport.dataSource.filter({
				logic: banhji.collectReport.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.collectReport.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.invoiceList = kendo.observable({

		dataSource 		: dataStore(apiUrl + "sales/invoice_list"),
		filterDB	 		: [
			{id: 'customer', name: 'Customer'},
			{id: 'segment', name: 'Segment'}
		],
		filteredBy          : "customer",
		sortDB 				: [
			{id: 'date', name: 'Date'}
		],
		search 	: function() {

			banhji.invoiceList.dataSource.filter({
				logic: banhji.invoiceList.get('filteredBy'),
				filters: [			
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		}, 
		filterChange  : function(e){
			banhji.invoiceList.set("filteredBy", e.sender.dataSource.at(e.sender.selectedIndex-1).id);
		}
	});
	banhji.customerSale = kendo.observable({
		institute 			: banhji.institute,
		lang 				: langVM,
		locale 				: banhji.locale,
		statementDB 		: dataStore(apiUrl + "sales/statement"),	
		count 				: 0,
		total_avg 			: 0,
		saleNumber 			: 0,
		gpm 				: 0,
		total_sale 			: 0,
		companyName 		: null,
		startDate 			: new Date(),
		endDate				: new Date(),
		sorter				: '',
		openInvoice 		: 0,		
		sortList			: banhji.source.sortList, 
		//line to sale summary
		saleSummary         : banhji.saleSummaryCustomer,
		detailSummary       : banhji.saleDetailCustomer,
		customerTransaction : banhji.customerTransactionList,
		depositDetail 		: banhji.depositDetailCustomer,
		summaryProductSale 	: banhji.saleSummaryProduct,
		detailCustomerSale 	: banhji.saleDetailProduct,
		saleJob  			: banhji.saleJob,
		saleOrderDB 		: banhji.saleOrder,
		summaryBalance 		: banhji.summaryBalance,
		saleDetail 			: banhji.saleDetail,
		receivableAging 	: banhji.receivableAging,
		receivableDetail 	: banhji.receivableDetail,
		listInvoice 		: banhji.listInvoice,
		collectReportDB 	: banhji.collectReport,
		invoiceListDB 		: banhji.invoiceList,
		// search button
		saleDetailSearch 	: function() {
			this.detailSale.filter({
				logic: 'segment',
				filters: [
					{field: "id", "operator": "segment", value: 9},
					{field: "issued_date >=", value: kendo.toString(this.startDate, "yyyy-MM-dd")},
					{field: "issued_date <=", value: kendo.toString(this.endDate, "yyyy-MM-dd")}
				]
			});
		},
		trnxSearch 			: function() {},
		depositDetailSearch : function() {},
		summaryProductSearch: function() {},
		detailProductSearch : function() {},
		saleJobSearch 		: function() {},
		saleOrderSearch 	: function() {},
		balanaceSearch 		: function() {},
		balanceDetailSearch : function() {},
		agingSummarySearch  : function() {},
		agingDetailSearch   : function() {},
		collectingInvSearch : function() {},
		collectedInvSearch  : function() {},
		invoiceListSearch 	: function() {},
		customerListSearch 	: function() {},

		dateMax 			: function(e) {
			$('#edate').css('width', '160px');
			var edate = $('#edate').kendoDatePicker().data("kendoDatePicker");
			edate.min(e.sender.value());
		},
		dateMin 			: function(e) {
			$('#sdate').css('width', '160px');
			var sdate = $('#sdate').kendoDatePicker().data("kendoDatePicker");
			sdate.max(e.sender.value());
		},
		dateChange 			: function(){
			// var strDate = "";

			// 	if(this.startDate && this.endDate){
			// 		strDate = "From " + kendo.toString(this.startDate, "dd-MM-yyyy") + " To " + kendo.toString(this.endDate, "dd-MM-yyyy");
			// 	}else if(this.startDate){
			// 		strDate = "On " + kendo.toString(this.startDate,"dd-MM-yyyy");
			// 	}else if(this.endDate){
			// 		strDate = "As Of " + kendo.toString(this.endDate,"dd-MM-yyyy");
			// 	}else{
			// 		strDate = "";
			// 	}

			var today = new Date(),
			day = today.getDate();
        	sdate = "",
        	edate = "",
        	value = this.get('sorter');

			switch(value){
			case "today":
				sdate = today;

			  	break;
			case "week":
				var first = new Date(today.getTime() - 60*60*24* day*1000),
				last = new Date(today.getTime() + 60*60*24* day*1000);

				sdate = first;
				edate = last;

			  	break;
			case "month":
				var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
				edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

			  	break;
			case "year":
			  	var sdate = new Date(today.getFullYear(), 0, 1),
			  	edate = new Date(today.getFullYear(), 11, 31);

			  	break;
			default:

			}

			this.set("startDate", sdate);
			this.set("endDate", edate);
			// start.value(sdate);
			// end.value(edate);

			// start.max(end.value());
   //      	end.min(start.value());

   //      	dateChanges();
   //          });

   //          start.max(end.value());
   //          end.min(start.value());
		}

	});


	/*************************
	*	Cashier Section   *
	**************************/
	banhji.cashier = kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		paymentByCashierDS	: dataStore(apiUrl + "transactions"),		
		contactDS 			: dataStore(apiUrl + "contacts"),				
		invoiceDS 			: dataStore(apiUrl + "transactions"),
		updateInvoiceDS 	: dataStore(apiUrl + "transactions"),
		transactionDS 		: dataStore(apiUrl + "transactions"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),
		invoiceList 		: [],	

		customer 			: null,		
		total_customer 		: 0,
		total_payment 		: kendo.toString(0,"c0", "km-KH"),

		//Payment		
		payment_date		: new Date(),
		payment_method_id	: 1,
		account_id 	 		: 2,
		check_no			: "",		
		cashier				: banhji.source.user_id,
		discount 			: 0,
		fine 				: 0,							
		pay_amount  		: kendo.toString(0,"c0", "km-KH"),
		receive_amount  	: kendo.toString(0,"c0", "km-KH"),
		remain				: kendo.toString(0,"c0", "km-KH"),						
		
		pageLoad 			: function(id){
			var self = this;

			if(id){
				this.set("invoiceList", []);

				this.invoiceDS.query({
					filter: { field:"id", value: id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var view = self.invoiceDS.view(),
					fullIdName = view[0].contact[0].number +" "+ view[0].contact[0].surname +" "+ view[0].contact[0].name;

					if(view[0].contact[0].contact_type_id==5 && view[0].contact[0].contact_type_id==6 && view[0].contact[0].contact_type_id==7){
						fullIdName = view[0].contact[0].number +" "+ view[0].contact[0].company;
					}

					self.loadInvoice(view[0].contact_id, fullIdName);
				});
			}else{
				this.loadPaymentByCashier();
			}			
		},
		total 				: function() {      		
	        var sum = 0;

	        $.each(this.invoiceList, function(index, value) {	        		            
	        	sum += kendo.parseInt(value.amount);		        	          
	        });

	        return kendo.toString(sum, "c0", "km-KH");
	    },
	    loadContact 		: function(id){
			var self = this;

			this.set("invoiceList", []);			

			this.contactDS.query({    			
				filter: { field:"id", value: id },
				page: 1,
				pageSize: 100
			}).then(function(e){
				var view = self.contactDS.view(),
				fullIdName = view[0].number +" "+ view[0].fullname;

				self.get("customer", view[0]);
				self.loadInvoice(id, fullIdName, view[0].account_id);		    										
			});
		},		
		loadPaymentByCashier: function(){
			var self = this;

			this.paymentByCashierDS.query({
				filter: [
					{ field:"user_id", value: this.get("cashier") },
					{ field:"issued_date", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				]
			}).then(function(e){
				var view = self.paymentByCashierDS.view(),
				contactIDList = {}, sum = 0, counter = 0;

				if(view.length>0){
					$.each(view, function(index, value){
						var contact_id = value.contact_id;

						if(contactIDList[contact_id]===undefined){
							contactIDList[contact_id]={"id": contact_id};
							counter++;
						}

						sum += value.amount / value.rate;
					});

					self.set("total_customer", counter);
			    	self.set("total_payment", kendo.toString(sum, "c0", banhji.institute.locale));
				}else{						    	
			    	self.set("total_customer", 0);
			    	self.set("total_payment", 0);
		    	}
			});
		},		
		loadInvoice 		: function(contact_id, fullIdName, ar_id){
			var self = this;

			this.invoiceDS.query({
				filter: [
					{ field:"contact_id", value: contact_id },
		    		{ field:"status", operator:"where_in", value: [0,2] },
		    		{ field:"type", operator:"where_in", value:["Invoice", "eInvoice", "wInvoice"] }
				],
				page: 1,
				pageSize: 50	  	
			}).then(function(e) {
			    var view = self.invoiceDS.view();
			    
			    $.each(view, function(index, value){
		    		var result = $.grep(self.get("invoiceList"), function(e){ return e.id == value.id; });

		    		if (result.length == 0) {
					  	// not found
					  	var remainAmount = kendo.parseFloat(value.amount) - kendo.parseFloat(value.amount_paid);
					  	
					  	self.get("invoiceList").push({				
							id 				: value.id,
							isPay 			: true,				
							issued_date 	: value.issued_date,
							fullname 		: fullIdName,							
							number			: value.number,										
							amount 			: remainAmount,
							pay_amount 		: remainAmount,
							rate 			: value.rate,
							locale 			: value.locale,
							contact_id 		: value.contact_id,
							ar_id 			: ar_id,							
							company_id 		: value.company_id
 						});
						self.change();
						self.autoIncreaseNo();
					} else if (result.length == 1) {
					  	// access the foo property using result[0].foo					  
					} else {
					  	// multiple items found					  
					}		    					    		
		    	});		    	
			});			
		},						
		autoIncreaseNo 		: function(){
			$(".sno").each(function(index,element){                 
			   $(element).text(index + 1); 
			});
		},
		change				: function(){		
			var total = 0;		
		    var tpay = 0;
		    $.each(this.get("invoiceList"), function(index, value){
		    	total += kendo.parseFloat(value.amount)/kendo.parseFloat(value.rate);
		    	tpay += kendo.parseFloat(value.pay_amount)/kendo.parseFloat(value.rate);
		    });

		    this.set("pay_amount", kendo.toString(tpay, "c0", banhji.institute.locale));		  	   	    	
	    	
	    	var receive_amount = tpay + kendo.parseFloat(this.get("fine"));
			this.set("receive_amount", kendo.toString(receive_amount, "c0", banhji.institute.locale));
	    	
	    	var remain = (total + kendo.parseFloat(this.get("fine"))) - (tpay + kendo.parseFloat(this.get("discount")));
	    	this.set("remain", kendo.toString(remain, "c0", banhji.institute.locale));	    	   	
		},	
		remove 				: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var item = e.data,
		        index = this.get("invoiceList").indexOf(item);
		        this.get("invoiceList").splice(index, 1);
		        this.change();
		        this.autoIncreaseNo();
	    	}	    	
	    },
	    checkPay 			: function(e){
	    	e.preventDefault();

	    	var d = e.data;
	    	var target = e.currentTarget;

	    	if(target.checked){
	    		d.set("pay_amount", d.amount);
	    	}else{
	    		d.set("pay_amount", 0);
	    	}
	    	this.change();
	    },
	    transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		save 		 		: function(){
			var self = this, data = this.get("invoiceList"), idList = {};
			
			if(data.length>0){
				$.each(data, function(index, value){
					if(kendo.parseFloat(value.pay_amount)>0 && value.isPay){
						// var contact_id = value.contact_id;						
						// if(idList[contact_id]===undefined){
						// 	idList[contact_id]={"id": contact_id, "amount": value.pay_amount};						
						// }else{											
						// 	if(idList[contact_id].id===contact_id){
						// 		idList[contact_id].amount += value.pay_amount;
						// 	}else{
						// 		idList[contact_id]={"id": contact_id, "amount": value.pay_amount};
						// 	}
						// }

						self.dataSource.add({							
							contact_id 			: value.contact_id,
							user_id 			: self.get("cashier"),													
							reference_id		: value.id,														
							payment_method_id	: self.get("payment_method_id"),
							account_id			: self.get("account_id"),
							check_no			: self.get("check_no"),							
							type 				: "Cash_Receipt",
							amount 				: value.pay_amount,
							fine 				: self.get("fine"),
							discount 			: self.get("discount"),
							rate 				: value.rate,
							locale 				: value.locale,
							issued_date			: kendo.toString(self.get("payment_date"), "yyyy-MM-dd"),
							payment_date		: kendo.toString(self.get("payment_date"), "yyyy-MM-dd"),
							is_journal 			: 1
						});																		
					}
				});							

				this.transactionSync()
				.then(function(data){
					//Start journal
					//Cash on Dr
					self.journalLineDS.add({					
						transaction_id 		: data[0].id,
						account_id 			: data[0].account_id,				
						contact_id 			: data[0].contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: obj.amount,
						cr 					: 0,				
						rate				: data[0].rate,
						locale				: data[0].locale
					});

					//A/R on Cr					
					self.journalLineDS.add({					
						transaction_id 		: data[0].id,
						account_id 			: value.id,				
						contact_id 			: data[0].contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.amount,				
						rate				: data[0].rate,
						locale				: data[0].locale
					});										
					
					self.journalLineDS.sync();																						
				}).then(function(){					
					self.clear();
					self.loadPaymentByCashier();
				});				
			}
		},					
		clear 				: function() {
			this.set("check_no", "");			
			this.set("discount", 0);
			this.set("fine", 0);		
			this.set("pay_amount", kendo.toString(0,"c0", "km-KH"));
			this.set("receive_amount", kendo.toString(0,"c0", "km-KH"));
			this.set("remain", kendo.toString(0,"c0", "km-KH"));

			this.set("invoiceList", []);

			this.updateInvoiceDS.data([]);
			this.dataSource.data([]);							
		}
	});
	banhji.reconcile = kendo.observable({
		lang 					: langVM,
		dataSource 				: dataStore(apiUrl + "reconciles"),
		existingDS 				: dataStore(apiUrl + "reconciles"),
		prevAmountDS			: dataStore(apiUrl + "reconciles"),
		reconcileItemDS			: dataStore(apiUrl + "reconciles/item"),
		paymentDS 				: dataStore(apiUrl + "payments"),
		denominationList 		: [
				{ 'denomination':1, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':2, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':5, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':10, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':20, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':50, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':100, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':200, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':500, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':1000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':2000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':5000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':10000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':20000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':50000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' },
				{ 'denomination':100000, 'khr_qty':'', 'usd_qty':'', 'khr_transfer':'', 'usd_transfer': '' }
		],		
		reconcileItemList 		: [],	

		obj 					: null,		
		searchDate 				: new Date(),			
		isEdit 					: false,
		isExisting 				: false,

		cashier 				: banhji.source.user_id,
		cashier_name 			: banhji.userManagement.getLogin() === null ? "" : banhji.userManagement.getLogin().username,
		
		pageLoad 				: function(id){
			if(id){
				this.set("isEdit", true);
				this.loadReconcile(id);
			}else{				
				this.set("isEdit", false);				
				this.addEmpty();
				this.loadPayment();
				this.loadPreviousAmount();

				this.checkExisting();
			}
		},
		str_date 				: function(){
			var strDate = "", obj = this.get("obj");

			if(obj){
				strDate = kendo.toString(new Date(obj.reconciled_date), "dd-MM-yyyy");
			}

			return strDate;
		},		
		loadReconcile 			: function(id){				
			var self = this, obj = this.get("obj");			
						
			this.dataSource.query({
				filter: { field: "id" , value: id },
				page: 1,
				pageSize: 50
			}).then(function(){
				var view = self.dataSource.view();

				self.set("obj", view[0]);
				self.reconcileItemDS.filter({ field:"reconcile_id", value: id });				
			});								
		},
		loadPreviousAmount 			: function(){
			var self = this, obj = this.get("obj");

			this.prevAmountDS.query({
				filter: [
					{ field: "cashier", value: this.get("cashier") },										
					{ field: "reconciled_date <=", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				],				
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.prevAmountDS.view();

				obj.set("previous_amount", view[0].balance);
			});			
		},
		loadPayment 			: function(){
			var self = this, obj = this.get("obj");

			this.paymentDS.query({
				filter: [
					{ field: "cashier", value: this.get("cashier") },
					{ field: "type" , value: "invoice" },						
					{ field: "payment_date", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				],
				aggregate: [
					{ field: "amount", aggregate: "sum" }
				],
				page: 1,
				pageSize: 50
			}).then(function(){
				var results = self.paymentDS.aggregates().amount;

				obj.set("received_amount", results.sum);
			});			
		},
		checkExisting 			: function(){				
			var self = this;			
						
			this.existingDS.query({
				filter: [
					{ field: "cashier", value: this.get("cashier") },										
					{ field: "reconciled_date", value: kendo.toString(new Date(), "yyyy-MM-dd") }
				],
				page: 1,
				pageSize: 50
			}).then(function(){
				var view = self.existingDS.view();

				if(view.length>0){
					self.set("isExisting", true);
				}else{
					self.set("isExisting", false);
				}					
			});								
		},		
		change					: function(){
			var totalD = 0;
			var totalR = 0;
			var totalDT = 0;
			var totalRT = 0;

			for(var i=0; i < this.denominationList.length; i++){
				var data = this.denominationList[i];
				var dem = kendo.parseFloat(data.denomination);

		    	totalD += kendo.parseFloat(data.qty_usd) * dem;
		    	totalR += kendo.parseFloat(data.qty_khr) * dem;

		    	totalDT += kendo.parseFloat(data.qty_usd_transfer) * dem;
		    	totalRT += kendo.parseFloat(data.qty_khr_transfer) * dem;	    	
			}

			this.set('totalD', kendo.toString(totalD, 'n0'));
			this.set('totalR', kendo.toString(totalR, 'c0'));

			this.set('totalDT', kendo.toString(totalDT, 'n0'));
			this.set('totalRT', kendo.toString(totalRT, 'c0'));		  	 	
		},	
		transferAll 			: function(){
			$.each(this.reconcileItemDS.data(), function(index, value){
				if(value.khr_qty>0){									
					value.set("khr_transfer", value.khr_qty);
				}

				if(value.usd_qty>0){									
					value.set("usd_transfer", value.usd_qty);
				}
			});
			
			this.change();
		},
		change 					: function(){
			var obj = this.get("obj"),
			khr_sum = 0, usd_sum = 0, khr_transfer_sum = 0, usd_transfer_sum = 0,
			usd2khr_amount = 0, usd2khr_transfer_amount = 0;

			$.each(this.reconcileItemDS.data(), function(index, value){
				if(value.khr_qty>0){
					var khrAmt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.khr_qty);
					khr_sum += khrAmt;					
					value.set("khr_amount", khrAmt);
				}

				if(value.usd_qty>0){
					var usdAmt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.usd_qty);
					usd_sum += usdAmt;
					value.set("usd_amount", usdAmt);
				}

				if(value.khr_transfer>0){
					var khr_transfer_amt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.khr_transfer);
					khr_transfer_sum += khr_transfer_amt;
					value.set("khr_transfer_amount", khr_transfer_amt);
				}

				if(value.usd_transfer>0){
					var usd_transfer_amt = kendo.parseFloat(value.denomination) * kendo.parseFloat(value.usd_transfer);
					usd_transfer_sum += usd_transfer_amt;
					value.set("usd_transfer_amount", usd_transfer_amt);
				}
			});

			//Refresh lisview
			var listView = $("#lvReconcileItem").data("kendoListView");			
			listView.refresh();

			//Total Cash1
			obj.set("total_cash1", kendo.parseFloat(obj.received_amount) + kendo.parseFloat(obj.previous_amount));

			//Actual cash
			obj.set("usd_amount", usd_sum);
			usd2khr_amount = obj.rate * usd_sum;
			obj.set("usd2khr_amount", usd2khr_amount);

			obj.set("khr_amount", khr_sum);

			//Total Cash2
			obj.set("total_cash2", kendo.parseFloat(obj.khr_amount) + kendo.parseFloat(obj.usd2khr_amount));

			//Reconcile
			obj.set("reconciled_amount", kendo.parseFloat(obj.total_cash1) - kendo.parseFloat(obj.total_cash2));

			//Transer
			obj.set("transfer_usd", usd_transfer_sum);
			usd2khr_transfer_amount = kendo.parseFloat(obj.rate) * kendo.parseFloat(usd_transfer_sum);
			obj.set("usd2khr_transfer_amount", usd2khr_transfer_amount);

			obj.set("transfer_khr", khr_transfer_sum);

			//Transfered amount
			obj.set("transfered_amount", kendo.parseFloat(obj.usd2khr_transfer_amount) + kendo.parseFloat(obj.transfer_khr));

			//Balance
			obj.set("balance", kendo.parseFloat(obj.total_cash1) - kendo.parseFloat(obj.transfered_amount));
		},
		addEmpty 				: function(){
			var self = this;
			this.set("isEdit", false);
			this.dataSource.data([]);
			this.reconcileItemDS.data([]);        	
      		
			this.dataSource.add({
				company_id 				: 0,
				transfer_account_id 	: 2,
				cashier 				: this.get('cashier'),															
				rate					: 4000,
				received_amount 		: 0,
				previous_amount 		: 0,
				total_cash1 			: 0,
				usd_amount 				: 0,
				usd2khr_amount			: 0,
				khr_amount 				: 0,
				total_cash2 			: 0,
				reconciled_amount 		: 0,
				transfer_usd			: 0,
				usd2khr_transfer_amount	: 0,
				transfer_khr 			: 0,					
				transfered_amount		: 0,
				balance 				: 0,										
				memo 					: "",
				reconciled_date 		: new Date(),
				status 					: 1		
			});			

			//Reconcile Item							
			$.each(this.get("denominationList"), function(index, value){
				self.reconcileItemDS.add({
					"reconcile_id" 			: 0,
					"denomination" 			: value.denomination,			   			   						   
				   	"khr_qty" 				: value.khr_qty,
				   	"khr_amount"			: 0,		   	
				   	"usd_qty" 				: value.usd_qty,
				   	"usd_amount"			: 0,
				   	"khr_transfer" 			: value.khr_transfer,
				   	"khr_transfer_amount" 	: 0,
				   	"usd_transfer" 			: value.usd_transfer,
				   	"usd_transfer_amount" 	: 0
				});
			});			

			var data = this.dataSource.data();			
			var obj = data[data.length - 1];			
			this.set("obj", obj);	
		},
		save 					: function(){
			var self = this;

			this.dataSource.sync();
			this.reconcileItemDS.sync();
		},			
		addReconcile 			: function(){
			var dfd = $.Deferred();

			var tr = this.get("totalReceive");
			var pr = this.get("prevRemain");				
			var receiveAmount = Number(tr.replace(/[^0-9\.]+/g,""));
			var prevRemain = Number(pr.replace(/[^0-9\.]+/g,""));		

			banhji.ds.reconcileDS.add({
				cashier 			: this.get('cashier'),					 
				reconciled_date 	: kendo.toString(new Date(), 'yyyy-MM-dd'),					
				rate				: this.get('rate'),
				received_amount 	: receiveAmount,
				prev_remain 		: prevRemain,
				reconciled_amount	: kendo.parseFloat(this.totalDR()),
				transfered_amount	: kendo.parseFloat(this.totalTransferCash()),
				transfer_account_id : this.get('transfer_account_id'),
				class_id 			: this.get('class_id'),
				memo 				: this.get('memo')
			});				        

	    	banhji.ds.reconcileDS.sync();
		    banhji.ds.reconcileDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;		
		},
		addJournal 				: function(){
			var self = this;				
			var totalTransferCash = kendo.parseFloat(this.totalTransferCash());

			//Transfer account on Dr
			banhji.journalEntry.add({
				journal_id 	: 0,
		 		account 	: this.get("transfer_account_id"), 		
		 		dr 			: totalTransferCash, 
		 		cr 			: 0,
		 		class_id  	: self.get("class_id"),
		 		memo 		: self.get("memo"),
		 		exchange_rate: 1,
			 	main 		: 0	 		
			});				
			
			var cashInTillList = {};
			$.each(banhji.ds.invoiceDS.data(), function(index, value){
				var cash_in_till_id = value.account_id;
				var amt = kendo.parseFloat(value.paid)															
				if(cash_in_till_id>0){
					if(cashInTillList[cash_in_till_id]===undefined){
						cashInTillList[cash_in_till_id]={"id": cash_in_till_id, "amt": amt};						
					}else{											
						if(cashInTillList[cash_in_till_id].id===cash_in_till_id){
							cashInTillList[cash_in_till_id].amt += amt;
						}else{
							cashInTillList[cash_in_till_id]={"id": cash_in_till_id, "amt": amt};
						}
					}
				}
			});

			//Cash in till on Cr
			$.each(cashInTillList, function(index, value){					
				banhji.journalEntry.add({
					journal_id 	: 0,
			 		account 	: value.id,	 		
			 		dr 			: 0, 
			 		cr 			: value.amt,
			 		class_id  	: self.get("class_id"),
			 		memo 		: self.get("memo"),
			 		exchange_rate: 1,
				 	main 		: 0	 		
				});
			});

		 	//Add journal to datasource
			banhji.transaction.addNew();
			var journal = banhji.transaction.get("current");
			
			journal.set("company_id", banhji.config.userData.company);
			journal.set("people_id", 0);
			journal.set("employee_id", banhji.config.userData.userId);
			journal.set("payment_id", 0);
			journal.set("payment_term_id", 0);
			journal.set("transaction_type", "Reconcile");
			journal.set("payment_method", "");
			journal.set("check_no", null);
			journal.set("memo", "ផ្ទៀងផ្ទាត់ និង ផ្ទេរសាច់ប្រាក់");
			journal.set("date", kendo.toString(new Date(this.get("searchDate")), "yyyy-MM-dd"));				
			journal.set("amount_billed", totalTransferCash);
			journal.set("amount_due", 0);
			journal.set("amount_paid", 0);
			journal.set("voucher", null);
			journal.set("class_id", this.get("class_id"));
			journal.set("status", 0);
			journal.set("reference", null);
			journal.set("vat_id", {id: null});
			journal.set("inJournal", 1);			 	
		 			 	
		 	banhji.transaction.save()
		 	.then(function(journal){			 		
	 			$.each(banhji.journalEntry.dataSource.data(), function(index, value){
	 				value.set("journal_id", journal.data.id);
	 			});
	 					 			
	 			banhji.journalEntry.save();
		 	});			  
		}
	});
	banhji.cashTransaction =  kendo.observable({
		lang 				: langVM,
		dataSource 			: dataStore(apiUrl + "transactions"),						
		lineDS  			: dataStore(apiUrl + "account_lines"),
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		recurringDS 		: dataStore(apiUrl + "transactions"),
		recurringLineDS 	: dataStore(apiUrl + "account_lines"),		
		contactDS 			: dataStore(apiUrl + "contacts"),				
		currencyDS 			: dataStore(apiUrl + "currencies"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		paymentMethodDS		: dataStore(apiUrl + "payment_methods"),
		accountDS  			: banhji.source.cashAccountDS,
		segmentItemDS 		: banhji.source.segmentItemDS,					
		types 				: [
			{id: 'Deposit', name: 'Deposit'},
			{id: 'Witdraw', name: 'Witdraw'},
			{id: 'Transfer', name: 'Transfer'}
		],
		frequencyList 		: banhji.source.frequencyList,
		monthOptionList 	: banhji.source.monthOptionList,
		monthList 			: banhji.source.monthList,
		weekDayList 		: banhji.source.weekDayList,
		dayList 			: banhji.source.dayList,				
		showRef 			: true,
		showName 			: false,
		showSegment 		: false,
		showMonthOption 	: false,
		showMonth 			: false,
		showWeek 			: false,
		showDay 			: false,		
		obj 				: null,		
		isEdit 				: false,			
		uer_id				: banhji.userManagement.getLogin() === null ? 0 : banhji.userManagement.getLogin().id,
		total				: 0,
		headerTop 			: "TO",
		headerBottom 		: "FROM",											
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},
		loadObj 			: function(id,is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 1
			}).then(function(e){
				var view = self.dataSource.view();

				if(view.length>0){	       
					self.set("obj", view[0]);					
		        }				

				self.lineDS.query({
					filter: { field: "transaction_id", value: id },
					page: 1,
					pageSize: 100
				});								
			});				
		},			
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"), 
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");
			
			this.currencyRateDS.query({
				filter: [
					{ field:"locale", value: obj.locale },
					{ field:"date <=", value: date }
				],
				sort: { field:"date", dir:"desc" },
				page: 1,
				pageSize: 1
			}).then(function(){
				var view = self.currencyRateDS.view();

				if(view.length>0){
					obj.set("rate", kendo.parseFloat(view[0].rate));

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", kendo.parseFloat(view[0].rate));
						value.set("locale", view[0].locale);												
					});					
				}else{
					obj.set("rate", 1);

					$.each(self.lineDS.data(), function(index, value){										
						value.set("rate", 1);
						value.set("locale", banhji.institute.locale);												
					});
				}
			});				
		},															
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.lineDS.data([]);
			this.journalLineDS.data([]);

			this.set("obj", null);
			this.set("total", 0);								

			this.dataSource.add({
				recurring_id 		: "",
				account_id 			: "",				
				user_id 			: this.get("uer_id"), 	    			    		
			   	type				: "Deposit", //required			   		   				   		   					   				   	
			   	amount				: 0,
			   	rate				: 1,			   	
			   	locale 				: banhji.institute.locale,			   	
			   	issued_date 		: new Date(),			   	   	
			   	memo 				: "",
			   	memo2 				: "",
			   	segments 			: [],
			   	is_journal 			: 1,
			   	//Recurring
			   	recurring_name 		: "",
			   	start_date 			: new Date(),
			   	frequency 			: "Daily",
			   	month_option 		: "Day",
			   	interval 			: 1,
			   	day 				: 1,
			   	week 				: 0,
			   	month 				: 0,
			   	is_recurring 		: 0			
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);
			this.typeChanges();
			this.addRow();
			this.setRate();				
		},
		addRow 				: function(){				
			var transaction_id = 0, obj = this.get("obj");
			if(this.get("isEdit")){
				transaction_id = obj.id;
			}
						
			this.lineDS.add({					
				transaction_id 		: transaction_id,
				payment_method_id 	: 0,
				account_id 			: "",				
				contact_id 			: "",				
				description 		: "",
				reference_no 		: "",
				segments 	 		: [],								
				amount 	 			: 0,							
				rate				: obj.rate,
				locale				: obj.locale
			});																	
		},		
		remove 				: function(e){						
			var d = e.data;
							
			this.lineDS.remove(d);
        	this.changes();	        	        
		},
		changes				: function(){
			var obj = this.get("obj");
			
			if(this.lineDS.total()>0){			
				var sum = 0;								
				
				$.each(this.lineDS.data(), function(index, value) {
					sum += value.amount;
		        });		       	

		        this.set("total", kendo.toString(sum, "c0", obj.locale));		        
		        obj.set("amount", sum);		       								    	
	    	}else{
	    		this.set("total", 0);		        
		        obj.set("amount", 0);				
	    	}   	
		},
		typeChanges 		: function(){
			var obj = this.get("obj");

			switch(obj.type) {
			    case "Witdraw":
			        this.set("headerTop", "FROM");
			        this.set("headerBottom", "TO");
			        break;
			    case "Transfer":
			        this.set("headerTop", "FROM");
			        this.set("headerBottom", "TO");
			        break;
			    default:
			        this.set("headerTop", "TO");
			        this.set("headerBottom", "FROM");
			}
		},
		transactionSegmentChanges  	: function() {									
			dataArr = this.get("obj").segments,			
			lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment.id === last.segment.id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		segmentChanges  	: function(e) {					
			var dataArr = e.data.segments;			
			var lastIndex = dataArr.length - 1;
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current = this.segmentItemDS.get(dataArr[i]);
					var last = this.segmentItemDS.get(dataArr[lastIndex]);
					if(current.segment.id === last.segment.id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},				  
		transactionSync 	: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },	    	    
		save 				: function(){				
	    	var self = this; 			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();
	    		this.lineDS.sync();
	    	}else{
	    		//Add brand new transaction
				this.transactionSync()
				.then(function(data){
					var debit = 0, credit = 0;
					if(data[0].type=="Deposit"){
						debit = data[0].amount;
					}else{
						credit = data[0].amount;
					}

					//Add Journal
					self.journalLineDS.add({					
						transaction_id 		: data[0].id,
						account_id 			: data[0].account_id,				
						contact_id 			: data[0].contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: data[0].segments,								
						dr 	 				: debit,
						cr 					: credit,				
						rate				: data[0].rate,
						locale				: data[0].locale
					});

					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);

						var dr = 0, cr = 0;
						if(data[0].type=="Deposit"){
							cr = value.amount;
						}else{
							dr = value.amount;
						}

						//Add Journal
						self.journalLineDS.add({					
							transaction_id 		: data[0].id,
							account_id 			: value.account_id,				
							contact_id 			: value.contact_id,				
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							dr 	 				: dr,
							cr 					: cr,				
							rate				: value.rate,
							locale				: value.locale
						});						
					});

					self.lineDS.sync();
					self.journalLineDS.sync();			
				}).then(function(){					
					self.addEmpty();
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			
			window.history.back();
		},		
		//Recurring		
		applyRecurring 		: function(){
			var self = this, obj = this.get("obj");
			
			if(obj.recurring_id){
				var recur = this.recurringDS.get(obj.recurring_id);
				
				obj.set("account_id", recur.account_id);
				obj.set("segments", recur.segments);
				obj.set("amount", recur.amount);
				obj.set("rate", recur.rate);
				obj.set("locale", recur.locale);					
				obj.set("memo", recur.memo);
				obj.set("memo2", recur.memo2);

				var locale = recur.locale;
				this.set("total", kendo.toString(recur.amount, locale=="km-KH"?"c0":"c", locale));

				this.recurringLineDS.query({
					filter: { field:"transaction_id", value:recur.id },
					page: 1,
					pageSize: 100
				}).then(function(){
					var line = self.recurringLineDS.view();
					self.lineDS.data([]);

					$.each(line, function(index, value){
						self.lineDS.add({					
							transaction_id 		: 0,
							payment_method_id 	: value.payment_method_id,
							account_id 			: value.account_id,				
							contact_id 			: value.contact_id,				
							description 		: value.description,
							reference_no 		: value.reference_no,
							segments 	 		: value.segments,								
							amount 	 			: value.amount,									
							rate				: value.rate,
							locale				: value.locale
						});
					});
				});				
			}else{
				this.addEmpty();
			} 
		},		
		frequencyChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.frequency) {
			    case "Daily":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", false);
			       
			        break;
			    case "Weekly":
			        this.set("showMonthOption", false);
			        this.set("showMonth", false);
			        this.set("showWeek", true);
			        this.set("showDay", false);

			        break;
			    case "Monthly":
			        this.set("showMonthOption", true);
			        this.set("showMonth", false);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    case "Annually":
			        this.set("showMonthOption", false);
			        this.set("showMonth", true);
			        this.set("showWeek", false);
			        this.set("showDay", true);

			        break;
			    default:
			        //Default here..
			}
		},
		monthOptionChanges 	: function(){
			var obj = this.get("obj");

			switch(obj.month_option) {
			    case "Day":			       
			        this.set("showWeek", false);
			        this.set("showDay", true);
			       
			        break;			    
			    default:			        
			        this.set("showWeek", true);
			        this.set("showDay", false);
			}
		},		
		validateRecurring  	: function(){
			var result = true, obj = this.get("obj");
			
			if(obj.recurring_name!==""){
				//Check existing name
				$.each(this.recurringDS.data(), function(index, value){
					if(value.recurring_name==obj.recurring_name){
						result = false;
						alert("This is name is taken.");

						return false;
					}
				});
			}
			else{
				result = false;
				alert("Recurring name is required.");				
			}			

			return result;
		},
		addNewRecurring 	: function(){
			var self = this, obj = this.get("obj");

			this.recurringDS.add({
				account_id 			: obj.account_id,
				user_id 			: obj.user_id, 	    			    		
			   	type				: obj.type,			   				   				   		   					   				   	
			   	amount				: obj.amount,
			   	rate				: obj.rate,			   	
			   	locale 				: obj.locale,					   		   	   	
			   	memo 				: obj.memo,
			   	memo2 				: obj.memo2,
			   	segments 			: obj.segments,
			   	recurring_name 		: obj.recurring_name,
			   	start_date 			: obj.start_date,
			   	frequency 			: obj.frequency,
			   	month_option 		: obj.month_option,
			   	interval 			: obj.interval,
			   	day 				: obj.day,
			   	week 				: obj.week,
			   	month 				: obj.month,
			   	is_recurring 		: 1			
	    	});

	    	$.each(this.lineDS.data(), function(index, value){
	    		self.recurringLineDS.add({					
					transaction_id 		: 0,
					payment_method_id 	: value.payment_method_id,
					account_id 			: value.account_id,
					contact_id 			: value.contact_id,				
					description 		: value.description,
					reference_no 		: value.reference_no,
					segments 	 		: value.segmets,								
					amount 	 			: value.amount,						
					rate				: value.rate,
					locale				: value.locale
				});
	    	});
		},
		recurringSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.recurringDS.sync();
		    this.recurringDS.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
		saveRecurring 		: function(){
	    	var self = this, obj = this.get("obj");

	    	if(this.get("isEdit")){
	    		if(obj.is_recurring=="0"){ //Add brand new recurring from existing transaction	    			
	    			this.addNewRecurring();

	    			this.recurringSync()
					.then(function(data){
						$.each(self.recurringLineDS.data(), function(index, value){										
							value.set("transaction_id", data[0].id);						
						});

						self.recurringLineDS.sync();			
					}).then(function(){					
						self.addEmpty();
					});
	    		}else{
	    			this.save();
	    		}
	    	}else{ //Add brand new recurring
	    		obj.set("is_recurring", 1);

	    		this.transactionSync()
				.then(function(data){
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);								
					});

					self.lineDS.sync();							
				}).then(function(){					
					self.addEmpty();
				});
	    	}	    	
	    }	    	   
	});
	banhji.cashReceipt =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		deleteDS 			: dataStore(apiUrl + "transactions"),
		invoiceDS 			: dataStore(apiUrl + "transactions"),
		creditDS 			: dataStore(apiUrl + "transactions"),		
		journalLineDS		: dataStore(apiUrl + "journal_lines"),
		jobDS				: dataStore(apiUrl + "jobs"),
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.customerDS,
		employeeDS  		: banhji.source.saleRepDS,
		accountDS  			: banhji.source.cashAccountDS,		
		paymentTermDS 		: dataStore(apiUrl + "payment_terms"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),	
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Cash_Receipt" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		segmentItemDS		: banhji.source.segmentItemDS,
		amtDueColor 		: banhji.source.amtDueColor,
	    confirmMessage 		: banhji.source.confirmMessage,
		showCheckNo 		: false,
		obj 				: null,		
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		showConfirm 		: false,	
		searchText 			: "",
		contact_id 			: "",
		invoice_id 			: 0,		
		sub_total 			: 0,		
		discount 			: 0,		
		total 				: 0,
		pay 		 		: 0,
		remain 				: 0,
		original_total 		: 0,				
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);										
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);								
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},		
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.dataSource.view();
				
				self.journalLineDS.filter({ field: "transaction_id", value: id });
				self.creditDS.filter([
					{ field: "reference_id", value: id },
					{ field: "type", value: "Credit" }
				]);				
				self.set("obj", view[0]);
				self.set("original_total", view[0].amount+view[0].discount);
				self.changes();														
			});						
		},
		loadInvoice 		: function(id){
			this.set("invoice_id", id);
			this.search();
		},		
		//Contact
		loadContact 		: function(id){
			this.set("contact_id", id);
			this.search();
		},		
		contactChanges 		: function(){
			this.search();
	    },
	    issuedDateChanges 	: function(){
	    	this.applyTerm();
	    	this.setRate();	
	    },
	    applyTerm 			: function(){
	    	var self = this, obj = this.get("obj"), 
	    	today = new Date();

	    	$.each(this.dataSource.data(), function(index, value){	    		   		
	    		var term = self.paymentTermDS.get(value.payment_term_id),
	    		termDate = new Date(value.reference[0].issued_date);

    			termDate.setDate(termDate.getDate() + term.discount_period);
    			
    			if(today<=termDate){
    				if(value.amount_paid==0){
	    				var amount = value.reference[0].amount * term.discount_percentage;
	    				value.set("discount", amount);
	    				value.set("amount", value.reference[0].amount - amount);
    				}
    			}		    	
	    	});	    	
	    },		
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),			
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");

			var uniqueLocale = [];
			$.each(this.dataSource.data(), function(index, value){							
			    if($.inArray(value.locale, uniqueLocale) === -1) uniqueLocale.push(value.locale);
			});

			$.each(uniqueLocale, function(ind, locale){				
				self.currencyRateDS.query({
					filter: [
						{ field:"locale", value: locale },
						{ field:"date <=", value: date }
					],
					sort: { field:"date", dir:"desc" },
					page: 1,
					pageSize: 1
				}).then(function(){
					var view = self.currencyRateDS.view();
					
					if(view.length>0){
						$.each(self.dataSource.data(), function(index, value){
							if(value.locale==locale){
								value.set("rate",view[0].rate);
							}
						});									
					}else{
						$.each(self.dataSource.data(), function(index, value){
							if(value.locale==locale){
								value.set("rate",1);
							}
						});					
					}

					self.changes();
				});
			});					
		},		
		search 				: function(){
			var self = this, 
			para = [],
			obj = this.get("obj"),			
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd"), 
			searchText = this.get("searchText"), 
			invoice_id = this.get("invoice_id"),
			contact_id = this.get("contact_id");

	    	if(contact_id>0){		    			    	
		    	para.push({ field:"contact_id", value: contact_id });				    			    	
	    	}

	    	if(invoice_id>0){		    			    	
		    	para.push({ field:"id", value: invoice_id });				    			    	
	    	}
			
			if(searchText!==""){
				para.push({ field:"number", value: searchText });
			}

			para.push({ field:"type", value:"Invoice" });
			para.push({ field:"status", operator:"where_in", value:[0,2] });

			if(this.dataSource.total()>0){
				var idList = [];
				$.each(this.dataSource.data(), function(index, value){
					idList.push(value.reference_id);
				});
				para.push({ field:"id", operator:"where_not_in", value:idList });
			}

			this.invoiceDS.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.invoiceDS.view();

				if(view.length>0){
					$.each(view, function(index, value){											
						var amount_due = value.amount - value.amount_paid;							

						self.dataSource.add({
		    				contact_id 			: value.contact_id,				
							account_id 			: obj.account_id,
							payment_term_id		: value.payment_term_id,
							payment_method_id	: obj.payment_method_id,				
							reference_id 		: value.id,								
							user_id 			: self.get("user_id"),
							check_no 			: value.check_no,
						   	type				: "Cash_Receipt",
						   	amount 				: amount_due,				   	
						   	discount 			: 0,
						   	rate				: value.rate,			   	
						   	locale 				: value.locale,			   	
						   	issued_date 		: obj.issued_date,					   	
						   	memo 				: obj.memo,
						   	memo2 				: obj.memo2,
						   	status 				: 0,
						   	segments 			: obj.segments,
						   	is_journal 			: 1,
						   	//Recurring
						   	recurring_name 		: "",
						   	start_date 			: new Date(),
						   	frequency 			: "Daily",
						   	month_option 		: "Day",
						   	interval 			: 1,
						   	day 				: 1,
						   	week 				: 0,
						   	month 				: 0,
						   	is_recurring 		: 0,

						   	contact				: value.contact,
						   	amount_paid 		: value.amount_paid,
						   	reference 			: [{ "number" : value.number, "amount" : value.amount, "issued_date":value.issued_date }]				
				    	});						
					});
					self.applyTerm();
					self.setRate();	
				}				
			});

			this.set("searchText", "");
			this.set("contact_id", "");
			this.set("invoice_id", 0);	
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},		
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},				
		removeRow 			: function(e){			
			this.dataSource.remove(e.data);		    
		    this.changes();	        
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, pay = 0, remain = 0;											

			$.each(this.dataSource.data(), function(index, value) {								
				subTotal += ((value.reference[0].amount - value.amount_paid) / value.rate);					
				discount += (value.discount / value.rate);
				pay += (value.amount / value.rate);					
	        });

			total = subTotal - discount;
			remain = total - pay;

	        //Warning over credit allowed
	        if(remain>0){
	        	this.set("bgColor", "Gold");		        	
	        }else{
	        	this.set("bgColor", "#D5DBDB");
	        }

	        this.set("sub_total", kendo.toString(subTotal, "c", banhji.locale));
	        this.set("discount", kendo.toString(discount, "c", banhji.locale));		        
	        this.set("total", kendo.toString(total, "c", banhji.locale));
	        this.set("pay", kendo.toString(pay, "c", banhji.locale));
	        this.set("remain", kendo.toString(remain, "c", banhji.locale));	    		
		},
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.invoiceDS.data([]);
			this.creditDS.data([]);			
			this.journalLineDS.data([]);			

			this.set("obj", null);
			this.set("sub_total", 0);			
			this.set("discount", 0);		
			this.set("total", 0);
			this.set("pay", 0);
			this.set("remain", 0);				

			this.set("obj", {				
				account_id 			: 7,
				payment_method_id	: 1,							   	
			   	rate				: 1,			   	
			   	locale 				: "km-KH",			   	
			   	issued_date 		: new Date(),			   	
			   	memo 				: "",
			   	memo2 				: "",			   	
			   	segments 			: []		
	    	});						
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	      	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");	    			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();	    		
	    		
	    		if(this.get("original_total")!==obj.amount+obj.discount){
	    			this.set("original_total", obj.amount+obj.discount)

	    			$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);

					//Credit
					if(this.creditDS.total()>0){
						var credit = this.creditDS.at(0),
						overAmount = ((obj.reference[0].amount - obj.amount_paid) - obj.amount) - obj.discount;
						
						if(overAmount<0){
							credit.set("amount", overAmount*-1);
						}else{
							credit.set("amount", 0);
						}

						this.creditDS.sync();
					}else{
						this.addCredit(obj.id);
					}					
				}	    			    		
	    	}else{
	    		//Add brand new transaction
	    		$.each(this.dataSource.data(), function(index, value){
	    			value.set("account_id", obj.account_id);
	    			value.set("payment_method_id", obj.payment_method_id);	    			
	    			value.set("issued_date", obj.issued_date);
	    			value.set("memo", obj.memo);
	    			value.set("memo2", obj.memo2);
	    			value.set("segments", obj.segments);
	    		});
	    		
				this.objSync()
				.then(function(data){
					self.addCredit(data[0].id);
					self.addJournal(data[0].id);					
					return data;
				}, function(reason) { //Error
					$("#ntf1").data("kendoNotification").error(reason);
				}).then(function(result){				
					$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

					if(self.get("saveClose")){
						//Save Close					
						self.set("saveClose", false);
						self.cancel();
						window.history.back();
					}else if(self.get("savePrint")){
						//Save Print					
						self.set("savePrint", false);
						self.cancel();
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}else{
						//Save New
						self.addEmpty();
					}
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			
			banhji.userManagement.removeMultiTask("cash_receipt");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"type", operator:"where_in", value:["Cash_Sale","Invoice"] },
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		addCredit 			: function(cash_receipt_id){
			var self = this, obj = this.get("obj");
			
			//Add over amount to customer credit
			$.each(this.dataSource.data(), function(index, value){			
				var overAmount = ((value.reference[0].amount - value.amount_paid) - value.amount) - value.discount;
				
				if(overAmount<0){
					self.creditDS.add({
	    				contact_id 			: value.contact_id,				
						account_id 			: value.contact[0].deposit_account_id,						
						payment_method_id	: obj.payment_method_id,				
						reference_id 		: cash_receipt_id,								
						user_id 			: self.get("user_id"),
						check_no 			: value.check_no,
					   	type				: "Credit",
					   	amount 				: overAmount*-1,				   	
					   	discount 			: 0,
					   	rate				: value.rate,			   	
					   	locale 				: value.locale,			   	
					   	issued_date 		: obj.issued_date,					   	
					   	memo 				: obj.memo,
					   	memo2 				: obj.memo2,
					   	status 				: 0,
					   	segments 			: obj.segments,
					   	is_journal 			: 0,
					   	//Recurring
					   	recurring_name 		: "",
					   	start_date 			: new Date(),
					   	frequency 			: "Daily",
					   	month_option 		: "Day",
					   	interval 			: 1,
					   	day 				: 1,
					   	week 				: 0,
					   	month 				: 0,
					   	is_recurring 		: 0
			    	});	    			
				}
			});

			this.creditDS.sync();
		},
		addJournal 			: function(transaction_id){
			var self = this, obj = this.get("obj");

			$.each(this.dataSource.data(), function(index, value){
				var overAmount = ((value.reference[0].amount - value.amount_paid) - value.amount) - value.discount;

				//Cash on Dr
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: obj.account_id,				
					contact_id 			: value.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: value.amount,
					cr 					: 0,				
					rate				: value.rate,
					locale				: value.locale
				});

				if(value.discount>0){
					//Discount on Dr
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.contact[0].settlement_discount_id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: value.discount,
						cr 					: 0,				
						rate				: value.rate,
						locale				: value.locale
					});
				}

				//AR on Cr
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.contact[0].account_id,				
					contact_id 			: value.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: (value.amount + value.discount) + overAmount,				
					rate				: value.rate,
					locale				: value.locale
				});

				if(overAmount<0){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.contact[0].deposit_account_id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: overAmount*-1,				
						rate				: value.rate,
						locale				: value.locale
					});
				}				
			});

			self.journalLineDS.sync();	
		}
	});
	banhji.cashPayment =  kendo.observable({
		dataSource 			: dataStore(apiUrl + "transactions"),
		deleteDS 			: dataStore(apiUrl + "transactions"),
		invoiceDS 			: dataStore(apiUrl + "transactions"),
		creditDS 			: dataStore(apiUrl + "transactions"),		
		journalLineDS		: dataStore(apiUrl + "journal_lines"),					
		currencyDS  		: banhji.source.currencyDS,
		currencyRateDS		: dataStore(apiUrl + "currencies/rate"),
		contactDS  			: banhji.source.supplierDS,
		employeeDS  		: banhji.source.saleRepDS,
		accountDS  			: banhji.source.cashAccountDS,		
		paymentTermDS 		: dataStore(apiUrl + "payment_terms"),
		paymentMethodDS 	: dataStore(apiUrl + "payment_methods"),	
		txnTemplateDS		: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "transaction_templates",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							page: options.page,
							limit: options.pageSize,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			filter: { field: "type", value:"Cash_Payment" },
			batch: true,
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			page:1,
			pageSize: 100
		}),
		segmentItemDS		: banhji.source.segmentItemDS,
		amtDueColor 		: banhji.source.amtDueColor,
		confirmMessage 		: banhji.source.confirmMessage,
		showCheckNo 		: false,
		obj 				: null,		
		isEdit 				: false,
		saveClose 			: false,
		savePrint 			: false,
		showConfirm 		: false,	
		searchText 			: "",
		contact_id 			: "",
		invoice_id 			: 0,		
		sub_total 			: 0,		
		discount 			: 0,		
		total 				: 0,
		pay 		 		: 0,
		remain 				: 0,
		original_total 		: 0,				
		user_id				: banhji.source.user_id,
		pageLoad 			: function(id, is_recurring){
			if(id){
				this.set("isEdit", true);										
				this.loadObj(id, is_recurring);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);								
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}
		},
		//Contact
		loadContact 		: function(id){
			this.set("contact_id", id);
			this.search();
		},		
		contactChanges 		: function(){
			this.search();
	    },
	    //Payment Term
	    issuedDateChanges 	: function(){
	    	this.applyTerm();
	    	this.setRate();	
	    },
	    applyTerm 			: function(){
	    	var self = this, obj = this.get("obj"), 
	    	today = new Date();

	    	$.each(this.dataSource.data(), function(index, value){	    		   		
	    		var term = self.paymentTermDS.get(value.payment_term_id),
	    		termDate = new Date(value.reference[0].issued_date);

    			termDate.setDate(termDate.getDate() + term.discount_period);
    			
    			if(today<=termDate){
    				if(value.amount_paid==0){
	    				var amount = value.reference[0].amount * term.discount_percentage;
	    				value.set("discount", amount);
	    				value.set("amount", value.reference[0].amount - amount);
    				}
    			}		    	
	    	});	    	
	    },
	    //Currency Rate		
		setRate 			: function(){
			var self = this, 
			obj = this.get("obj"),			
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd");

			var uniqueLocale = [];
			$.each(this.dataSource.data(), function(index, value){							
			    if($.inArray(value.locale, uniqueLocale) === -1) uniqueLocale.push(value.locale);
			});

			$.each(uniqueLocale, function(ind, locale){				
				self.currencyRateDS.query({
					filter: [
						{ field:"locale", value: locale },
						{ field:"date <=", value: date }
					],
					sort: { field:"date", dir:"desc" },
					page: 1,
					pageSize: 1
				}).then(function(){
					var view = self.currencyRateDS.view();
					
					if(view.length>0){
						$.each(self.dataSource.data(), function(index, value){
							if(value.locale==locale){
								value.set("rate",view[0].rate);
							}
						});									
					}else{
						$.each(self.dataSource.data(), function(index, value){
							if(value.locale==locale){
								value.set("rate",1);
							}
						});					
					}

					self.changes();
				});
			});					
		},		
		search 				: function(){
			var self = this, 
			para = [],
			obj = this.get("obj"),			
			date = kendo.toString(new Date(obj.issued_date), "yyyy-MM-dd"), 
			searchText = this.get("searchText"), 
			invoice_id = this.get("invoice_id"),
			contact_id = this.get("contact_id");

	    	if(contact_id>0){		    			    	
		    	para.push({ field:"contact_id", value: contact_id });				    			    	
	    	}

	    	if(invoice_id>0){		    			    	
		    	para.push({ field:"id", value: invoice_id });				    			    	
	    	}
			
			if(searchText!==""){
				para.push({ field:"number", value: searchText });
			}

			para.push({ field:"type", value:"Credit_Purchase" });
			para.push({ field:"status", operator:"where_in", value:[0,2] });

			if(this.dataSource.total()>0){
				var idList = [];
				$.each(this.dataSource.data(), function(index, value){
					idList.push(value.reference_id);
				});
				para.push({ field:"id", operator:"where_not_in", value:idList });
			}

			this.invoiceDS.query({
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.invoiceDS.view();

				if(view.length>0){
					$.each(view, function(index, value){											
						var amount_due = value.amount - value.amount_paid;							

						self.dataSource.add({
		    				contact_id 			: value.contact_id,				
							account_id 			: obj.account_id,
							payment_term_id		: value.payment_term_id,
							payment_method_id	: obj.payment_method_id,				
							reference_id 		: value.id,								
							user_id 			: self.get("user_id"),
							check_no 			: value.check_no,
						   	type				: "Cash_Payment",
						   	amount 				: amount_due,				   	
						   	discount 			: 0,
						   	rate				: value.rate,			   	
						   	locale 				: value.locale,			   	
						   	issued_date 		: obj.issued_date,					   	
						   	memo 				: obj.memo,
						   	memo2 				: obj.memo2,
						   	status 				: 0,
						   	segments 			: obj.segments,
						   	is_journal 			: 1,
						   	//Recurring
						   	recurring_name 		: "",
						   	start_date 			: new Date(),
						   	frequency 			: "Daily",
						   	month_option 		: "Day",
						   	interval 			: 1,
						   	day 				: 1,
						   	week 				: 0,
						   	month 				: 0,
						   	is_recurring 		: 0,

						   	contact				: value.contact,
						   	amount_paid 		: value.amount_paid,
						   	reference 			: [{ "number" : value.number, "amount" : value.amount, "issued_date":value.issued_date }]				
				    	});						
					});
					self.applyTerm();
					self.setRate();	
				}				
			});

			this.set("searchText", "");
			this.set("contact_id", "");
			this.set("invoice_id", 0);	
		},
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},		
	    segmentChanges 		: function(e) {
			var dataArr = this.get("obj").segments,
			lastIndex = dataArr.length - 1,
			last = this.segmentItemDS.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = this.segmentItemDS.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		//Obj
		loadObj 			: function(id, is_recurring){
			var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_recurring){
				para.push({ field:"is_recurring", value: 1 });
			}			

			this.dataSource.query({    			
				filter: para,
				page: 1,
				pageSize: 100
			}).then(function(){
				var view = self.dataSource.view();
				
				self.journalLineDS.filter({ field: "transaction_id", value: id });
				self.creditDS.filter([
					{ field: "reference_id", value: id },
					{ field: "type", value: "Credit" }
				]);				
				self.set("obj", view[0]);
				self.set("original_total", view[0].amount+view[0].discount);
				self.changes();														
			});						
		},
		loadInvoice 		: function(id){
			this.set("invoice_id", id);
			this.search();
		},
		changes				: function(){
			var self = this, obj = this.get("obj"),
			total = 0, subTotal = 0, discount =0, pay = 0, remain = 0;											

			$.each(this.dataSource.data(), function(index, value) {								
				subTotal += ((value.reference[0].amount - value.amount_paid) / value.rate);					
				discount += (value.discount / value.rate);
				pay += (value.amount / value.rate);					
	        });

			total = subTotal - discount;
			remain = total - pay;

	        //Warning over credit allowed
	        if(remain>0){
	        	this.set("bgColor", "Gold");		        	
	        }else{
	        	this.set("bgColor", "#D5DBDB");
	        }

	        this.set("sub_total", kendo.toString(subTotal, "c", banhji.locale));
	        this.set("discount", kendo.toString(discount, "c", banhji.locale));		        
	        this.set("total", kendo.toString(total, "c", banhji.locale));
	        this.set("pay", kendo.toString(pay, "c", banhji.locale));
	        this.set("remain", kendo.toString(remain, "c", banhji.locale));	    		
		},
		removeRow 			: function(e){
			var data = e.data;			
			this.dataSource.remove(data);		    
		    this.changes();	        
		},
		addEmpty 		 	: function(){			
			this.dataSource.data([]);
			this.invoiceDS.data([]);
			this.creditDS.data([]);			
			this.journalLineDS.data([]);			

			this.set("obj", null);
			this.set("sub_total", 0);			
			this.set("discount", 0);		
			this.set("total", 0);
			this.set("pay", 0);
			this.set("remain", 0);				

			this.set("obj", {				
				account_id 			: 7,
				payment_method_id	: 1,							   	
			   	rate				: 1,			   	
			   	locale 				: "km-KH",			   	
			   	issued_date 		: new Date(),			   	
			   	memo 				: "",
			   	memo2 				: "",			   	
			   	segments 			: []		
	    	});						
		},							    
	    objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){
		    	if(e.response){				
					dfd.resolve(e.response.results);
				}				  				
		    });
		    this.dataSource.bind("error", function(e){		    		    	
				dfd.reject(e.errorThrown);    				
		    });

		    return dfd;	    		    	
	    },	      	    	    
		save 				: function(){				
	    	var self = this, obj = this.get("obj");	    			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();	    		
	    		
	    		if(this.get("original_total")!==obj.amount+obj.discount){
	    			this.set("original_total", obj.amount+obj.discount)

	    			$.each(this.journalLineDS.data(), function(index, value){										
						value.set("deleted", 1);										
					});

					this.addJournal(obj.id);

					//Credit
					if(this.creditDS.total()>0){
						var credit = this.creditDS.at(0),
						overAmount = ((obj.reference[0].amount - obj.amount_paid) - obj.amount) - obj.discount;
						
						if(overAmount<0){
							credit.set("amount", overAmount*-1);
						}else{
							credit.set("amount", 0);
						}

						this.creditDS.sync();
					}else{
						this.addCredit(obj.id);
					}					
				}	    			    		
	    	}else{
	    		//Add brand new transaction
	    		$.each(this.dataSource.data(), function(index, value){
	    			value.set("account_id", obj.account_id);
	    			value.set("payment_method_id", obj.payment_method_id);	    			
	    			value.set("issued_date", obj.issued_date);
	    			value.set("memo", obj.memo);
	    			value.set("memo2", obj.memo2);
	    			value.set("segments", obj.segments);
	    		});
	    		
				this.objSync()
				.then(function(data){
					self.addCredit(data[0].id);
					self.addJournal(data[0].id);					
					return data;
				}, function(reason) { //Error
					$("#ntf1").data("kendoNotification").error(reason);
				}).then(function(result){				
					$("#ntf1").data("kendoNotification").success(banhji.source.successMessage);

					if(self.get("saveClose")){
						//Save Close					
						self.set("saveClose", false);
						self.cancel();
						window.history.back();
					}else if(self.get("savePrint")){
						//Save Print					
						self.set("savePrint", false);
						self.cancel();
						banhji.router.navigate("/invoice_form/"+result[0].id);
					}else{
						//Save New
						self.addEmpty();
					}
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			
			banhji.userManagement.removeMultiTask("cash_payment");
		},
		delete 				: function(){
			var self = this, obj = this.get("obj");
			this.set("showConfirm",false);			
			
	        this.deleteDS.query({
	        	filter:[
	        		{ field:"type", operator:"where_in", value:["Cash_Purchase","Credit_Purchase"] },
	        		{ field:"reference_id", value:obj.id },
	        	],
	        	page:1,
	        	pageSize:1
	        }).then(function(){
	        	var view = self.deleteDS.view();

	        	if(view.length>0){
	        		alert("Sorry, you can not delete it.");
	        	}else{
	        		obj.set("deleted", 1);
			        self.dataSource.sync();

			        window.history.back();
	        	}
	        });		    	    	
		},
		openConfirm 		: function(){
			this.set("showConfirm", true);
		},
		closeConfirm 		: function(){
			this.set("showConfirm", false);
		},
		addCredit 			: function(cash_receipt_id){
			var self = this, obj = this.get("obj");
			
			//Add over amount to customer credit
			$.each(this.dataSource.data(), function(index, value){			
				var overAmount = ((value.reference[0].amount - value.amount_paid) - value.amount) - value.discount;
				
				if(overAmount<0){
					self.creditDS.add({
	    				contact_id 			: value.contact_id,				
						account_id 			: value.contact[0].deposit_account_id,						
						payment_method_id	: obj.payment_method_id,				
						reference_id 		: cash_receipt_id,								
						user_id 			: self.get("user_id"),
						check_no 			: value.check_no,
					   	type				: "Credit",
					   	amount 				: overAmount*-1,				   	
					   	discount 			: 0,
					   	rate				: value.rate,			   	
					   	locale 				: value.locale,			   	
					   	issued_date 		: obj.issued_date,					   	
					   	memo 				: obj.memo,
					   	memo2 				: obj.memo2,
					   	status 				: 0,
					   	segments 			: obj.segments,
					   	is_journal 			: 0,
					   	//Recurring
					   	recurring_name 		: "",
					   	start_date 			: new Date(),
					   	frequency 			: "Daily",
					   	month_option 		: "Day",
					   	interval 			: 1,
					   	day 				: 1,
					   	week 				: 0,
					   	month 				: 0,
					   	is_recurring 		: 0
			    	});	    			
				}
			});

			this.creditDS.sync();
		},
		addJournal 			: function(transaction_id){
			var self = this, obj = this.get("obj");

			$.each(this.dataSource.data(), function(index, value){
				var overAmount = ((value.reference[0].amount - value.amount_paid) - value.amount) - value.discount;
				
				//AP on Dr
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: value.contact[0].account_id,				
					contact_id 			: value.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: (value.amount + value.discount) + overAmount,
					cr 					: 0,				
					rate				: value.rate,
					locale				: value.locale
				});

				//Credit on Dr
				if(overAmount<0){
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.contact[0].deposit_account_id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: overAmount*-1,
						cr 					: 0,				
						rate				: value.rate,
						locale				: value.locale
					});
				}

				//Cash on Cr
				self.journalLineDS.add({					
					transaction_id 		: transaction_id,
					account_id 			: obj.account_id,				
					contact_id 			: value.contact_id,				
					description 		: "",
					reference_no 		: "",
					segments 	 		: [],								
					dr 	 				: 0,
					cr 					: value.amount,				
					rate				: value.rate,
					locale				: value.locale
				});

				if(value.discount>0){
					//Discount on Cr
					self.journalLineDS.add({					
						transaction_id 		: transaction_id,
						account_id 			: value.contact[0].settlement_discount_id,				
						contact_id 			: value.contact_id,				
						description 		: "",
						reference_no 		: "",
						segments 	 		: [],								
						dr 	 				: 0,
						cr 					: value.discount,				
						rate				: value.rate,
						locale				: value.locale
					});
				}				
			});

			self.journalLineDS.sync();	
		}
	});

	banhji.cashCenter = kendo.observable({
		dataStore 	: banhji.source.cashAccountDS,
		summaryDS  	: dataStore(apiUrl + 'centers/accounting_summary'),
		transactionDS  		: dataStore(apiUrl + 'centers/accounting_txn'),
		balance 	: 0,
		obj 		: null,
		searchText 	: null,
		goCashTransaction: function() {
			banhji.router.navigate('/cash_transaction');
		},
		goCashReceipt: function() {
			banhji.router.navigate('/cash_receipt');
		},
		goCashPayment: function() {
			banhji.router.navigate('/cash_payment');
		},
		goCashAdvance: function() {
			banhji.router.navigate('/cash_advance');
		},
		goExpense: function() {
			banhji.router.navigate('/expense');
		},
		goExchange: function() {
			banhji.router.navigate('/currency_rate');
		},
		selectedRow	: function(e) {
			this.set('obj', e.data);
			var self = this, obj = this.get("obj");
			var para = [],
				obj = this.get("obj"),
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd");
			this.set('balance', 'Loading');
			this.summaryDS.query({
			  	filter: [
			  		{ field:"account_id", value: obj.id }
			  	],
			  	page: 1,
			  	pageSize: 100
			}).then(function(){
				var view = self.summaryDS.view();				
				
				if(view.length>0){
					self.set("balance", kendo.toString(view[0].balance, view[0].locale=="km-KH"?"c0":"c", view[0].locale));
				}else{
					self.set("balance", 0);
				}
			});

        	if(obj.id){
        		para.push({ field:"account_id", value: obj.id });
        	}

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", operator:"where_related", model:"transaction", value: start });
            	para.push({ field:"issued_date <=", operator:"where_related", model:"transaction", value: end });            	            	
            }else if(start){
            	para.push({ field:"issued_date", operator:"where_related", model:"transaction", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", operator:"where_related", model:"transaction", value: end });
            }else{
            	
            }                        

            this.transactionDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 100
            });
		},
		search 		: function() {
			var isNumber =  /^\d+$/.test(this.get('searchText'));

			if(isNumber) {
				this.dataStore.filter([
					{field: "number", value: this.get('searchText')},
					{field: "account_type_id", value: 10}
				]);
			} else {
				this.dataStore.filter([
					{field: "name", operator: "like", value: this.get('searchText')},
					{field: "account_type_id", value: 10}
				]);
			}
		}
	});

	banhji.cashDashboard = kendo.observable({
		topCashDS 	: dataStore(apiUrl + 'dashboards/top_cash'),
		topAdvaDS 	: dataStore(apiUrl + 'dashboards/top_advance'),
		topExpsDS 	: dataStore(apiUrl + 'dashboards/top_expense'),
		graphDS 	: banhji.index.graphDS,
		balance 	: 0,
		open 		: 0,
		overDue 	: 0,
		totalAdvance: 0,
		cashACNumber: 0,
		ar 			: 0,
		ar_open 	: 0,
		ar_customer : 0
	});

	/*************************
	*	Inventory Section   *
	**************************/
	banhji.itemDashBoard = kendo.observable({
		lang 				: langVM,
		summaryDS 			: dataStore(apiUrl + "contact_reports/summary"),
		topCustomerDS 		: dataStore(apiUrl + "contact_reports/top_customer"),
		topARDS 			: dataStore(apiUrl + "contact_reports/top_ar"),
		topProductDS 		: dataStore(apiUrl + "contact_reports/top_product"),
		graphDS  			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "contact_reports/monthly_sale",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				}
			},
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			sort: {
                field: "month",
                dir: "asc"
            },								
			batch: true,			
			serverFiltering: true,
			serverSorting: true,
			serverPaging: true,
			pageSize: 100
		}),
		sale 				: 0,
		sale_customer 		: 0,
		sale_product 		: 0,
		sale_order 			: 0,
		order 				: 0,
		order_avg 			: 0,
		order_open 			: 0,
		ar 					: 0,
		ar_open 			: 0,
		ar_customer 		: 0,
		ar_overdue 			: 0,						
		pageLoad 			: function(){
			var self = this, today = new Date(),
			firstDayOfYear = new Date(today.getFullYear(), 0, 1);

			this.summaryDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			}).then(function(){
				var view = self.summaryDS.view();
				
				self.set("sale", kendo.toString(17205, "n0"));
				self.set("sale_customer", kendo.toString(view[0].sale_customer, "n0"));
				self.set("sale_product", kendo.toString(view[0].sale_product, "n0"));
				self.set("sale_order", kendo.toString(view[0].sale_order, "n0"));

				self.set("order", kendo.toString(261, "n0"));
				self.set("order_avg", kendo.toString(view[0].order_avg, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));				
				self.set("order_open", kendo.toString(view[0].order_open, "n0"));

				self.set("ar", kendo.toString(view[0].ar, banhji.institute.locale=="km-KH"?"c0":"c", banhji.institute.locale));
				self.set("ar_open", kendo.toString(view[0].ar_open, "n0"));
				self.set("ar_customer", kendo.toString(view[0].ar_customer, "n0"));
				self.set("ar_overdue", kendo.toString(view[0].ar_overdue, "n0"));
			});

			this.topCustomerDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],								
				page: 1,
				pageSize: 5
			});

			this.topARDS.query({
				filter: [
					{ field:"issued_date >=", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});

			this.topProductDS.query({
				filter: [
					{ field:"issued_date >=", operator:"where_related", model:"transaction", value: kendo.toString(firstDayOfYear, "yyyy-MM-dd") },
					{ field:"issued_date <=", operator:"where_related", model:"transaction", value:  kendo.toString(today, "yyyy-MM-dd") }
				],							
				page: 1,
				pageSize: 5
			});										
		}		
	});
	banhji.itemCenter = kendo.observable({
		lang 				: langVM,		
		itemDS 				: dataStore(apiUrl + 'items'),
		poDS 				: dataStore(apiUrl + "transactions/line"),
    	soDS 				: dataStore(apiUrl + "transactions/line"),
		movementDS			: dataStore(apiUrl + 'items/movement'),		
		categoryDS 			: dataStore(apiUrl + "categories"),
		itemGroupDS			: dataStore(apiUrl + "items/group"),
		sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",
		obj 				: null,
		on_po 				: 0,
		on_so				: 0,		
		searchText 			: "",	
		category_id 		: null,
		selectedItemGroup 	: [],
		isCategorySelected	: false,	
		
		pageLoad 			: function(){		
			this.itemDS.fetch();
			this.movementDS.fetch();										
		},
		countPO 		: function(id){
    		var self = this;

    		this.poDS.query({
    			filter:[
	    			{ field:"item_id", value: id },
	    			{ field:"type", model:"transaction", operator:"where_related", value:"Purchase_Order" },
	    			{ field:"status", model:"transaction", operator:"where_related", value:0 }
	    		],
	    		page:1,
	    		pageSize:1
	    	}).then(function(){
	    		var view = self.poDS.view();

	    		if(view.length>0){
	    			var sum = 0;

	    			$.each(view, function(index, value){
	    				sum += kendo.parseInt(value.unit);
	    			});

	    			self.set("on_po", kendo.toString(sum, "n0"));
	    		}else{
	    			self.set("on_po", 0);
	    		}
	    	});
    	},
    	countSO 		: function(id){
    		var self = this;

    		this.soDS.query({
    			filter:[
	    			{ field:"item_id", value: id },
	    			{ field:"type", model:"transaction", operator:"where_related", value:"Sale_Order" },
	    			{ field:"status", model:"transaction", operator:"where_related", value:0 }
	    		],
	    		page:1,
	    		pageSize:1
	    	}).then(function(){
	    		var view = self.soDS.view();

	    		if(view.length>0){
	    			var sum = 0;

	    			$.each(view, function(index, value){
	    				sum += kendo.parseInt(value.unit);
	    			});

	    			self.set("on_so", kendo.toString(sum, "n0"));
	    		}else{
	    			self.set("on_so", 0);
	    		}
	    	});
    	},
		loadOnHand 	: function(){
			var self = this, obj = this.get("obj");
			
			this.movementDS.filter([
			  		{ field:"item_id", value: obj.id },
					{ field:"type", model:"transaction", operator:"where_in_related", value: ["Invoice", "Cash_Sale", "Cash_Purchase", "Credit_Purchase"] }
			]);
		},
		loadPO 	: function(){
			var self = this, obj = this.get("obj");
			
			this.movementDS.filter([
		  		{ field:"item_id", value: obj.id },
				{ field:"type", model:"transaction", operator:"where_related", value: "Purchase_Order" }
			]);
		},
		loadSO 	: function(){
			var self = this, obj = this.get("obj");
			
			this.movementDS.filter([
		  		{ field:"item_id", value: obj.id },
				{ field:"type", model:"transaction", operator:"where_related", value: "Sale_Order" }
			]);
		},
		loadMovement 		: function(id){
			this.movementDS.query({
			  	filter: [
			  		{ field:"item_id", value: id },
					{ field:"type", model:"transaction", operator:"where_in_related", value: ["Invoice", "Cash_Sale", "Cash_Purchase", "Credit_Purchase", "Purchase_Order", "Sale_Order"] }
			  	],			  	
			  	page: 1,
			  	pageSize: 20
			});
		},		
		selectedRow			: function(e){
			var id = e.data.id,
			data = e.data;			
			
			this.set("obj", data);
			this.loadMovement(id);
			this.countPO(id);
			this.countSO(id);			
		},
		sorterChanges 		: function(){
			var value = this.get("sorter");

			switch(value){
			case "today":
				var today = new Date();
				
				this.set("sdate", today);
				this.set("edate", today);
			  					
			  	break;
			case "week":
			  	var thisWeek = new Date;
				var first = thisWeek.getDate() - thisWeek.getDay(); 
				var last = first + 6;

				var firstDayOfWeek = new Date(thisWeek.setDate(first));
				var lastDayOfWeek = new Date(thisWeek.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":
				var thisMonth = new Date;				  	
				var firstDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth(), 1);
				var lastDayOfMonth = new Date(thisMonth.getFullYear(), thisMonth.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":
				var thisYear = new Date();
			  	var firstDayOfYear = new Date(thisYear.getFullYear(), 0, 1);
				var lastDayOfYear = new Date(thisYear.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},
		categoryChanges 		: function(){
			var category_id = this.get("category_id");

			if(category_id){
				this.set("isCategorySelected", true);
				this.itemGroupDS.filter({ field:"category_id", value: category_id });
			}else{
				this.set("isCategorySelected", false);
				this.set("selectedItemGroup", []);
			}        	
        },
		enterSearch 		: function(e){
			e.preventDefault();

			this.search();
		},
		search 				: function(){
			var self = this,
			para = [],
			searchText = this.get("searchText"),			
			category_id = this.get("category_id"),
			selectedItemGroup = this.get("selectedItemGroup");

			if(searchText){
				para.push(      				
      				{ field: "sku", operator: "like", value: searchText },
      				{ field: "name", operator: "or_like", value: searchText }
      			);
			}        	

            if(selectedItemGroup.length>0){
				var ids = [];
				$.each(selectedItemGroup, function(index, value){
					ids.push(value);
				});
				
				para.push({ field:"item_group_id", operator:"where_in", value:ids });
			}else if(category_id){
				para.push({ field:"category_id", value:category_id });
			}

			para.push({ field:"item_type_id", value:1 });
			para.push({ field:"is_catalog", value: 0 });
			para.push({ field:"is_assemble", value: 0 });          

            this.itemDS.query({
            	filter: para,
            	page: 1,
            	pageSize: 100
            }).then(function(data){
            	var view = self.itemDS.view();
            	
            	self.set("searchText", "");
            	self.set("category_id", 0);
            	self.set("isCategorySelected", false);
            	self.set("selectedItemGroup", []);
            });      			
		},
		searchMovement	: function(){
			var self = this,
				para = [],
				start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"),
        		end = kendo.toString(this.get("edate"), "yyyy-MM-dd"),	        		
        		obj = this.get("obj");

        	//Dates
        	if(start && end){
            	para.push({ field:"issued_date >=", model:"transaction", operator: "where_related", value: start });
            	para.push({ field:"issued_date <=", model:"transaction", operator: "where_related", value: end });            	            	
            }else if(start){
            	para.push({ field:"issued_date", model:"transaction", operator: "where_related", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", model:"transaction", operator: "where_related", value: end });
            }else{
            	
            }

            para.push({ field:"item_id", value: obj.id });             

            this.movementDS.query({
            	filter: para,            	
            	page: 1,
            	pageSize: 20
            });            
		},
		edit				: function(){
			var obj = this.get("obj");

			if(obj.is_catalog=="1"){
				banhji.router.navigate('/item_catalog/'+obj.id);
			}else if(obj.is_assemble=="1"){
				banhji.router.navigate('/item_assembly/'+obj.id);
			}else{
				banhji.router.navigate('/item/'+obj.id);
			}
		},
		pricing				: function(){
			var obj = this.get("obj");

			if(obj.is_catalog=="1"){
				banhji.router.navigate('/item_catalog/'+obj.id);
			}else if(obj.is_assemble=="1"){
				banhji.router.navigate('/item_assembly/'+obj.id);
			}else{
				banhji.router.navigate('/item_prices/'+obj.id);
			}			
		}		
	});	
	banhji.priceList =  kendo.observable({
		lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "item_prices"),
    	itemDS 				: dataStore(apiUrl + "items"),
    	recordDS 			: dataStore(apiUrl + "items/movement"),
    	poDS 				: dataStore(apiUrl + "transactions/line"),
    	soDS 				: dataStore(apiUrl + "transactions/line"),
    	currencyDS  		: banhji.source.currencyDS,
    	unitDS	   			: dataStore(apiUrl + "measurements"),

    	obj 				: null,
    	priceList 			: null,
    	on_po 				: 0,
    	on_so 				: 0,
    	
    	pageLoad 		: function(id){    		
    		this.dataSource.filter({ field:"item_id", value: id });    		
    		this.recordDS.filter({ field:"item_id", value: id });    		
    		this.loadObj(id);
    		this.countPO(id);
    		this.countSO(id);
    	},
    	loadObj 	: function(id){
    		var self = this;

    		this.itemDS.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.itemDS.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	countPO 		: function(id){
    		var self = this;

    		this.poDS.query({
    			filter:[
	    			{ field:"item_id", value: id },
	    			{ field:"type", model:"transaction", operator:"where_related", value:"Purchase_Order" },
	    			{ field:"status", model:"transaction", operator:"where_related", value:0 }
	    		],
	    		page:1,
	    		pageSize:1
	    	}).then(function(){
	    		var view = self.poDS.view();

	    		if(view.length>0){
	    			var sum = 0;

	    			$.each(view, function(index, value){
	    				sum += kendo.parseInt(value.unit);
	    			});

	    			self.set("on_po", kendo.toString(sum, "n0"));
	    		}else{
	    			self.set("on_po", 0);
	    		}
	    	});
    	},
    	countSO 		: function(id){
    		var self = this;

    		this.soDS.query({
    			filter:[
	    			{ field:"item_id", value: id },
	    			{ field:"type", model:"transaction", operator:"where_related", value:"SO" },
	    			{ field:"status", model:"transaction", operator:"where_related", value:0 }
	    		],
	    		page:1,
	    		pageSize:1
	    	}).then(function(){
	    		var view = self.soDS.view();

	    		if(view.length>0){
	    			var sum = 0;

	    			$.each(view, function(index, value){
	    				sum += kendo.parseInt(value.unit);
	    			});

	    			self.set("on_so", kendo.toString(sum, "n0"));
	    		}else{
	    			self.set("on_so", 0);
	    		}
	    	});
    	},
    	openWindow		: function(){
      		this.addEmpty();

         	var window = $("#priceList-window").data("kendoWindow");
          	window.title("តំលៃ");          	
          	window.center().open();         	
      	},
      	closeWindow 	: function(){	      		
      		this.dataSource.cancelChanges();

      		var window = $("#priceList-window").data("kendoWindow");          	         	
          	window.close();          	
      	},      	
      	addEmpty 		: function () {
      		this.dataSource.add({      			      			
      			item_id			: this.get("obj").id,
      			measurement_id 	: 0,
      			price 			: 0,
      			unit_value		: 0,
      			locale 			: "km-KH",

      			currency 		: [{locale:"km-KH"}],      			
      			measurement 	: []
			});

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("priceList", obj);	
      	},      	 	
      	save 			: function(){
      		this.dataSource.sync();
      		banhji.itemCenter.itemDS.fetch();

      		var window = $("#priceList-window").data("kendoWindow");          	         	
          	window.close(); 		
      	},
      	edit 			: function(e){
      		var data = e.data;
      		
      		this.set("priceList", data);

      		var window = $("#priceList-window").data("kendoWindow");
          	window.title("តំលៃ");          	
          	window.center().open();       		
      	},      	
      	delete 			: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();
		        banhji.itemCenter.dataSource.fetch();
	    	}	    	
	    }
    });	
    banhji.item =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	patternDS 			: dataStore(apiUrl + "items"),
    	deleteDS 			: dataStore(apiUrl + "transactions/line"),
    	categoryDS 			: dataStore(apiUrl + "categories"),
    	itemGroupDS 		: dataStore(apiUrl + "items/group"),
    	brandDS 	 		: dataStore(apiUrl + "brands"),    	   	   	
    	measurementDS		: dataStore(apiUrl + "measurements"),
    	vendorDS 	 		: dataStore(apiUrl + "contacts"),
    	customerDS 	 		: dataStore(apiUrl + "contacts"),
    	itemVendorDS 	 	: dataStore(apiUrl + "items/contact"),
    	itemCustomerDS 	 	: dataStore(apiUrl + "items/contact"),
    	currencyDS 	 		: banhji.source.currencyDS,  	
    	incomeAccountDS 	: banhji.source.incomeAccountDS,
    	cogsAccountDS 		: banhji.source.cogsAccountDS,
    	inventoryAccountDS 	: banhji.source.inventoryAccountDS,
    	statusList 			: banhji.source.statusList,
        vendorList 			: [],
        customerList 		: [],
    	obj 	 			: null,
    	isEdit 				: false,    	
    	pageLoad 			: function(id, is_pattern){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_pattern);
				this.loadItemContact(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
    	loadObj 			: function(id, is_pattern){
    		var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_pattern){
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	loadVendor 			: function(){
    		var self = this;

    		this.vendorDS.query({    			
				filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:2 }
			}).then(function(e){
				var view = self.vendorDS.view();
				
				$.each(view, function(index, value){
					self.vendorList.push(value);
				});		    	
			});
    	},
    	loadCustomer 		: function(){
    		var self = this;

    		this.customerDS.query({    			
				filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:1 }
			}).then(function(e){
				var view = self.customerDS.view();
				
				$.each(view, function(index, value){
					self.customerList.push(value);
				});		    	
			});
    	},
    	loadItemContact		: function(id){
			this.itemVendorDS.query({
				filter: [ 
					{ "field":"item_id", value: id },
					{ "field":"type", value: "vendor" }
				],
				page: 1,
				pageSize: 100
			});

			this.itemCustomerDS.query({
				filter: [ 
					{ "field":"item_id", value: id },
					{ "field":"type", value: "customer" }
				],
				page: 1,
				pageSize: 100
			});
		},
		//Pattern
		setPattern 				: function(category_id){
			var obj = this.get("obj");

			obj.set("category_id", category_id);
			obj.set("is_pattern", 1);
		},
		savePattern 			: function(category_id, item_id){
			var data = banhji.itemSetting.categoryDS.get(category_id);
			data.set("item_id", item_id);
			banhji.itemSetting.categoryDS.sync();			
			window.history.back();
		},
		loadPattern 			: function(){
			var self = this, obj = self.get("obj"), cat = this.categoryDS.get(obj.category_id);

			this.patternDS.query({
				filter: [
					{ field:"id", value: cat.item_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();				

				if(view.length>0){
					obj.set("locale", view[0].locale);
					obj.set("measurement_id", view[0].measurement_id);
					obj.set("income_account_id", view[0].income_account_id);
					obj.set("cogs_account_id", view[0].cogs_account_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);
					obj.set("inventory_account_id", view[0].inventory_account_id);					
				}else{
					obj.set("locale", banhji.locale);
					obj.set("measurement_id", 0);
					obj.set("income_account_id", 0);
					obj.set("cogs_account_id", 0);
					obj.set("settlement_discount_id", 0);
					obj.set("inventory_account_id", 0);
				}
			});
		},    	   	
      	addEmpty 			: function(){      		
      		this.dataSource.data([]);
      		this.itemVendorDS.data([]);
	      	this.itemCustomerDS.data([]);
      		this.set("obj", null);

      		this.dataSource.add({
      			company_id 				: 0,
      			contact_id 				: "",
      			currency_id 			: 0,
      			category_id 			: 0,
      			item_type_id 			: 1,      			      			
      			category_id 			: 0,
      			item_group_id 			: 0,
      			item_sub_group_id 		: 0,
      			brand_id 				: 0,
      			measurement_id			: 0,
      			main_id 				: 0,
      			sku 					: "",
      			international_code 		: "",
      			IMEI 					: "",
      			serial_number 			: "",
      			supplier_code 			: "",
      			color_code 				: "",
      			name 					: "",
      			description				: "",
      			measurements 			: "",
      			catalogs 				: [],
      			cost 					: 0,
      			price 					: 0,
      			amount 					: 0,
      			rate 					: 1,
      			locale 					: banhji.locale,
      			on_hand					: 0,      			      			     			
      			order_point 			: 0,
      			income_account_id 		: 0,
      			cogs_account_id  		: 0,
      			inventory_account_id 	: 0,
      			deposit_account_id 		: 0,
      			transaction_account_id 	: 0,
      			preferred_vendor_id 	: 0,
      			image_url 				: "",      			
      			favorite 				: false,
      			is_catalog 				: 0,
      			is_assemble 			: 0,
      			is_pattern 				: 0,
      			status 					: 1,
      			deleted 				: 0
			});      		

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);			
      	},
      	objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	},      	
      	save 				: function(){
      		var self = this;

      		if(this.get("isEdit")){
      			this.dataSource.sync();
      			this.itemVendorDS.sync();
      			this.itemCustomerDS.sync();
      		}else{
	      		this.objSync().then(function(data){
	      			$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			if(data[0].is_pattern){
						self.savePattern(data[0].category_id, data[0].id);
					}

	      			self.itemVendorDS.sync();
	      			self.itemCustomerDS.sync();
	      		}).then(function(){	      			
	      			self.addEmpty();
	      		});
      		}      		      		
      	},      	
      	delete 				: function(){			
	    	var self = this,
			obj = this.get("obj");

			if (confirm("Are you sure, you want to delete it?")) {				
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						obj.set("deleted",1);
				        self.save();

				        window.history.back();
					}
				});
	    	}	    	
	    },
	    addEmptyItemVendor 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemVendorDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemCustomerDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		}
    });
    banhji.itemCatalog =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	itemDS 				: banhji.source.itemDS,
    	    	    	   	
    	statusList 			: banhji.source.statusList,

    	obj 	 			: null,    	
    	isEdit 				: false,
    	
    	pageLoad 			: function(id){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
    	loadObj 			: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);		    	
			});
    	},    	   	
      	addEmpty 			: function(){      		
      		this.dataSource.data([]);      		
      		this.set("obj", null);

      		this.dataSource.add({
      			company_id 				: 0,
      			contact_id 				: 0,      			
      			category_id 			: 8,
      			brand_id 				: 0,
      			item_type_id 			: 1,      			      			
      			measurement_id			: 0,      			
      			main_id 				: 0,
      			sku 					: "",
      			supplier_code 			: "",
      			color_code 				: "",
      			name 					: "",
      			description				: "",
      			catalogs 				: "",
      			cost 					: 0,
      			price 					: 0,
      			on_hand					: 0,      			     			
      			order_point 			: 0,
      			income_account_id 		: 0,
      			cogs_account_id  		: 0,
      			inventory_account_id 	: 0,
      			deposit_account_id 		: 0,
      			transaction_account_id 	: 0,
      			preferred_vendor_id 	: 0,
      			image_url 				: "",      			
      			favorite 				: false,
      			is_catalog 				: 1,
      			status 					: 1,
      			deleted 				: 0
			});      		

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);			
      	},      	
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	},      	
      	save 				: function(){
      		var self = this, obj = this.get("obj");
      		
      		if(this.get("isEdit")){
      			this.dataSource.sync();      			
      		}else{
	      		this.dataSource.sync();
	      		var saved = false;
	      		this.dataSource.bind("requestEnd", function(e){
	      			if(e.type=="create" && saved==false){		      						      			
		      			self.addEmpty();
	      			}
	      		});
      		}      		      		   		      		
      	},      	
      	delete 				: function(){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var obj = this.dataSource.at(0);
		        this.dataSource.remove(obj);
		        this.dataSource.sync();
		        window.history.back();
	    	}	    	
	    }
    });
	banhji.itemAssembly =  kendo.observable({
		lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	itemDS 				: banhji.source.itemDS,
    	assemblyDS 			: dataStore(apiUrl + "items/assembly"),
    	    	   	
    	statusList 			: banhji.source.statusList,

    	obj 	 			: null,
    	assembly_id			: "",
    	isEdit 				: false,
    	total 				: 0,
    	
    	pageLoad 			: function(id){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
    	loadObj 			: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
		    	self.assemblyDS.filter({ field:"item_id", value:id });
		    	self.set("total", kendo.toString(view[0].price, "c", banhji.institute.locale));
			});
    	},
    	changes				: function(){
			var obj = this.get("obj");

			if(this.assemblyDS.total()>0){			
				var total = 0, subTotal = 0;										

				$.each(this.assemblyDS.data(), function(index, value) {				
					subTotal = value.quantity * value.price;
					total += subTotal;

					value.set("amount", subTotal);					
		        });
		          
				obj.set("price", total);
				this.set("total", kendo.toString(total, "c", banhji.institute.locale));													    	
	    	}else{	    				
				obj.set("price", 0);
				this.set("total", 0);					
	    	}   	
		},		
		measurementChanges 	: function(e){								
			var self = this, data = e.data;
			
			if(data.measurement_id>0){
				$.each(data.priceList, function(index, value){
					if(value.measurement_id==data.measurement_id){						
				        data.set("price", kendo.parseFloat(value.price));				       			       
				        
						return false;
					}
				});	    		
		        	        
		        this.changes();
	        }	                	        	
		},    	   	
      	addEmpty 			: function(){      		
      		this.dataSource.data([]);
      		this.assemblyDS.data([]);
      		this.set("obj", null);

      		this.dataSource.add({
      			company_id 				: 0,
      			contact_id 				: 0,      			
      			category_id 			: 9,
      			brand_id 				: 0,
      			item_type_id 			: 1,      			      			
      			measurement_id			: 0,      			
      			main_id 				: 0,
      			sku 					: "",
      			supplier_code 			: "",
      			color_code 				: "",
      			name 					: "",
      			description				: "",
      			cost 					: "",
      			on_hand					: 0,      			     			
      			order_point 			: 0,
      			income_account_id 		: 0,
      			cogs_account_id  		: 0,
      			inventory_account_id 	: 0,
      			deposit_account_id 		: 0,
      			transaction_account_id 	: 0,
      			preferred_vendor_id 	: 0,
      			image_url 				: "",      			
      			favorite 				: false,
      			status 					: 1,
      			is_assemble 			: 1,
      			deleted 				: 0
			});      		

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);			
      	},
      	addItem 			: function(){      		
      		var assembly_id = this.get("assembly_id"),
      		isExisting = false,
      		item = this.itemDS.get(assembly_id),
      		item_id = 0, obj = this.get("obj");
			
			if(this.get("isEdit")){
				item_id = obj.id;
			}
      		
      		if(item){
	      		if(this.assemblyDS.total()>0){
	      			$.each(this.assemblyDS.data(), function(index, value){
	      				if(value.assembly_id==assembly_id){
	      					isExisting = true;

	      					return false;
	      				}
	      			});
	      		}
	      		
	      		if(isExisting===false){	      			
		      		this.assemblyDS.add({
		      			item_id 		: item_id,
		      			assembly_id 	: assembly_id,
		      			currency_id 	: item.item_prices[0].currency_id,
		      			measurement_id 	: item.item_prices[0].measurement_id,
		      			quantity 		: 1,
		      			unit_value 		: 0,
		      			price 			: item.item_prices[0].price,
		      			amount 			: item.item_prices[0].price,
		      			
		      			assembly 		: [{ sku:item.sku, name:item.name, description:item.description }],
		      			currency 		: [item.item_prices[0].currency[0]],
		      			item_prices 		: item.item_prices		      			
					});

					this.changes();	      		
				}
			}			
      	},
      	removeItem 			: function(e){
      		e.preventDefault();

      		if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data, 
		        obj = this.assemblyDS.get(data.id);

		        this.assemblyDS.remove(obj);		        	        
	    	}
      	},
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	},      	
      	save 				: function(){
      		var self = this;

      		if(this.get("isEdit")){
      			this.dataSource.sync();
      			this.assemblyDS.sync();
      		}else{
	      		this.itemSync().then(function(item){
	      			$.each(self.assemblyDS.data(), function(index, value){
	      				value.set("item_id", item[0].id);
	      			});

	      			self.assemblyDS.sync();
	      		}).then(function(){
	      			self.dataSource.data([]);
	      			self.assemblyDS.data([]);

	      			self.addEmpty();
	      		});
      		}      		   		      		
      	},      	
      	delete 				: function(){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var obj = this.dataSource.at(0);
		        this.dataSource.remove(obj);
		        this.dataSource.sync();
		        window.history.back();
	    	}	    	
	    },
	    itemSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    }
    });
	banhji.itemService =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	patternDS 			: dataStore(apiUrl + "items"),
    	deleteDS 			: dataStore(apiUrl + "transactions/line"),
    	categoryDS 			: dataStore(apiUrl + "categories"),
    	itemGroupDS 		: dataStore(apiUrl + "items/group"),    	  	   	
    	measurementDS		: dataStore(apiUrl + "measurements"),
    	vendorDS 	 		: dataStore(apiUrl + "contacts"),
    	customerDS 	 		: dataStore(apiUrl + "contacts"),
    	itemVendorDS 	 	: dataStore(apiUrl + "items/contact"),
    	itemCustomerDS 	 	: dataStore(apiUrl + "items/contact"),
    	currencyDS 	 		: banhji.source.currencyDS,  	
    	incomeAccountDS 	: banhji.source.incomeAccountDS,
    	cogsAccountDS 		: banhji.source.cogsAccountDS,    	
    	statusList 			: banhji.source.statusList,
        vendorList 			: [],
        customerList 		: [],
    	obj 	 			: null,
    	isEdit 				: false,    	
    	pageLoad 			: function(id, is_pattern){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_pattern);
				this.loadItemContact(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
    	loadObj 			: function(id, is_pattern){
    		var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_pattern){
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	loadVendorItem 		: function(){
    		var self = this;

    		this.vendorDS.query({    			
				filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:2 }
			}).then(function(e){
				var view = self.vendorDS.view();
				
				$.each(view, function(index, value){
					self.vendorList.push(value);
				});		    	
			});
    	},
    	loadCustomerItem 	: function(){
    		var self = this;

    		this.customerDS.query({    			
				filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:1 }
			}).then(function(e){
				var view = self.customerDS.view();
				
				$.each(view, function(index, value){
					self.customerList.push(value);
				});		    	
			});
    	},
    	loadItemContact		: function(id){
			this.itemVendorDS.query({
				filter: [ 
					{ "field":"item_id", value: id },
					{ "field":"type", value: "vendor" }
				],
				page: 1,
				pageSize: 100
			});

			this.itemCustomerDS.query({
				filter: [ 
					{ "field":"item_id", value: id },
					{ "field":"type", value: "customer" }
				],
				page: 1,
				pageSize: 100
			});
		},
		//Pattern
		setPattern 			: function(category_id){
			var obj = this.get("obj");

			obj.set("category_id", category_id);
			obj.set("is_pattern", 1);
		},
		savePattern 		: function(category_id, item_id){
			var data = banhji.itemSetting.categoryDS.get(category_id);
			data.set("item_id", item_id);
			banhji.itemSetting.categoryDS.sync();			
			window.history.back();
		},
		loadPattern 		: function(){
			var self = this, obj = self.get("obj"), cat = this.categoryDS.get(obj.category_id);

			this.patternDS.query({
				filter: [
					{ field:"id", value: cat.item_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();				

				if(view.length>0){
					obj.set("locale", view[0].locale);
					obj.set("measurement_id", view[0].measurement_id);
					obj.set("income_account_id", view[0].income_account_id);
					obj.set("cogs_account_id", view[0].cogs_account_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);
					obj.set("inventory_account_id", view[0].inventory_account_id);					
				}else{
					obj.set("locale", banhji.locale);
					obj.set("measurement_id", 0);
					obj.set("income_account_id", 0);
					obj.set("cogs_account_id", 0);
					obj.set("settlement_discount_id", 0);
					obj.set("inventory_account_id", 0);
				}
			});
		},    	   	
      	addEmpty 			: function(){      		
      		this.dataSource.data([]);
      		this.itemVendorDS.data([]);
	      	this.itemCustomerDS.data([]);
      		this.set("obj", null);

      		this.dataSource.add({
      			company_id 				: 0,
      			contact_id 				: "",
      			currency_id 			: 0,
      			category_id 			: 0,
      			item_type_id 			: 4, //Service Type      			      			
      			category_id 			: 0,
      			item_group_id 			: 0,
      			item_sub_group_id 		: 0,
      			brand_id 				: 0,
      			measurement_id			: 0,
      			main_id 				: 0,
      			sku 					: "",
      			international_code 		: "",
      			IMEI 					: "",
      			serial_number 			: "",
      			supplier_code 			: "",
      			color_code 				: "",
      			name 					: "",
      			description				: "",
      			measurements 			: "",
      			catalogs 				: [],
      			cost 					: 0,
      			price 					: 0,
      			amount 					: 0,
      			rate 					: 1,
      			locale 					: banhji.locale,
      			on_hand					: 0,      			      			     			
      			order_point 			: 0,
      			income_account_id 		: 0,
      			cogs_account_id  		: 0,
      			inventory_account_id 	: 0,
      			deposit_account_id 		: 0,
      			transaction_account_id 	: 0,
      			preferred_vendor_id 	: 0,
      			image_url 				: "",      			
      			favorite 				: false,
      			is_catalog 				: 0,
      			is_assemble 			: 0,
      			is_pattern 				: 0,
      			status 					: 1,
      			deleted 				: 0
			});      		

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);			
      	},
      	objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	},      	
      	save 				: function(){
      		var self = this;

      		if(this.get("isEdit")){
      			this.dataSource.sync();
      			this.itemVendorDS.sync();
      			this.itemCustomerDS.sync();
      		}else{
	      		this.objSync().then(function(data){
	      			$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			if(data[0].is_pattern){
						self.savePattern(data[0].category_id, data[0].id);
					}

	      			self.itemVendorDS.sync();
	      			self.itemCustomerDS.sync();
	      		}).then(function(){
	      			self.addEmpty();
	      		});
      		}      		      		
      	},      	
      	delete 				: function(){			
	    	var self = this,
			obj = this.get("obj");

			if (confirm("Are you sure, you want to delete it?")) {				
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						var data = self.dataSource.get(obj.id);
				        self.dataSource.remove(data);
				        self.save();

				        window.history.back();
					}
				});
	    	}	    	
	    },
	    addEmptyItemVendor 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemVendorDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemCustomerDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		}
    });
	banhji.nonInventoryPart =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	patternDS 			: dataStore(apiUrl + "items"),
    	deleteDS 			: dataStore(apiUrl + "transactions/line"),
    	categoryDS 			: dataStore(apiUrl + "categories"),
    	itemGroupDS 		: dataStore(apiUrl + "items/group"),
    	brandDS 	 		: dataStore(apiUrl + "brands"),    	   	   	
    	measurementDS		: dataStore(apiUrl + "measurements"),
    	vendorDS 	 		: dataStore(apiUrl + "contacts"),
    	customerDS 	 		: dataStore(apiUrl + "contacts"),
    	itemVendorDS 	 	: dataStore(apiUrl + "items/contact"),
    	itemCustomerDS 	 	: dataStore(apiUrl + "items/contact"),
    	currencyDS 	 		: banhji.source.currencyDS,  	
    	incomeAccountDS 	: banhji.source.incomeAccountDS,
    	cogsAccountDS 		: banhji.source.cogsAccountDS,
    	inventoryAccountDS 	: banhji.source.inventoryAccountDS,
    	statusList 			: banhji.source.statusList,
        vendorList 			: [],
        customerList 		: [],
    	obj 	 			: null,
    	isEdit 				: false,    	
    	pageLoad 			: function(id, is_pattern){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id, is_pattern);
				this.loadItemContact(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
    	loadObj 			: function(id, is_pattern){
    		var self = this, para = [];

			para.push({ field:"id", value: id });

			if(is_pattern){
				para.push({ field:"is_pattern", value: 1 });
			}

    		this.dataSource.query({    			
				filter: para,
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	loadVendor 			: function(){
    		var self = this;

    		this.vendorDS.query({    			
				filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:2 }
			}).then(function(e){
				var view = self.vendorDS.view();
				
				$.each(view, function(index, value){
					self.vendorList.push(value);
				});		    	
			});
    	},
    	loadCustomer 		: function(){
    		var self = this;

    		this.customerDS.query({    			
				filter: { field:"parent_id", operator:"where_related", model:"contact_type", value:1 }
			}).then(function(e){
				var view = self.customerDS.view();
				
				$.each(view, function(index, value){
					self.customerList.push(value);
				});		    	
			});
    	},
    	loadItemContact		: function(id){
			this.itemVendorDS.query({
				filter: [ 
					{ "field":"item_id", value: id },
					{ "field":"type", value: "vendor" }
				],
				page: 1,
				pageSize: 100
			});

			this.itemCustomerDS.query({
				filter: [ 
					{ "field":"item_id", value: id },
					{ "field":"type", value: "customer" }
				],
				page: 1,
				pageSize: 100
			});
		},
		//Pattern
		setPattern 				: function(category_id){
			var obj = this.get("obj");

			obj.set("category_id", category_id);
			obj.set("is_pattern", 1);
		},
		savePattern 			: function(category_id, item_id){
			var data = banhji.itemSetting.categoryDS.get(category_id);
			data.set("item_id", item_id);
			banhji.itemSetting.categoryDS.sync();			
			window.history.back();
		},
		loadPattern 			: function(){
			var self = this, obj = self.get("obj"), cat = this.categoryDS.get(obj.category_id);

			this.patternDS.query({
				filter: [
					{ field:"id", value: cat.item_id },
					{ field:"is_pattern", value: 1 }
				],
				page: 1,
				pageSize: 1
			}).then(function(data){
				var view = self.patternDS.view();				

				if(view.length>0){
					obj.set("locale", view[0].locale);
					obj.set("measurement_id", view[0].measurement_id);
					obj.set("income_account_id", view[0].income_account_id);
					obj.set("cogs_account_id", view[0].cogs_account_id);
					obj.set("settlement_discount_id", view[0].settlement_discount_id);
					obj.set("inventory_account_id", view[0].inventory_account_id);					
				}else{
					obj.set("locale", banhji.locale);
					obj.set("measurement_id", 0);
					obj.set("income_account_id", 0);
					obj.set("cogs_account_id", 0);
					obj.set("settlement_discount_id", 0);
					obj.set("inventory_account_id", 0);
				}
			});
		},    	   	
      	addEmpty 			: function(){      		
      		this.dataSource.data([]);
      		this.itemVendorDS.data([]);
	      	this.itemCustomerDS.data([]);
      		this.set("obj", null);

      		this.dataSource.add({
      			company_id 				: 0,
      			contact_id 				: "",
      			currency_id 			: 0,
      			category_id 			: 0,
      			item_type_id 			: 2, //Non Inventory Part      			      			
      			category_id 			: 0,
      			item_group_id 			: 0,
      			item_sub_group_id 		: 0,
      			brand_id 				: 0,
      			measurement_id			: 0,
      			main_id 				: 0,
      			sku 					: "",
      			international_code 		: "",
      			IMEI 					: "",
      			serial_number 			: "",
      			supplier_code 			: "",
      			color_code 				: "",
      			name 					: "",
      			description				: "",
      			measurements 			: "",
      			catalogs 				: [],
      			cost 					: 0,
      			price 					: 0,
      			amount 					: 0,
      			rate 					: 1,
      			locale 					: banhji.locale,
      			on_hand					: 0,      			      			     			
      			order_point 			: 0,
      			income_account_id 		: 0,
      			cogs_account_id  		: 0,
      			inventory_account_id 	: 0,
      			deposit_account_id 		: 0,
      			transaction_account_id 	: 0,
      			preferred_vendor_id 	: 0,
      			image_url 				: "",      			
      			favorite 				: false,
      			is_catalog 				: 0,
      			is_assemble 			: 0,
      			is_pattern 				: 0,
      			status 					: 1,
      			deleted 				: 0
			});      		

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);			
      	},
      	objSync 			: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },
      	cancel 				: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	},      	
      	save 				: function(){
      		var self = this;

      		if(this.get("isEdit")){
      			this.dataSource.sync();
      			this.itemVendorDS.sync();
      			this.itemCustomerDS.sync();
      		}else{
	      		this.objSync().then(function(data){
	      			$.each(self.itemVendorDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			$.each(self.itemCustomerDS.data(), function(index, value){
	      				value.set("item_id", data[0].id);
	      			});

	      			if(data[0].is_pattern){
						self.savePattern(data[0].category_id, data[0].id);
					}

	      			self.itemVendorDS.sync();
	      			self.itemCustomerDS.sync();
	      		}).then(function(){	
	      			self.addEmpty();
	      		});
      		}      		      		
      	},      	
      	delete 				: function(){			
	    	var self = this,
			obj = this.get("obj");

			if (confirm("Are you sure, you want to delete it?")) {				
				this.deleteDS.query({
				  	filter: { field: "item_id", value: obj.id },
				  	page: 1,
				  	pageSize: 1
				}).then(function() {
					var view = self.deleteDS.view();

					if(view.length>0){
						alert("Sorry, you can not delete it because it is using now.");
					}else{
						var data = self.dataSource.get(obj.id);
				        self.dataSource.remove(data);
				        self.save();

				        window.history.back();
					}
				});
	    	}	    	
	    },
	    addEmptyItemVendor 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemVendorDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "vendor"
			});								
		},
		deleteItemVendor 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemVendorDS.getByUid(d.uid);

				this.itemVendorDS.remove(obj);
			}
		},
		addEmptyItemCustomer 	: function(){
			var item_id = 0;
			if(this.get("isEdit")){
				item_id = this.get("obj").id;
			}

			this.itemCustomerDS.add({
				item_id 	: item_id,					 			
				contact_id 	: "",
				code 		: "",      				
				type 		: "customer"
			});								
		},
		deleteItemCustomer 	: function(e){
			if (confirm("Are you sure, you want to delete it?")) {
				var d = e.data,
				obj = this.itemCustomerDS.getByUid(d.uid);

				this.itemCustomerDS.remove(obj);
			}
		}
    });
	banhji.itemRecord =  kendo.observable({
		lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items/record"),
    	itemDS 				: dataStore(apiUrl + "items"),
    	invoiceDS 			: dataStore(apiUrl + "invoices"),    	
    	currencyDS 			: dataStore(apiUrl + "currencies"),
    	contactDS  			: dataStore(apiUrl + "contacts"),
    	measurementDS 	   	: dataStore(apiUrl + "measurements"),
    	
    	obj 				: null,
    	item 				: null,    	
    	isEdit 				: false,

    	pageLoad 			: function(id){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
		loadObj 			: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	loadItem     		: function(id){
    		var self = this;

    		this.itemDS.query({
    			filter: { field:"id", value: id }
    		}).then(function(){
    			var view = self.itemDS.view();

    			self.set("item", view[0]);
    		});
    	},
    	itemChanges 		: function(){
    		var obj = this.get("obj");

    		if(obj.item_id>0){
    			var item = this.itemDS.get(obj.item_id);

    			this.set("item", item);
    		}
    	},	
      	addEmpty 			: function(){
      		this.dataSource.data([]);
      		this.set("obj", null);

      		this.dataSource.add({
      			contact_id 		: "",
      			reference_id 	: "",      			
      			currency_id 	: 1,      				      			
      			measurement_id 	: 0,
      			item_id 		: "",
      			unit 			: 0,
      			price 			: 0,
      			amount			: 0,
      			rate 			: 1,
      			movement 		: "IN",
      			issued_date		: new Date(),
      			memo 			: ""
			});

			var data = this.dataSource.data();
			var obj = data[data.length - 1];
      						
			this.set("obj", obj);      					
      	},      	
      	cancel 		 	: function(e){
      		e.preventDefault();

      		this.dataSource.cancelChanges();
      		window.history.back();      		
      	}, 
      	save 			: function(){
      		var self = this, obj = this.get("obj");

      		if(obj.unit<0){
      			obj.set("movement", "OUT");
      		}

      		this.dataSource.sync();
      		var saved = false;
      		this.dataSource.bind("requestEnd", function(e){
      			if(e.type=="create" && saved==false){
      				saved = true;

      				self.addEmpty();
      			}
      		});
      	},      	
      	delete 			: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();
	    	}	    	
	    }
    });
    banhji.itemAdjustment = kendo.observable({
    	lang 				: langVM,
    	dataSource  		: dataStore(apiUrl + "transactions"),	
    	lineDS  			: dataStore(apiUrl + "transactions/line"),	
		itemDS  			: dataStore(apiUrl + "items"),
		contactDS 			: dataStore(apiUrl + "contacts"),
		accountDS 			: dataStore(apiUrl + "accounts"),		
		segmentItemDS		: banhji.source.segmentItemDS,
		categoryDS 			: dataStore(apiUrl + "categories"),
		itemGroupDS			: dataStore(apiUrl + "items/group"),
		
		obj 				: null,		
		biller_id			: banhji.source.user_id,	
		
		category_id 		: null,
		selectedItemGroup 	: [],
		isCategorySelected	: false,

		pageLoad 			: function(id){			
			if(id){
				this.set("isEdit", true);							
				this.loadObj(id);
			}else{				
				if(this.get("isEdit")){
					this.set("isEdit", false);
					
					this.dataSource.data([]);					
					
					this.addEmpty();
				}else if(this.dataSource.total()==0){
					this.addEmpty();					
				}								
			}  																							
		},
		loadObj 			: function(id){
    		var self = this;

    		this.dataSource.query({    			
				filter: { field:"id", value: id }
			}).then(function(e){
				var view = self.dataSource.view();
						    	
		    	self.set("obj", view[0]);
			});
    	},
    	categoryChanges 		: function(){
			var category_id = this.get("category_id");

			if(category_id){
				this.set("isCategorySelected", true);
				this.itemGroupDS.filter({ field:"category_id", value: category_id });
			}else{
				this.set("isCategorySelected", false);
				this.set("selectedItemGroup", []);
			}        	
        }, 		
		onChange 			: function(e) {
			e.preventDefault();

      		var selected = e.data,
      		index = this.lineDS.indexOf(e.data),
  			dataItem = this.lineDS.at(index+1);            
            
            if(kendo.parseInt(selected.new_qty)>0){
            	var diff = selected.new_qty - selected.on_hand;         
		        selected.set("unit", diff);
		        if(diff>0){
		        	selected.set("movement", 1);
		        }else{
		        	selected.set("movement", -1);
		        }
			}			
      					
			if(dataItem){
				$(".txt"+dataItem.uid).focus();
			}else{
				dataItem = this.lineDS.at(0);
				$(".txt"+dataItem.uid).focus();
			}            
        },        
        segmentChanges 		 : function(e) {
			var obj = this.get("obj"),
			dataArr = obj.segments,
			lastIndex = dataArr.length - 1,
			last = banhji.segmentItem.ds.get(dataArr[lastIndex]);
			
			if(dataArr.length > 1) {
				for(var i = 0; i < dataArr.length - 1; i++) {
					var current_index = dataArr[i],
					current = banhji.segmentItem.ds.get(current_index);

					if(current.segment_id === last.segment_id) {
						dataArr.splice(lastIndex, 1);
						break;
					}
				}
			}				
		},
		search 				: function(){
			var self = this,
			para = [],			
			category_id = this.get("category_id"),
			selectedItemGroup = this.get("selectedItemGroup");        	

            if(selectedItemGroup.length>0){
				var ids = [];
				$.each(selectedItemGroup, function(index, value){
					ids.push(value);
				});
				
				para.push({ field:"item_group_id", operator:"where_in", value:ids });
			}else if(category_id){
				para.push({ field:"category_id", value:category_id });
			}

			para.push({ field:"item_type_id", value:1 });
			para.push({ field:"is_catalog", value: 0 });
			para.push({ field:"is_assemble", value: 0 });          

            this.itemDS.query({
            	filter: para,
            	page: 1,
            	pageSize: 100
            }).then(function(data){
            	var view = self.itemDS.view();
            	self.lineDS.data([]);

            	$.each(view, function(index, value){
            		self.lineDS.add({
            			transaction_id 			: 0,
						item_id 			: value.id,
						measurement_id 		: value.measurement_id,						
						description 		: value.sku +" "+ value.name,
						on_hand 			: value.on_hand,
						new_qty 			: "",				
						unit 	 			: "",
						price 				: value.price,												
						amount 				: 0,
						rate				: 1,
						locale				: banhji.institute.locale,
						movement 			: ""						
            		});
            	});
            });
		},
		removeRow 			: function(e){						
			var d = e.data;				
			this.lineDS.remove(d);	        		        
		},
        addEmpty 		 	: function(){							
			this.set("obj", null);				
			
			this.dataSource.add({
				company_id 			: 0,
				location_id 		: 0,
				contact_id 			: "",
				payment_term_id		: 0,
				payment_method_id 	: 0,
				reference_id 		: 0,
				account_id 	 		: 0,
				vat_id 				: 0,
				biller_id 			: this.get("biller_id"),
 	    		number 				: "",
			   	type				: "Adjustment",
			   	sub_total 			: 0,				   		   					   				   	
			   	amount				: 0,
			   	vat 				: 0,
			   	rate				: 1,			   	
			   	locale 				: "km-KH",			   	
			   	issued_date 		: new Date(),
			   	due_date 			: "",
			   	check_no 			: "",
			   	bill_to 			: "",
			   	ship_to 			: "",
			   	memo 				: "",
			   	memo2 				: "",
			   	status 				: 0,

			   	segments 			: []				
	    	});		    		
			
			var data = this.dataSource.data();
			var obj = data[data.length-1];			
			this.set("obj", obj);			
		},
	    invoiceSync 		: function(){
	    	var dfd = $.Deferred();	        

	    	this.dataSource.sync();
		    this.dataSource.bind("requestEnd", function(e){			    	
				dfd.resolve(e.response.results);    				
		    });

		    return dfd;	    		    	
	    },      	
      	save 				: function(){				
	    	var self = this;			
	    	
	    	if(this.get("isEdit")){
	    		this.dataSource.sync();
	    		this.lineDS.sync();
	    	}else{
	    		//Add brand new invoice
				this.invoiceSync()
				.then(function(data){
					$.each(self.lineDS.data(), function(index, value){										
						value.set("transaction_id", data[0].id);						
					});
					self.lineDS.sync();											
				}).then(function(){
					self.dataSource.data([]);
					self.lineDS.data([]);										
					
					self.addEmpty();
				});
			}
		},
		cancel 				: function(){
			this.dataSource.cancelChanges();
			this.lineDS.cancelChanges();
			window.history.back();
		},	          	
      	delete 			: function(e){
			if (confirm("Are you sure, you want to delete it?")) {        
		        var data = e.data;
		        this.dataSource.remove(data);
		        this.dataSource.sync();
	    	}	    	
	    }
	});
	banhji.itemSetting =  kendo.observable({
		lang 				: langVM,		        
        categoryDS 			: dataStore(apiUrl + "categories"),        
        itemGroupDS 		: dataStore(apiUrl + "items/group"),        
        measurementDS		: dataStore(apiUrl + "measurements"),
        brandDS 			: dataStore(apiUrl + "brands"),
        itemTypeDS 			: dataStore(apiUrl + "item_types"),        
        category_code 		: "",
        category_name 		: "",
        category_abbr 		: "",
        category_item_type_id : 1,
        item_group_category_id : 0,       
        item_group_code 	: "",
        item_group_name 	: "",
        item_group_abbr 	: "",        
        measurement_name 	: "",        
        brand_code 			: "",
        brand_name 			: "",
        brand_abbr 			: "",        
        pageLoad 			: function() {
        	
        },        
        addCategory 		: function(){
        	var self = this, 
        	name = this.get("category_name"),
        	code = this.get("category_code");

        	if(name!=="" && code!==""){        		
	        	this.categoryDS.add({	        		
	        		sub_of 		 	: 0,
	        		item_type_id 	: this.get("category_item_type_id"),
	        		item_id 		: 0,
	        		code 			: code,	        		
	        		name 			: name,
	        		abbr 			: this.get("category_abbr"),	        		
	        		is_system 		: 0,
	        		item_type 		: []
	        	});

	        	this.categoryDS.sync();
	        	this.set("category_code", "");
    			this.set("category_name", "");
    			this.set("category_abbr", "");
        	}else{
        		alert("required number and name!");
        	}
        },
        addItemGroup 		: function(){
        	var self = this, 
        	category_id = this.get("item_group_category_id"),
        	name = this.get("item_group_name"),
        	code = this.get("item_group_code");

        	if(category_id>0 && name!=="" && code!==""){        		
	        	this.itemGroupDS.add({	        		
	        		category_id	 	: category_id,
	        		sub_of 		 	: 0,
	        		code 			: code,	        		
	        		name 			: name,
	        		abbr 			: this.get("item_group_abbr"),	        		
	        		is_system 		: 0
	        	});

	        	this.itemGroupDS.sync();
	        	
    			self.set("item_group_category_id", 0);    			
    			self.set("item_group_code", "");
    			self.set("item_group_name", "");
    			self.set("item_group_abbr", "");	        		
        	}else{
        		alert("required category, number, and name!");
        	}
        },
        addMeasurement 		: function(){
        	var self = this, 
        	name = this.get("measurement_name");

        	if(name!==""){
	        	this.measurementDS.add({	        		
	        		name 		: name,
	        		description : name,
	        		is_system 	: 0
	        	});

	        	this.measurementDS.sync();
	        		        			
	        	this.set("measurement_name", "");	        		
        	}else{
        		alert("required name");
        	}
        },
        addBrand 		: function(){
        	var self = this, 
        	code = this.get("brand_code"),
        	name = this.get("brand_name");

        	if(name!=="" && code!==""){
	        	this.brandDS.add({
	        		sub_of 		: this.get("brand_sub_of"),
	        		code 		: code,        		
	        		name 		: name,
	        		abbr 		: this.get("brand_abbr")
	        	});

	        	this.brandDS.sync();	        	    			
	        			
    			this.set("brand_code", "");
    			this.set("brand_name", "");
    			this.set("brand_abbr", "");	        		
        	}else{
        		alert("required number and name!");
        	}
        },
        goPattern 	: function(e){
        	var data = e.data;        	        	

        	if(kendo.parseInt(data.item_id)>0){
        		if(data.item_type_id==1){        		        	
	        		banhji.router.navigate('/item/'+data.item_id+'/1');
	        	}else{
	        		banhji.router.navigate('/non_inventory_part/'+data.item_id+'/1');
	        	}   	
        	}else{
        		if(data.item_type_id==1){        		        	
	        		banhji.router.navigate('/item');
	        		banhji.item.setPattern(data.id);
	        	}else{
	        		banhji.router.navigate('/non_inventory_part');
	        		banhji.nonInventoryPart.setPattern(data.id);
	        	}        		
        	}
        } 
    });
    banhji.serviceSetting =  kendo.observable({
		lang 				: langVM,		        
        categoryDS 			: dataStore(apiUrl + "categories"),        
        itemGroupDS 		: dataStore(apiUrl + "items/group"),        
        measurementDS		: dataStore(apiUrl + "measurements"),        
        itemTypeDS 			: dataStore(apiUrl + "item_types"),        
        category_code 		: "",
        category_name 		: "",
        category_abbr 		: "",
        category_item_type_id : 4,
        item_group_category_id : 0,       
        item_group_code 	: "",
        item_group_name 	: "",
        item_group_abbr 	: "",        
        measurement_name 	: "",        
        pageLoad 			: function() {
        	
        },        
        addCategory 		: function(){
        	var self = this, 
        	name = this.get("category_name"),
        	code = this.get("category_code");

        	if(name!=="" && code!==""){        		
	        	this.categoryDS.add({	        		
	        		sub_of 		 	: 0,
	        		item_type_id 	: this.get("category_item_type_id"),
	        		item_id 		: 0,
	        		code 			: code,	        		
	        		name 			: name,
	        		abbr 			: this.get("category_abbr"),	        		
	        		is_system 		: 0,
	        		item_type 		: []
	        	});

	        	this.categoryDS.sync();
	        	this.set("category_code", "");
    			this.set("category_name", "");
    			this.set("category_abbr", "");
        	}else{
        		alert("required number and name!");
        	}
        },
        addItemGroup 		: function(){
        	var self = this, 
        	category_id = this.get("item_group_category_id"),
        	name = this.get("item_group_name"),
        	code = this.get("item_group_code");

        	if(category_id>0 && name!=="" && code!==""){        		
	        	this.itemGroupDS.add({	        		
	        		category_id	 	: category_id,
	        		sub_of 		 	: 0,
	        		code 			: code,	        		
	        		name 			: name,
	        		abbr 			: this.get("item_group_abbr"),	        		
	        		is_system 		: 0
	        	});

	        	this.itemGroupDS.sync();
	        	
    			self.set("item_group_category_id", 0);    			
    			self.set("item_group_code", "");
    			self.set("item_group_name", "");
    			self.set("item_group_abbr", "");	        		
        	}else{
        		alert("required category, number, and name!");
        	}
        },
        addMeasurement 		: function(){
        	var self = this, 
        	name = this.get("measurement_name");

        	if(name!==""){
	        	this.measurementDS.add({	        		
	        		name 		: name,
	        		description : name,
	        		is_system 	: 0
	        	});

	        	this.measurementDS.sync();
	        		        			
	        	this.set("measurement_name", "");	        		
        	}else{
        		alert("required name");
        	}
        },        
        goPattern 	: function(e){
        	var data = e.data;        	

        	if(kendo.parseInt(data.item_id)>0){        		       		        	
	        	banhji.router.navigate('/item_service/'+data.item_id+'/1');	        		
        	}else{        		       		        	
	        	banhji.router.navigate('/item_service');	        	   		
        		banhji.item.setPattern(data.id);
        	}
        } 
    });
	banhji.inventoryPositionSummary =  kendo.observable({
		lang 				: langVM,    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/inventory_position_summary",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "on_hand", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),

    	as_of 				: new Date(),  	
    	
    	pageLoad 			: function(id){			
																						
		},			
		strDate 			: function(){
			var strDate = "As of " + kendo.toString(this.get("as_of"), "dd-MM-yyyy");			

			return strDate;
		},
		search 				: function(){
			var para = [], 
			as_of = kendo.toString(this.get("as_of"), "yyyy-MM-dd");

        	//Dates
        	if(as_of){        		
            	para.push({ field:"issued_date <=", value: as_of });            	          	            	
            }                   

            this.dataSource.filter(para);
		}    	
    });
    banhji.inventoryPositionDetail =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items/inventory_position_detail"),

    	sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",   	
    	
    	pageLoad 			: function(id){			
																						
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
		}    	
    });
    banhji.inventorySaleByItem =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/inventory_sale_by_item",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "qty", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),

    	sortList			: banhji.source.sortList,
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",   	
    	
    	pageLoad 			: function(){			
																						
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
            var loaded = false;
            this.dataSource.bind("requestEnd", function(e){
            	if(e.type=="read" && loaded==false){
            		loaded = true;

            		self.dataSource.sort({ field: "qty", dir: "desc" });
            	}
            });
		}    	
    });
    banhji.inventoryTurnoverList =  kendo.observable({
    	lang 				: langVM,    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/inventory_turnover_list",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "days", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),
    	
		as_of 				: new Date(),   	
    	
    	pageLoad 			: function(){			
																						
		},			
		strDate 			: function(){
			var strDate = "As of " + kendo.toString(this.get("as_of"), "dd-MM-yyyy");			

			return strDate;
		},
		search 				: function(){
			var para = [], 
			as_of = kendo.toString(this.get("as_of"), "yyyy-MM-dd");

        	//Dates
        	if(as_of){        		
            	para.push({ field:"issued_date <=", value: as_of });            	          	            	
            }                   

            this.dataSource.filter(para);
		}    	
    });
    banhji.inventoryList =  kendo.observable({
		lang 				: langVM,    	
    	dataSource 			: dataStore(apiUrl + "items"),
    	categoryDS 			: dataStore(apiUrl + "categories"),
    	itemGroupDS 		: dataStore(apiUrl + "items/group"),    	
    	contactDS  			: dataStore(apiUrl + "contacts"),
    	vendorDS  			: dataStore(apiUrl + "contacts"),
    	    	
    	searchField			: "",
    	category_id 		: 0,
    	item_group_id 		: 0,     	
    	
    	pageLoad 			: function(){    		
    		
    	},
    	search 				: function(){
    		var para = [],
    		searchField = this.get("searchField"),
    		category_id = this.get("category_id"),
    		item_group_id = this.get("item_group_id");

    		if(searchField!==""){
    			para.push(      				
      				{ field: "sku", operator: "like", value: searchField },
      				{ field: "name", operator: "or_like", value: searchField }
      			);
    		}

    		if(item_group_id>0){
    			para.push({ field:"item_group_id", value:item_group_id });
    		}else if(category_id>0){
    			para.push({ field:"category_id", value:category_id });
    		}

    		this.dataSource.filter(para);    		
    	},
    	searchFavorite 	: function(){
    		this.dataSource.filter({ field:"favorite", value: 1 });
    	},    	
    	vendorChanges 	: function(e){    		
    		var index = e.sender.select().index();
    		var data = this.vendorDS.at(index);    		
    		
    		this.dataSource.filter({ field:"contact_id", operator:"by_vendor", value:data.id });
    	}    		
    });
    banhji.inventoryMovementSummary =  kendo.observable({
    	lang 				: langVM,    	    	    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/inventory_movement_summary",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "begining", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),

    	sortList			: [ 
	 		{ text:"All", value: "all" }, 
	 		{ text:"Today",	value: "today" }, 
	 		{ text:"This Week", value: "week" }, 
	 		{ text:"This Month", value: "month" }, 
	 		{ text:"This Year", value: "year" } 
		],
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",   	
    	
    	pageLoad 			: function(id){			
																						
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
		}    	
    });
    banhji.inventoryMovementDetail =  kendo.observable({
    	lang 				: langVM,    	    	    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/inventory_movement_detail",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "begining", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),

    	sortList			: [ 
	 		{ text:"All", value: "all" }, 
	 		{ text:"Today",	value: "today" }, 
	 		{ text:"This Week", value: "week" }, 
	 		{ text:"This Month", value: "month" }, 
	 		{ text:"This Year", value: "year" } 
		],
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",   	
    	
    	pageLoad 			: function(id){			
																						
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
		}    	
    });
    banhji.inventoryPurchaseByVendorSummary =  kendo.observable({
    	lang 				: langVM,    	    	    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/purchase_by_vendor_summary",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "amount", dir: "desc" },
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),

    	sortList			: [ 
	 		{ text:"All", value: "all" }, 
	 		{ text:"Today",	value: "today" }, 
	 		{ text:"This Week", value: "week" }, 
	 		{ text:"This Month", value: "month" }, 
	 		{ text:"This Year", value: "year" } 
		],
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",   	
    	
    	pageLoad 			: function(id){			
																						
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
		}    	
    });
    banhji.inventoryPurchaseByVendorDetail = kendo.observable({
    	lang 				: langVM,    	    	    	
    	dataSource 			: new kendo.data.DataSource({
			transport: {
				read 	: {
					url: apiUrl + "items/purchase_by_vendor_detail",
					type: "GET",
					headers: banhji.header,
					dataType: 'json'
				},				
				parameterMap: function(options, operation) {
					if(operation === 'read') {
						return {
							limit: options.pageSize,
							page: options.page,
							filter: options.filter,
							sort: options.sort
						};
					} else {
						return {models: kendo.stringify(options.models)};
					}
				}
			},
			sort: { field: "issued_date", dir: "asc" },			
			schema 	: {
				model: {
					id: 'id'
				},
				data: 'results',
				total: 'count'
			},
			batch: true,
			serverFiltering: true			
		}),

    	sortList			: [ 
	 		{ text:"All", value: "all" }, 
	 		{ text:"Today",	value: "today" }, 
	 		{ text:"This Week", value: "week" }, 
	 		{ text:"This Month", value: "month" }, 
	 		{ text:"This Year", value: "year" } 
		],
		sorter 				: "all",
		sdate 				: "",
		edate 				: "",   	
    	
    	pageLoad 			: function(id){			
																						
		},
		sorterChanges 		: function(){
			var value = this.get("sorter"),
			today = new Date();

			switch(value){
			case "today":								
				this.set("sdate", today);
				this.set("edate", "");
							  					
			  	break;
			case "week":			  	
				var first = today.getDate() - today.getDay(),
				last = first + 6;

				var firstDayOfWeek = new Date(today.setDate(first)),
				lastDayOfWeek = new Date(today.setDate(last));				

				this.set("sdate", firstDayOfWeek);
				this.set("edate", lastDayOfWeek);
				
			  	break;
			case "month":							  	
				var firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1),
				lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

				this.set("sdate", firstDayOfMonth);
				this.set("edate", lastDayOfMonth);

			  	break;
			case "year":				
			  	var firstDayOfYear = new Date(today.getFullYear(), 0, 1),
			  	lastDayOfYear = new Date(today.getFullYear(), 11, 31);

				this.set("sdate", firstDayOfYear);
				this.set("edate", lastDayOfYear);

			  	break;
			default:
				this.set("sdate", "");
				this.set("edate", "");					  
			}
		},		
		strDate 			: function(){
			var strDate = "",
			sdate = this.get("sdate"),
			edate = this.get("edate");

			if(sdate && edate){
				strDate = "From " + kendo.toString(new Date(sdate), "dd-MM-yyyy") + " To " + kendo.toString(new Date(edate), "dd-MM-yyyy");
			}else if(sdate){
				strDate = "On " + kendo.toString(new Date(sdate),"dd-MM-yyyy");
			}else if(edate){
				strDate = "As Of " + kendo.toString(new Date(edate),"dd-MM-yyyy");
			}else{
				strDate = "";
			}

			return strDate;
		},
		search 				: function(){
			var self = this,
			para = [], 
			start = kendo.toString(this.get("sdate"), "yyyy-MM-dd"), 
			end = kendo.toString(this.get("edate"), "yyyy-MM-dd");

        	//Dates
        	if(start && end){        		
            	para.push({ field:"issued_date >=", value: start });
            	para.push({ field:"issued_date <=", value: end });            	          	            	
            }else if(start){
            	para.push({ field:"issued_date", value: start });
            }else if(end){
            	para.push({ field:"issued_date <=", value: end });
            }else{
            	
            }          

            this.dataSource.filter(para);
		}    	
    });





    /*************************
	*	Reports Module Section   *
	**************************/
    banhji.reportDashboard = kendo.observable({
    	lang 				: langVM,    	 	
    	pageLoad 			: function(id){			
																						
		}    	
    });
	

	/* views and layout */
	banhji.view = {
		layout 		: new kendo.Layout('#layout', {model: banhji.Layout}),
		blank		: new kendo.View('<div></div>'),		
		index  		: new kendo.Layout("#index", {model: banhji.index}),		
		menu 		: new kendo.Layout('#menu-tmpl', {model: banhji.userManagement}),
		searchAdvanced: new kendo.Layout("#searchAdvanced", {model: banhji.searchAdvanced}),

		//Accounting
		accountingDashboard: new kendo.Layout("#accountingDashboard", {model: banhji.accountingDashboard}),
		accountingCenter: new kendo.Layout("#accountingCenter", {model: banhji.accountingCenter}),
		account: new kendo.Layout("#account", {model: banhji.account}),
		txnItem: new kendo.Layout("#txnItem", {model: banhji.txnItem}),
		journal: new kendo.Layout("#journal", {model: banhji.journal}),
		currencyRate: new kendo.Layout("#currencyRate", {model: banhji.currencyRate}),
		recurring: new kendo.Layout("#recurring", {model: banhji.recurring}),
		journalReport: new kendo.Layout("#journalReport", {model: banhji.journalReport}),
		trialBalance: new kendo.Layout("#trialBalance", {model: banhji.trialBalance}),
		chartOfAccount: new kendo.Layout("#chartOfAccount", {model: banhji.chartOfAccount}),
		saleTax: new kendo.Layout("#saleTax", {model: banhji.saleTax}),
		accountingReportCenter: new kendo.Layout("#accountingReportCenter"),
		accountingSetting: new kendo.Layout("#accountingSetting", {model: banhji.accountingSetting}),
		segment: new kendo.Layout("#segment", {model: banhji.segment}),
		generalLedger: new kendo.Layout("#generalLedger", {model: banhji.generalLedger}),
		transactionListDate: new kendo.Layout("#transactionListDate", {model: banhji.transactionListDate}),
		recentTransactionsList: new kendo.Layout("#recentTransactionsList", {model: banhji.recentTransactionsList}),
		reconciliationReport: new kendo.Layout("#reconciliationReport", {model: banhji.reconciliationReport}),
		recurringJournalList: new kendo.Layout("#recurringJournalList", {model: banhji.recurringJournalList}),
		statementProfitLoss: new kendo.Layout("#statementProfitLoss", {model: banhji.statementProfitLoss}),
		statementFinancialPosition: new kendo.Layout("#statementFinancialPosition", {model: banhji.statementFinancialPosition}),
		statementProfitLossComparison: new kendo.Layout("#statementProfitLossComparison", {model: banhji.statementProfitLossComparison}),
		statementFinancialPositionComparison: new kendo.Layout("#statementFinancialPositionComparison", {model: banhji.statementFinancialPositionComparison}),
		statementChangesEquity: new kendo.Layout("#statementChangesEquity", {model: banhji.statementChangesEquity}),
		statementCashFlow: new kendo.Layout("#statementCashFlow", {model: banhji.statementCashFlow}),
		auditTrialReport: new kendo.Layout("#auditTrialReport", {model: banhji.auditTrialReport}),

		//Employee
		employeeDashboard: new kendo.Layout("#employeeDashboard", {model: banhji.employeeDashboard}),
		employeeCenter: new kendo.Layout("#employeeCenter", {model: banhji.employeeCenter}),
		employee: new kendo.Layout("#employee", {model: banhji.employee}),
		cashAdvance: new kendo.Layout("#cashAdvance", {model: banhji.cashAdvance}),
		expense: new kendo.Layout("#expense", {model: banhji.expense}),
		employeeReportCenter: new kendo.Layout("#employeeReportCenter"),

		//Vendor
		vendorDashboard: new kendo.Layout("#vendorDashboard", {model: banhji.vendorDashboard}),
		vendorCenter: new kendo.Layout("#vendorCenter", {model: banhji.vendorCenter}),
		vendor: new kendo.Layout("#vendor", {model: banhji.vendor}),
		purchaseOrder: new kendo.Layout("#purchaseOrder", {model: banhji.purchaseOrder}),
		grn: new kendo.Layout("#grn", {model: banhji.grn}),
		purchase: new kendo.Layout("#purchase", {model: banhji.purchase}),
		purchaseReturn: new kendo.Layout("#purchaseReturn", {model: banhji.purchaseReturn}),
		vendorDeposit: new kendo.Layout("#vendorDeposit", {model: banhji.vendorDeposit}),		
		vendorSetting: new kendo.Layout("#vendorSetting", {model: banhji.vendorSetting}),
		vendorReportCenter: new kendo.Layout("#vendorReportCenter", {model: banhji.vendorReportCenter}),
		expensesPurchaseSummarySupplier: new kendo.Layout("#expensesPurchaseSummarySupplier", {model: banhji.expensesPurchaseSummarySupplier}),
		expensesPurchaseDetailSupplier: new kendo.Layout("#expensesPurchaseDetailSupplier", {model: banhji.expensesPurchaseDetailSupplier}),
		purchaseSummaryProductServices: new kendo.Layout("#purchaseSummaryProductServices", {model: banhji.purchaseSummaryProductServices}),
		openPurchaseOrder: new kendo.Layout("#openPurchaseOrder", {model: banhji.openPurchaseOrder}),
		purchaseDetailProductServices: new kendo.Layout("#purchaseDetailProductServices", {model: banhji.purchaseDetailProductServices}),
		suppliersTransactionList: new kendo.Layout("#suppliersTransactionList", {model: banhji.suppliersTransactionList}),
		depositDetailSupplier: new kendo.Layout("#depositDetailSupplier", {model: banhji.depositDetailSupplier}),
		suppliersBalanceSummary: new kendo.Layout("#suppliersBalanceSummary", {model: banhji.suppliersBalanceSummary}),
		suppliersBalanceDetail: new kendo.Layout("#suppliersBalanceDetail", {model: banhji.suppliersBalanceDetail}),
		payablesAgingSummary: new kendo.Layout("#payablesAgingSummary", {model: banhji.payablesAgingSummary}),
		payablesAgingDetail: new kendo.Layout("#payablesAgingDetail", {model: banhji.payablesAgingDetail}),
		listBillsPaid: new kendo.Layout("#listBillsPaid", {model: banhji.listBillsPaid}),
		billPaymentList: new kendo.Layout("#billPaymentList", {model: banhji.billPaymentList}),
		productServiceList: new kendo.Layout("#productServiceList", {model: banhji.productServiceList}),
		supplierList: new kendo.Layout("#supplierList", {model: banhji.supplierList}),

		//Customer
		customerDashboard: new kendo.Layout("#customerDashboard", {model: banhji.customerDashboard}),
		customerCenter: new kendo.Layout("#customerCenter", {model: banhji.customerCenter}),		
		customer: new kendo.Layout("#customer", {model: banhji.customer}),		
		invoice: new kendo.Layout("#invoice", {model: banhji.invoice}),
		cashSale: new kendo.Layout("#cashSale", {model: banhji.cashSale}),
		saleOrder: new kendo.Layout("#saleOrder", {model: banhji.saleOrder}),
		quote: new kendo.Layout("#quote", {model: banhji.quote}),		
		gdn: new kendo.Layout("#gdn", {model: banhji.gdn}),
		saleReturn: new kendo.Layout("#saleReturn", {model: banhji.saleReturn}),		
		statement: new kendo.Layout("#statement", {model: banhji.statement}),
		customerDeposit: new kendo.Layout("#customerDeposit", {model: banhji.customerDeposit}),
		customerReportCenter: new kendo.Layout("#customerReportCenter", {model: banhji.customerReportCenter}),
		customerList : new kendo.Layout("#customerList", {model: banhji.customerList}),
		customerBalance : new kendo.Layout("#customerBalance", {model: banhji.customerBalance}),
		customerSetting: new kendo.Layout("#customerSetting", {model: banhji.customerSetting}),
		job: new kendo.Layout("#job", {model: banhji.job}),
		invoiceCustom: new kendo.Layout("#invoiceCustom", {model: banhji.invoiceCustom}),
		invoiceForm: new kendo.Layout("#invoiceForm", {model: banhji.invoiceForm}),
		invoiceForm1: new kendo.Layout("#invoiceForm1", {model: banhji.invoiceForm}),
		invoiceForm2: new kendo.Layout("#invoiceForm2", {model: banhji.invoiceForm}),
		invoiceForm6: new kendo.Layout("#invoiceForm6", {model: banhji.invoiceForm}),
		invoiceForm7: new kendo.Layout("#invoiceForm7", {model: banhji.invoiceForm}),
		invoiceForm8: new kendo.Layout("#invoiceForm8", {model: banhji.invoiceForm}),
		invoiceForm9: new kendo.Layout("#invoiceForm9", {model: banhji.invoiceForm}),
		invoiceForm10: new kendo.Layout("#invoiceForm10", {model: banhji.invoiceForm}),
		invoiceForm11: new kendo.Layout("#invoiceForm11", {model: banhji.invoiceForm}),
		invoiceForm12: new kendo.Layout("#invoiceForm12", {model: banhji.invoiceForm}),
		invoiceForm13: new kendo.Layout("#invoiceForm13", {model: banhji.invoiceForm}),
		invoiceForm14: new kendo.Layout("#invoiceForm14", {model: banhji.invoiceForm}),
		
		saleSummaryCustomer: new kendo.Layout("#saleSummaryCustomer", {model: banhji.customerSale}),
		saleDetailCustomer: new kendo.Layout("#saleDetailCustomer", {model: banhji.customerSale}),
		saleSummaryProduct: new kendo.Layout("#saleSummaryProduct", {model: banhji.customerSale}),
		customerTransactionList: new kendo.Layout("#customerTransactionList", {model: banhji.customerSale}),
		depositDetailCustomer: new kendo.Layout("#depositDetailCustomer", {model: banhji.customerSale}),
		saleDetailProduct : new kendo.Layout("#saleDetailProduct", {model: banhji.customerSale}),
		customerBalanceSummary : new kendo.Layout("#customerBalanceSummary", {model: banhji.customerSale}),
		customerBalanceDetail : new kendo.Layout("#customerBalanceDetail", {model: banhji.customerBalanceDetail}),
		receivableAgingSummary : new kendo.Layout("#receivableAgingSummary", {model: banhji.receivableAgingSummary}),
		receivableAgingDetail : new kendo.Layout("#receivableAgingDetail", {model: banhji.receivableAgingDetail}),
		listInvoicesCollect : new kendo.Layout("#listInvoicesCollect", {model: banhji.listInvoicesCollect}),
		collectReport : new kendo.Layout("#collectReport", {model: banhji.collectReport}),
		invoiceList : new kendo.Layout("#invoiceList", {model: banhji.invoiceList}),
		saleJobEngagement: new kendo.Layout("#saleJobEngagement", {model: banhji.saleJobEngagement}),
		saleOrderList: new kendo.Layout("#saleOrderList", {model: banhji.saleOrderList}),

		//Cashier
		cashier: new kendo.Layout("#cashier", {model: banhji.cashier}),
		reconcile: new kendo.Layout("#reconcile", {model: banhji.reconcile}),
		cashTransaction: new kendo.Layout("#cashTransaction", {model: banhji.cashTransaction}),
		cashReceipt: new kendo.Layout("#cashReceipt", {model: banhji.cashReceipt}),
		cashPayment: new kendo.Layout("#cashPayment", {model: banhji.cashPayment}),
		
		//Inventory		
		itemDashBoard: new kendo.Layout("#itemDashBoard", {model: banhji.itemDashBoard}),
		itemCenter: new kendo.Layout("#itemCenter", {model: banhji.itemCenter}),		
		item: new kendo.Layout("#item", {model: banhji.item}),
		itemService: new kendo.Layout("#itemService", {model: banhji.itemService}),
		nonInventoryPart: new kendo.Layout("#nonInventoryPart", {model: banhji.nonInventoryPart}),
		priceList: new kendo.Layout("#priceList", {model: banhji.priceList}),
		itemCatalog: new kendo.Layout("#itemCatalog", {model: banhji.itemCatalog}),
		itemAssembly: new kendo.Layout("#itemAssembly", {model: banhji.itemAssembly}),
		itemRecord: new kendo.Layout("#itemRecord", {model: banhji.itemRecord}),
		itemAdjustment: new kendo.Layout("#itemAdjustment", {model: banhji.itemAdjustment}),
		itemSetting: new kendo.Layout("#itemSetting", {model: banhji.itemSetting}),
		serviceSetting: new kendo.Layout("#serviceSetting", {model: banhji.serviceSetting}),
		itemReportCenter: new kendo.Layout("#itemReportCenter"),
		inventoryPositionSummary: new kendo.Layout("#inventoryPositionSummary", {model: banhji.inventoryPositionSummary}),
		inventoryPositionDetail: new kendo.Layout("#inventoryPositionDetail", {model: banhji.inventoryPositionDetail}),
		inventorySaleItemAnalysis: new kendo.Layout("#inventorySaleItemAnalysis", {model: banhji.inventorySaleItemAnalysis}),
		inventoryMovementSummary: new kendo.Layout("#inventoryMovementSummary", {model: banhji.inventoryMovementSummary}),
		inventoryMovementDetail: new kendo.Layout("#inventoryMovementDetail", {model: banhji.inventoryMovementDetail}),
		inventorySaleByItem: new kendo.Layout("#inventorySaleByItem", {model: banhji.inventorySaleByItem}),
		inventoryTurnoverList: new kendo.Layout("#inventoryTurnoverList", {model: banhji.inventoryTurnoverList}),
		inventoryList: new kendo.Layout("#inventoryList", {model: banhji.inventoryList}),		
		inventoryPurchaseByVendorSummary: new kendo.Layout("#inventoryPurchaseByVendorSummary", {model: banhji.inventoryPurchaseByVendorSummary}),
		inventoryPurchaseByVendorDetail: new kendo.Layout("#inventoryPurchaseByVendorDetail", {model: banhji.inventoryPurchaseByVendorDetail}),
		
		//Cash Managment
		cashDashboard: new kendo.Layout("#cashDashboard", {model: banhji.cashDashboard}),
		cashCenter: new kendo.Layout("#cashCenter", {model: banhji.cashCenter}),		
		cash: new kendo.Layout("#cash", {model: banhji.cash}),
		cashList : new kendo.Layout("#cashList", {model: banhji.cashList}),		
		cashDeposit: new kendo.Layout("#cashDeposit", {model: banhji.cashDeposit}),
		cashReportCenter: new kendo.Layout("#cashReportCenter"),
		cashSetting: new kendo.Layout("#cashSetting", {model: banhji.cashSetting}),
		
		//Report
		reportDashboard: new kendo.Layout("#reportDashboard", {model: banhji.reportDashboard}),

		//Menu
		accountingMenu: new kendo.View("#accountingMenu", {model: langVM}),
		employeeMenu: new kendo.View("#employeeMenu", {model: langVM}),
		vendorMenu: new kendo.View("#vendorMenu", {model: langVM}),
		customerMenu: new kendo.View("#customerMenu", {model: langVM}),
		cashMenu: new kendo.View("#cashMenu", {model: langVM}),
		waterMenu: new kendo.View("#waterMenu", {model: langVM}),
		inventoryMenu: new kendo.View("#inventoryMenu", {model: langVM})		
	};
	/* views and layout */
	banhji.router = new kendo.Router({
		init: function() {
			
			var language = JSON.parse(localStorage.getItem('userData/lang'));	
			switch(language) {
				case "KH": 
					langVM.set('lang', km_KH);
					localforage.setItem("lang", language);
					langVM.set('localeCode', language);
					break;
				case "EN":
					langVM.set('lang', en_US);
					localforage.setItem("lang", language);
					langVM.set('localeCode', language);
					break;
				default: 
					langVM.set('lang', en_US);
					localforage.setItem("lang", language);
					langVM.set('localeCode', language);
			}
			localforage.getItem('user', function(err, data){
				if (err) {
					
				} else {
					$('#current-section').html('|&nbsp;Company');
					$('#home-menu').addClass('active');
					banhji.view.layout.render("#wrapperApplication");
					banhji.index.set('companyName', data.institute.name);
					banhji.index.set('companyLogo', data.institute.logo);
					var blank = new kendo.View('#blank-tmpl');
					banhji.view.layout.showIn('#menu', banhji.view.menu);
					if(userPool.getCurrentUser() == null) {
						window.location.replace(baseUrl + "login");
					}
					banhji.aws.getImage();
				}
			});	
			
		},
		routeMissing: function(e) {
			// banhji.view.layout.showIn("#layout-view", banhji.view.missing);
			console.log("no resource found.")
		}
	});
	/* Login page */
	banhji.router.route('/', function(){
		var blank = new kendo.View('#blank-tmpl');
		banhji.view.layout.showIn('#content', banhji.view.index);
		banhji.view.layout.showIn('#menu', banhji.view.menu);
		$('#main-top-navigation').append('<li><a href="\#">Home</a></li>');
		$('#current-section').text("");
		$("#secondary-menu").html("");
		banhji.index.getLogo();
		banhji.index.pageLoad();
	});
	banhji.router.route("/search_advanced", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.searchAdvanced;
						
			banhji.view.layout.showIn("#content", banhji.view.searchAdvanced);
			
			if(banhji.pageLoaded["search_advanced"]==undefined){
				banhji.pageLoaded["search_advanced"] = true;
		         
		        vm.contactTypeDS.read();	
			}

			vm.pageLoad();			
		}				
	});	
	
	
	/*************************
	* Accounting Section   *
	**************************/
	banhji.router.route("/accounting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			// var vm = banhji.accountingDashboard;
						
			banhji.view.layout.showIn("#content", banhji.view.accountingDashboard);
			banhji.userManagement.addMultiTask("Account Dashboard","accounting",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			if(banhji.pageLoaded["accounting"]==undefined){
				banhji.pageLoaded["accounting"] = true;		         

		          	
			}

			// vm.pageLoad();			
		}				
	});
	banhji.router.route("/accounting_center(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.accountingCenter;
			banhji.userManagement.addMultiTask("Account Center","accounting_center",null);
						
			banhji.view.layout.showIn("#content", banhji.view.accountingCenter);			
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

			if(banhji.pageLoaded["accounting_center"]==undefined){
				banhji.pageLoaded["accounting_center"] = true;		         

		        function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}					
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					vm.set("sdate", sdate);
					vm.set("edate", edate);
					// start.value(sdate);
					// end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());       	
			}

			vm.pageLoad(id);			
		}				
	});
	banhji.router.route("/account(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.account;
			banhji.userManagement.addMultiTask("Account","account",vm);
						
			banhji.view.layout.showIn("#content", banhji.view.account);			
			// kendo.fx($("#slide-form")).slideIn("down").play();

			if(banhji.pageLoaded["account"]==undefined){
				banhji.pageLoaded["account"] = true;		         

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				      	
			}

			vm.pageLoad(id);			
		}				
	});
	banhji.router.route("/txn_item(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.txnItem;
			banhji.userManagement.addMultiTask("Transaction Item","txn_item",vm);
			
			banhji.view.layout.showIn("#content", banhji.view.txnItem);						
			
			if(banhji.pageLoaded["txn_item"]==undefined){
				banhji.pageLoaded["txn_item"] = true;

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id);	
		}
	});
	banhji.router.route("/journal(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.journal);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.journal;
			banhji.userManagement.addMultiTask("Journal Entry","journal",vm);
			
			if(banhji.pageLoaded["journal"]==undefined){
				banhji.pageLoaded["journal"] = true;

				vm.recurringDS.filter([
					{ field:"type", value:"Journal" },
					{ field:"is_recurring", value:1 }
				]);									
   
				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validates()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validates()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validates() && vm.validateRecurring()){
		            	vm.saveRecurring();
		            	
		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				
			}

			vm.pageLoad(id,is_recurring);
		}		
	});
	banhji.router.route("/currency_rate", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.currencyRate);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.currencyRate;
			banhji.userManagement.addMultiTask("Currency Rate","currency_rate",null);
			
			if(banhji.pageLoaded["currency_rate"]==undefined){
				banhji.pageLoaded["currency_rate"] = true;				

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });

                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],
		        	locale = vm.currency_locale, 
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"date >=", value: sdate });
		            	para.push({ field:"date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"date <=", value: edate });
		            }else{
		            	
		            }

		            if(locale){
		            	para.push({ field:"locale", value: locale }); 
		            }         

		            vm.dataSource.filter(para);		            
		        });
			}

			vm.pageLoad();			
		}		
	});
	banhji.router.route("/recurring", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.recurring);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.recurring;
			banhji.userManagement.addMultiTask("Recurring Transaction Lists","recurring",null);
			
			if(banhji.pageLoaded["recurring"]==undefined){
				banhji.pageLoaded["recurring"] = true;   
				
				vm.dataSource.filter({ field:"is_recurring", value: 1 });

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());
				 		
			}

			vm.pageLoad();					
		}		
	});
	banhji.router.route("/journal_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.journalReport);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Journal Entry Reports","journal_report",null);

			if(banhji.pageLoaded["journal_report"]==undefined){
				banhji.pageLoaded["journal_report"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/trial_balance", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.trialBalance);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.trialBalance;
			banhji.userManagement.addMultiTask("Trial Balance","trial_balance",null);

			if(banhji.pageLoaded["trial_balance"]==undefined){
				banhji.pageLoaded["trial_balance"] = true;                
                						
			}

			vm.pageLoad();
		}		
	});
	banhji.router.route("/chart_of_account", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.chartOfAccount);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.chartOfAccount;
			banhji.userManagement.addMultiTask("Chart of Account","chart_of_account",null);

			if(banhji.pageLoaded["chart_of_account"]==undefined){
				banhji.pageLoaded["chart_of_account"] = true;              
                						
			}
		}		
	});
	banhji.router.route("/sale_tax", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleTax);

			banhji.userManagement.addMultiTask("Tax","sale_tax",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.saleTax;

			if(banhji.pageLoaded["sale_tax"]==undefined){
				banhji.pageLoaded["sale_tax"] = true;
														
			}
		$("#ddlIncome").kendoDropDownList({
		            optionLabel: "(--- Select ---)",
		            valuePrimitive: true,
		            dataTextField: "name",
		            dataValueField: "id",		            
		            template: '#=code# #=name#',
		            dataSource: {
		                transport: {
							read: {
								url: apiUrl + "accounts",
								headers: {
									"Entity": getDB()
								},
								type: "GET",
								dataType: "json"
							}
						},
						schema 	: {
							model: {
								id: 'id'
							},
							data: 'results',
							total: 'count'
						},
						serverFiltering: true,
						filter: { field:"account_type_id", value: 20 }
					}
		        }).data("kendoDropDownList");
		}		
	});
	banhji.router.route("/accounting_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.accountingReportCenter);

			banhji.userManagement.addMultiTask("Period-End Closing Reports","accounting_report_center",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

			//var vm = banhji.customerReportCenter;			
			
			if(banhji.pageLoaded["accounting_report_center"]==undefined){
				banhji.pageLoaded["accounting_report_center"] = true;				
								
			}			
		}		
	});
	banhji.router.route("/accounting_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.accountingSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);

			var vm = banhji.vendorSetting;
			banhji.userManagement.addMultiTask("General Accounting Setting","accounting_setting",null);
			
			if(banhji.pageLoaded["accounting_setting"]==undefined){
				banhji.pageLoaded["accounting_setting"] = true;

				vm.contactTypeDS.filter({ field:"parent_id", value: 2 });
			}

			vm.pageLoad();			     		
		}
	});
	banhji.router.route("/segment", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.segment);

			banhji.userManagement.addMultiTask("Segment","segment",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.segment;

			if(banhji.pageLoaded["segment"]==undefined){
				banhji.pageLoaded["segment"] = true;
														
			}		
		}		
	});
	banhji.router.route("/general_ledger", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.generalLedger);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.generalLedger;
			banhji.userManagement.addMultiTask("General Ledger","general_ledger",null);

			if(banhji.pageLoaded["general_ledger"]==undefined){
				banhji.pageLoaded["general_ledger"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/transaction_list_date", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.transactionListDate);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Transaction List by Date","transaction_list_date",null);

			if(banhji.pageLoaded["transaction_list_date"]==undefined){
				banhji.pageLoaded["transaction_list_date"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/recent_transactions_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.recentTransactionsList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Recent Transactions List","recent_transactions_list",null);

			if(banhji.pageLoaded["recent_transactions_list"]==undefined){
				banhji.pageLoaded["recent_transactions_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});	
	banhji.router.route("/reconciliation_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.reconciliationReport);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;
			banhji.userManagement.addMultiTask("Reconciliation Report","reconciliation_report",null);

			if(banhji.pageLoaded["reconciliation_report"]==undefined){
				banhji.pageLoaded["reconciliation_report"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/recurring_journal_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.recurringJournalList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Recurring Journal List","recurring_journal_list",null);

			if(banhji.pageLoaded["recurring_journal_list"]==undefined){
				banhji.pageLoaded["recurring_journal_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/audit_trial_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.auditTrialReport);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Audit Trial Report","audit_trial_report",null);

			if(banhji.pageLoaded["audit_trial_report"]==undefined){
				banhji.pageLoaded["audit_trial_report"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/statement_profit_loss", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementProfitLoss);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Profit or Loss","statement_profit_loss",null);

			if(banhji.pageLoaded["statement_profit_loss"]==undefined){
				banhji.pageLoaded["statement_profit_loss"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});	
	banhji.router.route("/statement_financial_position", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementFinancialPosition);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Financial Position","statement_financial_position",null);

			if(banhji.pageLoaded["statement_financial_position"]==undefined){
				banhji.pageLoaded["statement_financial_position"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/statement_profit_loss_comparison", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementProfitLossComparison);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Profit or Loss Comparison","statement_profit_loss_comparison",null);

			if(banhji.pageLoaded["statement_profit_loss_comparison"]==undefined){
				banhji.pageLoaded["statement_profit_loss_comparison"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/statement_financial_position_comparison", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementFinancialPositionComparison);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Financial Position Comparison","statement_financial_position_comparison",null);

			if(banhji.pageLoaded["statement_financial_position_comparison"]==undefined){
				banhji.pageLoaded["statement_financial_position_comparison"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/statement_changes_equity", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementChangesEquity);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement Changes Equity","statement_changes_equity",null);

			if(banhji.pageLoaded["statement_changes_equity"]==undefined){
				banhji.pageLoaded["statement_changes_equity"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	banhji.router.route("/statement_cash_flow", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.statementCashFlow);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.accountingMenu);			
			
			var vm = banhji.journalReport;

			banhji.userManagement.addMultiTask("Statement of Cash Flow","statement_cash_flow",null);

			if(banhji.pageLoaded["statement_cash_flow"]==undefined){
				banhji.pageLoaded["statement_cash_flow"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				

				$("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [],		        	
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            vm.dataSource.filter(para);		            
		        });								
						
			}
		}		
	});
	

	/*************************
	*   Employee Section   *
	**************************/
	banhji.router.route("/employees", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.employeeDashboard);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.employeeMenu);
			
			var vm = banhji.employeeDashboard;

			banhji.userManagement.addMultiTask("Employees Dashboard","employees",null);


			if(banhji.pageLoaded["employees"]==undefined){
				banhji.pageLoaded["employees"] = true;
				
								               
			}

			vm.pageLoad();				
		}
	});
	banhji.router.route("/employee_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.employeeCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.employeeMenu);
			
			var vm = banhji.employeeCenter;

			banhji.userManagement.addMultiTask("Employees Center","employee_center",null);

			if(banhji.pageLoaded["employee_center"]==undefined){
				banhji.pageLoaded["employee_center"] = true;				
							
				vm.contactTypeDS.filter({ field:"parent_id", value:2 });
				
				vm.contactDS.query({
				  	filter:{ field:"parent_id", operator:"where_related", model:"contact_type", value:2 },
				  	page: 1,
				  	pageSize: 50
				}).then(function(e) {
				    var view = vm.contactDS.data();
				    
				    if(view.length>0){
				    	vm.set("obj", view[0]);				    	
				    	vm.loadSummary(view[0].id);
				    	vm.loadTransaction(view[0].id);				    	
				    	vm.loadNote(view[0].id);
				    }
				});

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			               
			}				
		}
	});
	banhji.router.route("/employee(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.employee;
			vm.pageLoad(id);

			banhji.userManagement.addMultiTask("Employees","employee",null);
			
			banhji.view.layout.showIn("#content", banhji.view.employee);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			if(banhji.pageLoaded["employee"]==undefined){
				banhji.pageLoaded["employee"] = true;		             		        	       		         

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){					
		        	e.preventDefault();					

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});	        	
			}			
		}				
	});
	banhji.router.route("/cash_advance(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.cashAdvance);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashAdvance;

			banhji.userManagement.addMultiTask("Cash Advance","cash_advance",vm);
			
			if(banhji.pageLoaded["cash_advance"]==undefined){
				banhji.pageLoaded["cash_advance"] = true;				

				vm.recurringDS.filter([
					{ field:"type", value:"Cash_Advance" },
					{ field:"is_recurring", value:1 }
				]);								
   
				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.saveRecurring();
		            	
		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				
			}

			vm.pageLoad(id,is_recurring);
		}		
	});
	banhji.router.route("/expense(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.expense);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.expense;

			banhji.userManagement.addMultiTask("Expense","expense",vm);
			
			if(banhji.pageLoaded["expense"]==undefined){
				banhji.pageLoaded["expense"] = true;						
   
				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.saveRecurring();
		            	
		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				
			}

			vm.pageLoad(id,is_recurring);
		}		
	});
	banhji.router.route("/employee_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.employeeReportCenter);

			banhji.userManagement.addMultiTask("Employee Reports","employee_report_center",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.employeeMenu);

			//var vm = banhji.customerReportCenter;			
			
			if(banhji.pageLoaded["employee_report_center"]==undefined){
				banhji.pageLoaded["employee_report_center"] = true;				
								
			}			
		}		
	});

	/*************************
	*   Vendor Section   *
	**************************/
	banhji.router.route("/vendors", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.vendorDashboard);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);
			
			var vm = banhji.vendorDashboard;
			banhji.userManagement.addMultiTask("Supplier Dashboard","vendors",null);
			if(banhji.pageLoaded["vendors"]==undefined){
				banhji.pageLoaded["vendors"] = true;
				
								               
			}

			vm.pageLoad();				
		}
	});
	banhji.router.route("/vendor_center(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.vendorCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);
			
			var vm = banhji.vendorCenter;
			banhji.userManagement.addMultiTask("Supplier Center","vendor_center",null);

			if(banhji.pageLoaded["vendor_center"]==undefined){
				banhji.pageLoaded["vendor_center"] = true;				

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					vm.set("sdate", sdate);
					vm.set("edate", edate);
					// start.value(sdate);
					// end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());				               
			}

			vm.pageLoad(id);				
		}
	});
	banhji.router.route("/vendor(/:id)(/:is_pattern)", function(id, is_pattern){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.vendor;
			banhji.userManagement.addMultiTask("Supplier","vendor",vm);

			banhji.view.layout.showIn("#content", banhji.view.vendor);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			if(banhji.pageLoaded["vendor"]==undefined){
				banhji.pageLoaded["vendor"] = true;		             		        	       		         

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});	        	
			}

			vm.pageLoad(id, is_pattern);			
		}				
	});
	banhji.router.route("/purchase_order(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.purchaseOrder);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.purchaseOrder;
			banhji.userManagement.addMultiTask("Purchase Order","purchase_order",vm);

			if(banhji.pageLoaded["purchase_order"]==undefined){
				banhji.pageLoaded["purchase_order"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/grn(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.grn);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.grn;
			banhji.userManagement.addMultiTask("Goods Receive Note","grn",vm);

			if(banhji.pageLoaded["grn"]==undefined){
				banhji.pageLoaded["grn"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});	
	banhji.router.route("/vendor_deposit(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.vendorDeposit);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.vendorDeposit;
			banhji.userManagement.addMultiTask("Supplier Deposit","vendor_deposit",vm);
			
			if(banhji.pageLoaded["vendor_deposit"]==undefined){
				banhji.pageLoaded["vendor_deposit"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});				
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});	
	banhji.router.route("/purchase(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.purchase);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.purchase;
			banhji.userManagement.addMultiTask("Purchase","purchase",vm);

			if(banhji.pageLoaded["purchase"]==undefined){
				banhji.pageLoaded["purchase"] = true;								        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/purchase_return(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.purchaseReturn);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.purchaseReturn;
			banhji.userManagement.addMultiTask("Purchase Return","purchase_return",vm);
			
			if(banhji.pageLoaded["purchase_return"]==undefined){
				banhji.pageLoaded["purchase_return"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("remain")==0){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("remain")==0){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("remain")==0){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring() && vm.get("remain")==0){
		            	vm.saveRecurring();
		            	
		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});	
	banhji.router.route("/vendor_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.vendorSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			var vm = banhji.vendorSetting;
			banhji.userManagement.addMultiTask("Supplier Setting","vendor_setting",null);
			
			if(banhji.pageLoaded["vendor_setting"]==undefined){
				banhji.pageLoaded["vendor_setting"] = true;

				vm.contactTypeDS.filter({ field:"parent_id", value: 2 });
			}

			vm.pageLoad();			     		
		}
	});
	banhji.router.route("/vendor_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.vendorReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;			
			banhji.userManagement.addMultiTask("Expense/Purchase Managment Reports","vendor_report_center",null);

			if(banhji.pageLoaded["vendor_report_center"]==undefined){
				banhji.pageLoaded["vendor_report_center"] = true;				
								
			}			
		}		
	});
	banhji.router.route("/expenses_purchase_summary_supplier", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.expensesPurchaseSummarySupplier);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;	
			banhji.userManagement.addMultiTask("Expenses Purchase Summary by Supplier","expenses_purchase_summary_supplier",null);		
			
			if(banhji.pageLoaded["expenses_purchase_summary_supplier"]==undefined){
				banhji.pageLoaded["expenses_purchase_summary_supplier"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/expenses_purchase_detail_supplier", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.expensesPurchaseDetailSupplier);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;	
			banhji.userManagement.addMultiTask("Expenses Purchase Detail by Supplier","expenses_purchase_detail_supplier",null);		
			
			if(banhji.pageLoaded["expenses_purchase_detail_supplier"]==undefined){
				banhji.pageLoaded["expenses_purchase_detail_supplier"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/purchase_summary_product_services", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.purchaseSummaryProductServices);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;	
			banhji.userManagement.addMultiTask("Purchase Summary by Product/ Services","purchase_summary_product_services",null);		
			
			if(banhji.pageLoaded["purchase_summary_product_services"]==undefined){
				banhji.pageLoaded["purchase_summary_product_services"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/open_purchase_order", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.openPurchaseOrder);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.recurring;
			banhji.userManagement.addMultiTask("Open Purchase Order","open_purchase_order",null);
			
			if(banhji.pageLoaded["open_purchase_order"]==undefined){
				banhji.pageLoaded["open_purchase_order"] = true; 
				
				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());

				
			}

			vm.pageLoad();					
		}		
	});	
	banhji.router.route("/purchase_detail_product_services", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.purchaseDetailProductServices);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;			
			banhji.userManagement.addMultiTask("Purchase Detail by Product/Service","purchase_detail_product_services",null);

			if(banhji.pageLoaded["purchase_detail_product_services"]==undefined){
				banhji.pageLoaded["purchase_detail_product_services"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/suppliers_transaction_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.suppliersTransactionList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;	
			banhji.userManagement.addMultiTask("Suppliers Transaction List","suppliers_transaction_list",null);		
			
			if(banhji.pageLoaded["suppliers_transaction_list"]==undefined){
				banhji.pageLoaded["suppliers_transaction_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/deposit_detail_supplier", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.depositDetailSupplier);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;			
			banhji.userManagement.addMultiTask("Deposit Detail by Supplier","deposit_detail_supplier",null);	

			if(banhji.pageLoaded["deposit_detail_supplier"]==undefined){
				banhji.pageLoaded["deposit_detail_supplier"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/suppliers_balance_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.suppliersBalanceSummary);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;			
			banhji.userManagement.addMultiTask("Suppliers Balance Summary","suppliers_balance_summary",null);

			if(banhji.pageLoaded["suppliers_balance_summary"]==undefined){
				banhji.pageLoaded["suppliers_balance_summary"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/suppliers_balance_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.suppliersBalanceDetail);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Suppliers Balance Detail","suppliers_balance_detail",null);		
			
			if(banhji.pageLoaded["suppliers_balance_detail"]==undefined){
				banhji.pageLoaded["suppliers_balance_detail"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/payables_aging_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.payablesAgingSummary);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Payables Aging Summary","payables_aging_summary",null);		
			
			if(banhji.pageLoaded["payables_aging_summary"]==undefined){
				banhji.pageLoaded["payables_aging_summary"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/payables_aging_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.payablesAgingDetail);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Payables Aging Detail","payables_aging_detail",null);			
			
			if(banhji.pageLoaded["payables_aeging_detail"]==undefined){
				banhji.pageLoaded["payables_aging_detail"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/list_bills_paid", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.listBillsPaid);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("List of bills to be paid","list_bills_paid",null);			
			
			if(banhji.pageLoaded["list_bills_paid"]==undefined){
				banhji.pageLoaded["list_bills_paid"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/bill_payment_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.billPaymentList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Bill Payment List","bill_payment_list",null);		
			
			if(banhji.pageLoaded["bill_payment_list"]==undefined){
				banhji.pageLoaded["bill_payment_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/product_service_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.productServiceList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Product/Service List","product_service_list",null);		
			
			if(banhji.pageLoaded["product_service_list"]==undefined){
				banhji.pageLoaded["product_service_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});	
	banhji.router.route("/supplier_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.supplierList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.vendorMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Supplier List","supplier_list",null);		
			
			if(banhji.pageLoaded["supplier_list"]==undefined){
				banhji.pageLoaded["supplier_list"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});

	/*************************
	*   Customer Section   *
	**************************/
	banhji.router.route("/customers", function(){		
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerDashboard);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);
			
			var vm = banhji.customerDashboard;
			banhji.userManagement.addMultiTask("Customer Dashboard","customers",null);
			if(banhji.pageLoaded["customers"]==undefined){
				banhji.pageLoaded["customers"] = true;				
								               
			}			

			vm.pageLoad();				
		}
	});
	banhji.router.route("/customer_center(/:id)", function(id){		
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);
			
			var vm = banhji.customerCenter;
			banhji.userManagement.addMultiTask("Customer Center","customer_center",null);
			if(banhji.pageLoaded["customer_center"]==undefined){
				banhji.pageLoaded["customer_center"] = true;				

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					vm.set("sdate", sdate);
					vm.set("edate", edate);
					// start.value(sdate);
					// end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());								               
			}

			vm.pageLoad(id);				
		}
	});
	banhji.router.route("/customer(/:id)(/:is_pattern)", function(id,is_pattern){		
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.customer);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.customer;
			banhji.userManagement.addMultiTask("Customer","customer",vm);
			if(banhji.pageLoaded["customer"]==undefined){
				banhji.pageLoaded["customer"] = true;		         

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("isDuplicateNumber")==false){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("isDuplicateNumber")==false){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("isDuplicateNumber")==false){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});	        	
			}

			vm.pageLoad(id, is_pattern);			
		}				
	});
	banhji.router.route("/quote(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.quote);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.quote;
			banhji.userManagement.addMultiTask("Quote","quote",vm);

			if(banhji.pageLoaded["quote"]==undefined){
				banhji.pageLoaded["quote"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/sale_order(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.saleOrder);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.saleOrder;
			banhji.userManagement.addMultiTask("Sale Order","sale_order",vm);
			if(banhji.pageLoaded["sale_order"]==undefined){
				banhji.pageLoaded["sale_order"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/customer_deposit(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.customerDeposit);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.customerDeposit;
			banhji.userManagement.addMultiTask("Customer Deposit","customer_deposit",vm);

			if(banhji.pageLoaded["customer_deposit"]==undefined){
				banhji.pageLoaded["customer_deposit"] = true;

		        var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});				
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/cash_sale(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.cashSale);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashSale;
			banhji.userManagement.addMultiTask("Cash Sale","cash_sale",vm);
			if(banhji.pageLoaded["cash_sale"]==undefined){
				banhji.pageLoaded["cash_sale"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/invoice(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.invoice);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.invoice;
			banhji.userManagement.addMultiTask("Invoice","invoice",vm);
			if(banhji.pageLoaded["invoice"]==undefined){
				banhji.pageLoaded["invoice"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/gdn(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.gdn);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.gdn;
			banhji.userManagement.addMultiTask("GDN","gdn",vm);
			if(banhji.pageLoaded["gdn"]==undefined){
				banhji.pageLoaded["gdn"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/sale_return(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleReturn);					
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.saleReturn;
			banhji.userManagement.addMultiTask("Sale Return","sale_return",vm);
			if(banhji.pageLoaded["sale_return"]==undefined){
				banhji.pageLoaded["sale_return"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("remain")===0){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("remain")===0){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate() && vm.get("remain")===0){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/statement(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			

			banhji.view.layout.showIn("#content", banhji.view.statement);					
			
			var vm = banhji.statement;
			banhji.userManagement.addMultiTask("Statement","statement",null);
			if(banhji.pageLoaded["statement"]==undefined){
				banhji.pageLoaded["statement"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });

                start.max(end.value());
                end.min(start.value());
								
				$("#gridAging").kendoGrid({
					autoBind: false,		            		            		           
		            dataSource: vm.agingDS,		           
		            resizable: true,
		            columns: [		                		                	                
		                { field: "amount", title:"Current", template:'#=kendo.toString(current, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} },		                
		                { field: "oneMonth", title:"1-30", template:'#=kendo.toString(oneMonth, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} },
		                { field: "twoMonth", title:"31-60", template:'#=kendo.toString(twoMonth, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} },		                
		                { field: "threeMonth", title:"61-90", template:'#=kendo.toString(threeMonth, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} },
		                { field: "overMonth", title:">90", template:'#=kendo.toString(overMonth, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} },		                
		                { field: "amount", title:"Total", template:'#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} }
		            ]
		        });

		        $("#grid").kendoGrid({
		            toolbar: ["excel"],
		            excel: {
		                fileName: "statement.xlsx"
		            },		            		           
		            dataSource: vm.dataSource,
		            autoBind:false,		            		           		                        
		            reorderable: true,
		            resizable: true,
		            rowTemplate: kendo.template($("#statement-row-template").html())
		            // columns: [		                
		            //     { field: "issued_date", title: "Date" },
		            //     { field: "description", title: "Description" },		                
		            //     { field: "amount", title:"Amount", template:'#=kendo.toString(amount, locale=="km-KH"?"c0":"c", locale)#', attributes:{style:"text-align:right;"} },		                
		            //     { field: "balance", title:"Balance", attributes:{style:"text-align:right;"}, template:kendo.template($("#statement-balance-template").html()) },
		            // ]
		        });

		        $("#search").click(function(e){
		        	e.preventDefault();

		        	var para = [], 
					sdate = kendo.toString(start.value(), "yyyy-MM-dd"), 
					edate = kendo.toString(end.value(), "yyyy-MM-dd");
					
		        	//Dates
		        	if(start.value() && end.value()){        		
		            	para.push({ field:"issued_date >=", value: sdate });
		            	para.push({ field:"issued_date <=", value: edate });            	          	            	
		            }else if(start.value()){
		            	para.push({ field:"issued_date", value: sdate });
		            }else if(end.value()){
		            	para.push({ field:"issued_date <=", value: edate });
		            }else{
		            	
		            }

		            para.push({ field:"contact_id", value: vm.obj.id });          

		            vm.dataSource.filter(para);
		            vm.agingDS.filter(para);
		            vm.agingDS.bind("requestEnd", function(e){
		            	if(e.type=="read"){
		            		var response = e.response.results;
		            		vm.set("total", kendo.toString(response[0].amount), "c");
		            	}
		            });
		        });		       			
			}

			vm.pageLoad(id);
		}		
	});
	banhji.router.route("/customer_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerReportCenter;			
			banhji.userManagement.addMultiTask("Sale Managment Reports","customer_report_center",null);
			if(banhji.pageLoaded["customer_report_center"]==undefined){
				banhji.pageLoaded["customer_report_center"] = true;				
								
			}

			vm.pageLoad();			
		}		
	});
	banhji.router.route("/customer_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerList;			
			banhji.userManagement.addMultiTask("Customer List","customer_list",null);
			if(banhji.pageLoaded["customer_list"]==undefined){
				banhji.pageLoaded["customer_list"] = true;				
				
			}			
		}		
	});
	banhji.router.route("/customer_balance", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerBalance);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerBalance;			
			banhji.userManagement.addMultiTask("Customer Balance","customer_balance",null);
			if(banhji.pageLoaded["customer_balance"]==undefined){
				banhji.pageLoaded["customer_balance"] = true;				
				
				vm.search();
			}			
		}		
	});
	banhji.router.route("/customer_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerSetting;
			banhji.userManagement.addMultiTask("Customer Setting","customer_setting",null);
			if(banhji.pageLoaded["customer_setting"]==undefined){
				banhji.pageLoaded["customer_setting"] = true;
				
				vm.contactTypeDS.filter({ field:"parent_id", value:1 });
			}

			vm.pageLoad();			     		
		}
	});
	banhji.router.route("/job", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.job);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);			
			
			var vm = banhji.job;
			banhji.userManagement.addMultiTask("Job","job",null);
			if(banhji.pageLoaded["job"]==undefined){
				banhji.pageLoaded["job"] = true;
														
			}

			vm.pageLoad();		
		}		
	});
	banhji.router.route("/invoice_custom(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.invoiceCustom);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.invoiceCustom;
			banhji.userManagement.addMultiTask("Invoice Custom","invoice_custom",null);
			if(banhji.pageLoaded["invoice_custom"]==undefined){
				banhji.pageLoaded["invoice_custom"] = true;

				//Function write css to header
				function loadStyle(href){
				    // avoid duplicates
				    for(var i = 0; i < document.styleSheets.length; i++){
				        if(document.styleSheets[i].href == href){
				            return;
				        }
				    }
				    var head  = document.getElementsByTagName('head')[0];
				    var link  = document.createElement('link');
				    link.rel  = 'stylesheet';
				    link.type = 'text/css';
				    link.href = href;
				    head.appendChild(link);
				}
				var Href1 = '<?php echo base_url(); ?>assets/invoice/invoice.css';
				loadStyle(Href1);	

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				

		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				
			};
			
			vm.pageLoad(id);		
		};	
	});
	banhji.router.route("/invoice_form(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.invoiceForm);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.invoiceForm;
			banhji.userManagement.addMultiTask("Customer Form","invoice_form",null);
			if(banhji.pageLoaded["invoice_form"]==undefined){
				banhji.pageLoaded["invoice_form"] = true;				        

				//Function write css to header
				function loadStyle(href){
				    // avoid duplicates
				    for(var i = 0; i < document.styleSheets.length; i++){
				        if(document.styleSheets[i].href == href){
				            return;
				        }
				    }
				    var head  = document.getElementsByTagName('head')[0];
				    var link  = document.createElement('link');
				    link.rel  = 'stylesheet';
				    link.type = 'text/css';
				    link.href = href;
				    head.appendChild(link);
				}
				var Href1 = '<?php echo base_url(); ?>assets/invoice/invoice.css';
				loadStyle(Href1);			
			};
			
			vm.pageLoad(id);		
		};	
	});
	banhji.router.route("/sale_summary_customer", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');			
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleSummaryCustomer);
			banhji.customerSale.saleSummary.dataSource.read();			
			banhji.customerSale.saleSummary.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);					
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/sale_detail_customer", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleDetailCustomer);
			banhji.customerSale.detailSummary.dataSource.read();
			banhji.customerSale.detailSummary.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/customer_transaction_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerTransactionList);
			banhji.customerSale.customerTransaction.dataSource.read();
			banhji.customerSale.customerTransaction.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.customerSale.set('cashSale', kendo.toString(e.response.cashSale, 'c2'));
				}
			});
		}

	});
	banhji.router.route("/sale_summary_product", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleSummaryProduct);
			banhji.customerSale.summaryProductSale.dataSource.read();
			banhji.customerSale.summaryProductSale.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));	
					banhji.customerSale.set('total_sale', kendo.toString(e.response.total_sale, 'c2'));
					banhji.customerSale.set('total_avg', kendo.toString(e.response.total_avg, 'c2'));	
					banhji.customerSale.set('gpm', kendo.toString(e.response.gpm, 'n'));				
				}
			});
		}
	});	
	banhji.router.route("/deposit_detail_customer", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.depositDetailCustomer);
			banhji.customerSale.depositDetail.dataSource.read();
			banhji.customerSale.depositDetail.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.customerSale.set('cashSale', kendo.toString(e.response.cashSale, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/sale_detail_product", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleDetailProduct);
			banhji.customerSale.detailCustomerSale.dataSource.read();
			banhji.customerSale.detailCustomerSale.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));					
				}
			});
		}
	});
	banhji.router.route("/customer_balance_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');			
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerBalanceSummary);
			banhji.customerSale.summaryBalance.dataSource.read();			
			banhji.customerSale.summaryBalance.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);					
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}

	});
	banhji.router.route("/customer_balance_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerBalanceDetail);
			banhji.customerSale.saleDetail.dataSource.read();
			banhji.customerSale.saleDetail.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));	
					banhji.customerSale.set('openInvoice', kendo.toString(e.response.openInvoice, 'n'));				
				}
			});
		}
	});
	banhji.router.route("/receivable_aging_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.receivableAgingSummary);
			banhji.customerSale.receivableAging.dataSource.read();
			banhji.customerSale.receivableAging.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.customerSale.set('cashSale', kendo.toString(e.response.cashSale, 'c2'));
				}
			});
		}

	});
	banhji.router.route("/receivable_aging_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.receivableAgingDetail);
			banhji.customerSale.receivableDetail.dataSource.read();
			banhji.customerSale.receivableDetail.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}

	});
	banhji.router.route("/list_invoices_collect", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.listInvoicesCollect);
			banhji.customerSale.listInvoice.dataSource.read();
			banhji.customerSale.listInvoice.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}

	});
	banhji.router.route("/collect_report", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.collectReport);
			banhji.customerSale.collectReportDB.dataSource.read();
			banhji.customerSale.collectReportDB.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/invoice_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.invoiceList);
			banhji.customerSale.invoiceListDB.dataSource.read();
			banhji.customerSale.invoiceListDB.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}
	});
	banhji.router.route("/customer_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.customerList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.customerMenu);

			var vm = banhji.customerList;			
			
			if(banhji.pageLoaded["customer_list"]==undefined){
				banhji.pageLoaded["customer_list"] = true;				
				
			}			
		}		
	});
	banhji.router.route("/sale_job_engagement", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleJobEngagement);
			banhji.customerSale.saleJob.dataSource.read();
			banhji.customerSale.saleJob.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
					banhji.customerSale.set('saleNumber', kendo.toString(e.response.saleNumber, 'c2'));
				}
			});
		}

	});
	banhji.router.route("/sale_order_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.saleOrderList);
			banhji.customerSale.saleOrderDB.dataSource.read();
			banhji.customerSale.saleOrderDB.dataSource.bind('requestEnd', function(e){
				if(e.response) {
					banhji.customerSale.set('count', e.response.count);
					kendo.culture(banhji.locale);
					banhji.customerSale.set('total', kendo.toString(e.response.total, 'c2'));
				}
			});
		}
	});



	/*************************
	*   Cashier Section   *
	**************************/
	banhji.router.route("/cashier(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashier);				
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashier;
			banhji.userManagement.addMultiTask("Cashier Dashboard","cashier",null);
						
			if(banhji.pageLoaded["cashier"]==undefined){
				banhji.pageLoaded["cashier"] = true;
				
				$("#ddlContact").kendoComboBox({
					placeholder: "លេខកូដ...",
					valuePrimitive: true,
	                dataTextField: "fullname",
	                dataValueField: "id",
	                filter: "search",
	                autoBind: false,
	                minLength: 3,
	                height: 400,
	                dataSource: vm.contactDS,
	                change: function(e) {
					    var value = this.value(),					    
					    data = this.dataSource.get(value);

					    vm.set("customer", data);
					    vm.transactionDS.filter({ field:"contact_id", value: value });
					    vm.loadInvoice(value, data.fullname, data.account_id);					    				    	
					},
					template:'#=number# #=fullname#'
	            });	           

		        $("#ddlCashAccount").kendoDropDownList({
		            optionLabel: "(--- Select ---)",
		            valuePrimitive: true,
		            dataTextField: "name",
		            dataValueField: "id",
		            dataSource: {
		                transport: {
							read: {
								url: apiUrl + "accounts",
								headers: {
									"Entity": getDB()
								},
								type: "GET",
								dataType: "json"
							}
						},
						schema 	: {
							model: {
								id: 'id'
							},
							data: 'results',
							total: 'count'
						},
						serverFiltering: true,
						filter: { field:"account_type_id", value: 6 }
					},
					template: '#=number# #=name#'             
		        }).data("kendoDropDownList");

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});        		
			}

			vm.pageLoad(id);
		}							
	});
	banhji.router.route("/reconcile(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.reconcile);				
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.reconcile;
			banhji.userManagement.addMultiTask("Reconcile & Transfer","reconcile",vm);

			vm.pageLoad(id);
			
			if(banhji.pageLoaded["reconcile"]==undefined){
				banhji.pageLoaded["reconcile"] = true;

				$("#ddlCashAccount").kendoDropDownList({
		            optionLabel: "(--- Select ---)",
		            valuePrimitive: true,
		            dataTextField: "name",
		            dataValueField: "id",
		            dataSource: {
		                transport: {
							read: {
								url: apiUrl + "accounts",
								headers: {
									"Entity": getDB()
								},
								type: "GET",
								dataType: "json"
							}
						},
						schema 	: {
							model: {
								id: 'id'
							},
							data: 'results',
							total: 'count'
						},
						serverFiltering: true,
						filter: { field:"account_type_id", value: 6 }
					},
					template: '#=number# #=name#'             
		        }).data("kendoDropDownList");

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#save").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.get("isExisting")==false && vm.get("obj").transfered_amount>0){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}
		}					
	});
	banhji.router.route("/cash_transaction(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.cashTransaction);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashTransaction;
			banhji.userManagement.addMultiTask("Cash Transaction","cash_transaction",vm);
			
			if(banhji.pageLoaded["cash_transaction"]==undefined){
				banhji.pageLoaded["cash_transaction"] = true;
				
				vm.recurringDS.filter([
					{ field:"type", operator:"where_in", value:["Deposit","Witdraw","Transfer"] },
					{ field:"is_recurring", value:1 }
				]);				            		
 
				var currency = $("#cbbCurrency").kendoComboBox({
                    dataTextField: "code",
                    dataValueField: "locale",
                    valuePrimitive: true,
                    height: 400,
                    template:"#=code# - #=country#",
                    dataSource: {
                    	transport: {
							read 	: {
								url: apiUrl+"currencies",
								type: "GET",
								headers: banhji.header,
								dataType: 'json'
							}							
						},
						schema 	: {
							model: {
								id: 'id'
							},
							data: 'results',
							total: 'count'
						},						
						group: { field: "group" },						
						page: 1,						
						pageSize: 100
                    }
                }).data("kendoComboBox");					
   
				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.saveRecurring();
		            	
		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				
			}

			vm.pageLoad(id,is_recurring);
		}		
	});
	banhji.router.route("/cash_receipt(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		} else {						
			banhji.view.layout.showIn("#content", banhji.view.cashReceipt);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashReceipt;
			banhji.userManagement.addMultiTask("Cash Receipt","cash_receipt",vm);
			
			if(banhji.pageLoaded["cash_receipt"]==undefined){
				banhji.pageLoaded["cash_receipt"] = true;

				vm.paymentTermDS.read();

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.set("saveRecurring", true);
		            	vm.save();
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/cash_payment(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.cashPayment);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashPayment;
			banhji.userManagement.addMultiTask("Cash Payment","cash_payment",vm);
			
			if(banhji.pageLoaded["cash_payment"]==undefined){
				banhji.pageLoaded["cash_payment"] = true;				        

				vm.paymentTermDS.read();

				var validator = $("#example").kendoValidator().data("kendoValidator");
												
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
						vm.set("saveClose", true);
		            	vm.save();		            	
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();
					
					if(validator.validate()){
						vm.set("savePrint", true);
		            	vm.save();       				  
			        }else{
			        	$("#ntf1").data("kendoNotification").error(banhji.source.errorMessage);
			        }		            
				});
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});


	/*************************
	*   Inventory Section   *
	**************************/
	banhji.router.route("/inventories", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemDashBoard);			
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);
			
			var vm = banhji.itemDashBoard;
			banhji.userManagement.addMultiTask("Inventory Dashboard","inventories",null);

			if(banhji.pageLoaded["inventories"]==undefined){							
				banhji.pageLoaded["inventories"] = true;
												
			}

			vm.pageLoad();
		}				
	});	
	banhji.router.route("/item_center(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);
			
			var vm = banhji.itemCenter;

			banhji.userManagement.addMultiTask("Inventory Center","item_center",null);

			if(banhji.pageLoaded["item_center"]==undefined){
				banhji.pageLoaded["item_center"] = true;				
						
								
				vm.itemDS.query({
				  	filter:{ field:"item_type_id", value:1 },
				  	page: 1,
				  	pageSize: 100
				}).then(function(){
					var view = vm.itemDS.view();
					vm.set("obj", view[0]);
					vm.loadMovement(view[0].id);
				});	

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			               
			}

			vm.pageLoad(id);				
		}
	});
	banhji.router.route("/item(/:id)(/:is_pattern)", function(id, is_pattern){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.item;

			banhji.userManagement.addMultiTask("Inventory for Sale","item",null);
			
			banhji.view.layout.showIn("#content", banhji.view.item);						
			
			if(banhji.pageLoaded["item"]==undefined){
				banhji.pageLoaded["item"] = true;				

				vm.loadVendor();
				vm.loadCustomer();							

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id, is_pattern);	
		}
	});
	banhji.router.route("/item_prices/:id", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.priceList;

			banhji.userManagement.addMultiTask("Inventory Price","item_prices",null);
			
			banhji.view.layout.showIn("#content", banhji.view.priceList);
			
			if(banhji.pageLoaded["item_prices"]==undefined){
				banhji.pageLoaded["item_prices"] = true;
				
			}

			vm.pageLoad(id);				
		}
	});
	banhji.router.route("/item_catalog(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.itemCatalog;

			banhji.userManagement.addMultiTask("Inventory Catalog","item_catalog",vm);
			
			banhji.view.layout.showIn("#content", banhji.view.itemCatalog);						
			
			if(banhji.pageLoaded["item_catalog"]==undefined){
				banhji.pageLoaded["item_catalog"] = true;

				vm.itemDS.filter([
					{ field:"item_type_id", operator:"where_in", value: [1,4] }
				]);

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id);	
		}
	});
	banhji.router.route("/item_assembly(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.itemAssembly;

			banhji.userManagement.addMultiTask("Inventory Assembly","item_assembly",vm);
			
			banhji.view.layout.showIn("#content", banhji.view.itemAssembly);						
			
			if(banhji.pageLoaded["item_assembly"]==undefined){
				banhji.pageLoaded["item_assembly"] = true;

				vm.itemDS.filter([
					{ field:"item_type_id", operator:"where_in", value: [1,4] },
					{ field:"category_id", operator:"where_not_in", value: [8,9] }
				]);

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id);	
		}
	});
	banhji.router.route("/item_service(/:id)(/:is_pattern)", function(id, is_pattern){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.itemService;

			banhji.userManagement.addMultiTask("Service","item_service",vm);
			
			banhji.view.layout.showIn("#content", banhji.view.itemService);						
			
			if(banhji.pageLoaded["item_service"]==undefined){
				banhji.pageLoaded["item_service"] = true;				

				vm.loadVendorItem();
				vm.loadCustomerItem();							

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id, is_pattern);	
		}
	});
	banhji.router.route("/non_inventory_part(/:id)(/:is_pattern)", function(id, is_pattern){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			var vm = banhji.nonInventoryPart;

			banhji.userManagement.addMultiTask("Other Inventory","non_inventory_part",vm);
			
			banhji.view.layout.showIn("#content", banhji.view.nonInventoryPart);						
			
			if(banhji.pageLoaded["non_inventory_part"]==undefined){
				banhji.pageLoaded["non_inventory_part"] = true;				

				vm.loadVendor();
				vm.loadCustomer();							

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id, is_pattern);	
		}
	});
	banhji.router.route("/item_record(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{		
			var vm = banhji.itemRecord;
			banhji.userManagement.addMultiTask("Inventory Record","item_record",vm);

			banhji.view.layout.showIn("#content", banhji.view.itemRecord);
			
			if(banhji.pageLoaded["item_record"]==undefined){
				banhji.pageLoaded["item_record"] = true;

				vm.contactDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:2 });

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});	            
			}

			vm.pageLoad(id);				
		}
	});
	banhji.router.route("/item_adjustment(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemAdjustment);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.itemAdjustment;

			banhji.userManagement.addMultiTask("Inventory Adjustment","item_adjustment",vm);

			if(banhji.pageLoaded["item_adjustment"]==undefined){
				banhji.pageLoaded["item_adjustment"] = true;
								
				vm.contactDS.filter({ field:"contact_type_id", value:3 });

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#save").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});
			}

			vm.pageLoad(id);
		}		
	});
	banhji.router.route("/item_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.itemSetting;

			banhji.userManagement.addMultiTask("General Inventory Setting","item_setting",null);
			
			if(banhji.pageLoaded["item_setting"]==undefined){
				banhji.pageLoaded["item_setting"] = true;
				
				vm.categoryDS.filter({ field:"item_type_id", operator:"where_in", value: [1,2] });
				vm.itemTypeDS.filter({ field:"id", operator:"where_in", value: [1,2] });
				vm.itemGroupDS.filter({ field:"id", operator:"where_in", value: [1,2] });
			}

			vm.pageLoad();			     		
		}
	});
	banhji.router.route("/service_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.serviceSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.serviceSetting;

			banhji.userManagement.addMultiTask("General Service Setting","service_setting",null);
			
			if(banhji.pageLoaded["service_setting"]==undefined){
				banhji.pageLoaded["service_setting"] = true;
				
				vm.categoryDS.filter({ field:"item_type_id", operator:"where_in", value: [4,6] });
				vm.itemTypeDS.filter({ field:"id", operator:"where_in", value: [4,6] });
				vm.itemGroupDS.filter({ field:"id", operator:"where_in", value: [3,4] });
			}

			vm.pageLoad();			     		
		}
	});
	banhji.router.route("/item_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.itemReportCenter);

			banhji.userManagement.addMultiTask("Inventory Position","item_report_center",null);

			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			//var vm = banhji.itemReportCenter;			
			
			if(banhji.pageLoaded["item_report_center"]==undefined){
				banhji.pageLoaded["item_report_center"] = true;				
											
			}			
		}		
	});
	banhji.router.route("/inventory_position_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryPositionSummary);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryPositionSummary;

			banhji.userManagement.addMultiTask("Inventory Position Summary","inventory_position_summary",null);		
			
			if(banhji.pageLoaded["inventory_position_summary"]==undefined){
				banhji.pageLoaded["inventory_position_summary"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());

				
			}			
		}		
	});
	banhji.router.route("/inventory_position_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryPositionDetail);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryPositionDetail;

			banhji.userManagement.addMultiTask("Inventory Position Detail","inventory_position_detail",null);		
			
			if(banhji.pageLoaded["inventory_position_detail"]==undefined){
				banhji.pageLoaded["inventory_position_detail"] = true;


				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/inventory_sale_item_analysis", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventorySaleItemAnalysis);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventorySaleItemAnalysis;

			banhji.userManagement.addMultiTask("Inventory Sale by Item Analysis","inventory_sale_item_analysis",null);		
			
			if(banhji.pageLoaded["inventory_sale_item_analysis"]==undefined){
				banhji.pageLoaded["inventory_sale_item_analysis"] = true;


				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
								
			}			
		}		
	});
	banhji.router.route("/inventory_movement_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryMovementSummary);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryMovementSummary;

			banhji.userManagement.addMultiTask("Inventory Movement Summary","inventory_movement_summary",null);		
			
			if(banhji.pageLoaded["inventory_movement_summary"]==undefined){
				banhji.pageLoaded["inventory_movement_summary"] = true;	

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
				
			}			
		}		
	});
	banhji.router.route("/inventory_movement_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryMovementDetail);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryMovementDetail;

			banhji.userManagement.addMultiTask("Inventory Movement Detail","inventory_movement_detail",null);			
			
			if(banhji.pageLoaded["inventory_movement_detail"]==undefined){
				banhji.pageLoaded["inventory_movement_detail"] = true;

				function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());			
				
			}			
		}		
	});
	banhji.router.route("/inventory_sale_by_item", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventorySaleByItem);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventorySaleByItem;

			banhji.userManagement.addMultiTask("Inventory Sale By Item Analysis","inventory_sale_by_item",null);			
			
			if(banhji.pageLoaded["inventory_sale_by_item"]==undefined){
				banhji.pageLoaded["inventory_sale_by_item"] = true;				
				
			}			
		}		
	});
	banhji.router.route("/inventory_turnover_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryTurnoverList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryTurnoverList;

			banhji.userManagement.addMultiTask("Inventory Turnover List","inventory_turnover_list",null);		
			
			if(banhji.pageLoaded["inventory_turnover_list"]==undefined){
				banhji.pageLoaded["inventory_turnover_list"] = true;				
				
			}			
		}		
	});
	banhji.router.route("/inventory_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);
			
			var vm = banhji.inventoryList;

			banhji.userManagement.addMultiTask("Inventory List","inventory_list",null);						
			
			if(banhji.pageLoaded["inventory_list"]==undefined){
				banhji.pageLoaded["inventory_list"] = true;

				vm.vendorDS.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value: 2 });

				var categories = $("#categories").kendoDropDownList({
                    optionLabel: "(--- Category ---)",
                    dataTextField: "name",
                    dataValueField: "id",
                    dataSource: vm.categoryDS,
                    change: function(e) {
					    //var value = this.value();
					    vm.set("item_group_id", 0);
					}
                }).data("kendoDropDownList");

                var itemGroups = $("#itemGroups").kendoDropDownList({
                    autoBind: false,
                    cascadeFrom: "categories",
                    cascadeFromField: "category_id",
                    optionLabel: "(--- Group ---)",
                    dataTextField: "name",
                    dataValueField: "id",
                    dataSource: vm.itemGroupDS
                }).data("kendoDropDownList");


                function startChange() {
                    var startDate = start.value(),
                    endDate = end.value();

                    if (startDate) {
                        startDate = new Date(startDate);
                        startDate.setDate(startDate.getDate());
                        end.min(startDate);
                    } else if (endDate) {
                        start.max(new Date(endDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function endChange() {
                    var endDate = end.value(),
                    startDate = start.value();

                    if (endDate) {
                        endDate = new Date(endDate);
                        endDate.setDate(endDate.getDate());
                        start.max(endDate);
                    } else if (startDate) {
                        end.min(new Date(startDate));
                    } else {
                        endDate = new Date();
                        start.max(endDate);
                        end.min(endDate);
                    }

                    dateChanges();
                }

                function dateChanges(){
                	var strDate = "";

					if(start.value() && end.value()){
						strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
					}else if(start.value()){
						strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
					}else if(end.value()){
						strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
					}else{
						strDate = "";
					}

					$("#strDate").text(strDate);
                }

                var start = $("#sdate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: startChange
                }).data("kendoDatePicker");               

                var end = $("#edate").kendoDatePicker({
                	format: "dd-MM-yyyy",
                    change: endChange
                }).data("kendoDatePicker");

                var sorter = $("#sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $("#sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });
                
                start.max(end.value());
                end.min(start.value());

			}

			vm.pageLoad();				
		}
	});	
	banhji.router.route("/inventory_purchase_by_vendor_summary", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryPurchaseByVendorSummary);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryPurchaseByVendorSummary;

			banhji.userManagement.addMultiTask("Purchase By Supplier Summary","inventory_purchase_by_vendor_summary",null);		
			
			if(banhji.pageLoaded["inventory_purchase_by_vendor_summary"]==undefined){
				banhji.pageLoaded["inventory_purchase_by_vendor_summary"] = true;				
				
			}			
		}		
	});
	banhji.router.route("/inventory_purchase_by_vendor_detail", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.inventoryPurchaseByVendorDetail);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.inventoryMenu);

			var vm = banhji.inventoryPurchaseByVendorDetail;

			banhji.userManagement.addMultiTask("Purchase By Supplier Detail","inventory_purchase_by_vendor_detail",null);		
			
			if(banhji.pageLoaded["inventory_purchase_by_vendor_detail"]==undefined){
				banhji.pageLoaded["inventory_purchase_by_vendor_detail"] = true;				
				
			}			
		}		
	});


	/*************************
	*   Cash Managment   *
	**************************/
	banhji.router.route("/cashs", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashDashboard);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);
			
			var vm = banhji.cashDashboard;
			banhji.userManagement.addMultiTask("Cash Dashboard","cashs",null);

			if(banhji.pageLoaded["cashs"]==undefined){
				banhji.pageLoaded["cashs"] = true;
				banhji.cashDashboard.graphDS.fetch();
				banhji.cashDashboard.topCashDS.read();
				banhji.cashDashboard.topCashDS.bind('requestEnd', function(e) {
					if(e.response) {
						kendo.culture(banhji.locale);
						banhji.cashDashboard.set('balance', kendo.toString(e.response.balance, 'c2'));
						banhji.cashDashboard.set('cashACNumber', e.response.cashACNumber);
					}
				});

				banhji.cashDashboard.topAdvaDS.read();
				banhji.cashDashboard.topAdvaDS.bind('requestEnd', function(e) {
					if(e.response) {
						kendo.culture(banhji.locale);
						banhji.cashDashboard.set('open', e.response.open);
						banhji.cashDashboard.set('overDue', e.response.overDue);
						banhji.cashDashboard.set('totalAdvance', kendo.toString(e.response.total_advance, 'c2'));
					}
				});			               
			}

			vm.pageLoad();				
		}
	});
	banhji.router.route("/cash_center", function(){
		// if(!banhji.userManagement.getLogin()){
		// 	banhji.router.navigate('/manage');
		// }else{
			banhji.view.layout.showIn("#content", banhji.view.cashCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);
			var blank = new kendo.View('#blank-tmpl');
			var vm = banhji.cashCenter;

			banhji.userManagement.addMultiTask("Cash Center","cash_center",null);

			if(banhji.pageLoaded["cash_center"]==undefined){
				banhji.pageLoaded["cash_center"] = true;
				var start = $(".sdate"),
					end = $(".edate");

                if(start) {
					start = $(".sdate").kendoDatePicker({
	                	format: "dd-MM-yyyy",
	                    change: startChange
	                }).data("kendoDatePicker");
	                console.log(start);
				} 
				if(end) {
					$(".edate").kendoDatePicker({
	                	format: "dd-MM-yyyy",
	                    change: endChange
	                }).data("kendoDatePicker");
				}
				if( start && end) {
					function startChange() {
	                    var startDate = start.value(),
	                    endDate = end.value();

	                    if (startDate) {
	                        startDate = new Date(startDate);
	                        startDate.setDate(startDate.getDate());
	                        end.min(startDate);
	                    } else if (endDate) {
	                        start.max(new Date(endDate));
	                    } else {
	                        endDate = new Date();
	                        start.max(endDate);
	                        end.min(endDate);
	                    }

	                    dateChanges();
	                }

	                function endChange() {
	                    var endDate = end.value(),
	                    startDate = start.value();

	                    if (endDate) {
	                        endDate = new Date(endDate);
	                        endDate.setDate(endDate.getDate());
	                        start.max(endDate);
	                    } else if (startDate) {
	                        end.min(new Date(startDate));
	                    } else {
	                        endDate = new Date();
	                        start.max(endDate);
	                        end.min(endDate);
	                    }

	                    dateChanges();
	                }

	                function dateChanges(){
	                	var strDate = "";

						if(start.value() && end.value()){
							strDate = "From " + kendo.toString(new Date(start.value()), "dd-MM-yyyy") + " To " + kendo.toString(new Date(end.value()), "dd-MM-yyyy");
						}else if(start.value()){
							strDate = "On " + kendo.toString(new Date(start.value()),"dd-MM-yyyy");
						}else if(end.value()){
							strDate = "As Of " + kendo.toString(new Date(end.value()),"dd-MM-yyyy");
						}else{
							strDate = "";
						}

						$(".strDate").text(strDate);
	                }
	                var sorter = $(".sorter").change(function(){
                	var today = new Date(),
                	sdate = "",
                	edate = "",
                	value = $(".sorter").val();

					switch(value){
					case "today":								
						sdate = today;
															  					
					  	break;
					case "week":			  	
						var first = today.getDate() - today.getDay(),
						last = first + 6;

						var sdate = new Date(today.setDate(first)),
						edate = new Date(today.setDate(last));						
						
					  	break;
					case "month":							  	
						var sdate = new Date(today.getFullYear(), today.getMonth(), 1),
						edate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

					  	break;
					case "year":				
					  	var sdate = new Date(today.getFullYear(), 0, 1),
					  	edate = new Date(today.getFullYear(), 11, 31);

					  	break;
					default:
											  
					}

					start.value(sdate);
					end.value(edate);
					
					start.max(end.value());
                	end.min(start.value());

                	dateChanges();                	
                });

	                var test = $(".start");
	                console.log(test);
	                
	                start.max(end.value());
	                end.min(start.value());	
				}
                		               
			}				
		// }
	});
	banhji.router.route("/cash(/:id)", function(id){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{			
			var vm = banhji.cash;

			banhji.userManagement.addMultiTask("Cash","cash",vm);
						
			banhji.view.layout.showIn("#content", banhji.view.cash);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			if(banhji.pageLoaded["cash"]==undefined){
				banhji.pageLoaded["cash"] = true;		         

		        var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');

		        $("#save").click(function(e){				
					e.preventDefault();				

					if(validator.validate() && vm.get("isDuplicateNumber")==false){
		            	vm.save();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});	        	
			}

			vm.pageLoad(id);			
		}				
	});	
	banhji.router.route("/cash_deposit(/:id)(/:is_recurring)", function(id,is_recurring){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{						
			banhji.view.layout.showIn("#content", banhji.view.cashDeposit);			
			kendo.fx($("#slide-form")).slideIn("down").play();

			var vm = banhji.cashDeposit;

			banhji.userManagement.addMultiTask("Cash Deposit","cash_deposit",vm);
			
			if(banhji.pageLoaded["cash_deposit"]==undefined){
				banhji.pageLoaded["cash_deposit"] = true;				        

				var validator = $("#example").kendoValidator().data("kendoValidator");
				var notification = $("#notification").kendoNotification({				    
				    autoHideAfter: 5000,
				    width: 300,				    
				    height: 50
				}).data('kendoNotification');
				
		        $("#saveNew").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();		            	

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveClose").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.history.back();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#savePrint").click(function(e){				
					e.preventDefault();

					if(validator.validate()){
		            	vm.save();
		            	window.print();

		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});

				$("#saveRecurring").click(function(e){				
					e.preventDefault();

					if(validator.validate() && vm.validateRecurring()){
		            	vm.saveRecurring();
		            	
		            	notification.success("Save Successful");			  
			        }else{
			        	notification.error("Warning, please review it again!");			           
			        }		            
				});				
			}

			vm.pageLoad(id, is_recurring);			
		}		
	});
	banhji.router.route("/cash_report_center", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashReportCenter);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			//var vm = banhji.customerReportCenter;
			banhji.userManagement.addMultiTask("Cash Position","cash_report_center",null);		
			
			if(banhji.pageLoaded["cash_report_center"]==undefined){
				banhji.pageLoaded["cash_report_center"] = true;				
								
			}			
		}		
	});
	banhji.router.route("/cash_list", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashList);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			var vm = banhji.cashList;	

			banhji.userManagement.addMultiTask("Cash List","cash_list",null);		
			
			if(banhji.pageLoaded["cash_list"]==undefined){
				banhji.pageLoaded["customer_list"] = true;				
				
				vm.contactTypeDS.filter({ field:"parent_id", value:1 });
				vm.dataSource.filter({ field:"parent_id", operator:"where_related", model:"contact_type", value:1 });

				$("#grid").kendoGrid({
				    dataSource: vm.dataSource,
				    toolbar: ["excel"],
		            excel: {
		                fileName: "Cash_List.xlsx",
		                filterable: true
		            },
		            reorderable: true,
				    groupable: true,
				    sortable: true,				    				    
				    pageable: true,				    
				    columns:[
				    	{ field: "number", title:"Number" },
				    	{ field: "surname", title:"Surname" },
				    	{ field: "name", title:"Name" },
				    	{ field: "contact_type", title:"Type" }
				    ]				    
				});
			}			
		}		
	});
	banhji.router.route("/cash_setting", function(){
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.cashSetting);
			banhji.view.layout.showIn('#menu', banhji.view.menu);
			banhji.view.menu.showIn('#secondary-menu', banhji.view.cashMenu);

			var vm = banhji.cashSetting;
			
			banhji.userManagement.addMultiTask("General Cash Setting","cash_setting",null);
			
			if(banhji.pageLoaded["cash_setting"]==undefined){
				banhji.pageLoaded["cash_setting"] = true;

				vm.contactTypeDS.filter({ field:"parent_id", value: 1 });
			}

			vm.pageLoad();			     		
		}
	});
	
	/*************************
	*   Reports Section   *
	**************************/
	banhji.router.route("/reports", function(){		
		if(!banhji.userManagement.getLogin()){
			banhji.router.navigate('/manage');
		}else{
			banhji.view.layout.showIn("#content", banhji.view.reportDashboard);
			
			var vm = banhji.reportDashboard;
			banhji.userManagement.addMultiTask("No. of Reports/lists by Module","reports",null);

			if(banhji.pageLoaded["reports"]==undefined){
				banhji.pageLoaded["reports"] = true;				
								               
			}

			vm.pageLoad();				
		}
	});


	$(function() {	
		banhji.router.start();

		


		// signout when browser closed
  //       window.addEventListener("beforeunload", function (e) {
  //         // var confirmationMessage = "\o/";

  //         // (e || window.event).returnValue = confirmationMessage; //Gecko + IE
  //         // return confirmationMessage;                            //Webkit, Safari, Chrome
  //         var userData = {
  //             Username : userPool.getCurrentUser().username,
  //             Pool : userPool
  //         };
  //         var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);
  //         if(cognitoUser != null) {
  //             cognitoUser.signOut();
  //             // window.location.replace("<?php echo base_url(); ?>login");
  //         } else {
  //             console.log('No user');
  //         }
  //       });
		// if(userPool.getCurrentUser() == null){
		// 	window.location.replace(baseUrl + "login");
		// } else {
		// 	var cognitoUser = userPool.getCurrentUser();
	 //        if(cognitoUser !== null) 
	});
	</script>